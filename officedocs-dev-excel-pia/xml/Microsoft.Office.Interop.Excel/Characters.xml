<Type Name="Characters" FullName="Microsoft.Office.Interop.Excel.Characters">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="175d99118aa50595e1cd1bb6597be66d75d3d559" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20582362" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Characters" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Characters" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Characters" />
  <TypeSignature Language="VB.NET" Value="Public Interface Characters" />
  <TypeSignature Language="C++ CLI" Value="public interface class Characters" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020878-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="243ab-101">Stellt Zeichen in einem Objekt dar, das Text enthält.</span>
      <span class="sxs-lookup">
        <span data-stu-id="243ab-101">Represents characters in an object that contains text.</span>
      </span>
      <span data-ttu-id="243ab-102">Das <b>Characters</b> -Objekt können Sie eine beliebige Abfolge von Zeichen in der vollständigen Textzeichenfolge ändern.</span>
      <span class="sxs-lookup">
        <span data-stu-id="243ab-102">The <b>Characters</b> object lets you modify any sequence of characters contained in the full text string.</span>
      </span>
    </summary>
    <remarks>
      <para>
        <span data-ttu-id="243ab-103">Verwenden Sie <b>Characters</b>(<paramref name="start" />, <paramref name="length" />), wobei <paramref name="start" /> ist die Nummer des Zeichens Start und <paramref name="length" /> ist die Anzahl der Zeichen, um ein <b>Characters</b> -Objekt zurückzugeben.</span>
        <span class="sxs-lookup">
          <span data-stu-id="243ab-103">Use <b>Characters</b>(<paramref name="start" />, <paramref name="length" />), where <paramref name="start" /> is the start character number and <paramref name="length" /> is the number of characters, to return a <b>Characters</b> object.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="243ab-104">Die <b>Characters</b> -Methode ist erforderlich, nur, wenn Sie Teil des Texts eines Objekts ohne den Rest (Sie können nicht die <b>Characters</b> -Methode verwenden, formatieren Sie einen Teil des Texts, wenn das Objekt rich-Text nicht unterstützt) ändern müssen.</span>
        <span class="sxs-lookup">
          <span data-stu-id="243ab-104">The <b>Characters</b> method is necessary only when you need to change some of an object’s text without affecting the rest (you cannot use the <b>Characters</b> method to format a portion of the text if the object doesn’t support rich text).</span>
        </span>
        <span data-ttu-id="243ab-105">Um den gesamten Text gleichzeitig zu ändern, können Sie in der Regel die entsprechende Methode oder Eigenschaft direkt auf das Objekt anwenden.</span>
        <span class="sxs-lookup">
          <span data-stu-id="243ab-105">To change all the text at the same time, you can usually apply the appropriate method or property directly to the object.</span>
        </span>
      </para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Characters.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="243ab-106">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> -Objekt, das die Anwendung Microsoft Excel darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="243ab-106">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Characters.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="243ab-107">Der Text dieses Zeichenbereichs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="243ab-107">The text of this range of characters.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Characters.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="243ab-108">Gibt die Anzahl der Objekte in der Auflistung zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="243ab-108">Returns the number of objects in the collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Characters.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="243ab-109">Gibt eine 32-Bit-Ganzzahl, die die Anwendung angibt, in der das Objekt erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="243ab-109">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="243ab-110">Wenn das Objekt in Microsoft Excel erstellt wurde, gibt diese Eigenschaft die Zeichenfolge XCEL zurück, dies entspricht die hexadezimale Zahl 5843454 c ist.</span>
            <span class="sxs-lookup">
              <span data-stu-id="243ab-110">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="243ab-111">Die <b>Creator</b> -Eigenschaft ist in Microsoft Excel für den Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen verfügt über entwickelt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="243ab-111">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="243ab-112">Der Erstellercode von Microsoft Excel lautet beispielsweise XCEL zurück.</span>
            <span class="sxs-lookup">
              <span data-stu-id="243ab-112">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public object Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Characters.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="243ab-113">Löscht das Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="243ab-113">Deletes the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Characters.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Font ^ Font { Microsoft::Office::Interop::Excel::Font ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="243ab-114">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Font" /> -Objekt, das die Schriftart des angegebenen Objekts darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="243ab-114">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public object Insert (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Insert([in]string String) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Characters.Insert(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Insert(System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(252)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String">
          <span data-ttu-id="243ab-115">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="243ab-115">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="243ab-116">Die einzufügende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="243ab-116">The string to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="243ab-117">Fügt eine Zeichenfolge ein, die den ausgewählten Zeichen vorangestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="243ab-117">Inserts a string preceding the selected characters.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Characters.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="243ab-118">Gibt das übergeordnete Objekt für das angegebene Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="243ab-118">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PhoneticCharacters">
      <MemberSignature Language="C#" Value="public string PhoneticCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhoneticCharacters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Characters.PhoneticCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property PhoneticCharacters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PhoneticCharacters { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1522)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1522)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1522)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="243ab-119">Gibt zurück oder legt den phonetischen Text im angegebenen <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="243ab-119">Returns or sets the phonetic text in the specified <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="243ab-120">Verwenden Sie statt der Verwendung dieser Eigenschaft an, die <see cref="M:Microsoft.Office.Interop.Excel.Phonetics.Add(System.Int32,System.Int32,System.String)" /> -Methode des der <see cref="T:Microsoft.Office.Interop.Excel.Phonetics" /> -Auflistung, um eine Zelle phonetischen Informationen hinzu, und verwenden Sie die <see cref="P:Microsoft.Office.Interop.Excel.Phonetic.Text" /> -Eigenschaft des der <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> Objekt um die phonetischen Textzeichenfolgen in einer Zelle festzulegen oder zurückzugeben.</span>
            <span class="sxs-lookup">
              <span data-stu-id="243ab-120">Instead of using this property, you should use the <see cref="M:Microsoft.Office.Interop.Excel.Phonetics.Add(System.Int32,System.Int32,System.String)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Phonetics" /> collection to add phonetic information to a cell, and use the <see cref="P:Microsoft.Office.Interop.Excel.Phonetic.Text" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> object to return or set the phonetic text strings in a cell.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="243ab-121">Sie können diese Eigenschaft nur bei <b>Characters</b> -Objekten, die auf einer einzelnen Zelle basieren.</span>
            <span class="sxs-lookup">
              <span data-stu-id="243ab-121">You can use this property only with <b>Characters</b> objects that are based on a single cell.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Characters.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(138)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(138)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(138)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="243ab-122">Gibt den Text des angegebenen Objekts zurück oder legt ihn fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="243ab-122">Returns or sets the text for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>