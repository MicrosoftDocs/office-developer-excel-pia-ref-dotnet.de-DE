<Type Name="Style" FullName="Microsoft.Office.Interop.Excel.Style">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c4f738901e25e0863ca50d9f0bc3e164a839d737" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20574046" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Style" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Style" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Style" />
  <TypeSignature Language="VB.NET" Value="Public Interface Style" />
  <TypeSignature Language="C++ CLI" Value="public interface class Style" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020852-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b191a-101">Stellt eine Formatvorlagenbeschreibung für einen Bereich dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b191a-101">Represents a style description for a range.</span>
      </span>
    </summary>
    <remarks>
      <para>
        <span data-ttu-id="b191a-p101">Das  <b>Style</b> -Objekt enthält alle Formatattribute (Schriftart, Zahlenformat, Ausrichtung usw.) als Eigenschaften. Es stehen eine Reihe integrierter Formatvorlagen, z. B. "Standard", "Währung" und "Prozent" zur Verfügung. Das <b>Style</b> -Objekt bietet eine schnelle und effiziente Möglichkeit, mehrere Formatierungseigenschaften für viele Zellen gleichzeitig zu ändern.</span>
        <span class="sxs-lookup">
          <span data-stu-id="b191a-p101">The <b>Style</b> object contains all style attributes (font, number format, alignment, and so on) as properties. There are several built-in styles, including Normal, Currency, and Percent. Using the <b>Style</b> object is a fast and efficient way to change several cell-formatting properties on multiple cells at the same time.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="b191a-105">Für die <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> -Objekts, das <b>Style</b> -Objekt ist ein Mitglied der <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> Auflistung.</span>
        <span class="sxs-lookup">
          <span data-stu-id="b191a-105">For the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object, the <b>Style</b> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> collection.</span>
        </span>
        <span data-ttu-id="b191a-106">Die <b>Styles</b> -Auflistung enthält alle definierten Formatvorlagen für die Arbeitsmappe.</span>
        <span class="sxs-lookup">
          <span data-stu-id="b191a-106">The <b>Styles</b> collection contains all the defined styles for the workbook.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="b191a-107">Verwenden der <see cref="P:Microsoft.Office.Interop.Excel.Range.Style" /> -Eigenschaft zum Zurückgeben des <b>Style</b> -Objekts mit verwendet eine <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt.</span>
        <span class="sxs-lookup">
          <span data-stu-id="b191a-107">Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Style" /> property to return the <b>Style</b> object used with a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="b191a-p103">Sie können das Erscheinungsbild einer Zelle ändern, indem Sie Eigenschaften der Formatvorlage ändern, die der Zelle zugewiesen wurden. Beachten Sie jedoch, dass durch die Änderung einer Formatvorlageneigenschaft alle bereits mit dieser Vorlage formatierten Zellen beeinflusst werden.</span>
        <span class="sxs-lookup">
          <span data-stu-id="b191a-p103">You can change the appearance of a cell by changing properties of the style applied to that cell. Keep in mind, however, that changing a style property will affect all cells already formatted with that style.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="b191a-110">Verwenden von <b>Formatvorlagen</b>(<paramref name="index" />), wobei <paramref name="index" /> ist die Indexnummer der Formatvorlage oder Namen, um ein einzelnes <b>Style</b> -Objekt aus der Arbeitsmappe <b>Styles</b> -Auflistung zurückzugeben.</span>
        <span class="sxs-lookup">
          <span data-stu-id="b191a-110">Use <b>Styles</b>(<paramref name="index" />), where <paramref name="index" /> is the style index number or name, to return a single <b>Style</b> object from the workbook <b>Styles</b> collection.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="b191a-p104">Die Formatvorlagen sind alphabetisch nach dem Formatvorlagennamen sortiert. Die Indexnummer der Formatvorlagen bezieht sich auf die Position der angegebenen Formatvorlage in der sortierten Liste der Formatvorlagennamen. Styles(1) ist die erste Formatvorlage in der alphabetischen Liste, Styles(Styles.Count) die letzte.</span>
        <span class="sxs-lookup">
          <span data-stu-id="b191a-p104">Styles are sorted alphabetically by style name. The style index number denotes the position of the specified style in the sorted list of style names. Styles(1) is the first style in the alphabetic list, and Styles(Styles.Count) is the last one in the list.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="b191a-114">Weitere Informationen zum Erstellen und Ändern einer Formatvorlage finden Sie unter der <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> Objekt.</span>
        <span class="sxs-lookup">
          <span data-stu-id="b191a-114">For more information about creating and modifying a style, see the <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> object.</span>
        </span>
      </para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-115">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-115">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIndent">
      <MemberSignature Language="C#" Value="public bool AddIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AddIndent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.AddIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property AddIndent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AddIndent { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-116">
            <b>True,</b> Wenn Text automatisch eingezogen wird, wenn die Ausrichtung des Texts in einer Zelle auf gleiche Verteilung, horizontal oder vertikal festgelegt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-116">
              <b>True</b> if text is automatically indented when the text alignment in a cell is set to equal distribution either horizontally or vertically.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="b191a-117">Um die textausrichtung auf gleiche Verteilung festgelegt, können Sie festlegen der <see cref="P:Microsoft.Office.Interop.Excel.Style.VerticalAlignment" /> -Eigenschaft auf <b>XlVAlignDistributed</b> Wenn der Wert der der <see cref="P:Microsoft.Office.Interop.Excel.Style.Orientation" /> -Eigenschaft ist <b>XlVertical</b>, und Sie können festlegen der <see cref="P:Microsoft.Office.Interop.Excel.Style.HorizontalAlignment" /> -Eigenschaft auf <b>XlHAlignDistributed</b> beim der Wert der <b>Orientation</b> -Eigenschaft ist <b>XlHorizontal</b>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-117">To set text alignment to equal distribution, you can set the <see cref="P:Microsoft.Office.Interop.Excel.Style.VerticalAlignment" /> property to <b>xlVAlignDistributed</b> when the value of the <see cref="P:Microsoft.Office.Interop.Excel.Style.Orientation" /> property is <b>xlVertical</b>, and you can set the <see cref="P:Microsoft.Office.Interop.Excel.Style.HorizontalAlignment" /> property to <b>xlHAlignDistributed</b> when the value of the <b>Orientation</b> property is <b>xlHorizontal</b>.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-118">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> -Objekt, das die Anwendung Microsoft Excel darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-118">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Borders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Borders Borders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Borders Borders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Borders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Borders As Borders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Borders ^ Borders { Microsoft::Office::Interop::Excel::Borders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Borders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-119">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> -Auflistung, die die Rahmen einer Formatvorlage darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-119">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> collection that represents the borders of a style.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuiltIn">
      <MemberSignature Language="C#" Value="public bool BuiltIn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BuiltIn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.BuiltIn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BuiltIn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BuiltIn { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(553)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(553)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-120">
            <b>True,</b> Wenn die Formatvorlage um eine integrierte Formatvorlage handelt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-120">
              <b>True</b> if the style is a built-in style.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-121">Gibt eine 32-Bit-Ganzzahl, die die Anwendung angibt, in der das Objekt erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-121">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="b191a-122">Wenn das Objekt in Microsoft Excel erstellt wurde, gibt diese Eigenschaft die Zeichenfolge XCEL zurück, dies entspricht die hexadezimale Zahl 5843454 c ist.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-122">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="b191a-123">Die <b>Creator</b> -Eigenschaft ist in Microsoft Excel für den Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen verfügt über entwickelt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-123">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="b191a-124">Der Erstellercode von Microsoft Excel lautet beispielsweise XCEL zurück.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-124">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public object Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Style.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b191a-125">Löscht das Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-125">Deletes the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Font ^ Font { Microsoft::Office::Interop::Excel::Font ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-126">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Font" /> -Objekt, das die Schriftart des angegebenen Objekts darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-126">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaHidden">
      <MemberSignature Language="C#" Value="public bool FormulaHidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FormulaHidden" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.FormulaHidden" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaHidden As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FormulaHidden { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-127">
            <b>True,</b> Wenn die Formel ausgeblendet ist, wenn das Arbeitsblatt geschützt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-127">
              <b>True</b> if the formula will be hidden when the worksheet is protected.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="b191a-128">Verwechseln Sie diese Eigenschaft mit nicht die <see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" /> Eigenschaft.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-128">Don’t confuse this property with the <see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" /> property.</span>
            </span>
            <span data-ttu-id="b191a-129">Die Formel wird nicht ausgeblendet werden, wenn die Arbeitsmappe geschützt ist, und das Arbeitsblatt jedoch nicht, aber nur, wenn das Arbeitsblatt geschützt ist.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-129">The formula will not be hidden if the workbook is protected and the worksheet is not, but only if the worksheet is protected.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlignment">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlHAlign HorizontalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlHAlign HorizontalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.HorizontalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalAlignment As XlHAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlHAlign HorizontalAlignment { Microsoft::Office::Interop::Excel::XlHAlign get(); void set(Microsoft::Office::Interop::Excel::XlHAlign value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlHAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-130">Zurückgeben oder festlegen die horizontale Ausrichtung für das angegebene Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-130">Returns or sets the horizontal alignment for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="b191a-131">
              <see cref="T:Microsoft.Office.Interop.Excel.XlHAlign" />Dies kann eine der folgenden <b>XlHAlign</b> -Konstanten sein:</span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-131">
                <see cref="T:Microsoft.Office.Interop.Excel.XlHAlign" /> can be one of the following <b>XlHAlign</b> constants:</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="b191a-132">
              <b>xlHAlignCenter</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-132">
                <b>xlHAlignCenter</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="b191a-133">
              <b>xlHAlignCenterAcrossSelection</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-133">
                <b>xlHAlignCenterAcrossSelection</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="b191a-134">
              <b>xlHAlignDistributed</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-134">
                <b>xlHAlignDistributed</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="b191a-135">
              <b>xlHAlignFill</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-135">
                <b>xlHAlignFill</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="b191a-136">
              <b>xlHAlignGeneral</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-136">
                <b>xlHAlignGeneral</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="b191a-137">
              <b>xlHAlignJustify</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-137">
                <b>xlHAlignJustify</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="b191a-138">
              <b>xlHAlignLeft</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-138">
                <b>xlHAlignLeft</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="b191a-139">
              <b>xlHAlignRight</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-139">
                <b>xlHAlignRight</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="b191a-140">[!HINWEIS] Einige dieser Konstanten stehen Ihnen, abhängig von der ausgewählten oder installierten Sprachunterstützung (z. B. Deutsch), möglicherweise nicht zur Verfügung.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-140">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you've selected or installed.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeAlignment">
      <MemberSignature Language="C#" Value="public bool IncludeAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IncludeAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeAlignment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeAlignment { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(413)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(413)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(413)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-141">
            <b>True,</b> Wenn die Formatvorlage enthält die <see cref="P:Microsoft.Office.Interop.Excel.Style.AddIndent" />, <see cref="P:Microsoft.Office.Interop.Excel.Style.HorizontalAlignment" />, <see cref="P:Microsoft.Office.Interop.Excel.Style.VerticalAlignment" />, <see cref="P:Microsoft.Office.Interop.Excel.Style.WrapText" />, und <see cref="P:Microsoft.Office.Interop.Excel.Style.Orientation" /> Eigenschaften.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-141">
              <b>True</b> if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Style.AddIndent" />, <see cref="P:Microsoft.Office.Interop.Excel.Style.HorizontalAlignment" />, <see cref="P:Microsoft.Office.Interop.Excel.Style.VerticalAlignment" />, <see cref="P:Microsoft.Office.Interop.Excel.Style.WrapText" />, and <see cref="P:Microsoft.Office.Interop.Excel.Style.Orientation" /> properties.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeBorder">
      <MemberSignature Language="C#" Value="public bool IncludeBorder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeBorder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IncludeBorder" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeBorder As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeBorder { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(414)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(414)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(414)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-142">
            <b>True,</b> Wenn die Formatvorlage enthält die <see cref="P:Microsoft.Office.Interop.Excel.Border.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Border.ColorIndex" />, <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" />, und <see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" /> border-Eigenschaften.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-142">
              <b>True</b> if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Border.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Border.ColorIndex" />, <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" />, and <see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" /> border properties.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeFont">
      <MemberSignature Language="C#" Value="public bool IncludeFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeFont" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IncludeFont" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeFont As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeFont { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(415)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(415)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(415)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-143">
            <b>True,</b> Wenn die Formatvorlage enthält die <see cref="P:Microsoft.Office.Interop.Excel.Font.Background" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Bold" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.ColorIndex" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.FontStyle" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Italic" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Name" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.OutlineFont" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Shadow" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Size" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Strikethrough" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Subscript" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Superscript" />, und <see cref="P:Microsoft.Office.Interop.Excel.Font.Underline" /> Font-Eigenschaften.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-143">
              <b>True</b> if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Font.Background" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Bold" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.ColorIndex" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.FontStyle" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Italic" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Name" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.OutlineFont" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Shadow" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Size" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Strikethrough" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Subscript" />, <see cref="P:Microsoft.Office.Interop.Excel.Font.Superscript" />, and <see cref="P:Microsoft.Office.Interop.Excel.Font.Underline" /> font properties.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeNumber">
      <MemberSignature Language="C#" Value="public bool IncludeNumber { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IncludeNumber" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeNumber As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeNumber { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(416)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(416)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(416)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-144">True, wenn die Formatvorlage enthält die <see cref="P:Microsoft.Office.Interop.Excel.Style.NumberFormat" /> Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-144">True if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Style.NumberFormat" /> property.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludePatterns">
      <MemberSignature Language="C#" Value="public bool IncludePatterns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludePatterns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IncludePatterns" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludePatterns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludePatterns { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(417)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(417)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(417)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-145">
            <b>True,</b> Wenn die Formatvorlage enthält die <see cref="P:Microsoft.Office.Interop.Excel.Interior.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Interior.ColorIndex" />, <see cref="P:Microsoft.Office.Interop.Excel.Interior.InvertIfNegative" />, <see cref="P:Microsoft.Office.Interop.Excel.Interior.Pattern" />, <see cref="P:Microsoft.Office.Interop.Excel.Interior.PatternColor" />, und <see cref="P:Microsoft.Office.Interop.Excel.Interior.PatternColorIndex" /> interior-Eigenschaften.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-145">
              <b>True</b> if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Interior.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Interior.ColorIndex" />, <see cref="P:Microsoft.Office.Interop.Excel.Interior.InvertIfNegative" />, <see cref="P:Microsoft.Office.Interop.Excel.Interior.Pattern" />, <see cref="P:Microsoft.Office.Interop.Excel.Interior.PatternColor" />, and <see cref="P:Microsoft.Office.Interop.Excel.Interior.PatternColorIndex" /> interior properties.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeProtection">
      <MemberSignature Language="C#" Value="public bool IncludeProtection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeProtection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IncludeProtection" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeProtection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeProtection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(418)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(418)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(418)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-146">
            <b>True,</b> Wenn die Formatvorlage enthält die <see cref="P:Microsoft.Office.Interop.Excel.Style.FormulaHidden" /> und <see cref="P:Microsoft.Office.Interop.Excel.Style.Locked" /> Eigenschaften.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-146">
              <b>True</b> if the style includes the <see cref="P:Microsoft.Office.Interop.Excel.Style.FormulaHidden" /> and <see cref="P:Microsoft.Office.Interop.Excel.Style.Locked" /> properties.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public int IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IndentLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IndentLevel { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-147">Zurück oder legt die Einzugsebene für die Formatvorlage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-147">Returns or sets the indent level for the style.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="b191a-148">Wird diese Eigenschaft verwendet, um die Einzugsebene auf eine Zahl kleiner als 0 (null) oder größer als 15 festzulegen, führt dies zu einem Fehler.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-148">Using this property to set the indent level to a number less than 0 (zero) or greater than 15 causes an error.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-149">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> -Objekt, das den Innenbereich des angegebenen Objekts darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-149">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Locked">
      <MemberSignature Language="C#" Value="public bool Locked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Locked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Locked" />
      <MemberSignature Language="VB.NET" Value="Public Property Locked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Locked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-150">
            <b>True,</b> Wenn das Objekt gesperrt ist. <b>False,</b> Wenn das Objekt geändert werden kann, wenn das Blatt geschützt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-150">
              <b>True</b> if the object is locked; <b>False</b> if the object can be modified when the sheet is protected.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeCells">
      <MemberSignature Language="C#" Value="public object MergeCells { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MergeCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.MergeCells" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeCells As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MergeCells { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-151">
            <b>True,</b> Wenn die Formatvorlage enthält zusammengeführte Zellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-151">
              <b>True</b> if the style contains merged cells.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="b191a-152">Wenn Sie einen Bereich, der verbundene Zellen enthält auswählen, kann die resultierende Auswahl von der beabsichtigten Markierung anders lauten.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-152">When you select a range that contains merged cells, the resulting selection may be different from the intended selection.</span>
            </span>
            <span data-ttu-id="b191a-153">Verwendung der <see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" /> -Eigenschaft auf die Adresse des markierten Bereichs zu überprüfen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-153">Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" /> property to check the address of the selected range.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-154">Gibt den Namen des Objekts zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-154">Returns the name of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="b191a-155">Die folgende Tabelle zeigt Beispielwerte der <b>Name</b> -Eigenschaft und die verwandten Eigenschaften eine Datenquelle mit dem eindeutigen Namen "[Europa]. [Frankreich]. [Paris] ", und nennen Sie eine nicht-OLAP-Datenquelle mit dem Element"Paris".</span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-155">The following table shows example values of the <b>Name</b> property and related properties given an  data source with the unique name "[Europe].[France].[Paris]" and a non-OLAP data source with the item name "Paris".</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="b191a-156">
                  <b>Beschriftung</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="b191a-156">
                    <b>Caption</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="b191a-157">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b191a-157">Paris</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="b191a-158">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b191a-158">Paris</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="b191a-159">
                  <b>Name</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="b191a-159">
                    <b>Name</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="b191a-160">[Europa].[Frankreich].[Paris] (schreibgeschützt)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b191a-160">[Europe].[France].[Paris] (read-only)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="b191a-161">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b191a-161">Paris</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="b191a-162">
                  <b>SourceName</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="b191a-162">
                    <b>SourceName</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="b191a-163">[Europa].[Frankreich].[Paris] (schreibgeschützt)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b191a-163">[Europe].[France].[Paris] (read-only)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="b191a-164">(Identisch mit SQL-Eigenschaftenwert, schreibgeschützt)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b191a-164">(Same as SQL property value, read-only)</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="b191a-165">
                  <b>Wert</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="b191a-165">
                    <b>Value</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="b191a-166">[Europa].[Frankreich].[Paris] (schreibgeschützt)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b191a-166">[Europe].[France].[Paris] (read-only)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="b191a-167">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b191a-167">Paris</span>
                </span>
              </description>
            </item>
          </list>
          <para>
            <span data-ttu-id="b191a-168">Beim Angeben von als Farbindex in der <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> -Auflistung verwenden Sie die Syntax in der folgenden Tabelle dargestellt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-168">When specifying an index into the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, you can use the syntax shown in the following table.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="b191a-169">Ausdruck. PivotItems ("[Europa]. [ Frankreich]. [Paris] ")</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b191a-169">expression.PivotItems("[Europe].[France].[Paris]")</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="b191a-170">Ausdruck. PivotItems("Paris")</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b191a-170">expression.PivotItems("Paris")</span>
                </span>
              </description>
            </item>
          </list>
          <para>
            <span data-ttu-id="b191a-171">Bei Verwendung der <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> -Eigenschaft so verweisen Sie auf ein bestimmtes Element einer Auflistung, können Sie den Textindexnamen wie in der folgenden Tabelle gezeigt verwenden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-171">When using the <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> property to reference a specific member of a collection, you can use the text index name as shown in the following table.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="b191a-172">[Europa]. [Frankreich]. [Paris]</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b191a-172">[Europe].[France].[Paris]</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="b191a-173">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="b191a-173">Paris</span>
                </span>
              </description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameLocal">
      <MemberSignature Language="C#" Value="public string NameLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NameLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.NameLocal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameLocal As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NameLocal { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(937)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(937)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-174">Gibt den Namen des Objekts in der Sprache des Benutzers zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-174">Returns the name of the object in the language of the user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="b191a-175">Wenn es sich um eine integrierte Formatvorlage handelt, gibt diese Eigenschaft den Namen der Formatvorlage in der Sprache zurück, die im aktuellen Gebietsschema festgelegt wurde.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-175">If the style is a built-in style, this property returns the name of the style in the language of the current locale.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public string NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NumberFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-176">Zurückgeben oder festlegen den Formatierungscode für das Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-176">Returns or sets the format code for the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="b191a-177">Der Formatierungscode ist dieselbe Zeichenfolge wie die Option Formatierungscode im Dialogfeld Zellen formatieren.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-177">The format code is the same string as the Format Codes option in the Format Cells dialog box.</span>
            </span>
            <span data-ttu-id="b191a-178">Die <b>Format</b> -Funktion verwendet andere Zeichenfolgen im Formatierungscode als die <b>NumberFormat</b> und <see cref="P:Microsoft.Office.Interop.Excel.Style.NumberFormatLocal" /> Eigenschaften.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-178">The <b>Format</b> function uses different format code strings than do the <b>NumberFormat</b> and <see cref="P:Microsoft.Office.Interop.Excel.Style.NumberFormatLocal" /> properties.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormatLocal">
      <MemberSignature Language="C#" Value="public string NumberFormatLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NumberFormatLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.NumberFormatLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormatLocal As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NumberFormatLocal { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-179">Zurückgeben oder festlegen den Formatierungscode des Objekts als Zeichenfolge in der Sprache des Benutzers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-179">Returns or sets the format code for the object as a string in the language of the user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="b191a-180">Die <b>Format</b> -Funktion verwendet andere Zeichenfolgen im Formatierungscode als die <see cref="P:Microsoft.Office.Interop.Excel.Style.NumberFormat" /> und <b>NumberFormatLocal</b> -Eigenschaften.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-180">The <b>Format</b> function uses different format code strings than do the <see cref="P:Microsoft.Office.Interop.Excel.Style.NumberFormat" /> and <b>NumberFormatLocal</b> properties.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlOrientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlOrientation Orientation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As XlOrientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlOrientation Orientation { Microsoft::Office::Interop::Excel::XlOrientation get(); void set(Microsoft::Office::Interop::Excel::XlOrientation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-181">Die Ausrichtung von Text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-181">The text orientation.</span>
          </span>
          <span data-ttu-id="b191a-182">Kann eine Ganzzahl zwischen-90 und 90 Grad oder eine der entsprechen den <see cref="T:Microsoft.Office.Interop.Excel.XlOrientation" /> Konstanten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-182">Can be an integer value from –90 to 90 degrees or one of the <see cref="T:Microsoft.Office.Interop.Excel.XlOrientation" /> constants.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="b191a-183">
              <b>XlOrientation</b> kann eine der folgenden Konstanten sein:</span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-183">
                <b>XlOrientation</b> can be one of the following constants:</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="b191a-184">
              <b>xlDownward</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-184">
                <b>xlDownward</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="b191a-185">
              <b>xlUpward</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-185">
                <b>xlUpward</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="b191a-186">
              <b>xlHorizontal</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-186">
                <b>xlHorizontal</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="b191a-187">
              <b>xlVertical</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-187">
                <b>xlVertical</b>
              </span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-188">Gibt das übergeordnete Objekt für das angegebene Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-188">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadingOrder">
      <MemberSignature Language="C#" Value="public int ReadingOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadingOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.ReadingOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadingOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadingOrder { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-189">Gibt zurück oder legt die leserichtung für das angegebene Objekt fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-189">Returns or sets the reading order for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="b191a-190">Die <b>ReadingOrder</b> -Eigenschaft kann eine der folgenden Konstanten sein: <b>XlRTL</b> (rechts-nach-links), <b>XlLTR</b> (von links nach rechts) oder <b>XlContext</b>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-190">The <b>ReadingOrder</b> property can be one of the following constants: <b>xlRTL</b> (right-to-left), <b>xlLTR</b> (left-to-right), or <b>xlContext</b>.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="b191a-191">[!HINWEIS] Einige dieser Konstanten stehen Ihnen, abhängig von der ausgewählten oder installierten Sprachunterstützung (z. B. Deutsch), möglicherweise nicht zur Verfügung.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-191">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you've selected or installed.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShrinkToFit">
      <MemberSignature Language="C#" Value="public bool ShrinkToFit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShrinkToFit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.ShrinkToFit" />
      <MemberSignature Language="VB.NET" Value="Public Property ShrinkToFit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShrinkToFit { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-192">
            <b>True,</b> Wenn Text automatisch an die verfügbare Spaltenbreite angepasst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-192">
              <b>True</b> if text automatically shrinks to fit in the available column width.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-193">Der Name der angegebenen Formatvorlage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-193">The name of the specified style.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalAlignment">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlVAlign VerticalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlVAlign VerticalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.VerticalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalAlignment As XlVAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlVAlign VerticalAlignment { Microsoft::Office::Interop::Excel::XlVAlign get(); void set(Microsoft::Office::Interop::Excel::XlVAlign value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlVAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-194">Gibt zurück oder legt die vertikale Ausrichtung des angegebenen Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-194">Returns or sets the vertical alignment of the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="b191a-195">
              <see cref="T:Microsoft.Office.Interop.Excel.XlVAlign" />Dies kann eine der folgenden <b>XlVAlign</b> -Konstanten sein:</span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-195">
                <see cref="T:Microsoft.Office.Interop.Excel.XlVAlign" /> can be one of the following <b>XlVAlign</b> constants:</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="b191a-196">
              <b>xlVAlignCenter</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-196">
                <b>xlVAlignCenter</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="b191a-197">
              <b>xlVAlignJustify</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-197">
                <b>xlVAlignJustify</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="b191a-198">
              <b>xlVAlignBottom</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-198">
                <b>xlVAlignBottom</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="b191a-199">
              <b>xlVAlignDistributed</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-199">
                <b>xlVAlignDistributed</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="b191a-200">
              <b>xlVAlignTop</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-200">
                <b>xlVAlignTop</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="b191a-201">[!HINWEIS] Einige dieser Konstanten stehen Ihnen, abhängig von der ausgewählten oder installierten Sprachunterstützung (z. B. Deutsch), möglicherweise nicht zur Verfügung.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b191a-201">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you've selected or installed.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapText">
      <MemberSignature Language="C#" Value="public bool WrapText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WrapText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Style.WrapText" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapText As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WrapText { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b191a-202">
            <b>True,</b> Wenn den Text im Objekt Microsoft Excel umbrochen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b191a-202">
              <b>True</b> if Microsoft Excel wraps the text in the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>