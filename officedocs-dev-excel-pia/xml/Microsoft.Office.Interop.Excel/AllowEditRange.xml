<Type Name="AllowEditRange" FullName="Microsoft.Office.Interop.Excel.AllowEditRange">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5ed1c5d1b07edaa52f829f20631c74db61529a28" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="49999735" /></Metadata><TypeSignature Language="C#" Value="public interface AllowEditRange" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract AllowEditRange" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.AllowEditRange" />
  <TypeSignature Language="VB.NET" Value="Public Interface AllowEditRange" />
  <TypeSignature Language="C++ CLI" Value="public interface class AllowEditRange" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002446B-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9b57f-101">Stellt die Zellen dar, die in einem geschützten Arbeitsblatt bearbeitet werden können.</span><span class="sxs-lookup"><span data-stu-id="9b57f-101">Represents the cells that can be edited on a protected worksheet.</span></span></summary>
    <remarks><para><span data-ttu-id="9b57f-102">Verwenden Sie <see cref="M:Microsoft.Office.Interop.Excel.AllowEditRanges.Add(System.String,Microsoft.Office.Interop.Excel.Range,System.Object)" /> die Methode oder die Eigenschaft der <see cref="P:Microsoft.Office.Interop.Excel.AllowEditRanges.Item(System.Object)" /> <see cref="T:Microsoft.Office.Interop.Excel.AllowEditRanges" /> Auflistung, um ein <b>AllowEditRange -Objekt zurückzukehren.</b></span><span class="sxs-lookup"><span data-stu-id="9b57f-102">Use the <see cref="M:Microsoft.Office.Interop.Excel.AllowEditRanges.Add(System.String,Microsoft.Office.Interop.Excel.Range,System.Object)" /> method or the <see cref="P:Microsoft.Office.Interop.Excel.AllowEditRanges.Item(System.Object)" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.AllowEditRanges" /> collection to return an <b>AllowEditRange</b> object.</span></span></para>
      <para><span data-ttu-id="9b57f-103">Nachdem ein <b>AllowEditRange</b> -Objekt zurückgegeben wurde, können Sie die Methode verwenden, um das Kennwort für den Zugriff auf einen Bereich zu ändern, der in einem geschützten <see cref="M:Microsoft.Office.Interop.Excel.AllowEditRange.ChangePassword(System.String)" /> Arbeitsblatt bearbeitet werden kann.</span><span class="sxs-lookup"><span data-stu-id="9b57f-103">Once an <b>AllowEditRange</b> object has been returned, you can use the <see cref="M:Microsoft.Office.Interop.Excel.AllowEditRange.ChangePassword(System.String)" /> method to change the password to access a range that can be edited on a protected worksheet.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public void ChangePassword (string Password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangePassword([in]string Password) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.AllowEditRange.ChangePassword(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangePassword (Password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangePassword(System::String ^ Password);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2237)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Password"><span data-ttu-id="9b57f-104"><b>String</b> erforderlich.</span><span class="sxs-lookup"><span data-stu-id="9b57f-104">Required <b>String</b>.</span></span> <span data-ttu-id="9b57f-105">Das neue Kennwort.</span><span class="sxs-lookup"><span data-stu-id="9b57f-105">The new password.</span></span></param>
        <summary><span data-ttu-id="9b57f-106">Ändert das Kennwort für einen Bereich, der in einem geschützten Arbeitsblatt bearbeitet werden kann.</span><span class="sxs-lookup"><span data-stu-id="9b57f-106">Changes the password for a range that can be edited on a protected worksheet.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.AllowEditRange.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b57f-107">Löscht das Objekt.</span><span class="sxs-lookup"><span data-stu-id="9b57f-107">Deletes the object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.AllowEditRange.Range" />
      <MemberSignature Language="VB.NET" Value="Public Property Range As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Range { Microsoft::Office::Interop::Excel::Range ^ get(); void set(Microsoft::Office::Interop::Excel::Range ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b57f-108">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das eine Teilmenge der Bereiche darstellt, die in einem geschützten Arbeitsblatt bearbeitet werden können.</span><span class="sxs-lookup"><span data-stu-id="9b57f-108">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a subset of the ranges that can be edited on a protected worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.AllowEditRange.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b57f-109">Gibt den Titel der Webseite zurück, wenn das Dokument als Webseite gespeichert wird, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="9b57f-109">Returns or sets the title of the Web page when the document is saved as a Web page.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="9b57f-110">Der Titel wird normalerweise in der Fenstertitelleiste angezeigt, wenn das Dokument im Webbrowser angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="9b57f-110">The title is usually displayed in the window title bar when the document is viewed in the Web browser.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public void Unprotect (object Password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unprotect([in]object Password) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.AllowEditRange.Unprotect(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unprotect (Optional Password As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(285)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password"><span data-ttu-id="9b57f-111">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="9b57f-111">Optional <b>Object</b>.</span></span> <span data-ttu-id="9b57f-112">Eine Zeichenfolge, die das Kennwort unter Berücksichtigung der Groß-/Kleinschreibung angibt, um den Schutz des Blatts oder der Arbeitsmappe aufzuheben.</span><span class="sxs-lookup"><span data-stu-id="9b57f-112">A string that denotes the case-sensitive password to use to unprotect the sheet or workbook.</span></span> <span data-ttu-id="9b57f-113">Wenn das Blatt oder die Arbeitsmappe nicht durch ein Kennwort geschützt ist, wird dieses Argument ignoriert.</span><span class="sxs-lookup"><span data-stu-id="9b57f-113">If the sheet or workbook isn't protected with a password, this argument is ignored.</span></span> <span data-ttu-id="9b57f-114">Wenn Sie dieses Argument bei einem durch ein Kennwort geschütztes Blatt auslassen, werden Sie zur Eingabe des Kennworts aufgefordert.</span><span class="sxs-lookup"><span data-stu-id="9b57f-114">If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password.</span></span> <span data-ttu-id="9b57f-115">Wenn Sie dieses Argument bei einer durch ein Kennwort geschützten Arbeitsmappe auslassen, löst die Methode einen Fehler aus.</span><span class="sxs-lookup"><span data-stu-id="9b57f-115">If you omit this argument for a workbook that's protected with a password, the method fails.</span></span></param>
        <summary><span data-ttu-id="9b57f-116">Hebt den Schutz eines Blatts oder einer Arbeitsmappe auf.</span><span class="sxs-lookup"><span data-stu-id="9b57f-116">Removes protection from a sheet or workbook.</span></span></summary>
        <remarks><para><span data-ttu-id="9b57f-117">Diese Methode hat keine Wirkung, wenn das Blatt oder die Arbeitsmappe nicht geschützt ist.</span><span class="sxs-lookup"><span data-stu-id="9b57f-117">This method has no effect if the sheet or workbook isn't protected.</span></span></para>
          <para><span data-ttu-id="9b57f-118">Wenn Sie das Kennwort vergessen, können Sie den Schutz des Blatts oder der Arbeitsmappe nicht wieder aufheben.</span><span class="sxs-lookup"><span data-stu-id="9b57f-118">If you forget the password, you cannot unprotect the sheet or workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Users">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.UserAccessList Users { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.UserAccessList Users" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.AllowEditRange.Users" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Users As UserAccessList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::UserAccessList ^ Users { Microsoft::Office::Interop::Excel::UserAccessList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2238)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2238)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.UserAccessList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b57f-119">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.UserAccessList" /> Objekt für den geschützten Bereich in einem Arbeitsblatt zurück.</span><span class="sxs-lookup"><span data-stu-id="9b57f-119">Returns a <see cref="T:Microsoft.Office.Interop.Excel.UserAccessList" /> object for the protected range on a worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>