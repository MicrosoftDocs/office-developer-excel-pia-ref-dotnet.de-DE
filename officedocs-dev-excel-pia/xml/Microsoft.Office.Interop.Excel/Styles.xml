<Type Name="Styles" FullName="Microsoft.Office.Interop.Excel.Styles">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d5b16d0cbfdec51d146c93cd55fc38ef3293d37f" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20587248" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Styles : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Styles implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Styles" />
  <TypeSignature Language="VB.NET" Value="Public Interface Styles&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Styles : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020853-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="74196-101">Eine Auflistung aller der <see cref="T:Microsoft.Office.Interop.Excel.Style" /> -Objekte in der angegebenen oder aktiven Arbeitsmappe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="74196-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Style" /> objects in the specified or active workbook.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="74196-102">
        <para>Jedes <b>Style</b> -Objekt stellt eine formatvorlagenbeschreibung für einen Bereich dar. Das <b>Style</b> -Objekt enthält alle Formatattribute (Schriftart, Zahlenformat, Ausrichtung usw.) als Eigenschaften. Es gibt mehrere integrierter Formatvorlagen – einschließlich Normal, Währung und Prozent – die im Feld Name Formatvorlage im Dialogfeld Formatvorlage (Menü "Format") aufgeführt sind.</para>
        <para>Verwendung der <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Styles" /> Eigenschaft, um die <b>Styles</b> -Auflistung zurückzugeben.</para>
        <para>Verwendung der <see cref="M:Microsoft.Office.Interop.Excel.Styles.Add(System.String,System.Object)" /> -Methode, um eine neue Formatvorlage erstellen und der Auflistung hinzugefügt.</para>
        <para>
          <b>Formatvorlagen</b>(<paramref name="index" />), wobei <paramref name="index" /> ist die Indexnummer der Formatvorlage oder Namen, um ein einzelnes <b>Style</b> -Objekt aus der Arbeitsmappe <b>Styles</b> -Auflistung zurückzugeben.</para>
        <para></para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="74196-102">
          <para>Each <b>Style</b> object represents a style description for a range. The <b>Style</b> object contains all style attributes (font, number format, alignment, and so on) as properties. There are several built-in styles — including Normal, Currency, and Percent — which are listed in the Style name box in the Style dialog box (Format menu).</para>
          <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Styles" /> property to return the <b>Styles</b> collection.</para>
          <para>Use the <see cref="M:Microsoft.Office.Interop.Excel.Styles.Add(System.String,System.Object)" /> method to create a new style and add it to the collection.</para>
          <para>Use <b>Styles</b>(<paramref name="index" />), where <paramref name="index" /> is the style index number or name, to return a single <b>Style</b> object from the workbook <b>Styles</b> collection.</para>
          <para></para>
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Style this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Style _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Styles._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Style ^ default[System::Object ^] { Microsoft::Office::Interop::Excel::Style ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Style</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="74196-103">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74196-103">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Style Add (string Name, object BasedOn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Style Add([in]string Name, [in]object BasedOn) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Styles.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Name As String, Optional BasedOn As Object) As Style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Style</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="BasedOn" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="74196-104">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74196-104">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="74196-105">Der neue Formatvorlagenname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74196-105">The new style name.</span>
          </span>
        </param>
        <param name="BasedOn">
          <span data-ttu-id="74196-106">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74196-106">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="74196-107">Ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> -Objekt, das auf eine Zelle verweist, die als Grundlage für die neue Formatvorlage verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74196-107">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that refers to a cell that's used as the basis for the new style.</span>
          </span>
          <span data-ttu-id="74196-108">Wenn dieses Argument ausgelassen wird, basiert die neue Formatvorlage auf die Formatvorlage Normal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74196-108">If this argument is omitted, the newly created style is based on the Normal style.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74196-109">Erstellt eine neue Formatvorlage und fügt sie der Liste mit den für die aktuelle Arbeitsmappe verfügbaren Formatvorlagen hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74196-109">Creates a new style and adds it to the list of styles that are available for the current workbook.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="74196-110">
            <para>Wenn bereits eine Formatvorlage mit dem angegebenen Namen vorhanden ist, diese Methode definiert die Formatvorlage basierend auf die Zelle im angegebenen neu <paramref name="BasedOn" />.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="74196-110">
              <para>If a style with the specified name already exists, this method redefines the existing style based on the cell specified in <paramref name="BasedOn" />.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Styles.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74196-111">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> -Objekt, das die Anwendung Microsoft Excel darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74196-111">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Styles.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74196-112">Gibt die Anzahl der Objekte in der Auflistung zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74196-112">Returns the number of objects in the collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Styles.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74196-113">Gibt eine 32-Bit-Ganzzahl, die die Anwendung angibt, in der das Objekt erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74196-113">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="74196-114">
            <para>Wenn das Objekt in Microsoft Excel erstellt wurde, gibt diese Eigenschaft die Zeichenfolge XCEL zurück, die die hexadezimale Zahl 5843454 c entspricht</para>
            <para>Die <b>Creator</b> -Eigenschaft wurde in Microsoft Excel für den Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen verfügt über entwickelt. Microsoft Excel verfügt beispielsweise über den erstellten Code XCEL.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="74196-114">
              <para>If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</para>
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Styles.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Style Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Style Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Styles.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Style ^ Item[System::Object ^] { Microsoft::Office::Interop::Excel::Style ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Style</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="74196-115">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74196-115">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="74196-116">Der Name oder die Indexnummer des Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74196-116">The name or index number of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74196-117">Gibt ein einzelnes Objekt aus einer Auflistung zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74196-117">Returns a single object from a collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public object Merge (object Workbook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Merge([in]object Workbook) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Styles.Merge(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Merge (Workbook As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Merge(System::Object ^ Workbook);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(564)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Workbook" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Workbook">
          <span data-ttu-id="74196-118">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74196-118">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="74196-119">Ein <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> -Objekt, das die Arbeitsmappe mit den Formatvorlagen zusammengeführt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74196-119">A <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object that represents the workbook containing styles to be merged.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74196-120">Werden die Formatvorlagen aus einer anderen Arbeitsmappe in der <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74196-120">Merges the styles from another workbook into the <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> collection.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="74196-121">
            <para>Der Wert eines zusammengeführten Bereichs wird in der Zelle die linke obere Ecke des Bereichs angegeben.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="74196-121">
              <para>The value of a merged range is specified in the cell of the range's upper-left corner.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Styles.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74196-122">Gibt das übergeordnete Objekt für das angegebene Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="74196-122">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>