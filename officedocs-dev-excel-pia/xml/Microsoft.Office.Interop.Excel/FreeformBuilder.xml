<Type Name="FreeformBuilder" FullName="Microsoft.Office.Interop.Excel.FreeformBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="49bbc8d21ea36b32da44ca3a92e3697a77f26497" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20582649" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface FreeformBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract FreeformBuilder" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.FreeformBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Interface FreeformBuilder" />
  <TypeSignature Language="C++ CLI" Value="public interface class FreeformBuilder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002443F-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt die Geometrie eines Freihandobjekts während seiner Erstellung dar.</summary>
    <remarks>
      <para>Verwendung der <see cref="M:Microsoft.Office.Interop.Excel.Shapes.BuildFreeform(Microsoft.Office.Core.MsoEditingType,System.Single,System.Single)" /> -Methode, um ein <b>FreeformBuilder</b> -Objekt zurückzugeben. Verwendung der <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)" /> -Methode, um der Freihandform Knoten hinzuzufügen. Verwendung der <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.ConvertToShape" /> -Methode, um die im <b>FreeformBuilder</b> -Objekt definierte Form erstellen, und fügen sie die <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> Auflistung.</para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNodes">
      <MemberSignature Language="C#" Value="public void AddNodes (Microsoft.Office.Core.MsoSegmentType SegmentType, Microsoft.Office.Core.MsoEditingType EditingType, float X1, float Y1, object X2, object Y2, object X3, object Y3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddNodes([in]valuetype Microsoft.Office.Core.MsoSegmentType SegmentType, [in]valuetype Microsoft.Office.Core.MsoEditingType EditingType, [in]float32 X1, [in]float32 Y1, [in]object X2, [in]object Y2, [in]object X3, [in]object Y3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddNodes (SegmentType As MsoSegmentType, EditingType As MsoEditingType, X1 As Single, Y1 As Single, Optional X2 As Object, Optional Y2 As Object, Optional X3 As Object, Optional Y3 As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1762)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SegmentType" Type="Microsoft.Office.Core.MsoSegmentType" />
        <Parameter Name="EditingType" Type="Microsoft.Office.Core.MsoEditingType" />
        <Parameter Name="X1" Type="System.Single" />
        <Parameter Name="Y1" Type="System.Single" />
        <Parameter Name="X2" Type="System.Object" />
        <Parameter Name="Y2" Type="System.Object" />
        <Parameter Name="X3" Type="System.Object" />
        <Parameter Name="Y3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SegmentType">Erforderliche <see cref="T:Microsoft.Office.Interop.Office.MsoSegmentType" />. Der Typ des hinzuzufügenden Segments. <b>MsoSegmentType</b> kann eine der folgenden Konstanten sein:<b>MsoSegmentLine</b><b>msoSegmentCurve zurück</b></param>
        <param name="EditingType">Erforderliche <see cref="T:Microsoft.Office.Interop.Office.MsoEditingType" />. Die Bearbeitungseigenschaft des Scheitelpunkts. <b>MsoEditingType</b> kann eine der folgenden Konstanten sein:<b>MsoEditingAuto</b><b>MsoEditingCorner</b>kann nicht <b>MsoEditingSmooth</b> oder <b>MsoEditingSymmetric</b>sein. Wenn <paramref name="SegmentType" /> ist <b>MsoSegmentLine</b>, <paramref name="EditingType" /><b>MsoEditingAuto</b>werden muss.</param>
        <param name="X1">
          <b>Single</b>erforderlich. Wenn die <paramref name="EditingType" /> des neuen Abschnitts <b>MsoEditingAuto</b>, dieses Argument gibt den horizontalen Abstand (in Punkt) von der oberen linken Ecke des Dokuments zum Endpunkt des neuen Abschnitts. Wenn die <paramref name="EditingType" /> des neuen Knotens <b>MsoEditingCorner</b>, dieses Argument gibt den horizontalen Abstand (in Punkt) von der oberen linken Ecke des Dokuments bis zum ersten Kontrollpunkt für das neue Segment.</param>
        <param name="Y1">
          <b>Single</b>erforderlich. Wenn die <paramref name="EditingType" /> des neuen Abschnitts <b>MsoEditingAuto</b>, dieses Argument gibt den horizontalen Abstand (in Punkt) von der oberen linken Ecke des Dokuments zum Endpunkt des neuen Abschnitts. Wenn die <paramref name="EditingType" /> des neuen Knotens <b>MsoEditingCorner</b>, dieses Argument gibt den horizontalen Abstand (in Punkt) von der oberen linken Ecke des Dokuments bis zum ersten Kontrollpunkt für das neue Segment.</param>
        <param name="X2">Optionales- <b>Objekt</b>. Wenn die <paramref name="EditingType" /> des neuen Abschnitts <b>MsoEditingCorner</b>, dieses Argument gibt den horizontalen Abstand (in Punkt) von der oberen linken Ecke des Dokuments bis zum zweiten Kontrollpunkt des neuen Abschnitts. Wenn die <paramref name="EditingType" /> des neuen Segments <b>MsoEditingAuto</b>ist, geben Sie keinen Wert für dieses Argument.</param>
        <param name="Y2">Optionales- <b>Objekt</b>. Wenn die <paramref name="EditingType" /> des neuen Abschnitts <b>MsoEditingCorner</b>, dieses Argument gibt den horizontalen Abstand (in Punkt) von der oberen linken Ecke des Dokuments bis zum zweiten Kontrollpunkt des neuen Abschnitts. Wenn die <paramref name="EditingType" /> des neuen Segments <b>MsoEditingAuto</b>ist, geben Sie keinen Wert für dieses Argument.</param>
        <param name="X3">Optionales- <b>Objekt</b>. Wenn die <paramref name="EditingType" /> des neuen Abschnitts <b>MsoEditingCorner</b>, dieses Argument gibt den horizontalen Abstand (in Punkt) von der oberen linken Ecke des Dokuments zum Endpunkt des neuen Abschnitts. Wenn die <paramref name="EditingType" /> des neuen Segments <b>MsoEditingAuto</b>ist, geben Sie keinen Wert für dieses Argument.</param>
        <param name="Y3">Optionales- <b>Objekt</b>. Wenn die <paramref name="EditingType" /> des neuen Abschnitts <b>MsoEditingCorner</b>, dieses Argument gibt den vertikalen Abstand (in Punkt) von der oberen linken Ecke des Dokuments zum Endpunkt des neuen Abschnitts. Wenn die <paramref name="EditingType" /> des neuen Segments <b>MsoEditingAuto</b>ist, geben Sie keinen Wert für dieses Argument.</param>
        <summary>Fügt einen Knoten einer Freihandform.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FreeformBuilder.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> -Objekt, das die Anwendung Microsoft Excel darstellt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape ConvertToShape ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape ConvertToShape() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.FreeformBuilder.ConvertToShape" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToShape () As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ ConvertToShape();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1766)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein Shape, das den geometrischen des angegebenen Charakteristika <see cref="T:Microsoft.Office.Interop.Excel.FreeformBuilder" /> Objekt. Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> -Objekt, das die neue Form darstellt.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <b>Hinweis</b>   Sie müssen Anwenden der <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)" /> -Methode auf ein <b>FreeformBuilder</b> -Objekts mindestens einmal, bevor Sie die <b>ConvertToShape</b> -Methode verwenden.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FreeformBuilder.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt eine 32-Bit-Ganzzahl, die die Anwendung angibt, in der das Objekt erstellt wurde.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Wenn das Objekt in Microsoft Excel erstellt wurde, gibt diese Eigenschaft die Zeichenfolge XCEL zurück, dies entspricht die hexadezimale Zahl 5843454 c ist.</para>
          <para>Die <b>Creator</b> -Eigenschaft ist in Microsoft Excel für den Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen verfügt über entwickelt. Der Erstellercode von Microsoft Excel lautet beispielsweise XCEL zurück.</para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.FreeformBuilder.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt das übergeordnete Objekt für das angegebene Objekt zurück.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>