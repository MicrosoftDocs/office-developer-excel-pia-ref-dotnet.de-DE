<Type Name="ShapeRange" FullName="Microsoft.Office.Interop.Excel.ShapeRange">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ffea79e6ef3bb0175b91650070af45326d337d7f" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50010318" /></Metadata><TypeSignature Language="C#" Value="public interface ShapeRange : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ShapeRange implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.ShapeRange" />
  <TypeSignature Language="VB.NET" Value="Public Interface ShapeRange&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ShapeRange : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002443B-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1042e-101">Stellt einen Formbereich dar, der eine Reihe von Formen eines Dokuments umfasst.</span><span class="sxs-lookup"><span data-stu-id="1042e-101">Represents a shape range, which is a set of shapes on a document.</span></span></summary>
    <remarks><para><span data-ttu-id="1042e-102">Ein Formbereich kann nur eine Form oder sämtliche Formen eines Dokuments enthalten.</span><span class="sxs-lookup"><span data-stu-id="1042e-102">A shape range can contain as few as a single shape or as many as all the shapes on the document.</span></span> <span data-ttu-id="1042e-103">Sie können dem Formenbereich jede beliebige Form zuordnen und dabei aus allen Formen im Dokument oder allen Formen in einem Bereich auswählen, um einen Formenbereich zusammenzustellen.</span><span class="sxs-lookup"><span data-stu-id="1042e-103">You can include whichever shapes you want — chosen from among all the shapes on the document or all the shapes in the selection — to construct a shape range.</span></span> <span data-ttu-id="1042e-104">Sie können beispielsweise eine Auflistung erstellen, die die ersten drei Formen in einem Dokument, alle ausgewählten Formen in einem Dokument oder alle Freihandformen in einem <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> Dokument enthält.</span><span class="sxs-lookup"><span data-stu-id="1042e-104">For example, you could construct a <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> collection that contains the first three shapes on a document, all the selected shapes on a document, or all the freeforms on a document.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape _Default (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape _Default([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Default (Index As Object) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ _Default(System::Object ^ Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="1042e-105">Für die interne Verwendung reserviert.</span><span class="sxs-lookup"><span data-stu-id="1042e-105">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Adjustments">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Adjustments Adjustments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Adjustments Adjustments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Adjustments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Adjustments As Adjustments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Adjustments ^ Adjustments { Microsoft::Office::Interop::Excel::Adjustments ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1691)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1691)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Adjustments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-106">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Adjustments" /> Objekt zurück, das Anpassungswerte für alle Anpassungen in der angegebenen Form enthält.</span><span class="sxs-lookup"><span data-stu-id="1042e-106">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Adjustments" /> object that contains adjustment values for all the adjustments in the specified shape.</span></span> <span data-ttu-id="1042e-107">Gilt für jedes <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> Objekt, das eine AutoForm, wordArt oder eine Verbindung darstellt.</span><span class="sxs-lookup"><span data-stu-id="1042e-107">Applies to any <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object that represents an AutoShape, WordArt, or a connector.</span></span> <span data-ttu-id="1042e-108">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1042e-108">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Align">
      <MemberSignature Language="C#" Value="public void Align (Microsoft.Office.Core.MsoAlignCmd AlignCmd, Microsoft.Office.Core.MsoTriState RelativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Align([in]valuetype Microsoft.Office.Core.MsoAlignCmd AlignCmd, [in]valuetype Microsoft.Office.Core.MsoTriState RelativeTo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Align(Microsoft.Office.Core.MsoAlignCmd,Microsoft.Office.Core.MsoTriState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Align (AlignCmd As MsoAlignCmd, RelativeTo As MsoTriState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Align(Microsoft::Office::Core::MsoAlignCmd AlignCmd, Microsoft::Office::Core::MsoTriState RelativeTo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1740)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="AlignCmd" Type="Microsoft.Office.Core.MsoAlignCmd" />
        <Parameter Name="RelativeTo" Type="Microsoft.Office.Core.MsoTriState" />
      </Parameters>
      <Docs>
        <param name="AlignCmd"><span data-ttu-id="1042e-109"><see cref="T:Microsoft.Office.Core.MsoAlignCmd" />Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1042e-109">Required <see cref="T:Microsoft.Office.Core.MsoAlignCmd" />.</span></span> <span data-ttu-id="1042e-110">Gibt an, wie die Formen im angegebenen Formenbereich ausgerichtet werden.</span><span class="sxs-lookup"><span data-stu-id="1042e-110">Specifies the way the shapes in the specified shape range are to be aligned.</span></span></param>
        <param name="RelativeTo"><span data-ttu-id="1042e-111"><see cref="T:Microsoft.Office.Core.MsoTriState" />Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1042e-111">Required <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span> <span data-ttu-id="1042e-112">Wird in Microsoft Excel nicht verwendet.</span><span class="sxs-lookup"><span data-stu-id="1042e-112">Not used in Microsoft Excel.</span></span> <span data-ttu-id="1042e-113">Muss den Wert <b>False</b> aufweisen.</span><span class="sxs-lookup"><span data-stu-id="1042e-113">Must be <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="1042e-114">Richtet die Formen im angegebenen Formenbereich aus.</span><span class="sxs-lookup"><span data-stu-id="1042e-114">Aligns the shapes in the specified range of shapes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternativeText">
      <MemberSignature Language="C#" Value="public string AlternativeText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AlternativeText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.AlternativeText" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternativeText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AlternativeText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1891)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1891)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1891)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-115">Gibt die beschreibende (alternative) Textzeichenfolge für ein Objekt zurück oder legt sie fest, wenn das Objekt <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> auf einer Webseite gespeichert wird.</span><span class="sxs-lookup"><span data-stu-id="1042e-115">Returns or sets the descriptive (alternative) text string for a <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object when the object is saved to a Web page.</span></span> <span data-ttu-id="1042e-116"><b>Zeichenfolge</b> mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="1042e-116">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="1042e-117">Der alternative Text kann entweder statt des Bilds des Shapes im Webbrowser oder direkt über dem Bild angezeigt werden, wenn der Mauszeiger auf das Bild zeigt (in Browsern, die diese Features unterstützen).</span><span class="sxs-lookup"><span data-stu-id="1042e-117">The alternative text can be displayed either in place of the shape’s image in the Web browser or directly over the image when the mouse pointer hovers over the image (in browsers that support these features).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-118">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> Objekt zurück, das die Microsoft Excel-Anwendung darstellt.</span><span class="sxs-lookup"><span data-stu-id="1042e-118">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span> <span data-ttu-id="1042e-119">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1042e-119">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Apply() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Apply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Apply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Apply();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1675)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1042e-120">Gilt für die angegebene Formformatierung, die mithilfe der Methode kopiert <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.PickUp" /> wurde.</span><span class="sxs-lookup"><span data-stu-id="1042e-120">Applies to the specified shape formatting that’s been copied by using the <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.PickUp" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoShapeType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoAutoShapeType AutoShapeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoAutoShapeType AutoShapeType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.AutoShapeType" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoShapeType As MsoAutoShapeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoAutoShapeType AutoShapeType { Microsoft::Office::Core::MsoAutoShapeType get(); void set(Microsoft::Office::Core::MsoAutoShapeType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1693)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1693)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1693)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoAutoShapeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-121">Gibt den Formtyp für das angegebene Objekt zurück, der eine andere AutoForm als eine Linie, Freihandform oder Verbindung darstellen muss, oder legt <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> diesen Typ fest.</span><span class="sxs-lookup"><span data-stu-id="1042e-121">Returns or sets the shape type for the specified <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object, which must represent an AutoShape other than a line, freeform drawing, or connector.</span></span> <span data-ttu-id="1042e-122">Lese-/Schreibzugriff. <see cref="T:Microsoft.Office.Core.MsoAutoShapeType" /></span><span class="sxs-lookup"><span data-stu-id="1042e-122">Read/write <see cref="T:Microsoft.Office.Core.MsoAutoShapeType" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="1042e-123">[!HINWEIS] Wenn Sie den Typ der Form ändern, bleiben Größe, Farbe und andere Eigenschaften der Form erhalten.</span><span class="sxs-lookup"><span data-stu-id="1042e-123">When you change the type of a shape, the shape retains its size, color, and other attributes.</span></span></para>
          <para><span data-ttu-id="1042e-124">Verwenden Sie <see cref="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Type" /> die Eigenschaft des <see cref="T:Microsoft.Office.Interop.Excel.ConnectorFormat" /> Objekts, um den Connectortyp festlegen oder zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="1042e-124">Use the <see cref="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Type" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ConnectorFormat" /> object to set or return the connector type.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoBackgroundStyleIndex BackgroundStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoBackgroundStyleIndex BackgroundStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.BackgroundStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackgroundStyle As MsoBackgroundStyleIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoBackgroundStyleIndex BackgroundStyle { Microsoft::Office::Core::MsoBackgroundStyleIndex get(); void set(Microsoft::Office::Core::MsoBackgroundStyleIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2661)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoBackgroundStyleIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-125">Gibt das Hintergrundformat zurück oder legt es fest.</span><span class="sxs-lookup"><span data-stu-id="1042e-125">Returns or sets the background style.</span></span> <span data-ttu-id="1042e-126">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="1042e-126">Read/write.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Core.MsoBackgroundStyleIndex" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlackWhiteMode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoBlackWhiteMode BlackWhiteMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoBlackWhiteMode BlackWhiteMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.BlackWhiteMode" />
      <MemberSignature Language="VB.NET" Value="Public Property BlackWhiteMode As MsoBlackWhiteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoBlackWhiteMode BlackWhiteMode { Microsoft::Office::Core::MsoBlackWhiteMode get(); void set(Microsoft::Office::Core::MsoBlackWhiteMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1707)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1707)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1707)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoBlackWhiteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-127">Gibt einen Wert zurück, der angibt, wie die angegebene Form angezeigt wird, wenn die Präsentation im Schwarzweißmodus betrachtet wird, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="1042e-127">Returns or sets a value that indicates how the specified shape appears when the presentation is viewed in black-and-white mode.</span></span> <span data-ttu-id="1042e-128">Lese-/Schreibzugriff. <see cref="T:Microsoft.Office.Core.MsoBlackWhiteMode" /></span><span class="sxs-lookup"><span data-stu-id="1042e-128">Read/write <see cref="T:Microsoft.Office.Core.MsoBlackWhiteMode" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Callout">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CalloutFormat Callout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CalloutFormat Callout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Callout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Callout As CalloutFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CalloutFormat ^ Callout { Microsoft::Office::Interop::Excel::CalloutFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1694)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1694)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CalloutFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-129">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.CalloutFormat" /> Objekt zurück, das Formatierungseigenschaften für die Angegebene Form enthält.</span><span class="sxs-lookup"><span data-stu-id="1042e-129">Returns a <see cref="T:Microsoft.Office.Interop.Excel.CalloutFormat" /> object that contains callout formatting properties for the specified shape.</span></span> <span data-ttu-id="1042e-130">Gilt für <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> Objekte, die Linienanrufe darstellen.</span><span class="sxs-lookup"><span data-stu-id="1042e-130">Applies to <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objects that represent line callouts.</span></span> <span data-ttu-id="1042e-131">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1042e-131">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasCropBottom">
      <MemberSignature Language="C#" Value="public void CanvasCropBottom (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CanvasCropBottom([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.CanvasCropBottom(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CanvasCropBottom (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CanvasCropBottom(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">To be added.</param>
        <summary><span data-ttu-id="1042e-132">Für interne Zwecke vorbehalten. </span><span class="sxs-lookup"><span data-stu-id="1042e-132">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasCropLeft">
      <MemberSignature Language="C#" Value="public void CanvasCropLeft (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CanvasCropLeft([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.CanvasCropLeft(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CanvasCropLeft (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CanvasCropLeft(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2172)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">To be added.</param>
        <summary><span data-ttu-id="1042e-133">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="1042e-133">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasCropRight">
      <MemberSignature Language="C#" Value="public void CanvasCropRight (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CanvasCropRight([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.CanvasCropRight(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CanvasCropRight (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CanvasCropRight(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2174)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">To be added.</param>
        <summary><span data-ttu-id="1042e-134">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="1042e-134">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasCropTop">
      <MemberSignature Language="C#" Value="public void CanvasCropTop (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CanvasCropTop([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.CanvasCropTop(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CanvasCropTop (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CanvasCropTop(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2173)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">To be added.</param>
        <summary><span data-ttu-id="1042e-135">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="1042e-135">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasItems">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CanvasShapes CanvasItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CanvasShapes CanvasItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.CanvasItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanvasItems As CanvasShapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CanvasShapes ^ CanvasItems { Microsoft::Office::Core::CanvasShapes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CanvasShapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-136">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="1042e-136">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Chart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart Chart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart Chart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Chart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Chart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ Chart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-137">Gibt ein Objekt zurück, das das im Formbereich enthaltene Diagramm darstellt.</span><span class="sxs-lookup"><span data-stu-id="1042e-137">Returns an object that represents the chart contained in the shape range.</span></span> <span data-ttu-id="1042e-138">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1042e-138">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel._Chart" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Child">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState Child { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState Child" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Child" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Child As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState Child { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2169)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-139">Gibt <b>msoTrue</b> zurück, wenn die angegebene Form eine untergeordnete Form ist oder alle Formen in einem Formenbereich untergeordnete Formen derselben übergeordneten Form sind.</span><span class="sxs-lookup"><span data-stu-id="1042e-139">Returns <b>msoTrue</b> if the specified shape is a child shape or if all shapes in a shape range are child shapes of the same parent.</span></span> <span data-ttu-id="1042e-140"><see cref="T:Microsoft.Office.Core.MsoTriState" />Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1042e-140">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionSiteCount">
      <MemberSignature Language="C#" Value="public int ConnectionSiteCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionSiteCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.ConnectionSiteCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionSiteCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ConnectionSiteCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1695)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1695)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-141">Gibt die Anzahl der Verbindungsseiten der angegebenen Form zurück.</span><span class="sxs-lookup"><span data-stu-id="1042e-141">Returns the number of connection sites on the specified shape.</span></span> <span data-ttu-id="1042e-142">Schreibgeschützte <b>ganze Zahl</b>.</span><span class="sxs-lookup"><span data-stu-id="1042e-142">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connector">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState Connector { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState Connector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Connector" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connector As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState Connector { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1696)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1696)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-143"><b>True</b>, wenn es sich bei der angegebenen Form um eine Verbindung handelt.</span><span class="sxs-lookup"><span data-stu-id="1042e-143"><b>True</b> if the specified shape is a connector.</span></span> <span data-ttu-id="1042e-144"><see cref="T:Microsoft.Office.Core.MsoTriState" />Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1042e-144">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectorFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ConnectorFormat ConnectorFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ConnectorFormat ConnectorFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.ConnectorFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectorFormat As ConnectorFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ConnectorFormat ^ ConnectorFormat { Microsoft::Office::Interop::Excel::ConnectorFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1697)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1697)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ConnectorFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-145">Gibt ein Objekt <see cref="T:Microsoft.Office.Interop.Excel.ConnectorFormat" /> zurück, das Formatierungseigenschaften für Verbinder enthält.</span><span class="sxs-lookup"><span data-stu-id="1042e-145">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ConnectorFormat" /> object that contains connector formatting properties.</span></span> <span data-ttu-id="1042e-146">Gilt für <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> Objekte, die Konnektoren darstellen.</span><span class="sxs-lookup"><span data-stu-id="1042e-146">Applies to <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objects that represent connectors.</span></span> <span data-ttu-id="1042e-147">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1042e-147">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-148">Gibt die Anzahl der Objekte in der Auflistung zurück.</span><span class="sxs-lookup"><span data-stu-id="1042e-148">Returns the number of objects in the collection.</span></span> <span data-ttu-id="1042e-149">Schreibgeschützte <b>ganze Zahl</b>.</span><span class="sxs-lookup"><span data-stu-id="1042e-149">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-150">Gibt einen ganzzahligen 32-Bit-Wert zurück, der die Anwendung angibt, in der dieses Objekt erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="1042e-150">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="1042e-151">Wenn das Objekt in Microsoft Excel erstellt wurde, gibt die Eigenschaft die Zeichenfolge XCEL zurück, die der Hexadezimalzahl 5843454C entspricht.</span><span class="sxs-lookup"><span data-stu-id="1042e-151">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="1042e-152"><see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1042e-152">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="1042e-153">Die <b>Creator</b>-Eigenschaft wurde speziell für den Einsatz in Microsoft Excel für den Macintosh geschaffen, wo jede Anwendung einen Urhebercode aus vier Zeichen besitzt.</span><span class="sxs-lookup"><span data-stu-id="1042e-153">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="1042e-154">Der Urhebercode für Microsoft Excel lautet "XCEL".</span><span class="sxs-lookup"><span data-stu-id="1042e-154">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1042e-155">Löscht das Objekt.</span><span class="sxs-lookup"><span data-stu-id="1042e-155">Deletes the object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Diagram">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Diagram Diagram { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Diagram Diagram" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Diagram" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Diagram As Diagram" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Diagram ^ Diagram { Microsoft::Office::Interop::Excel::Diagram ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2167)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2167)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Diagram</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-156">Gibt ein Objekt <see cref="T:Microsoft.Office.Interop.Excel.Diagram" /> zurück, das ein Diagramm darstellt.</span><span class="sxs-lookup"><span data-stu-id="1042e-156">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Diagram" /> object representing a diagram.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiagramNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DiagramNode DiagramNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DiagramNode DiagramNode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.DiagramNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DiagramNode As DiagramNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DiagramNode ^ DiagramNode { Microsoft::Office::Interop::Excel::DiagramNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2165)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2165)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DiagramNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-157">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> Objekt zurück, das einen Knoten in einem Diagramm darstellt.</span><span class="sxs-lookup"><span data-stu-id="1042e-157">Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object that represents a node in a diagram.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Distribute">
      <MemberSignature Language="C#" Value="public void Distribute (Microsoft.Office.Core.MsoDistributeCmd DistributeCmd, Microsoft.Office.Core.MsoTriState RelativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Distribute([in]valuetype Microsoft.Office.Core.MsoDistributeCmd DistributeCmd, [in]valuetype Microsoft.Office.Core.MsoTriState RelativeTo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Distribute(Microsoft.Office.Core.MsoDistributeCmd,Microsoft.Office.Core.MsoTriState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Distribute (DistributeCmd As MsoDistributeCmd, RelativeTo As MsoTriState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Distribute(Microsoft::Office::Core::MsoDistributeCmd DistributeCmd, Microsoft::Office::Core::MsoTriState RelativeTo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1742)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DistributeCmd" Type="Microsoft.Office.Core.MsoDistributeCmd" />
        <Parameter Name="RelativeTo" Type="Microsoft.Office.Core.MsoTriState" />
      </Parameters>
      <Docs>
        <param name="DistributeCmd"><span data-ttu-id="1042e-158"><see cref="T:Microsoft.Office.Core.MsoDistributeCmd" />Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1042e-158">Required <see cref="T:Microsoft.Office.Core.MsoDistributeCmd" />.</span></span> <span data-ttu-id="1042e-159">Gibt an, ob Formen im Bereich horizontal oder vertikal verteilt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="1042e-159">Specifies whether shapes in the range are to be distributed horizontally or vertically.</span></span></param>
        <param name="RelativeTo"><span data-ttu-id="1042e-160">Erforderlich <see cref="T:Microsoft.Office.Core.MsoTriState" /> .</span><span class="sxs-lookup"><span data-stu-id="1042e-160">Required <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span> <span data-ttu-id="1042e-161">Wird in Microsoft Excel nicht verwendet.</span><span class="sxs-lookup"><span data-stu-id="1042e-161">Not used in Microsoft Excel.</span></span> <span data-ttu-id="1042e-162">Muss den Wert <b>False</b> aufweisen.</span><span class="sxs-lookup"><span data-stu-id="1042e-162">Must be <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="1042e-163">Verteilt Formen im angegebenen Formbereich horizontal und vertikal.</span><span class="sxs-lookup"><span data-stu-id="1042e-163">Horizontally or vertically distributes the shapes in the specified range of shapes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duplicate">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShapeRange Duplicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.ShapeRange Duplicate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Duplicate" />
      <MemberSignature Language="VB.NET" Value="Public Function Duplicate () As ShapeRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::ShapeRange ^ Duplicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1039)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShapeRange</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1042e-164">Dupliziert das Objekt und gibt einen Bezug auf die neue Kopie zurück.</span><span class="sxs-lookup"><span data-stu-id="1042e-164">Duplicates the object and returns a reference to the new copy.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.FillFormat Fill { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.FillFormat Fill" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Fill" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Fill As FillFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::FillFormat ^ Fill { Microsoft::Office::Interop::Excel::FillFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1663)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.FillFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-165">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> Objekt zurück, das Füllungsformatierungseigenschaften für das angegebene Diagramm oder die angegebene Form enthält.</span><span class="sxs-lookup"><span data-stu-id="1042e-165">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object that contains fill formatting properties for the specified chart or shape.</span></span> <span data-ttu-id="1042e-166">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1042e-166">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flip">
      <MemberSignature Language="C#" Value="public void Flip (Microsoft.Office.Core.MsoFlipCmd FlipCmd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flip([in]valuetype Microsoft.Office.Core.MsoFlipCmd FlipCmd) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Flip(Microsoft.Office.Core.MsoFlipCmd)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flip (FlipCmd As MsoFlipCmd)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flip(Microsoft::Office::Core::MsoFlipCmd FlipCmd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1676)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FlipCmd" Type="Microsoft.Office.Core.MsoFlipCmd" />
      </Parameters>
      <Docs>
        <param name="FlipCmd"><span data-ttu-id="1042e-167"><see cref="T:Microsoft.Office.Core.MsoFlipCmd" />Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1042e-167">Required <see cref="T:Microsoft.Office.Core.MsoFlipCmd" />.</span></span> <span data-ttu-id="1042e-168">Gibt an, ob die Form horizontal oder vertikal gespiegelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="1042e-168">Specifies whether the shape is to be flipped horizontally or vertically.</span></span></param>
        <summary><span data-ttu-id="1042e-169">Spiegelt die angegebene Form an ihrer horizontalen oder vertikalen Achse.</span><span class="sxs-lookup"><span data-stu-id="1042e-169">Flips the specified shape around its horizontal or vertical axis.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Glow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.GlowFormat Glow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.GlowFormat Glow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Glow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Glow As GlowFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::GlowFormat ^ Glow { Microsoft::Office::Core::GlowFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2663)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.GlowFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-170">Gibt ein Objekt zurück, das Leuchtformatierungseigenschaften für den Formbereich enthält.</span><span class="sxs-lookup"><span data-stu-id="1042e-170">Returns an object that contains glow formatting properties for the shape range.</span></span> <span data-ttu-id="1042e-171">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1042e-171">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Core.GlowFormat" /></value>
        <remarks><para><span data-ttu-id="1042e-172">Der Leuchteffekt fügt Grafiken einen Rand in leuchtenden Farben hinzu.</span><span class="sxs-lookup"><span data-stu-id="1042e-172">The glow effect adds a vibrant colored edge to graphics.</span></span>  </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape Group ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape Group() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Group" />
      <MemberSignature Language="VB.NET" Value="Public Function Group () As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ Group();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(46)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1042e-173">Gruppiert die Formen im angegebenen Bereich.</span><span class="sxs-lookup"><span data-stu-id="1042e-173">Groups the shapes in the specified range.</span></span> <span data-ttu-id="1042e-174">Gibt die gruppierungen Formen als einzelnes Objekt <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="1042e-174">Returns the grouped shapes as a single <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="1042e-175">Da eine Gruppe von Formen als <b>einzelne Form</b> behandelt wird und die Indexnummern von Elementen, die nach den betroffenen Elementen in der Auflistung enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="1042e-175">Because a group of shapes is treated as a single shape, grouping and ungrouping shapes changes the number of items in the <b>Shapes</b> collection and changes the index numbers of items that come after the affected items in the collection.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupItems">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.GroupShapes GroupItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.GroupShapes GroupItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.GroupItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GroupItems As GroupShapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::GroupShapes ^ GroupItems { Microsoft::Office::Interop::Excel::GroupShapes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1698)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1698)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.GroupShapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-176">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.GroupShapes" /> Objekt zurück, das die einzelnen Formen in der angegebenen Gruppe darstellt.</span><span class="sxs-lookup"><span data-stu-id="1042e-176">Returns a <see cref="T:Microsoft.Office.Interop.Excel.GroupShapes" /> object that represents the individual shapes in the specified group.</span></span> <span data-ttu-id="1042e-177">Gilt für <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> Objekte, die gruppierende Formen darstellen.</span><span class="sxs-lookup"><span data-stu-id="1042e-177">Applies to <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objects that represent grouped shapes.</span></span> <span data-ttu-id="1042e-178">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1042e-178">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="1042e-179">Verwenden Sie <see cref="M:Microsoft.Office.Interop.Excel.GroupShapes.Item(System.Object)" /> die Methode des <b>GroupShapes -Objekts,</b> um eine einzelne Form aus der Gruppe zurückzukehren.</span><span class="sxs-lookup"><span data-stu-id="1042e-179">Use the <see cref="M:Microsoft.Office.Interop.Excel.GroupShapes.Item(System.Object)" /> method of the <b>GroupShapes</b> object to return a single shape from the group.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HasChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HasChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HasChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.HasChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChart As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HasChart { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2658)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2658)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-180">Gibt Informationen darüber zurück, ob ein <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange" /> Diagramm enthält.</span><span class="sxs-lookup"><span data-stu-id="1042e-180">Returns information on if a <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange" /> contains a chart.</span></span> <span data-ttu-id="1042e-181">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1042e-181">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Core.MsoTriState" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDiagram">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HasDiagram { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HasDiagram" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.HasDiagram" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasDiagram As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HasDiagram { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-182">Gibt zurück, ob eine Form oder ein Formenbereich ein Diagramm enthält.</span><span class="sxs-lookup"><span data-stu-id="1042e-182">Returns whether a shape or shape range contains a diagram.</span></span> <span data-ttu-id="1042e-183"><see cref="T:Microsoft.Office.Core.MsoTriState" />Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1042e-183">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDiagramNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HasDiagramNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HasDiagramNode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.HasDiagramNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasDiagramNode As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HasDiagramNode { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2166)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2166)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-184">Gibt einen Wert zurück, der angibt, ob ein Diagrammknoten in einer bestimmten Form oder einem bestimmten Formbereich vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="1042e-184">Returns a value indicating whether a diagram node exists in a given shape or shape range.</span></span> <span data-ttu-id="1042e-185"><see cref="T:Microsoft.Office.Core.MsoTriState" />Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1042e-185">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public float Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Height { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-186">Die Höhe des Objekts.</span><span class="sxs-lookup"><span data-stu-id="1042e-186">The height of the object.</span></span> <span data-ttu-id="1042e-187">Lese-/Schreibzugriff <b>einzelnen</b>.</span><span class="sxs-lookup"><span data-stu-id="1042e-187">Read/write <b>Single</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalFlip">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HorizontalFlip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HorizontalFlip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.HorizontalFlip" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HorizontalFlip As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HorizontalFlip { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1699)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1699)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-188"><b>True</b>, wenn die angegebene Form um die horizontale Achse gekippt ist.</span><span class="sxs-lookup"><span data-stu-id="1042e-188"><b>True</b> if the specified shape is flipped around the horizontal axis.</span></span> <span data-ttu-id="1042e-189"><see cref="T:Microsoft.Office.Core.MsoTriState" />Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1042e-189">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public int ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.ID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ID { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(570)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(570)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-190">Gibt den Typ für das angegebene Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="1042e-190">Returns the type for the specified object.</span></span> <span data-ttu-id="1042e-191">Schreibgeschützte <b>ganze Zahl</b>.</span><span class="sxs-lookup"><span data-stu-id="1042e-191">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="1042e-192">Sie können eine ID-Beschriftung in anderen HTML-Dokumenten oder auf derselben Webseite als Hyperlinkverweis verwenden.</span><span class="sxs-lookup"><span data-stu-id="1042e-192">You can use an ID label as a hyperlink reference in other HTML documents or on the same Web page.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementLeft">
      <MemberSignature Language="C#" Value="public void IncrementLeft (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IncrementLeft([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.IncrementLeft(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncrementLeft (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncrementLeft(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1678)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment"><span data-ttu-id="1042e-193">Erforderlicher <b>Single</b>-Wert.</span><span class="sxs-lookup"><span data-stu-id="1042e-193">Required <b>Single</b>.</span></span> <span data-ttu-id="1042e-194">Gibt an, wie weit die Form horizontal in Punkt verschoben werden soll.</span><span class="sxs-lookup"><span data-stu-id="1042e-194">Specifies how far the shape is to be moved horizontally in points.</span></span> <span data-ttu-id="1042e-195">Ein positiver Wert verschiebt die Form nach rechts, ein negativer Wert verschiebt sie nach links.</span><span class="sxs-lookup"><span data-stu-id="1042e-195">A positive value moves the shape to the right; a negative value moves it to the left.</span></span></param>
        <summary><span data-ttu-id="1042e-196">Verschiebt die angegebene Form horizontal um die angegebene Punktanzahl.</span><span class="sxs-lookup"><span data-stu-id="1042e-196">Moves the specified shape horizontally by the specified number of points.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementRotation">
      <MemberSignature Language="C#" Value="public void IncrementRotation (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IncrementRotation([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.IncrementRotation(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncrementRotation (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncrementRotation(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1680)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment"><span data-ttu-id="1042e-197">Erforderlicher <b>Single</b>-Wert.</span><span class="sxs-lookup"><span data-stu-id="1042e-197">Required <b>Single</b>.</span></span> <span data-ttu-id="1042e-198">Gibt an, wie weit die Form horizontal in Grad gedreht werden soll.</span><span class="sxs-lookup"><span data-stu-id="1042e-198">Specifies how far the shape is to be rotated horizontally in degrees.</span></span> <span data-ttu-id="1042e-199">Ein positiver Wert dreht die Form im Uhrzeigersinn; ein negativer Wert gegen den Uhrzeigersinn gedreht.</span><span class="sxs-lookup"><span data-stu-id="1042e-199">A positive value rotates the shape clockwise; a negative value rotates it counterclockwise.</span></span></param>
        <summary><span data-ttu-id="1042e-200">Ändert die Drehung der angegebenen Form um die z-Achse um die angegebene Gradzahl.</span><span class="sxs-lookup"><span data-stu-id="1042e-200">Changes the rotation of the specified shape around the z-axis by the specified number of degrees.</span></span> <span data-ttu-id="1042e-201">Mit der <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange.Rotation" /> Eigenschaft können Sie die absolute Drehung der Form festlegen.</span><span class="sxs-lookup"><span data-stu-id="1042e-201">Use the <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange.Rotation" /> property to set the absolute rotation of the shape.</span></span></summary>
        <remarks><para><span data-ttu-id="1042e-202">Um eine dreidimensionale Form um die X-Achse oder die Y-Achse zu drehen, verwenden Sie die <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationX(System.Single)" /> Methode oder die <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationY(System.Single)" /> Methode.</span><span class="sxs-lookup"><span data-stu-id="1042e-202">To rotate a three-dimensional shape around the x-axis or the y-axis, use the <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationX(System.Single)" /> method or the <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationY(System.Single)" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementTop">
      <MemberSignature Language="C#" Value="public void IncrementTop (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IncrementTop([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.IncrementTop(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncrementTop (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncrementTop(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1681)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment"><span data-ttu-id="1042e-203">Erforderlicher <b>Single</b>-Wert.</span><span class="sxs-lookup"><span data-stu-id="1042e-203">Required <b>Single</b>.</span></span> <span data-ttu-id="1042e-204">Gibt an, wie weit das Formobjekt vertikal in Punkt verschoben werden soll.</span><span class="sxs-lookup"><span data-stu-id="1042e-204">Specifies how far the shape object is to be moved vertically in points.</span></span> <span data-ttu-id="1042e-205">Ein positiver Wert verschiebt die Form nach unten, ein negativer Wert verschiebt sie nach oben.</span><span class="sxs-lookup"><span data-stu-id="1042e-205">A positive value moves the shape down; a negative value moves it up.</span></span></param>
        <summary><span data-ttu-id="1042e-206">Verschiebt die angegebene Form vertikal um die angegebene Anzahl von Punkten.</span><span class="sxs-lookup"><span data-stu-id="1042e-206">Moves the specified shape vertically by the specified number of points.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape Item (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape Item([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Item (Index As Object) As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ Item(System::Object ^ Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="1042e-207">Required <b>-Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="1042e-207">Required <b>Object</b>.</span></span> <span data-ttu-id="1042e-208">Der Name oder die Indexnummer für das Objekt.</span><span class="sxs-lookup"><span data-stu-id="1042e-208">The name or index number for the object.</span></span></param>
        <summary><span data-ttu-id="1042e-209">Gibt ein einzelnes Objekt aus einer Auflistung zurück.</span><span class="sxs-lookup"><span data-stu-id="1042e-209">Returns a single object from a collection.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="1042e-210">Der Textname des Objekts ist der Wert der <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange.Name" /> und der <see cref="P:Microsoft.Office.Interop.Excel.Range.Value(System.Object)" /> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="1042e-210">The text name of the object is the value of the <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange.Name" /> and <see cref="P:Microsoft.Office.Interop.Excel.Range.Value(System.Object)" /> properties.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public float Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Left { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-211">Der Abstand zwischen dem linken Rand des Objekts und dem linken Rand von Spalte A (auf einem Arbeitsblatt) oder dem linken Rand des Diagrammbereichs (in einem Diagramm).</span><span class="sxs-lookup"><span data-stu-id="1042e-211">The distance from the left edge of the object to the left edge of column A (on a worksheet) or the left edge of the chart area (on a chart).</span></span> <span data-ttu-id="1042e-212">Lese-/Schreibzugriff <b>einzelnen</b>.</span><span class="sxs-lookup"><span data-stu-id="1042e-212">Read/write <b>Single</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Line">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.LineFormat Line { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.LineFormat Line" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Line" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Line As LineFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::LineFormat ^ Line { Microsoft::Office::Interop::Excel::LineFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(817)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(817)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.LineFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-213">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.LineFormat" /> Objekt zurück, das Linienformatierungseigenschaften für die angegebene Form enthält.</span><span class="sxs-lookup"><span data-stu-id="1042e-213">Returns a <see cref="T:Microsoft.Office.Interop.Excel.LineFormat" /> object that contains line formatting properties for the specified shape.</span></span> <span data-ttu-id="1042e-214">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1042e-214">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="1042e-215">Bei einer Linie stellt <b>das LineFormat -Objekt</b> die Linie selbst dar; für eine Form mit einem Rahmen stellt <b>das LineFormat -Objekt</b> den Rahmen dar.</span><span class="sxs-lookup"><span data-stu-id="1042e-215">For a line, the <b>LineFormat</b> object represents the line itself; for a shape with a border, the <b>LineFormat</b> object represents the border.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LockAspectRatio">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState LockAspectRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState LockAspectRatio" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.LockAspectRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property LockAspectRatio As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState LockAspectRatio { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1700)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1700)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1700)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-216"><b>True</b>, wenn für die angegebene Form bei einer Größenänderung deren ursprüngliche Proportionen beibehalten werden.</span><span class="sxs-lookup"><span data-stu-id="1042e-216"><b>True</b> if the specified shape retains its original proportions when you resize it.</span></span> <span data-ttu-id="1042e-217"><b>False</b>, wenn Sie bei einer Größenänderung die Höhe und Breite der Form unabhängig voneinander ändern können.</span><span class="sxs-lookup"><span data-stu-id="1042e-217"><b>False</b> if you can change the height and width of the shape independently of one another when you resize it.</span></span> <span data-ttu-id="1042e-218">Lese-/Schreibzugriff. <see cref="T:Microsoft.Office.Core.MsoTriState" /></span><span class="sxs-lookup"><span data-stu-id="1042e-218">Read/write <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-219">Gibt den Namen des Objekts zurück oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="1042e-219">Returns or sets the name of the object.</span></span> <span data-ttu-id="1042e-220"><b>String</b> -Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="1042e-220">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="1042e-221">Die folgende Tabelle enthält Beispielwerte der <b>Name</b>-Eigenschaft und verwandter Eigenschaften. Dabei wird von einer OLAP-Datenquelle mit dem eindeutigen Namen "[Europa].[Frankreich].[Paris]" und einer Nicht-OLAP-Datenquelle mit dem Elementnamen "Paris" ausgegangen.</span><span class="sxs-lookup"><span data-stu-id="1042e-221">The following table shows example values of the <b>Name</b> property and related properties given an OLAP data source with the unique name "[Europe].[France].[Paris]" and a non-OLAP data source with the item name "Paris".</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="1042e-222">
                <b>Caption</b>
              </span><span class="sxs-lookup"><span data-stu-id="1042e-222">
                <b>Caption</b>
              </span></span></term>
              <description><span data-ttu-id="1042e-223">Paris</span><span class="sxs-lookup"><span data-stu-id="1042e-223">Paris</span></span></description>
              <description><span data-ttu-id="1042e-224">Paris</span><span class="sxs-lookup"><span data-stu-id="1042e-224">Paris</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="1042e-225">
                <b>Name</b>
              </span><span class="sxs-lookup"><span data-stu-id="1042e-225">
                <b>Name</b>
              </span></span></term>
              <description><span data-ttu-id="1042e-226">[Europa].[Frankreich].[Paris] (schreibgeschützt)</span><span class="sxs-lookup"><span data-stu-id="1042e-226">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="1042e-227">Paris</span><span class="sxs-lookup"><span data-stu-id="1042e-227">Paris</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="1042e-228">
                <b>SourceName</b>
              </span><span class="sxs-lookup"><span data-stu-id="1042e-228">
                <b>SourceName</b>
              </span></span></term>
              <description><span data-ttu-id="1042e-229">[Europa].[Frankreich].[Paris] (schreibgeschützt)</span><span class="sxs-lookup"><span data-stu-id="1042e-229">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="1042e-230">(Identisch mit SQL-Eigenschaftenwert, schreibgeschützt)</span><span class="sxs-lookup"><span data-stu-id="1042e-230">(Same as SQL property value, read-only)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="1042e-231">
                <b>Wert</b>
              </span><span class="sxs-lookup"><span data-stu-id="1042e-231">
                <b>Value</b>
              </span></span></term>
              <description><span data-ttu-id="1042e-232">[Europa].[Frankreich].[Paris] (schreibgeschützt)</span><span class="sxs-lookup"><span data-stu-id="1042e-232">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="1042e-233">Paris</span><span class="sxs-lookup"><span data-stu-id="1042e-233">Paris</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="1042e-234">Wenn Sie einen Index in der Auflistung angeben, können Sie <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> die in der folgenden Tabelle gezeigte Syntax verwenden.</span><span class="sxs-lookup"><span data-stu-id="1042e-234">When specifying an index into the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, you can use the syntax shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="1042e-235">Ausdruck. PivotItems("[Europe].[ Frankreich]. [Paris]")</span><span class="sxs-lookup"><span data-stu-id="1042e-235">expression.PivotItems("[Europe].[France].[Paris]")</span></span></term>
              <description><span data-ttu-id="1042e-236">Ausdruck. PivotItems("Paris")</span><span class="sxs-lookup"><span data-stu-id="1042e-236">expression.PivotItems("Paris")</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="1042e-237">Wenn Sie die Eigenschaft verwenden, um auf ein bestimmtes Element einer Auflistung zu verweisen, können Sie den Textindexnamen wie in der <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> folgenden Tabelle dargestellt verwenden.</span><span class="sxs-lookup"><span data-stu-id="1042e-237">When using the <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> property to reference a specific member of a collection, you can use the text index name as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="1042e-238">[Europa]. [Frankreich]. [Paris]</span><span class="sxs-lookup"><span data-stu-id="1042e-238">[Europe].[France].[Paris]</span></span></term>
              <description><span data-ttu-id="1042e-239">Paris</span><span class="sxs-lookup"><span data-stu-id="1042e-239">Paris</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShapeNodes Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ShapeNodes Nodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As ShapeNodes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ShapeNodes ^ Nodes { Microsoft::Office::Interop::Excel::ShapeNodes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1701)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1701)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShapeNodes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-240">Gibt eine <see cref="T:Microsoft.Office.Interop.Excel.ShapeNodes" /> Auflistung zurück, die die geometrische Beschreibung der angegebenen Form darstellt.</span><span class="sxs-lookup"><span data-stu-id="1042e-240">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ShapeNodes" /> collection that represents the geometric description of the specified shape.</span></span> <span data-ttu-id="1042e-241">Gilt für <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> Objekte, die Freihandzeichnungen darstellen.</span><span class="sxs-lookup"><span data-stu-id="1042e-241">Applies to <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objects that represent freeform drawings.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-242">Gibt das übergeordnete Objekt für das angegebene Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="1042e-242">Returns the parent object for the specified object.</span></span> <span data-ttu-id="1042e-243">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1042e-243">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape ParentGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shape ParentGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.ParentGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentGroup As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shape ^ ParentGroup { Microsoft::Office::Interop::Excel::Shape ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-244">Gibt ein Objekt zurück, das die allgemeine übergeordnete Form einer untergeordneten Form oder <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> eines Bereichs von untergeordneten Formen darstellt.</span><span class="sxs-lookup"><span data-stu-id="1042e-244">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the common parent shape of a child shape or a range of child shapes.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PickUp">
      <MemberSignature Language="C#" Value="public void PickUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PickUp() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.PickUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub PickUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PickUp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1682)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1042e-245">Kopiert die Formatierung der angegebenen Form.</span><span class="sxs-lookup"><span data-stu-id="1042e-245">Copies the formatting of the specified shape.</span></span> <span data-ttu-id="1042e-246">Verwenden Sie <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.Apply" /> die Methode, um die kopierte Formatierung auf eine andere Form anzuwenden.</span><span class="sxs-lookup"><span data-stu-id="1042e-246">Use the <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.Apply" /> method to apply the copied formatting to another shape.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PictureFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PictureFormat PictureFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PictureFormat PictureFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.PictureFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PictureFormat As PictureFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PictureFormat ^ PictureFormat { Microsoft::Office::Interop::Excel::PictureFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1631)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1631)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PictureFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-247">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.PictureFormat" /> Objekt zurück, das Bildformatierungseigenschaften für die angegebene Form enthält.</span><span class="sxs-lookup"><span data-stu-id="1042e-247">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PictureFormat" /> object that contains picture formatting properties for the specified shape.</span></span> <span data-ttu-id="1042e-248">Gilt für <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> Objekte, die Bilder oder OLE-Objekte darstellen.</span><span class="sxs-lookup"><span data-stu-id="1042e-248">Applies to <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objects that represent pictures or OLE objects.</span></span> <span data-ttu-id="1042e-249">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1042e-249">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reflection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.ReflectionFormat Reflection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.ReflectionFormat Reflection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Reflection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Reflection As ReflectionFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::ReflectionFormat ^ Reflection { Microsoft::Office::Core::ReflectionFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2664)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2664)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.ReflectionFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-250">Gibt ein <see cref="T:Microsoft.Office.Core.ReflectionFormat" /> Objekt für einen angegebenen Formbereich zurück, das Spiegelungsformatierungseigenschaften für den Formbereich enthält.</span><span class="sxs-lookup"><span data-stu-id="1042e-250">Returns a <see cref="T:Microsoft.Office.Core.ReflectionFormat" /> object for a specified shape range that contains reflection formatting properties for the shape range.</span></span> <span data-ttu-id="1042e-251">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1042e-251">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Core.ReflectionFormat" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Regroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape Regroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape Regroup() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Regroup" />
      <MemberSignature Language="VB.NET" Value="Public Function Regroup () As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ Regroup();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1744)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1042e-252">Stellt die Gruppe wieder her, der der angegebene Formbereich zuvor angehörte.</span><span class="sxs-lookup"><span data-stu-id="1042e-252">Regroups the group that the specified shape range belonged to previously.</span></span> <span data-ttu-id="1042e-253">Gibt die umgruppierten Formen als einzelnes Objekt <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="1042e-253">Returns the regrouped shapes as a single <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="1042e-254">Mit <b>der "Regroup"-Methode</b> wird nur die Gruppe für die erste zuvor in der angegebenen Auflistung gefundene form <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> wiederhergestellt.</span><span class="sxs-lookup"><span data-stu-id="1042e-254">The <b>Regroup</b> method only restores the group for the first previously grouped shape it finds in the specified <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> collection.</span></span> <span data-ttu-id="1042e-255">Wenn der angegebene Formbereich Formen, die zuvor zu unterschiedlichen Gruppen gehörten enthält, wird daher nur eine der Gruppen wiederhergestellt.</span><span class="sxs-lookup"><span data-stu-id="1042e-255">Therefore, if the specified shape range contains shapes that previously belonged to different groups, only one of the groups will be restored.</span></span></para>
          <para><span data-ttu-id="1042e-256">Da eine Gruppe von Formen als einzelne Form behandelt wird, ändert das Gruppieren und Aufheben der Gruppierung von Formen die Anzahl der Elemente in der Auflistung und die Indexnummern der Elemente, die nach den betroffenen Elementen in der Auflistung <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> stammen.</span><span class="sxs-lookup"><span data-stu-id="1042e-256">Note that, because a group of shapes is treated as a single shape, grouping and ungrouping shapes changes the number of items in the <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection and changes the index numbers of items that come after the affected items in the collection.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RerouteConnections">
      <MemberSignature Language="C#" Value="public void RerouteConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RerouteConnections() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.RerouteConnections" />
      <MemberSignature Language="VB.NET" Value="Public Sub RerouteConnections ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RerouteConnections();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1683)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1042e-257">Leitet Connectors, damit sie den kürzesten möglichen Weg zwischen den Shapes nutzen, die sie verbinden.</span><span class="sxs-lookup"><span data-stu-id="1042e-257">Reroutes connectors so that they take the shortest possible path between the shapes they connect.</span></span></summary>
        <remarks><para><span data-ttu-id="1042e-258">Zum Umleiten von Verbindungen kann die <b>RerouteConnections</b> -Methode die Enden einer Verbindung trennen und sie an verschiedene Verbindungsseiten an den verbundenen Shapes anbinden.</span><span class="sxs-lookup"><span data-stu-id="1042e-258">To reroute connectors, the <b>RerouteConnections</b> method may detach the ends of a connector and reattach them to different connecting sites on the connected shapes.</span></span> <span data-ttu-id="1042e-259">Diese Methode erstellt alle Verbindungen neu, die der angegebenen Form angefügt sind. Handelt es sich bei der angegebenen Form um eine Verbindung, wird sie neu erstellt.</span><span class="sxs-lookup"><span data-stu-id="1042e-259">This method reroutes all connectors attached to the specified shape; if the specified shape is a connector, it’s rerouted.</span></span></para>
          <para><span data-ttu-id="1042e-p149">Wenn diese Methode auf eine Verbindung angewendet wird, wird nur die betreffende Verbindung umgeleitet. Wenn die Methode auf eine verbundene Form angewendet wird, werden sämtliche Verbindungen zu der Form umgeleitet.</span><span class="sxs-lookup"><span data-stu-id="1042e-p149">If this method is applied to a connector, only that connector will be rerouted. If this method is applied to a connected shape, all connectors to that shape will be rerouted.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public float Rotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Rotation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Rotation" />
      <MemberSignature Language="VB.NET" Value="Public Property Rotation As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Rotation { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-262">Gibt die Drehung der Form in Grad zurück oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="1042e-262">Returns or sets the rotation of the shape in degrees.</span></span> <span data-ttu-id="1042e-263">Lese-/Schreibzugriff <b>einzelnen</b>.</span><span class="sxs-lookup"><span data-stu-id="1042e-263">Read/write <b>Single</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleHeight">
      <MemberSignature Language="C#" Value="public void ScaleHeight (float Factor, Microsoft.Office.Core.MsoTriState RelativeToOriginalSize, object Scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScaleHeight([in]float32 Factor, [in]valuetype Microsoft.Office.Core.MsoTriState RelativeToOriginalSize, [in]object Scale) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.ScaleHeight(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleHeight (Factor As Single, RelativeToOriginalSize As MsoTriState, Optional Scale As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1684)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Factor" Type="System.Single" />
        <Parameter Name="RelativeToOriginalSize" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="Scale" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Factor"><span data-ttu-id="1042e-264">Erforderlicher <b>Single</b>-Wert.</span><span class="sxs-lookup"><span data-stu-id="1042e-264">Required <b>Single</b>.</span></span> <span data-ttu-id="1042e-265">Gibt das Verhältnis zwischen der Höhe der Form nach der Änderung ihrer Größe und der aktuellen oder ursprünglichen Höhe an.</span><span class="sxs-lookup"><span data-stu-id="1042e-265">Specifies the ratio between the height of the shape after you resize it and the current or original height.</span></span> <span data-ttu-id="1042e-266">Beispiel: Um ein Rechteck um 50 Prozent zu vergrößern, geben Sie für dieses Argument 1,5 an.</span><span class="sxs-lookup"><span data-stu-id="1042e-266">For example, to make a rectangle 50 percent larger, specify 1.5 for this argument.</span></span></param>
        <param name="RelativeToOriginalSize"><span data-ttu-id="1042e-267">Erforderlich <see cref="T:Microsoft.Office.Core.MsoTriState" /> .</span><span class="sxs-lookup"><span data-stu-id="1042e-267">Required <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span> <span data-ttu-id="1042e-268">Mit  <b>msoTrue</b> wird die Form relativ zu ihrer Originalgröße skaliert.</span><span class="sxs-lookup"><span data-stu-id="1042e-268"><b>msoTrue</b> to scale the shape relative to its original size.</span></span> <span data-ttu-id="1042e-269">Mit <b>msoFalse</b> wird sie relativ zu ihrer aktuellen Größe skaliert.</span><span class="sxs-lookup"><span data-stu-id="1042e-269"><b>msoFalse</b> to scale it relative to its current size.</span></span> <span data-ttu-id="1042e-270">Sie können den Wert <b>msoTrue</b> für dieses Argument nur angeben, wenn es sich bei der angegebenen Form um ein Bild oder ein OLE-Objekt handelt.</span><span class="sxs-lookup"><span data-stu-id="1042e-270">You can specify <b>msoTrue</b> for this argument only if the specified shape is a picture or an OLE object.</span></span></param>
        <param name="Scale"><span data-ttu-id="1042e-271">Optional <see cref="T:Microsoft.Office.Core.MsoScaleFrom" /> .</span><span class="sxs-lookup"><span data-stu-id="1042e-271">Optional <see cref="T:Microsoft.Office.Core.MsoScaleFrom" />.</span></span> <span data-ttu-id="1042e-272">Gibt an, welcher Teil der Form beim Skalieren die Position beibehält.</span><span class="sxs-lookup"><span data-stu-id="1042e-272">Specifies which part of the shape retains its position when the shape is scaled.</span></span></param>
        <summary><span data-ttu-id="1042e-273">Skaliert die Höhe der Form anhand eines angegebenen Faktors.</span><span class="sxs-lookup"><span data-stu-id="1042e-273">Scales the height of the shape by a specified factor.</span></span></summary>
        <remarks><para><span data-ttu-id="1042e-274">Bei Bildern und OLE-Objekten können Sie angeben, ob die Form relativ zu ihrer ursprünglichen oder ihrer aktuellen Größe skaliert werden soll.</span><span class="sxs-lookup"><span data-stu-id="1042e-274">For pictures and OLE objects, you can indicate whether you want to scale the shape relative to the original or the current size.</span></span> <span data-ttu-id="1042e-275">Andere Formen als Bilder und OLE-Objekte werden immer relativ zu ihrer aktuellen Höhe skaliert.</span><span class="sxs-lookup"><span data-stu-id="1042e-275">Shapes other than pictures and OLE objects are always scaled relative to their current height.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleWidth">
      <MemberSignature Language="C#" Value="public void ScaleWidth (float Factor, Microsoft.Office.Core.MsoTriState RelativeToOriginalSize, object Scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScaleWidth([in]float32 Factor, [in]valuetype Microsoft.Office.Core.MsoTriState RelativeToOriginalSize, [in]object Scale) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.ScaleWidth(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleWidth (Factor As Single, RelativeToOriginalSize As MsoTriState, Optional Scale As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1688)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Factor" Type="System.Single" />
        <Parameter Name="RelativeToOriginalSize" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="Scale" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Factor"><span data-ttu-id="1042e-276">Erforderlicher <b>Single</b>-Wert.</span><span class="sxs-lookup"><span data-stu-id="1042e-276">Required <b>Single</b>.</span></span> <span data-ttu-id="1042e-277">Gibt das Verhältnis zwischen der Breite der Form nach der Änderung ihrer Größe und der aktuellen oder ursprünglichen Breite an.</span><span class="sxs-lookup"><span data-stu-id="1042e-277">Specifies the ratio between the width of the shape after you resize it and the current or original width.</span></span> <span data-ttu-id="1042e-278">Beispiel: Um ein Rechteck um 50 Prozent zu verbreitern, geben Sie für dieses Argument 1,5 an.</span><span class="sxs-lookup"><span data-stu-id="1042e-278">For example, to make a rectangle 50 percent larger, specify 1.5 for this argument.</span></span></param>
        <param name="RelativeToOriginalSize"><span data-ttu-id="1042e-279">Erforderlich <see cref="T:Microsoft.Office.Core.MsoTriState" /> .</span><span class="sxs-lookup"><span data-stu-id="1042e-279">Required <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span> <span data-ttu-id="1042e-280">Mit  <b>False</b> wird die Form relativ zu ihrer aktuellen Größe skaliert.</span><span class="sxs-lookup"><span data-stu-id="1042e-280"><b>False</b> to scale it relative to its current size.</span></span> <span data-ttu-id="1042e-281">Sie können den Wert <b>True</b> für dieses Argument nur angeben, wenn es sich bei der angegebenen Form um ein Bild oder ein OLE-Objekt handelt.</span><span class="sxs-lookup"><span data-stu-id="1042e-281">You can specify <b>True</b> for this argument only if the specified shape is a picture or an OLE object.</span></span></param>
        <param name="Scale"><span data-ttu-id="1042e-282">Optional <see cref="T:Microsoft.Office.Core.MsoScaleFrom" /> .</span><span class="sxs-lookup"><span data-stu-id="1042e-282">Optional <see cref="T:Microsoft.Office.Core.MsoScaleFrom" />.</span></span> <span data-ttu-id="1042e-283">Gibt an, welcher Teil der Form beim Skalieren die Position beibehält.</span><span class="sxs-lookup"><span data-stu-id="1042e-283">Specifies which part of the shape retains its position when the shape is scaled.</span></span></param>
        <summary><span data-ttu-id="1042e-284">Skaliert die Breite der Form anhand eines angegebenen Faktors.</span><span class="sxs-lookup"><span data-stu-id="1042e-284">Scales the width of the shape by a specified factor.</span></span></summary>
        <remarks><para><span data-ttu-id="1042e-285">Bei Bildern und OLE-Objekten können Sie angeben, ob die Form relativ zu ihrer ursprünglichen oder ihrer aktuellen Größe skaliert werden soll.</span><span class="sxs-lookup"><span data-stu-id="1042e-285">For pictures and OLE objects, you can indicate whether you want to scale the shape relative to the original or the current size.</span></span> <span data-ttu-id="1042e-286">Andere Formen als Bilder und OLE-Objekte werden immer relativ zu ihrer aktuellen Breite skaliert.</span><span class="sxs-lookup"><span data-stu-id="1042e-286">Shapes other than pictures and OLE objects are always scaled relative to their current width.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace"><span data-ttu-id="1042e-287">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="1042e-287">Optional <b>Object</b>.</span></span> <span data-ttu-id="1042e-288">Das zu ersetzende Objekt.</span><span class="sxs-lookup"><span data-stu-id="1042e-288">The object to replace.</span></span></param>
        <summary><span data-ttu-id="1042e-289">Markiert das Objekt.</span><span class="sxs-lookup"><span data-stu-id="1042e-289">Selects the object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShapesDefaultProperties">
      <MemberSignature Language="C#" Value="public void SetShapesDefaultProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetShapesDefaultProperties() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.SetShapesDefaultProperties" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetShapesDefaultProperties ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetShapesDefaultProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1689)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1042e-290">Übernimmt die Formatierung der angegebenen Form als Standardformatierung für die Form.</span><span class="sxs-lookup"><span data-stu-id="1042e-290">Makes the formatting of the specified shape the default formatting for the shape.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shadow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShadowFormat Shadow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ShadowFormat Shadow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Shadow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Shadow As ShadowFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ShadowFormat ^ Shadow { Microsoft::Office::Interop::Excel::ShadowFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShadowFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-291"><b>True,</b> Wenn die Schriftart eine Schattenschriftart ist oder das Objekt einen Schatten hat.</span><span class="sxs-lookup"><span data-stu-id="1042e-291"><b>True</b> if the font is a shadow font or if the object has a shadow.</span></span> <span data-ttu-id="1042e-292"><b>Boolescher</b> Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="1042e-292">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShapeStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoShapeStyleIndex ShapeStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoShapeStyleIndex ShapeStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.ShapeStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ShapeStyle As MsoShapeStyleIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoShapeStyleIndex ShapeStyle { Microsoft::Office::Core::MsoShapeStyleIndex get(); void set(Microsoft::Office::Core::MsoShapeStyleIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2660)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoShapeStyleIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-293">Gibt einen Wert zurück, der <see cref="T:Microsoft.Office.Core.MsoShapeStyleIndex" /> die Formart für einen Formbereich darstellt, oder legt den Wert fest.</span><span class="sxs-lookup"><span data-stu-id="1042e-293">Returns or sets a <see cref="T:Microsoft.Office.Core.MsoShapeStyleIndex" /> that represents shape style for a shape range.</span></span> <span data-ttu-id="1042e-294">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="1042e-294">Read/write.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Core.MsoShapeStyleIndex" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoftEdge">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SoftEdgeFormat SoftEdge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SoftEdgeFormat SoftEdge" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.SoftEdge" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoftEdge As SoftEdgeFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SoftEdgeFormat ^ SoftEdge { Microsoft::Office::Core::SoftEdgeFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2662)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2662)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SoftEdgeFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-295">Gibt ein Objekt zurück, das Formatierungseigenschaften für weiche Kanten für einen angegebenen Formbereich enthält.</span><span class="sxs-lookup"><span data-stu-id="1042e-295">Returns an object that contains soft edge formatting properties for a specified shape range.</span></span> <span data-ttu-id="1042e-296">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1042e-296">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Core.SoftEdgeFormat" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextEffect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TextEffectFormat TextEffect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TextEffectFormat TextEffect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.TextEffect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextEffect As TextEffectFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TextEffectFormat ^ TextEffect { Microsoft::Office::Interop::Excel::TextEffectFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1702)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1702)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TextEffectFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-297">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.TextEffectFormat" /> Objekt zurück, das Formatierungseigenschaften des Texteffekts für die angegebene Form enthält.</span><span class="sxs-lookup"><span data-stu-id="1042e-297">Returns a <see cref="T:Microsoft.Office.Interop.Excel.TextEffectFormat" /> object that contains text-effect formatting properties for the specified shape.</span></span> <span data-ttu-id="1042e-298">Gilt für <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> Objekte, die WordArt darstellen.</span><span class="sxs-lookup"><span data-stu-id="1042e-298">Applies to <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> objects that represent WordArt.</span></span> <span data-ttu-id="1042e-299">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1042e-299">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFrame">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TextFrame TextFrame { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TextFrame TextFrame" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.TextFrame" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextFrame As TextFrame" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TextFrame ^ TextFrame { Microsoft::Office::Interop::Excel::TextFrame ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1692)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1692)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TextFrame</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-300">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.TextFrame" /> Objekt zurück, das die Ausrichtungs- und Verankerungseigenschaften für den angegebenen Formbereich enthält.</span><span class="sxs-lookup"><span data-stu-id="1042e-300">Returns a <see cref="T:Microsoft.Office.Interop.Excel.TextFrame" /> object that contains the alignment and anchoring properties for the specified shape range.</span></span> <span data-ttu-id="1042e-301">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1042e-301">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.TextFrame" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFrame2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TextFrame2 TextFrame2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TextFrame2 TextFrame2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.TextFrame2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextFrame2 As TextFrame2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TextFrame2 ^ TextFrame2 { Microsoft::Office::Interop::Excel::TextFrame2 ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2659)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2659)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TextFrame2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-302">Gibt ein Objekt zurück, das Textformatierung für den angegebenen Formbereich enthält.</span><span class="sxs-lookup"><span data-stu-id="1042e-302">Returns an object that contains text formatting for the specified shape range.</span></span> <span data-ttu-id="1042e-303">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1042e-303">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.TextFrame2" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreeD">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ThreeDFormat ThreeD { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ThreeDFormat ThreeD" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.ThreeD" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreeD As ThreeDFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ThreeDFormat ^ ThreeD { Microsoft::Office::Interop::Excel::ThreeDFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1703)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1703)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ThreeDFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-304">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> Objekt zurück, das Formatierungseigenschaften des 3D-Effekts für die angegebene Form enthält.</span><span class="sxs-lookup"><span data-stu-id="1042e-304">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object that contains 3-D – effect formatting properties for the specified shape.</span></span> <span data-ttu-id="1042e-305">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1042e-305">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-306">Ruft den Titel des alternativen Texts ab, der dem angegebenen Formbereich zugeordnet ist, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="1042e-306">Gets or sets the title of the alternative text associated with the specified shape range.</span></span></summary>
        <value><span data-ttu-id="1042e-307">Der Titel des alternativen Texts, der dem angegebenen Formbereich zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="1042e-307">The title of the alternative text associated with the specified shape range.</span></span></value>
        <remarks><para><span data-ttu-id="1042e-308">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="1042e-308">Read/write.</span></span></para>
          <para><span data-ttu-id="1042e-309">Verwenden Sie die Eigenschaft, um die beschreibende Textzeichenfolge des alternativen Texts für einen Formbereich <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange.AlternativeText" /> festlegen.</span><span class="sxs-lookup"><span data-stu-id="1042e-309">To set the descriptive text string of the alternative text for a shape range, use the <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange.AlternativeText" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public float Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Top { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-310">Der Abstand zwischen dem oberen Rand der obersten Form im Formbereich und dem oberen Rand des Arbeitsblatts.</span><span class="sxs-lookup"><span data-stu-id="1042e-310">The distance from the top edge of the topmost shape in the shape range to the top edge of the worksheet.</span></span> <span data-ttu-id="1042e-311">Lese-/Schreibzugriff <b>einzelnen</b>.</span><span class="sxs-lookup"><span data-stu-id="1042e-311">Read/write <b>Single</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoShapeType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoShapeType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As MsoShapeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoShapeType Type { Microsoft::Office::Core::MsoShapeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoShapeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-312">Gibt den Formtyp zurück oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="1042e-312">Returns or sets the shape type.</span></span> <span data-ttu-id="1042e-313"><see cref="T:Microsoft.Office.Core.MsoShapeType" />Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1042e-313">Read-only <see cref="T:Microsoft.Office.Core.MsoShapeType" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ungroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShapeRange Ungroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.ShapeRange Ungroup() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.Ungroup" />
      <MemberSignature Language="VB.NET" Value="Public Function Ungroup () As ShapeRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::ShapeRange ^ Ungroup();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(244)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShapeRange</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1042e-314">Hebt die Gruppierung aller gruppierten Formen in der angegebenen Form oder einen Bereich von Formen.</span><span class="sxs-lookup"><span data-stu-id="1042e-314">Ungroups any grouped shapes in the specified shape or range of shapes.</span></span> <span data-ttu-id="1042e-315">Zerlegt Bilder und OLE-Objekte innerhalb der angegebenen Form oder einen Bereich von Formen.</span><span class="sxs-lookup"><span data-stu-id="1042e-315">Disassembles pictures and OLE objects within the specified shape or range of shapes.</span></span> <span data-ttu-id="1042e-316">Gibt die formen ohne Gruppierung als einzelnes Objekt <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="1042e-316">Returns the ungrouped shapes as a single <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="1042e-317">Da eine Gruppe von Formen als einzelnes Objekt behandelt wird, ändert das Gruppieren und Aufheben der Gruppierung von Formen die Anzahl der Elemente in der Auflistung und die Indexnummern der Elemente, die nach den betroffenen Elementen in der Auflistung <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> stammen.</span><span class="sxs-lookup"><span data-stu-id="1042e-317">Because a group of shapes is treated as a single object, grouping and ungrouping shapes changes the number of items in the <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection and changes the index numbers of items that come after the affected items in the collection.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalFlip">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState VerticalFlip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState VerticalFlip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.VerticalFlip" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalFlip As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState VerticalFlip { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1704)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1704)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-318"><b>True</b>, wenn die angegebene Form um die vertikale Achse gedreht wurde.</span><span class="sxs-lookup"><span data-stu-id="1042e-318"><b>True</b> if the specified shape is flipped around the vertical axis.</span></span> <span data-ttu-id="1042e-319"><see cref="T:Microsoft.Office.Core.MsoTriState" />Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1042e-319">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertices">
      <MemberSignature Language="C#" Value="public object Vertices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Vertices" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Vertices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Vertices As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Vertices { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(621)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(621)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-320">Gibt die Koordinaten der Scheitelpunkte der angegebenen Freihandform (und der Kontrollpunkte für Bézierkurven) als Folge von Koordinatenpaaren zurück.</span><span class="sxs-lookup"><span data-stu-id="1042e-320">Returns the coordinates of the specified freeform drawing's vertices (and control points for Bézier curves) as a series of coordinate pairs.</span></span> <span data-ttu-id="1042e-321">Read-only- <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="1042e-321">Read-only <b>Object</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="1042e-322">Sie können das von dieser Eigenschaft zurückgegebene Array als Argument für die <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddCurve(System.Object)" /> Methode oder Methode <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddPolyline(System.Object)" /> verwenden.</span><span class="sxs-lookup"><span data-stu-id="1042e-322">You can use the array returned by this property as an argument to the <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddCurve(System.Object)" /> method or <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddPolyline(System.Object)" /> method.</span></span></para>
          <para><span data-ttu-id="1042e-323">Die folgende Tabelle zeigt, wie die <b>Vertices</b>-Eigenschaft die Werte im vertArray()-Array mit den Koordinaten der Scheitelpunkte eines Dreiecks verknüpft.</span><span class="sxs-lookup"><span data-stu-id="1042e-323">The following table shows how the <b>Vertices</b> property associates the values in the array vertArray() with the coordinates of a triangle's vertices.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="1042e-324">vertArray(1, 1)</span><span class="sxs-lookup"><span data-stu-id="1042e-324">vertArray(1, 1)</span></span></term>
              <description><span data-ttu-id="1042e-325">Der horizontale Abstand zwischen dem ersten Scheitelpunkt und der linken Seite des Dokuments</span><span class="sxs-lookup"><span data-stu-id="1042e-325">The horizontal distance from the first vertex to the left side of the document</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="1042e-326">vertArray(1, 2)</span><span class="sxs-lookup"><span data-stu-id="1042e-326">vertArray(1, 2)</span></span></term>
              <description><span data-ttu-id="1042e-327">Der vertikale Abstand zwischen dem ersten Scheitelpunkt und der oberen Seite des Dokuments</span><span class="sxs-lookup"><span data-stu-id="1042e-327">The vertical distance from the first vertex to the top of the document</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="1042e-328">vertArray(2, 1)</span><span class="sxs-lookup"><span data-stu-id="1042e-328">vertArray(2, 1)</span></span></term>
              <description><span data-ttu-id="1042e-329">Der horizontale Abstand zwischen dem zweiten Scheitelpunkt und der linken Seite des Dokuments</span><span class="sxs-lookup"><span data-stu-id="1042e-329">The horizontal distance from the second vertex to the left side of the document</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="1042e-330">vertArray(2, 2)</span><span class="sxs-lookup"><span data-stu-id="1042e-330">vertArray(2, 2)</span></span></term>
              <description><span data-ttu-id="1042e-331">Der vertikale Abstand zwischen dem zweiten Scheitelpunkt und der oberen Seite des Dokuments</span><span class="sxs-lookup"><span data-stu-id="1042e-331">The vertical distance from the second vertex to the top of the document</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="1042e-332">vertArray(3, 1)</span><span class="sxs-lookup"><span data-stu-id="1042e-332">vertArray(3, 1)</span></span></term>
              <description><span data-ttu-id="1042e-333">Der horizontale Abstand zwischen dem dritten Scheitelpunkt und der linken Seite des Dokuments</span><span class="sxs-lookup"><span data-stu-id="1042e-333">The horizontal distance from the third vertex to the left side of the document</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="1042e-334">vertArray(3, 2)</span><span class="sxs-lookup"><span data-stu-id="1042e-334">vertArray(3, 2)</span></span></term>
              <description><span data-ttu-id="1042e-335">Der vertikale Abstand zwischen dem dritten Scheitelpunkt und der oberen Seite des Dokuments</span><span class="sxs-lookup"><span data-stu-id="1042e-335">The vertical distance from the third vertex to the top of the document</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState Visible { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-336">Bestimmt, ob das Objekt sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="1042e-336">Determines whether the object is visible.</span></span> <span data-ttu-id="1042e-337">Lese-/Schreibzugriff. <see cref="T:Microsoft.Office.Core.MsoTriState" /></span><span class="sxs-lookup"><span data-stu-id="1042e-337">Read/write <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public float Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Width { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-338">Die Breite des Objekts.</span><span class="sxs-lookup"><span data-stu-id="1042e-338">The width of the object.</span></span> <span data-ttu-id="1042e-339">Lese-/Schreibzugriff <b>einzelnen</b>.</span><span class="sxs-lookup"><span data-stu-id="1042e-339">Read/write <b>Single</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZOrder">
      <MemberSignature Language="C#" Value="public void ZOrder (Microsoft.Office.Core.MsoZOrderCmd ZOrderCmd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ZOrder([in]valuetype Microsoft.Office.Core.MsoZOrderCmd ZOrderCmd) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ShapeRange.ZOrder(Microsoft.Office.Core.MsoZOrderCmd)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ZOrder (ZOrderCmd As MsoZOrderCmd)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ZOrder(Microsoft::Office::Core::MsoZOrderCmd ZOrderCmd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(622)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ZOrderCmd" Type="Microsoft.Office.Core.MsoZOrderCmd" />
      </Parameters>
      <Docs>
        <param name="ZOrderCmd"><span data-ttu-id="1042e-340">Erforderlich <see cref="T:Microsoft.Office.Core.MsoZOrderCmd" /> .</span><span class="sxs-lookup"><span data-stu-id="1042e-340">Required <see cref="T:Microsoft.Office.Core.MsoZOrderCmd" />.</span></span> <span data-ttu-id="1042e-341">Legt fest, wohin die angegebene Form relativ zu den anderen Formen verschoben werden soll.</span><span class="sxs-lookup"><span data-stu-id="1042e-341">Specifies where to move the specified shape relative to the other shapes.</span></span></param>
        <summary><span data-ttu-id="1042e-342">Verschiebt die angegebene Form vor oder hinter andere Formen in der Sammlung (d. h. ändert die Position der Form in der Z-Reihenfolge).</span><span class="sxs-lookup"><span data-stu-id="1042e-342">Moves the specified shape in front of or behind other shapes in the collection (that is, changes the shape's position in the z-order).</span></span></summary>
        <remarks><para><span data-ttu-id="1042e-343">Verwenden Sie die Eigenschaft, um die aktuelle Position eines <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange.ZOrderPosition" /> Shapes in der Z-Reihenfolge zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="1042e-343">Use the <see cref="P:Microsoft.Office.Interop.Excel.ShapeRange.ZOrderPosition" /> property to determine a shape's current position in the z-order.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ZOrderPosition">
      <MemberSignature Language="C#" Value="public int ZOrderPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ZOrderPosition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ShapeRange.ZOrderPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ZOrderPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ZOrderPosition { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1705)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1705)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1042e-344">Gibt die Position der angegebenen Form in der Z-Ordnung zurück.</span><span class="sxs-lookup"><span data-stu-id="1042e-344">Returns the position of the specified shape in the z-order.</span></span> <span data-ttu-id="1042e-345">Schreibgeschützte <b>ganze Zahl</b>.</span><span class="sxs-lookup"><span data-stu-id="1042e-345">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="1042e-346">Verwenden Sie die Methode, um die Position des Shapes in der Z-Reihenfolge <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.ZOrder(Microsoft.Office.Core.MsoZOrderCmd)" /> zu setzen.</span><span class="sxs-lookup"><span data-stu-id="1042e-346">To set the shape's position in the z-order, use the <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.ZOrder(Microsoft.Office.Core.MsoZOrderCmd)" /> method.</span></span></para>
          <para><span data-ttu-id="1042e-347">Die Position eines Shapes in der Z-Reihenfolge entspricht der Indexnummer des Shapes in der <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="1042e-347">A shape's position in the z-order corresponds to the shape's index number in the <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection.</span></span> <span data-ttu-id="1042e-348">Wenn beispielsweise in myDocument vier Formen vorhanden sind, gibt der Ausdruck myDocument.Shapes(1) die Form am Ende der Z-Reihenfolge und der Ausdruck myDocument.Shapes(4) die Form am Anfang der Z-Reihenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="1042e-348">For example, if there are four shapes on myDocument, the expression myDocument.Shapes(1) returns the shape at the back of the z-order, and the expression myDocument.Shapes(4) returns the shape at the front of the z-order.</span></span></para>
          <para><span data-ttu-id="1042e-349">Jede neue Form, die einem Dokument hinzugefügt wird, wird standardmäßig am Anfang der Z-Reihenfolge eingefügt.</span><span class="sxs-lookup"><span data-stu-id="1042e-349">Whenever you add a new shape to a collection, it’s added to the front of the z-order by default.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>