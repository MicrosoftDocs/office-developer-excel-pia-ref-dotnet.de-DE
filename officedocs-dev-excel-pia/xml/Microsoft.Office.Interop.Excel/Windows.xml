<Type Name="Windows" FullName="Microsoft.Office.Interop.Excel.Windows">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4e22f5c32e648c50b21962a902607fb0d77f69c0" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20574921" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Windows : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Windows implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Windows" />
  <TypeSignature Language="VB.NET" Value="Public Interface Windows&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Windows : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020892-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="23db2-101">Eine Auflistung aller der <see cref="T:Microsoft.Office.Interop.Excel.Window" /> -Objekte in Microsoft Excel.</span>
      <span class="sxs-lookup">
        <span data-stu-id="23db2-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Window" /> objects in Microsoft Excel.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="23db2-102">
        <para>Der <b>Windows</b> -Auflistung zurückgegeben, die durch die <see cref="P:Microsoft.Office.Interop.Excel._Application.Windows" /> -Eigenschaft des der <see cref="T:Microsoft.Office.Interop.Excel.Application" /> -Objekt enthält alle Fenster der Anwendung, während die von die <b>Windows</b> -Auflistung zurückgegeben der <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Windows" /> -Eigenschaft des der <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> -Objekt enthält nur die Fenster in der angegebenen Arbeitsmappe.</para>
        <para>Die <b>NewWindow</b> -Methode eines <b>Fensters</b> oder <b>Arbeitsmappe</b> -Objekts verwenden, um ein neues Fenster erstellen und der Auflistung hinzugefügt.</para>
        <para>Mithilfe von <b>Windows</b>(<paramref name="index" />), wobei <paramref name="index" /> ist der Fenstername oder die Indexzahl darstellt, um ein einzelnes <b>Window</b> -Objekt zurückzugeben.</para>
        <para>Beachten Sie, dass das aktive Fenster immer Windows(1) ist.</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="23db2-102">
          <para>The <b>Windows</b> collection returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.Windows" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object contains all the windows in the application, whereas the <b>Windows</b> collection returned by the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Windows" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object contains only the windows in the specified workbook.</para>
          <para>Use the <b>NewWindow</b> method of a <b>Window</b> or <b>Workbook</b> object to create a new window and add it to the collection.</para>
          <para>Use <b>Windows</b>(<paramref name="index" />), where <paramref name="index" /> is the window name or index number, to return a single <b>Window</b> object.</para>
          <para>Note that the active window is always Windows(1).</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Window this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Window _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Windows._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Window ^ default[System::Object ^] { Microsoft::Office::Interop::Excel::Window ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Window</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="23db2-103">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-103">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Windows.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="23db2-104">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> -Objekt, das die Anwendung Microsoft Excel darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-104">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arrange">
      <MemberSignature Language="C#" Value="public object Arrange (Microsoft.Office.Interop.Excel.XlArrangeStyle ArrangeStyle = Microsoft.Office.Interop.Excel.XlArrangeStyle.xlArrangeStyleTiled, object ActiveWorkbook, object SyncHorizontal, object SyncVertical);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Arrange([in]valuetype Microsoft.Office.Interop.Excel.XlArrangeStyle ArrangeStyle, [in]object ActiveWorkbook, [in]object SyncHorizontal, [in]object SyncVertical) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Windows.Arrange(Microsoft.Office.Interop.Excel.XlArrangeStyle,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Arrange (Optional ArrangeStyle As XlArrangeStyle = Microsoft.Office.Interop.Excel.XlArrangeStyle.xlArrangeStyleTiled, Optional ActiveWorkbook As Object, Optional SyncHorizontal As Object, Optional SyncVertical As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(638)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ArrangeStyle" Type="Microsoft.Office.Interop.Excel.XlArrangeStyle" />
        <Parameter Name="ActiveWorkbook" Type="System.Object" />
        <Parameter Name="SyncHorizontal" Type="System.Object" />
        <Parameter Name="SyncVertical" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ArrangeStyle">
          <span data-ttu-id="23db2-105">Optionale <see cref="T:Microsoft.Office.Interop.Excel.XlArrangeStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-105">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlArrangeStyle" />.</span>
          </span>
        </param>
        <param name="ActiveWorkbook">
          <span data-ttu-id="23db2-106">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-106">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="23db2-107">
            <b>True</b> , wenn nur die sichtbaren Fenster der aktiven Arbeitsmappe angeordnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-107">
              <b>True</b> to arrange only the visible windows of the active workbook.</span>
          </span>
          <span data-ttu-id="23db2-108">
            <b>False</b> , wenn alle Fenster angeordnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-108">
              <b>False</b> to arrange all windows.</span>
          </span>
          <span data-ttu-id="23db2-109">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-109">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="SyncHorizontal">
          <span data-ttu-id="23db2-110">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-110">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="23db2-111">Ignoriert, wenn <paramref name="ActiveWorkbook" /><b>False</b> oder nicht angegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-111">Ignored if <paramref name="ActiveWorkbook" /> is <b>False</b> or omitted.</span>
          </span>
          <span data-ttu-id="23db2-112">
            <b>True</b> , wenn die Fenster der aktiven Arbeitsmappe beim horizontalen Bildlauf synchronisiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-112">
              <b>True</b> to synchronize the windows of the active workbook when scrolling horizontally.</span>
          </span>
          <span data-ttu-id="23db2-113">
            <b>"False"</b> nicht, wenn das Fenster synchronisiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-113">
              <b>False</b> not to synchronize the windows.</span>
          </span>
          <span data-ttu-id="23db2-114">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-114">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="SyncVertical">
          <span data-ttu-id="23db2-115">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-115">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="23db2-116">Ignoriert, wenn <paramref name="ActiveWorkbook" /><b>False</b> oder nicht angegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-116">Ignored if <paramref name="ActiveWorkbook" /> is <b>False</b> or omitted.</span>
          </span>
          <span data-ttu-id="23db2-117">
            <b>True</b> , wenn die Fenster der aktiven Arbeitsmappe beim vertikalen Bildlauf synchronisiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-117">
              <b>True</b> to synchronize the windows of the active workbook when scrolling vertically.</span>
          </span>
          <span data-ttu-id="23db2-118">
            <b>"False"</b> nicht, wenn das Fenster synchronisiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-118">
              <b>False</b> not to synchronize the windows.</span>
          </span>
          <span data-ttu-id="23db2-119">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-119">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="23db2-120">Ordnet die Fenster auf dem Bildschirm an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-120">Arranges the windows on the screen.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakSideBySide">
      <MemberSignature Language="C#" Value="public bool BreakSideBySide ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BreakSideBySide() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Windows.BreakSideBySide" />
      <MemberSignature Language="VB.NET" Value="Public Function BreakSideBySide () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool BreakSideBySide();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2248)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="23db2-121">Side-by-Side-Modus wird beendet, wenn zwei Fenster Side-by-Side-Modus werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-121">Ends side-by-side mode if two windows are in side-by-side mode.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareSideBySideWith">
      <MemberSignature Language="C#" Value="public bool CompareSideBySideWith (object WindowName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CompareSideBySideWith([in]object WindowName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Windows.CompareSideBySideWith(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareSideBySideWith (WindowName As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CompareSideBySideWith(System::Object ^ WindowName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2246)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="WindowName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="WindowName">
          <span data-ttu-id="23db2-122">Der Name des ein Fenster zu öffnen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-122">The name of a window to open.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="23db2-123">Öffnet zwei Fenster im Side-by-Side-Modus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-123">Opens two windows in side-by-side mode.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="23db2-124">
            <para>Sie können die <b>CompareSideBySideWith</b> -Methode mit können nicht verwenden die <see cref="T:Microsoft.Office.Interop.Excel._Application" /> Objekt oder die <see cref="P:Microsoft.Office.Interop.Excel._Application.ActiveWorkbook" /> Eigenschaft.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-124">
              <para>You cannot use the <b>CompareSideBySideWith</b> method with the <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object or the <see cref="P:Microsoft.Office.Interop.Excel._Application.ActiveWorkbook" /> property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Windows.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="23db2-125">Gibt die Anzahl der Objekte in der Auflistung zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-125">Returns the number of objects in the collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Windows.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="23db2-126">Gibt eine 32-Bit-Ganzzahl, die die Anwendung angibt, in der das Objekt erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-126">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="23db2-127">
            <para>Wenn das Objekt in Microsoft Excel erstellt wurde, gibt diese Eigenschaft die Zeichenfolge XCEL zurück, die die hexadezimale Zahl 5843454 c entspricht</para>
            <para>Die <b>Creator</b> -Eigenschaft wurde in Microsoft Excel für den Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen verfügt über entwickelt. Microsoft Excel verfügt beispielsweise über den erstellten Code XCEL.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-127">
              <para>If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</para>
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Windows.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Window Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Window Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Windows.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Window ^ Item[System::Object ^] { Microsoft::Office::Interop::Excel::Window ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Window</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="23db2-128">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-128">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="23db2-129">Der Name oder die Indexnummer des Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-129">The name or index number of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="23db2-130">Gibt ein einzelnes Objekt aus einer Auflistung zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-130">Returns a single object from a collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Windows.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="23db2-131">Gibt das übergeordnete Objekt für das angegebene Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-131">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPositionsSideBySide">
      <MemberSignature Language="C#" Value="public void ResetPositionsSideBySide ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetPositionsSideBySide() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Windows.ResetPositionsSideBySide" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetPositionsSideBySide ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetPositionsSideBySide();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2250)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="23db2-132">Setzt die Position von zwei Arbeitsblattfenstern, die nebeneinander verglichen werden, zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-132">Resets the position of two worksheet windows that are being compared side by side.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="23db2-133">
            <para>Verwenden Sie die <b>ResetPositionsSideBySide</b> -Methode zum Zurücksetzen der Position zweier Arbeitsblätter, die nebeneinander verglichen werden. Beispielsweise wenn ein Benutzer minimiert oder maximiert eines der beiden, setzt die <b>ResetPositionsSideBySide</b> -Methode die Anzeige, damit die beiden Fenster wieder nebeneinander angezeigt werden.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-133">
              <para>Use the <b>ResetPositionsSideBySide</b> method to reset the position of two worksheets that are being compared side by side. For example, if a user minimizes or maximizes one of the two worksheet windows being compared, the <b>ResetPositionsSideBySide</b> method resets the display so that the two windows are displayed side by side again.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncScrollingSideBySide">
      <MemberSignature Language="C#" Value="public bool SyncScrollingSideBySide { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SyncScrollingSideBySide" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Windows.SyncScrollingSideBySide" />
      <MemberSignature Language="VB.NET" Value="Public Property SyncScrollingSideBySide As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SyncScrollingSideBySide { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2249)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2249)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2249)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="23db2-p105">
            <b>True</b> aktiviert den gleichzeitigen Bildlauf in Fenstern, wenn Dokumente nebeneinander verglichen werden. <b>False</b> deaktiviert den gleichzeitigen Bildlauf in den Fenstern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23db2-p105">
              <b>True</b> enables scrolling the contents of windows at the same time when documents are being compared side by side. <b>False</b> disables scrolling the windows at the same time.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>