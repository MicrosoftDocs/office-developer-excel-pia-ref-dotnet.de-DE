<Type Name="IconCriterion" FullName="Microsoft.Office.Interop.Excel.IconCriterion">
  <Metadata><Meta Name="ms.openlocfilehash" Value="aeac399c7630a815bc10a17585c99b77cfcc3ff7" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50000232" /></Metadata><TypeSignature Language="C#" Value="public interface IconCriterion" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IconCriterion" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.IconCriterion" />
  <TypeSignature Language="VB.NET" Value="Public Interface IconCriterion" />
  <TypeSignature Language="C++ CLI" Value="public interface class IconCriterion" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024499-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fcab4-p101">Stellt das Kriterium für ein einzelnes Symbol in einem Symbolsatz dar. Das Kriterium gibt den Wertebereich und den Typ des Schwellenwerts an, die dem Symbol in einer Regel zur bedingten Formatierung von Symbolsätzen zugewiesen sind.</span><span class="sxs-lookup"><span data-stu-id="fcab4-p101">Represents the criterion for an individual icon in an icon set. The criterion specifies the range of values and the threshold type associated with the icon in an icon set conditional formatting rule.</span></span></summary>
    <remarks><para><span data-ttu-id="fcab4-103">Alle Kriterien für ein bedingtes Format für Symbolsatz sind in einer Auflistung <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" /> enthalten.</span><span class="sxs-lookup"><span data-stu-id="fcab4-103">All of the criteria for an icon set conditional format are contained in an <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" /> collection.</span></span> <span data-ttu-id="fcab4-104">Sie können auf die <b>IconCriterion</b>-Objekte in der Auflistung durch das Übergeben eines Index an die Auflistung zugreifen.</span><span class="sxs-lookup"><span data-stu-id="fcab4-104">You can access each <b>IconCriterion</b> object in the collection by passing an index into the collection.</span></span> <span data-ttu-id="fcab4-105">Detaillierte Informationen hierzu finden Sie im Beispiel.</span><span class="sxs-lookup"><span data-stu-id="fcab4-105">See the example for details.</span></span></para>
      <para> </para></remarks>
    <example><para><span data-ttu-id="fcab4-p103">Im folgenden Codebeispiel wird ein Bereich mit Zahlen dargestellt, die Testergebnisse darstellen. Anschließend wird auf den Bereich eine Regel zur bedingten Formatierung von Symbolsätzen angewendet. Der Typ des Symbolsatzes wird dann von den Standardsymbolen zu einem Symbolsatz mit fünf Pfeilen geändert. Schließlich wird der Typ des Schwellenwerts von Perzentil in eine hartcodierte Zahl geändert.</span><span class="sxs-lookup"><span data-stu-id="fcab4-p103">The following code example creates a range of numbers representing test scores and then applies an icon set conditional formatting rule to that range. The type of icon set is then changed from the default icons to a five-arrow icon set. Finally, the threshold type is modified from percentile to a hard-coded number.</span></span></para>
      <code>&lt;span class="label"&gt;Sub CreateIconSetCF()    Dim cfIconSet As IconSetCondition        'Fill cells with sample data    With ActiveSheet        .Range("C1") = 55        .Range("C2") = 92        .Range("C3") = 88        .Range("C4") = 77        .Range("C5") = 66        .Range("C6") = 93        .Range("C7") = 76        .Range("C8") = 80        .Range("C9") = 79        .Range("C10") = 83        .Range("C11") = 66        .Range("C12") = 74    End With        Range("C1:C12").Select          'Create an icon set conditional format for the created sample data range    Set cfIconSet = Selection.FormatConditions.AddIconSetCondition        'Change the icon set to a five-arrow icon set    cfIconSet.IconSet = ActiveWorkbook.IconSets(xl5Arrows)        'The IconCriterion collection contains all IconCriteria    'By indexing into the collection you can modify each criterion    With cfIconSet.IconCriteria(1)        .Type = xlConditionValueNumber        .Value = 0        .Operator = 7    End With    With cfIconSet.IconCriteria(2)        .Type = xlConditionValueNumber        .Value = 60        .Operator = 7    End With    With cfIconSet.IconCriteria(3)        .Type = xlConditionValueNumber        .Value = 70        .Operator = 7    End With    With cfIconSet.IconCriteria(4)        .Type = xlConditionValueNumber        .Value = 80        .Operator = 7    End With    With cfIconSet.IconCriteria(5)        .Type = xlConditionValueNumber        .Value = 90        .Operator = 7    End With        End Sub&lt;/span&gt;</code></example>
  </Docs>
  <Members>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlIcon Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlIcon Icon" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconCriterion.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As XlIcon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlIcon Icon { Microsoft::Office::Interop::Excel::XlIcon get(); void set(Microsoft::Office::Interop::Excel::XlIcon value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2747)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2747)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2747)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlIcon</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcab4-109">Ruft das Symbol für ein Kriterium in einer Regel zur bedingten Formatierung von Symbolsätzen ab oder legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="fcab4-109">Gets or sets the icon for a criterion in an icon set conditional formatting rule.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fcab4-110">Nachdem Sie die <b>Icon -Eigenschaft</b> für das Symbolkriterium in einer Regel zur bedingten Formatierung von Symbolen festgelegt haben, wird die Eigenschaft in <see cref="P:Microsoft.Office.Interop.Excel.IconSetCondition.IconSet" /> <b>xlCustomSet geändert.</b></span><span class="sxs-lookup"><span data-stu-id="fcab4-110">After you set the <b>Icon</b> property for the icon criterion in an icon set conditional formatting rule, the <see cref="P:Microsoft.Office.Interop.Excel.IconSetCondition.IconSet" /> property is changed to <b>xlCustomSet</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconCriterion.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcab4-111">Ruft einen Wert ab, der angibt, welchen Schwellenwert die Kriterien darstellt.</span><span class="sxs-lookup"><span data-stu-id="fcab4-111">Gets a value indicating which threshold the criteria represents.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fcab4-112">Bei einem Symbolsatz gibt diese Eigenschaft den Wert "1" für den kleinsten Schwellenwert zurück, "2" für den nächsten Schwellenwert usw.</span><span class="sxs-lookup"><span data-stu-id="fcab4-112">For an icon set, this property will return a value of "1" for the minimum threshold, "2" for the next threshold, and so on.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Operator">
      <MemberSignature Language="C#" Value="public int Operator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Operator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconCriterion.Operator" />
      <MemberSignature Language="VB.NET" Value="Public Property Operator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Operator { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcab4-113">Gibt eine der Konstanten der Enumeration zurück oder legt sie fest, die angibt, ob der Schwellenwert größer als oder gleich dem Schwellenwert <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" /> ist.</span><span class="sxs-lookup"><span data-stu-id="fcab4-113">Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" /> enumeration, which specifes if the threshold is "greater than" or "greater than or equal to" the threshold value.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fcab4-114">Bei einer Regel zur bedingten Formatierung von Symbolsätzen kann diese Eigenschaft nur auf eine der folgenden Konstanten festgelegt werden: <b>xlGreater</b> oder <b>xlGreaterEqual</b>.</span><span class="sxs-lookup"><span data-stu-id="fcab4-114">For an icon set conditional formatting rule, this property can be set to only one of the following two constants: <b>xlGreater</b> or <b>xlGreaterEqual</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlConditionValueTypes Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlConditionValueTypes Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconCriterion.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As XlConditionValueTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlConditionValueTypes Type { Microsoft::Office::Interop::Excel::XlConditionValueTypes get(); void set(Microsoft::Office::Interop::Excel::XlConditionValueTypes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlConditionValueTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcab4-115">Gibt eine der Konstanten der Enumeration zurück, die angibt, wie der Schwellenwert für einen <see cref="T:Microsoft.Office.Interop.Excel.XlConditionValueTypes" /> Symbolsatz bestimmt wird.</span><span class="sxs-lookup"><span data-stu-id="fcab4-115">Returns one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlConditionValueTypes" /> enumeration, which specifies how the threshold value for an icon set is determined.</span></span> <span data-ttu-id="fcab4-116">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fcab4-116">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fcab4-p105">Der Typ des Schwellenwerts für einen Symbolsatz kann eine Zahl, ein Prozentwert, eine Formel oder ein Quantil sein. Wenn Sie den Typ auf Quantil festlegen, wird der Schwellenwert mithilfe der Quantilfunktion in Excel bestimmt.</span><span class="sxs-lookup"><span data-stu-id="fcab4-p105">The type of threshold value for an icon set can be  a number, percent, formula, or percentile. Setting the type to percentile will use the Percentile function in Excel to determine the threshold value.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconCriterion.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcab4-119">Gibt den Schwellenwert für ein Symbol in einem bedingten Format zurück oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="fcab4-119">Returns or sets the threshold value for an icon in a conditional format.</span></span> <span data-ttu-id="fcab4-120"><b>Variant</b> mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="fcab4-120">Read/write <b>Variant</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fcab4-121">Sie können den Wert nur festlegen, wenn die Eigenschaft für das bedingte Format auf eine der folgenden Konstanten festgelegt <see cref="P:Microsoft.Office.Interop.Excel.IconCriterion.Type" /> ist: <b>xlConditionValueNumber</b>, <b>xlConditionValuePercent</b>, <b>xlConditionValuePercentile</b>oder <b>xlConditionValueFormula</b>.</span><span class="sxs-lookup"><span data-stu-id="fcab4-121">You can set the value only if the <see cref="P:Microsoft.Office.Interop.Excel.IconCriterion.Type" /> property for the conditional format is set to one of the following constants: <b>xlConditionValueNumber</b>, <b>xlConditionValuePercent</b>, <b>xlConditionValuePercentile</b>, or <b>xlConditionValueFormula</b>.</span></span></para>
          <para><span data-ttu-id="fcab4-122">Wenn es sich beim Typ des Schwellenwerts um eine Formel handelt, können Sie die Formel als Zeichenfolge <b>festlegen.</b></span><span class="sxs-lookup"><span data-stu-id="fcab4-122">If the type of threshold  is a formula, you can set the formula as a <b>String</b>.</span></span> <span data-ttu-id="fcab4-123">Die Formel muss eine einzelne Zahl zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="fcab4-123">The formula must return a single number.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>