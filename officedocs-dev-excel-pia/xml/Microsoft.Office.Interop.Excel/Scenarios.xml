<Type Name="Scenarios" FullName="Microsoft.Office.Interop.Excel.Scenarios">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ae2d83b0cebf35ca68c44e96b1d08c3bd0e82529" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50010465" /></Metadata><TypeSignature Language="C#" Value="public interface Scenarios : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Scenarios implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Scenarios" />
  <TypeSignature Language="VB.NET" Value="Public Interface Scenarios&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Scenarios : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020896-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5eda9-101">Eine Auflistung aller Objekte <see cref="T:Microsoft.Office.Interop.Excel.Scenario" /> im angegebenen Arbeitsblatt.</span><span class="sxs-lookup"><span data-stu-id="5eda9-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Scenario" /> objects on the specified worksheet.</span></span> <span data-ttu-id="5eda9-102">Ein Szenario ist eine Gruppe von Eingabewerten (so <paramref name="changing cells" /> genannte), die benannt und gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="5eda9-102">A scenario is a group of input values (called <paramref name="changing cells" />) that’s named and saved.</span></span></summary>
    <remarks><para><span data-ttu-id="5eda9-103">Verwenden Sie die <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Scenarios(System.Object)" /> Methode, um die <b>Scenarios -Auflistung zurück.</b></span><span class="sxs-lookup"><span data-stu-id="5eda9-103">Use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Scenarios(System.Object)" /> method to return the <b>Scenarios</b> collection.</span></span></para>
      <para><span data-ttu-id="5eda9-104">Verwenden Sie <see cref="M:Microsoft.Office.Interop.Excel.Scenarios.Add(System.String,System.Object,System.Object,System.Object,System.Object,System.Object)" /> die Methode, um ein neues Szenario zu erstellen und der Auflistung hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="5eda9-104">Use the <see cref="M:Microsoft.Office.Interop.Excel.Scenarios.Add(System.String,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to create a new scenario and add it to the collection.</span></span></para>
      <para><span data-ttu-id="5eda9-105">Verwenden <b>Sie Szenarien</b>( ), wobei der <paramref name="index" /> <paramref name="index" /> Szenarioname oder die Indexnummer, um ein einzelnes <b>Szenarioobjekt zurück.</b></span><span class="sxs-lookup"><span data-stu-id="5eda9-105">Use <b>Scenarios</b>(<paramref name="index" />), where <paramref name="index" /> is the scenario name or index number, to return a single <b>Scenario</b> object.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Scenario Add (string Name, object ChangingCells, object Values, object Comment, object Locked, object Hidden);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Scenario Add([in]string Name, [in]object ChangingCells, [in]object Values, [in]object Comment, [in]object Locked, [in]object Hidden) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Scenarios.Add(System.String,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Name As String, ChangingCells As Object, Optional Values As Object, Optional Comment As Object, Optional Locked As Object, Optional Hidden As Object) As Scenario" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Scenario</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="ChangingCells" Type="System.Object" />
        <Parameter Name="Values" Type="System.Object" />
        <Parameter Name="Comment" Type="System.Object" />
        <Parameter Name="Locked" Type="System.Object" />
        <Parameter Name="Hidden" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="5eda9-106"><b>String</b> erforderlich.</span><span class="sxs-lookup"><span data-stu-id="5eda9-106">Required <b>String</b>.</span></span> <span data-ttu-id="5eda9-107">Der Name des Szenarios.</span><span class="sxs-lookup"><span data-stu-id="5eda9-107">The scenario name.</span></span></param>
        <param name="ChangingCells"><span data-ttu-id="5eda9-108">Required <b>-Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="5eda9-108">Required <b>Object</b>.</span></span> <span data-ttu-id="5eda9-109">Ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, das auf die sich ändernden Zellen für das Szenario verweist.</span><span class="sxs-lookup"><span data-stu-id="5eda9-109">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that refers to the changing cells for the scenario.</span></span></param>
        <param name="Values"><span data-ttu-id="5eda9-110">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="5eda9-110">Optional <b>Object</b>.</span></span> <span data-ttu-id="5eda9-111">Ein Array, das die Szenariowerte für die Zellen in <paramref name="ChangingCells" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="5eda9-111">An array that contains the scenario values for the cells in <paramref name="ChangingCells" />.</span></span> <span data-ttu-id="5eda9-112">Wenn dieses Argument nicht angegeben wird, werden die Szenariowerte als die aktuellen Werte in den Zellen in <paramref name="ChangingCells" /> angenommen.</span><span class="sxs-lookup"><span data-stu-id="5eda9-112">If this argument is omitted, the scenario values are assumed to be the current values in the cells in <paramref name="ChangingCells" />.</span></span></param>
        <param name="Comment"><span data-ttu-id="5eda9-113">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="5eda9-113">Optional <b>Object</b>.</span></span> <span data-ttu-id="5eda9-114">Eine Zeichenfolge, die einen Kommentar für das Szenario angibt.</span><span class="sxs-lookup"><span data-stu-id="5eda9-114">A string that specifies comment text for the scenario.</span></span> <span data-ttu-id="5eda9-115">Wenn ein neues Szenario hinzugefügt wird, werden der Autorenname und das Datum automatisch am Anfang des Kommentars hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="5eda9-115">When a new scenario is added, the author's name and date are automatically added at the beginning of the comment text.</span></span></param>
        <param name="Locked"><span data-ttu-id="5eda9-116">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="5eda9-116">Optional <b>Object</b>.</span></span> <span data-ttu-id="5eda9-117">Mit <b>True</b> wird das Szenario gesperrt, um Änderungen zu verhindern.</span><span class="sxs-lookup"><span data-stu-id="5eda9-117"><b>True</b> to lock the scenario to prevent changes.</span></span> <span data-ttu-id="5eda9-118">Der Standardwert ist <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="5eda9-118">The default value is <b>True</b>.</span></span></param>
        <param name="Hidden"><span data-ttu-id="5eda9-119">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="5eda9-119">Optional <b>Object</b>.</span></span> <span data-ttu-id="5eda9-120">Mit <b>True</b> wird das Szenario ausgeblendet.</span><span class="sxs-lookup"><span data-stu-id="5eda9-120"><b>True</b> to hide the scenario.</span></span> <span data-ttu-id="5eda9-121">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="5eda9-121">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="5eda9-122">Erstellt ein neues Szenario und fügt es der für das aktuelle Arbeitsblatt verfügbaren Szenarioliste hinzu.</span><span class="sxs-lookup"><span data-stu-id="5eda9-122">Creates a new scenario and adds it to the list of scenarios that are available for the current worksheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="5eda9-123">Der Name eines Szenarios muss eindeutig sein. Microsoft Excel gibt eine Fehlermeldung aus, wenn Sie ein Szenario mit einem bereits verwendeten Namen erstellen möchten.</span><span class="sxs-lookup"><span data-stu-id="5eda9-123">A scenario name must be unique; Microsoft Excel generates an error if you try to create a scenario with a name that's already in use.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Scenarios.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5eda9-124">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> Objekt zurück, das die Microsoft Excel-Anwendung darstellt.</span><span class="sxs-lookup"><span data-stu-id="5eda9-124">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Scenarios.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5eda9-125">Gibt die Anzahl der Objekte in der Auflistung zurück.</span><span class="sxs-lookup"><span data-stu-id="5eda9-125">Returns the number of objects in the collection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSummary">
      <MemberSignature Language="C#" Value="public object CreateSummary (Microsoft.Office.Interop.Excel.XlSummaryReportType ReportType = Microsoft.Office.Interop.Excel.XlSummaryReportType.xlStandardSummary, object ResultCells);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateSummary([in]valuetype Microsoft.Office.Interop.Excel.XlSummaryReportType ReportType, [in]object ResultCells) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Scenarios.CreateSummary(Microsoft.Office.Interop.Excel.XlSummaryReportType,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSummary (Optional ReportType As XlSummaryReportType = Microsoft.Office.Interop.Excel.XlSummaryReportType.xlStandardSummary, Optional ResultCells As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(913)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ReportType" Type="Microsoft.Office.Interop.Excel.XlSummaryReportType" />
        <Parameter Name="ResultCells" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ReportType"><span data-ttu-id="5eda9-126">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSummaryReportType" /> .</span><span class="sxs-lookup"><span data-stu-id="5eda9-126">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSummaryReportType" />.</span></span></param>
        <param name="ResultCells"><span data-ttu-id="5eda9-127">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="5eda9-127">Optional <b>Object</b>.</span></span> <span data-ttu-id="5eda9-128">Ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, das die Ergebniszellen im angegebenen Arbeitsblatt darstellt.</span><span class="sxs-lookup"><span data-stu-id="5eda9-128">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the result cells on the specified worksheet.</span></span> <span data-ttu-id="5eda9-129">Normalerweise bezieht sich dieser Bereich auf eine oder mehrere Zellen, die die Formeln enthalten, die von den sich ändernden Zellwerten für Ihr Modell abhängen, d. h. die Zellen, die die Ergebnisse eines bestimmten Szenarios anzeigen.</span><span class="sxs-lookup"><span data-stu-id="5eda9-129">Normally, this range refers to one or more cells containing the formulas that depend on the changing cell values for your model — that is, the cells that show the results of a particular scenario.</span></span> <span data-ttu-id="5eda9-130">Wenn dieses Argument nicht angegeben wird, sind keine Ergebniszellen im Bericht enthalten.</span><span class="sxs-lookup"><span data-stu-id="5eda9-130">If this argument is omitted, there are no result cells included in the report.</span></span></param>
        <summary><span data-ttu-id="5eda9-131">Creates a new worksheet that contains a summary report for the scenarios on the specified worksheet.</span><span class="sxs-lookup"><span data-stu-id="5eda9-131">Creates a new worksheet that contains a summary report for the scenarios on the specified worksheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Scenarios.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5eda9-132">Gibt einen ganzzahligen 32-Bit-Wert zurück, der die Anwendung angibt, in der dieses Objekt erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="5eda9-132">Returns a 32-bit integer that indicates the application in which this object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="5eda9-133">Wenn das Objekt in Microsoft Excel erstellt wurde, gibt die Eigenschaft die Zeichenfolge XCEL zurück, die der Hexadezimalzahl 5843454C entspricht.</span><span class="sxs-lookup"><span data-stu-id="5eda9-133">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></para>
          <para><span data-ttu-id="5eda9-134">Die <b>Creator</b> -Eigenschaft ist für die Verwendung in Microsoft Excel für Macintosh konzipiert, wobei jede Anwendung einen vier Zeichen großen Erstellercode hat.</span><span class="sxs-lookup"><span data-stu-id="5eda9-134">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="5eda9-135">Der Urhebercode für Microsoft Excel lautet "XCEL".</span><span class="sxs-lookup"><span data-stu-id="5eda9-135">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Scenarios.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Scenario Item (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Scenario Item([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Scenarios.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Item (Index As Object) As Scenario" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Scenario ^ Item(System::Object ^ Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Scenario</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="5eda9-136">Required <b>-Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="5eda9-136">Required <b>Object</b>.</span></span> <span data-ttu-id="5eda9-137">Der Name oder die Indexnummer für das Objekt.</span><span class="sxs-lookup"><span data-stu-id="5eda9-137">The name or index number for the object.</span></span></param>
        <summary><span data-ttu-id="5eda9-138">Gibt ein einzelnes Objekt aus einer Auflistung zurück.</span><span class="sxs-lookup"><span data-stu-id="5eda9-138">Returns a single object from a collection.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public object Merge (object Source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Merge([in]object Source) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Scenarios.Merge(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Merge (Source As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Merge(System::Object ^ Source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(564)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="5eda9-139">Required <b>-Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="5eda9-139">Required <b>Object</b>.</span></span> <span data-ttu-id="5eda9-140">Der Name des Blatts, das zu zusammengeführte Szenarien enthält, oder ein <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> Objekt, das dieses Blatt darstellt.</span><span class="sxs-lookup"><span data-stu-id="5eda9-140">The name of the sheet that contains scenarios to be merged, or a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents that sheet.</span></span></param>
        <summary><span data-ttu-id="5eda9-141">Führt die Szenarien aus einem anderen Blatt in der Auflistung <see cref="T:Microsoft.Office.Interop.Excel.Scenarios" /> zusammen.</span><span class="sxs-lookup"><span data-stu-id="5eda9-141">Merges the scenarios from another sheet into the <see cref="T:Microsoft.Office.Interop.Excel.Scenarios" /> collection.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="5eda9-142">Der Wert eines zusammengeführten Bereichs wird in der Zelle in der oberen linken Ecke des Bereichs angegeben.</span><span class="sxs-lookup"><span data-stu-id="5eda9-142">The value of a merged range is specified in the cell of the range's upper-left corner.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Scenarios.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5eda9-143">Gibt das übergeordnete Objekt für das angegebene Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="5eda9-143">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>