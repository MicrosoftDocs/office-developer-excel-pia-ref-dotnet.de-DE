<Type Name="AboveAverage" FullName="Microsoft.Office.Interop.Excel.AboveAverage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1a21e926b51408a1d10155a1a8f623c34f2f9726" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="49999791" /></Metadata><TypeSignature Language="C#" Value="public interface AboveAverage" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract AboveAverage" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.AboveAverage" />
  <TypeSignature Language="VB.NET" Value="Public Interface AboveAverage" />
  <TypeSignature Language="C++ CLI" Value="public interface class AboveAverage" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002449E-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="60f4e-p101">Stellt eine Visualisierung der Werte einer bedingten Formatierungsregel, die über dem Durchschnitt liegen, dar. Durch das Anwenden einer Farbe oder Füllung auf einen Bereich oder eine Auswahl können Sie den Wert einer Zelle relativ zu anderen Zellen anzeigen.</span><span class="sxs-lookup"><span data-stu-id="60f4e-p101">Represents an above average visual of a conditional formatting rule. Applying a color or fill to a range or selection to help you see the value of a cells relative to other cells.</span></span></summary>
    <remarks><para><span data-ttu-id="60f4e-103">Alle Bedingten Formatierungsobjekte sind in einem <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> Auflistungsobjekt enthalten, das ein untergeordnetes Objekt einer Auflistung <see cref="T:Microsoft.Office.Interop.Excel.Range" /> ist.</span><span class="sxs-lookup"><span data-stu-id="60f4e-103">All conditional formatting objects are contained within a <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection object, which is a child of a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> collection.</span></span> <span data-ttu-id="60f4e-104">Sie können eine Überdurchschnittliche Formatierungsregel erstellen, indem Sie entweder die <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> oder die Methode der Auflistung <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.AddAboveAverage" /> <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> verwenden.</span><span class="sxs-lookup"><span data-stu-id="60f4e-104">You can create an above average formatting rule by using either the <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> or <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.AddAboveAverage" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" />collection.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="AboveBelow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlAboveBelow AboveBelow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlAboveBelow AboveBelow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.AboveAverage.AboveBelow" />
      <MemberSignature Language="VB.NET" Value="Public Property AboveBelow As XlAboveBelow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlAboveBelow AboveBelow { Microsoft::Office::Interop::Excel::XlAboveBelow get(); void set(Microsoft::Office::Interop::Excel::XlAboveBelow value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2731)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2731)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2731)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlAboveBelow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="60f4e-105">Gibt eine der Konstanten der Enumeration zurück oder legt sie fest und gibt an, ob die Regel zur bedingten Formatierung nach Zellwerten über oder unter dem Bereichswert oder der <see cref="T:Microsoft.Office.Interop.Excel.XlAboveBelow" /> Standardabweichung sucht.</span><span class="sxs-lookup"><span data-stu-id="60f4e-105">Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlAboveBelow" /> enumeration, specifying if the conditional formatting rule looks for cell values above or below the range average or standard deviation.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlAboveBelow" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.AboveAverage.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="60f4e-106">Wenn diese Eigenschaft ohne einen Objektbezeichner verwendet wird, gibt sie ein Objekt zurück, das die Microsoft Office  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> Excel-Anwendung darstellt.</span><span class="sxs-lookup"><span data-stu-id="60f4e-106">When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application.</span></span> <span data-ttu-id="60f4e-107">Wenn ohne einen Objektbezeichner verwendet wird, gibt diese Eigenschaft ein <b>Application</b> -Objekt, das den Ersteller des angegebenen Objekts darstellt.</span><span class="sxs-lookup"><span data-stu-id="60f4e-107">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object.</span></span> <span data-ttu-id="60f4e-108">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="60f4e-108">Read-only.</span></span></summary>
        <value><span data-ttu-id="60f4e-109"><b>Anwendung</b> (siehe oben)</span><span class="sxs-lookup"><span data-stu-id="60f4e-109"><b>Application</b> (see above)</span></span></value>
        <remarks><para><span data-ttu-id="60f4e-110">Sie können diese Eigenschaft mit einem OLE-Automatisierungsobjekt verwenden, um die Anwendung dieses Objekts zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="60f4e-110">You can use this property with an OLE Automation object to return the application of that object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AppliesTo">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range AppliesTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range AppliesTo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.AboveAverage.AppliesTo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppliesTo As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ AppliesTo { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2626)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2626)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="60f4e-111">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das den Zellbereich angibt, auf den die Formatierungsregel angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="60f4e-111">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object specifying the cell range to which the formatting rule is applied.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.Range" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Borders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Borders Borders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Borders Borders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.AboveAverage.Borders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Borders As Borders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Borders ^ Borders { Microsoft::Office::Interop::Excel::Borders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Borders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="60f4e-112">Gibt eine Auflistung zurück, die die Formatierung von Zellenrändern angibt, wenn die Regel zur bedingten Formatierung <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> zu <b>True ausgewertet wird.</b></span><span class="sxs-lookup"><span data-stu-id="60f4e-112">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> collection that specifies the formatting of cell borders if the conditional formatting rule evaluates to <b>True</b>.</span></span> <span data-ttu-id="60f4e-113">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="60f4e-113">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.Borders" /></value>
        <remarks><para><span data-ttu-id="60f4e-114">Bei einem bedingten Formatierungsobjekt können Sie die Eigenschaften nur für die oberen, unteren und seitlichen Rahmen der Zelle festlegen.</span><span class="sxs-lookup"><span data-stu-id="60f4e-114">For a conditional formatting object, you can only set the properties for the top, bottom, and side borders of the cell.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalcFor">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalcFor CalcFor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalcFor CalcFor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.AboveAverage.CalcFor" />
      <MemberSignature Language="VB.NET" Value="Public Property CalcFor As XlCalcFor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalcFor CalcFor { Microsoft::Office::Interop::Excel::XlCalcFor get(); void set(Microsoft::Office::Interop::Excel::XlCalcFor value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2730)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2730)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2730)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalcFor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="60f4e-115">Gibt eine der Konstanten der Enumeration zurück oder legt sie fest, die den Bereich der Daten angibt, die für das bedingte Format in einem <see cref="T:Microsoft.Office.Interop.Excel.XlCalcFor" /> PivotTable-Bericht ausgewertet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="60f4e-115">Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlCalcFor" /> enumeration, which specifies the scope of data to be evaluated for the conditional format in a PivotTable report.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlCalcFor" /></value>
        <remarks><para><span data-ttu-id="60f4e-116">Diese Eigenschaft kann nur angewendet werden, wenn die bedingte Formatierung auf Daten in einem PivotTable-Bericht angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="60f4e-116">This property is applicable only when the conditional format is being applied to data in a PivotTable report.</span></span></para>
          <para><span data-ttu-id="60f4e-117">Diese Eigenschaft kann auf , oder nur festgelegt <see cref="F:Microsoft.Office.Interop.Excel.XlCalcFor.xlAllValues" /> <see cref="F:Microsoft.Office.Interop.Excel.XlCalcFor.xlColGroups" /> werden, <see cref="F:Microsoft.Office.Interop.Excel.XlCalcFor.xlRowGroups" /> wenn die Eigenschaft auf <see cref="P:Microsoft.Office.Interop.Excel.AboveAverage.ScopeType" /> festgelegt <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlFieldsScope" /> ist.</span><span class="sxs-lookup"><span data-stu-id="60f4e-117">This property can be set to <see cref="F:Microsoft.Office.Interop.Excel.XlCalcFor.xlAllValues" />, <see cref="F:Microsoft.Office.Interop.Excel.XlCalcFor.xlColGroups" />, or <see cref="F:Microsoft.Office.Interop.Excel.XlCalcFor.xlRowGroups" />only if the <see cref="P:Microsoft.Office.Interop.Excel.AboveAverage.ScopeType" /> property is set to <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlFieldsScope" />.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.AboveAverage.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="60f4e-118">Gibt eine Konstante in der <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> Aufzählung zurück, die die Anwendung angibt, in der dieses Objekt erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="60f4e-118">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created.</span></span> <span data-ttu-id="60f4e-119">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="60f4e-119">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /></value>
        <remarks><para><span data-ttu-id="60f4e-120">Wenn das Objekt in Microsoft Excel erstellt wurde, gibt die Eigenschaft die Zeichenfolge XCEL zurück, die der Hexadezimalzahl 5843454C entspricht.</span><span class="sxs-lookup"><span data-stu-id="60f4e-120">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span>  <span data-ttu-id="60f4e-121">Die <b>Creator</b> -Eigenschaft ist für die Verwendung in Microsoft Excel für Macintosh konzipiert, wobei jede Anwendung einen vier Zeichen großen Erstellercode hat.</span><span class="sxs-lookup"><span data-stu-id="60f4e-121">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="60f4e-122">Der Urhebercode für Microsoft Excel lautet "XCEL".</span><span class="sxs-lookup"><span data-stu-id="60f4e-122">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
        <example><para><span data-ttu-id="60f4e-123">In diesem Beispiel wird eine Meldung über den Ersteller einer Excel-Arbeitsmappe angezeigt.</span><span class="sxs-lookup"><span data-stu-id="60f4e-123">This example displays a message about the creator of an Excel workbook.</span></span>

</para></example>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.AboveAverage.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="60f4e-124">Löscht das angegebene Regelobjekt für die bedingte Formatierung.</span><span class="sxs-lookup"><span data-stu-id="60f4e-124">Deletes the specified conditional formatting rule object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.AboveAverage.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Font ^ Font { Microsoft::Office::Interop::Excel::Font ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="60f4e-125">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Font" /> Objekt zurück, das die Schriftartformatierung angibt, wenn die Regel für die bedingte Formatierung zu <b>True ausgewertet wird.</b></span><span class="sxs-lookup"><span data-stu-id="60f4e-125">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that specifies the font formatting if the conditional formatting rule evaluates to <b>True</b>.</span></span> <span data-ttu-id="60f4e-126">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="60f4e-126">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.Font" /></value>
        <remarks><para><span data-ttu-id="60f4e-127">Für ein bedingtes Formatierungsobjekt werden nicht alle Eigenschaften des <b>Font</b>-Objekt unterstützt.</span><span class="sxs-lookup"><span data-stu-id="60f4e-127">Not all properties of the <b>Font</b> object are supported for a conditional formatting object.</span></span> <span data-ttu-id="60f4e-128">Sie können Attribute für den Schriftschnitt, Unterstreichungen, die Farbe und Durchstreichungen festlegen.</span><span class="sxs-lookup"><span data-stu-id="60f4e-128">You can set the font style, underline, color, and strikethrough attributes.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.AboveAverage.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="60f4e-129">Gibt ein Objekt zurück, das die inneren Attribute einer Zelle für eine Regel zur bedingten Formatierung angibt, <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> die als True ausgewertet <b>wird.</b></span><span class="sxs-lookup"><span data-stu-id="60f4e-129">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that specifies a cell's interior attributes for a conditional formatting rule that evaluates to <b>True</b>.</span></span> <span data-ttu-id="60f4e-130">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="60f4e-130">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.Interior" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAppliesToRange">
      <MemberSignature Language="C#" Value="public void ModifyAppliesToRange (Microsoft.Office.Interop.Excel.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ModifyAppliesToRange([in]class Microsoft.Office.Interop.Excel.Range Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.AboveAverage.ModifyAppliesToRange(Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ModifyAppliesToRange(Microsoft::Office::Interop::Excel::Range ^ Range);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2627)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Range"><span data-ttu-id="60f4e-131">Der Bereich, für den diese Formatierungsregel gilt.</span><span class="sxs-lookup"><span data-stu-id="60f4e-131">The range to which this formatting rule will be applied.</span></span></param>
        <summary><span data-ttu-id="60f4e-132">Legt den Zellbereich fest, für den diese Formatierungsregel gilt.</span><span class="sxs-lookup"><span data-stu-id="60f4e-132">Sets the cell range to which this formatting rule applies.</span></span></summary>
        <remarks><para><span data-ttu-id="60f4e-133">Der Bereich muss im Bezugsformat A1 enthalten sein und vollständig in dem Blatt enthalten sein, das das übergeordnete Element der Auflistung <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> ist.</span><span class="sxs-lookup"><span data-stu-id="60f4e-133">The range must be in the A1 reference style and be entirely contained within the sheet that is the parent of the <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection.</span></span> <span data-ttu-id="60f4e-134">Er kann den Bereichsoperator (Doppelpunkt), den Schnittmengenoperator (Leerzeichen) oder den Vereinigungsoperator (Komma) enthalten.</span><span class="sxs-lookup"><span data-stu-id="60f4e-134">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span></span> <span data-ttu-id="60f4e-135">Dollarzeichen können auch verwendet werden, sie werden aber ignoriert.</span><span class="sxs-lookup"><span data-stu-id="60f4e-135">Dollar signs can also be used but they are ignored.</span></span></para>
          <para><span data-ttu-id="60f4e-136">Sie können auch einen lokalen, definierten Namen in einem Teil des Bereichs verwenden, der Name muss aber in der Sprache des Makros angegeben sein.</span><span class="sxs-lookup"><span data-stu-id="60f4e-136">You can also use a local defined name in any part of the range, but the name must be in the language of the macro.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public object NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.AboveAverage.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormat { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="60f4e-137">Gibt das Zahlenformat zurück oder legt es fest, das auf eine Zelle angewendet wird, wenn die Regel zur bedingten Formatierung zu <b>True</b> ausgewertet wird.</span><span class="sxs-lookup"><span data-stu-id="60f4e-137">Returns or sets the number format applied to a cell if the conditional formatting rule evaluates to <b>True</b>.</span></span> <span data-ttu-id="60f4e-138"><b>Object</b> -Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="60f4e-138">Read/write <b>Object</b>.</span></span></summary>
        <value><span data-ttu-id="60f4e-139"><b>Objekt</b></span><span class="sxs-lookup"><span data-stu-id="60f4e-139"><b>Object</b></span></span></value>
        <remarks><para><span data-ttu-id="60f4e-140">Das Zahlenformat wird mit den gleichen Formatcodes angegeben, die auch auf der Registerkarte Zahlen im Dialogfeld Zellen formatieren angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="60f4e-140">The number format is specified using the same format codes displayed on the Number tab of the Format Cells dialog box.</span></span> <span data-ttu-id="60f4e-141">Sie können ein integriertes Zahlenformat verwenden, z. B. "Allgemein" oder <see cref="createacustomnumberformat#CrossCollection" /> .</span><span class="sxs-lookup"><span data-stu-id="60f4e-141">You can use a built-in number format, for example "General", or <see cref="createacustomnumberformat#CrossCollection" />.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NumStdDev">
      <MemberSignature Language="C#" Value="public int NumStdDev { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumStdDev" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.AboveAverage.NumStdDev" />
      <MemberSignature Language="VB.NET" Value="Public Property NumStdDev As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumStdDev { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2732)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2732)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2732)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="60f4e-142">Gibt die numerische Standardabweichung für ein <b>AboveAverage</b>-Objekt zurück oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="60f4e-142">Returns or sets the numeric standard deviation for an <b>AboveAverage</b> object.</span></span> <span data-ttu-id="60f4e-143"><b>Ganze Zahl</b> mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="60f4e-143">Read/write <b>Integer</b>.</span></span></summary>
        <value><span data-ttu-id="60f4e-144"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="60f4e-144"><b>Integer</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.AboveAverage.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="60f4e-145">Gibt das übergeordnete Objekt für das angegebene Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="60f4e-145">Returns the parent object for the specified object.</span></span> <span data-ttu-id="60f4e-146">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="60f4e-146">Read-only.</span></span></summary>
        <value><span data-ttu-id="60f4e-147"><b>Objekt</b></span><span class="sxs-lookup"><span data-stu-id="60f4e-147"><b>Object</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public int Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.AboveAverage.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Priority { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="60f4e-p116">Gibt den Prioritätswert der Regel zur bedingten Formatierung zurück oder legt ihn fest. Durch die Priorität wird die Reihenfolge der Auswertung bestimmt, wenn für ein Arbeitsblatt mehrere Regeln zur bedingten Formatierung vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="60f4e-p116">Returns or sets the priority value of the conditional formatting rule. The priority determines the order of evaluation when multiple conditional formatting rules exist in a worksheet.</span></span></summary>
        <value><span data-ttu-id="60f4e-150"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="60f4e-150"><b>Integer</b></span></span></value>
        <remarks><para><span data-ttu-id="60f4e-p117">Beim Festlegen der Priorität muss der Wert eine positive ganze Zahl zwischen 1 und der Gesamtanzahl von Regeln zur bedingten Formatierung auf dem Arbeitsblatt sein. Die Priorität muss ein eindeutiger Wert für alle Regeln des Arbeitsblatts sein. Das Ändern der Priorität für eine Regel zur bedingten Formatierung kann also dazu führen, dass sich die Prioritätswerte anderer Regeln des Arbeitsblatts ebenfalls ändern.</span><span class="sxs-lookup"><span data-stu-id="60f4e-p117">When setting the priority, the value must be a positive integer between 1 and the total number of conditional formatting rules on the worksheet. The priority must be a unique value for all rules on the worksheet, so changing the priority for the specified conditional formatting rule may cause the priority value of the other rules on the worksheet to be shifted.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PTCondition">
      <MemberSignature Language="C#" Value="public bool PTCondition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PTCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.AboveAverage.PTCondition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PTCondition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PTCondition { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2631)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2631)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="60f4e-153">Gibt einen <b>Boolean</b>-Wert zurück, der angibt, ob ein bedingtes Format auf ein PivotTable-Diagramm angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="60f4e-153">Returns a <b>Boolean</b> value indicating if the conditional format is being applied to a PivotTable chart.</span></span> <span data-ttu-id="60f4e-154">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="60f4e-154">Read-only.</span></span></summary>
        <value><span data-ttu-id="60f4e-155"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="60f4e-155"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScopeType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPivotConditionScope ScopeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPivotConditionScope ScopeType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.AboveAverage.ScopeType" />
      <MemberSignature Language="VB.NET" Value="Public Property ScopeType As XlPivotConditionScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPivotConditionScope ScopeType { Microsoft::Office::Interop::Excel::XlPivotConditionScope get(); void set(Microsoft::Office::Interop::Excel::XlPivotConditionScope value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPivotConditionScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="60f4e-156">Gibt eine der Konstanten der Enumeration zurück oder legt sie fest, die den Bereich des bedingten Formats bestimmt, wenn es auf ein <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /> PivotTable-Diagramm angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="60f4e-156">Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /> enumeration, which determines the scope of the conditional format when it is applied to a PivotTable chart.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /></value>
        <remarks><para><span data-ttu-id="60f4e-157">Der Standardwert ist <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlSelectionScope" /> , der den Bereich mithilfe der Eigenschaft <see cref="P:Microsoft.Office.Interop.Excel.AboveAverage.AppliesTo" /> legt.</span><span class="sxs-lookup"><span data-stu-id="60f4e-157">The default value is <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlSelectionScope" />, which sets the scope using the <see cref="P:Microsoft.Office.Interop.Excel.AboveAverage.AppliesTo" />property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFirstPriority">
      <MemberSignature Language="C#" Value="public void SetFirstPriority ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFirstPriority() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.AboveAverage.SetFirstPriority" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFirstPriority ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFirstPriority();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2629)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="60f4e-158">Legt den Prioritätswert für diese Regel zur bedingten Formatierung auf 1 fest, sodass die Regel vor allen anderen Regeln im Arbeitsblatt ausgewertet wird.</span><span class="sxs-lookup"><span data-stu-id="60f4e-158">Sets the priority value for this conditional formatting rule to "1" so that it will be evaluated before all other rules on the worksheet.</span></span></summary>
        <remarks><para><span data-ttu-id="60f4e-159">Wenn mehrere Regeln zur bedingten Formatierung vorhanden sind und wenn für diese Regel nicht zuvor die Priorität 1 festgelegt wurde, wird die Priorität aller anderen im Arbeitsblatt vorhandenen Regeln von dieser Methode um 1 erhöht.</span><span class="sxs-lookup"><span data-stu-id="60f4e-159">When you have multiple conditional formatting rules  in a worksheet, if the rule was not previously set to priority "1", this method will cause the priority of all other existing rules on the worksheet to be increased by one.</span></span></para>
          <para><span data-ttu-id="60f4e-160">
            <b>Hinweis:</b>Prioritätsstufen für Regeln zur bedingten Formatierung werden auf Arbeitsblattebene angewendet.</span><span class="sxs-lookup"><span data-stu-id="60f4e-160">
            <b>Note</b>: Priority levels for conditional formatting rules are applied on a worksheet-level basis.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLastPriority">
      <MemberSignature Language="C#" Value="public void SetLastPriority ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLastPriority() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.AboveAverage.SetLastPriority" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLastPriority ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLastPriority();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2630)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="60f4e-161">Legt die Auswertungsreihenfolge für diese Regel zur bedingten Formatierung fest, sodass sie nach allen anderen Regeln im Arbeitsblatt ausgewertet wird.</span><span class="sxs-lookup"><span data-stu-id="60f4e-161">Sets the evaluation order for this conditional formatting rule so it is evaluated after all other rules on the worksheet.</span></span></summary>
        <remarks><para><span data-ttu-id="60f4e-p119">Der tatsächliche Wert der Priorität entspricht der Gesamtanzahl von Regeln zur bedingten Formatierung im Arbeitsblatt. Wenn ein Arbeitsblatt mehrere Regeln zur bedingten Formatierung enthält, werden die Prioritäten von Regeln, die zuvor einen höheren Prioritätswert als diese Regel hatten, von dieser Methode um 1 reduziert.</span><span class="sxs-lookup"><span data-stu-id="60f4e-p119">The actual vaule of the priority will be equal to the total number of conditional formatting rules on the worksheet. When you have multiple conditional formatting rules  in a worksheet, this method will cause the priority of rules that had a priority value greater than this rule to be increased by one.</span></span></para>
          <para><span data-ttu-id="60f4e-164">
            <b>Hinweis:</b>Prioritätsstufen für Regeln zur bedingten Formatierung werden auf Arbeitsblattebene angewendet.</span><span class="sxs-lookup"><span data-stu-id="60f4e-164">
            <b>Note</b>: Priority levels for conditional formatting rules are applied on a worksheet-level basis.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StopIfTrue">
      <MemberSignature Language="C#" Value="public bool StopIfTrue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StopIfTrue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.AboveAverage.StopIfTrue" />
      <MemberSignature Language="VB.NET" Value="Public Property StopIfTrue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StopIfTrue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2625)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="60f4e-165">Gibt einen <b>Boolean</b>-Wert zurück, der bestimmt, ob zusätzliche Formatierungsregeln für die Zelle ausgewertet werden sollen, wenn die aktuelle Regel zu <b>True</b> ausgewertet wird, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="60f4e-165">Returns or sets a <b>Boolean</b> value that determines if additional formatting rules on the cell should be evaluated if the current rule evaluates to <b>True</b>.</span></span></summary>
        <value><span data-ttu-id="60f4e-166"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="60f4e-166"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="60f4e-167">Zur Unterstützung der Abwärtskompatibilität lautet der Standardwert für diese Eigenschaft <b>True</b>, dies ist das Gegenteil des Verhaltens einer Formatierungsregel, die auf der Benutzeroberfläche erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="60f4e-167">To support backward compatibility, the default value for this property is <b>True</b>, which is the opposite behavior of a formatting rule created in the user interface.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.AboveAverage.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Type { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="60f4e-168">Gibt eine der Konstanten der Enumeration zurück, die <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" /> den Typ des bedingten Formats angibt.</span><span class="sxs-lookup"><span data-stu-id="60f4e-168">Returns one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" /> enumeration, which specifies the type of conditional format.</span></span> <span data-ttu-id="60f4e-169">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="60f4e-169">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" /></value>
        <remarks><para><span data-ttu-id="60f4e-170">Diese Eigenschaft gibt immer einen <b>ganzzahligen</b> Wert von "12" zurück, der gleichbedeutend mit <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlAboveAverageCondition" /> ist.</span><span class="sxs-lookup"><span data-stu-id="60f4e-170">This property will always return a <b>Integer</b> value of "12", which is equivalent to <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlAboveAverageCondition" />.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>