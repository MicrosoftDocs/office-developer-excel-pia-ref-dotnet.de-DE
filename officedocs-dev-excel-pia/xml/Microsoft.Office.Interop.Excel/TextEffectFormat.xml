<Type Name="TextEffectFormat" FullName="Microsoft.Office.Interop.Excel.TextEffectFormat">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fbb84779b82f0d04327c445fb2dede8ff19b5468" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20581011" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface TextEffectFormat : Microsoft.Office.Core._IMsoDispObj" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract TextEffectFormat implements class Microsoft.Office.Core._IMsoDispObj" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.TextEffectFormat" />
  <TypeSignature Language="VB.NET" Value="Public Interface TextEffectFormat&#xA;Implements _IMsoDispObj" />
  <TypeSignature Language="C++ CLI" Value="public interface class TextEffectFormat : Microsoft::Office::Core::_IMsoDispObj" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Core._IMsoDispObj</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000C031F-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a5d5f-101">Enthält Eigenschaften und Methoden, die für WordArt-Objekte gelten.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a5d5f-101">Contains properties and methods that apply to WordArt objects.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTextEffectAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTextEffectAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As MsoTextEffectAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTextEffectAlignment Alignment { Microsoft::Office::Core::MsoTextEffectAlignment get(); void set(Microsoft::Office::Core::MsoTextEffectAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTextEffectAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5d5f-102">Zurück oder legt die Ausrichtung für WordArt-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5d5f-102">Returns or sets the alignment for WordArt.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public object Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Application { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Application</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5d5f-103">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> -Objekt, das die Anwendung Microsoft Excel darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5d5f-103">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Creator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743809)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5d5f-104">Gibt eine 32-Bit-Ganzzahl, die die Anwendung angibt, in der das Objekt erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5d5f-104">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="a5d5f-105">Wenn das Objekt in Microsoft Excel erstellt wurde, gibt diese Eigenschaft die Zeichenfolge XCEL zurück, dies entspricht die hexadezimale Zahl 5843454 c ist.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a5d5f-105">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="a5d5f-106">Die <b>Creator</b> -Eigenschaft ist in Microsoft Excel für den Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen verfügt über entwickelt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a5d5f-106">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="a5d5f-107">Der Erstellercode von Microsoft Excel lautet beispielsweise XCEL zurück.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a5d5f-107">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontBold">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState FontBold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState FontBold" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.FontBold" />
      <MemberSignature Language="VB.NET" Value="Public Property FontBold As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState FontBold { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5d5f-108">
            <b>True,</b> Wenn die Schriftart in der angegebenen WordArt fett formatiert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5d5f-108">
              <b>True</b> if the font in the specified WordArt is bold.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontItalic">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState FontItalic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState FontItalic" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.FontItalic" />
      <MemberSignature Language="VB.NET" Value="Public Property FontItalic As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState FontItalic { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5d5f-109">Gibt <b>MsoTrue</b> zurück, wenn die Schriftart in der angegebenen WordArt kursiv formatiert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5d5f-109">Returns <b>msoTrue</b> if the font in the specified WordArt is italic.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontName">
      <MemberSignature Language="C#" Value="public string FontName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FontName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.FontName" />
      <MemberSignature Language="VB.NET" Value="Public Property FontName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FontName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5d5f-110">Gibt den Schriftartnamen des angegebenen WordArt-Objekts zurück oder legt ihn fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5d5f-110">Returns or sets the name of the font in the specified WordArt.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontSize">
      <MemberSignature Language="C#" Value="public float FontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 FontSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.FontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property FontSize As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float FontSize { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5d5f-111">Gibt den Schriftgrad des angegebenen WordArt-Objekts in Punkt zurück oder legt ihn fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5d5f-111">Returns or sets the font size for the specified WordArt in points.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KernedPairs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState KernedPairs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState KernedPairs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.KernedPairs" />
      <MemberSignature Language="VB.NET" Value="Public Property KernedPairs As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState KernedPairs { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5d5f-112">
            <b>True,</b> Wenn Zeichenpaare in der angegebenen WordArt unterschnitten werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5d5f-112">
              <b>True</b> if character pairs in the specified WordArt are kerned.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizedHeight">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState NormalizedHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState NormalizedHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.NormalizedHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property NormalizedHeight As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState NormalizedHeight { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5d5f-113">
            <b>True,</b> Wenn alle Zeichen (sowohl Groß-als auch Kleinbuchstaben) im angegebenen WordArt-Objekt die gleiche Höhe aufweisen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5d5f-113">
              <b>True</b> if all characters (both uppercase and lowercase) in the specified WordArt are the same height.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5d5f-114">Gibt das übergeordnete Objekt für das angegebene Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5d5f-114">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PresetShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoPresetTextEffectShape PresetShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoPresetTextEffectShape PresetShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.PresetShape" />
      <MemberSignature Language="VB.NET" Value="Public Property PresetShape As MsoPresetTextEffectShape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoPresetTextEffectShape PresetShape { Microsoft::Office::Core::MsoPresetTextEffectShape get(); void set(Microsoft::Office::Core::MsoPresetTextEffectShape value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoPresetTextEffectShape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5d5f-115">Gibt die Form des angegebenen WordArt-Objekts zurück oder legt diese Form fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5d5f-115">Returns or sets the shape of the specified WordArt.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="a5d5f-116">Festlegen der <see cref="P:Microsoft.Office.Interop.Excel.TextEffectFormat.PresetTextEffect" /> Eigenschaft automatisch die <b>PresetShape</b> -Eigenschaft festgelegt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a5d5f-116">Setting the <see cref="P:Microsoft.Office.Interop.Excel.TextEffectFormat.PresetTextEffect" /> property automatically sets the <b>PresetShape</b> property.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PresetTextEffect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoPresetTextEffect PresetTextEffect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoPresetTextEffect PresetTextEffect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.PresetTextEffect" />
      <MemberSignature Language="VB.NET" Value="Public Property PresetTextEffect As MsoPresetTextEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoPresetTextEffect PresetTextEffect { Microsoft::Office::Core::MsoPresetTextEffect get(); void set(Microsoft::Office::Core::MsoPresetTextEffect value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoPresetTextEffect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5d5f-117">Gibt die Formatvorlage des angegebenen WordArt-Objekts zurück oder legt die Formatvorlage fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5d5f-117">Returns or sets the style of the specified WordArt.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="a5d5f-118">Die Werte für diese Eigenschaft entsprechen den Formaten im Dialogfeld WordArt-Katalog (von links nach rechts und von oben nach unten nummeriert).</span>
            <span class="sxs-lookup">
              <span data-stu-id="a5d5f-118">The values for this property correspond to the formats in the WordArt Gallery dialog box (numbered from left to right, top to bottom).</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="a5d5f-119">Durch Festlegen der <b>PresetTextEffect</b> -Eigenschaft wird automatisch festgelegt viele andere Formateigenschaften der angegebenen Form.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a5d5f-119">Setting the <b>PresetTextEffect</b> property automatically sets many other formatting properties of the specified shape.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotatedChars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState RotatedChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState RotatedChars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.RotatedChars" />
      <MemberSignature Language="VB.NET" Value="Public Property RotatedChars As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState RotatedChars { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5d5f-120">
            <b>True,</b> Wenn Zeichen in der angegebenen WordArt um 90 Grad gedreht, relativ zur Begrenzungsform der WordArt sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5d5f-120">
              <b>True</b> if characters in the specified WordArt are rotated 90 degrees relative to the WordArt's bounding shape.</span>
          </span>
          <span data-ttu-id="a5d5f-121">
            <b>False,</b> Wenn Zeichen im angegebenen WordArt-Objekt ihre ursprüngliche Ausrichtung relativ zur Begrenzungsform beibehalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5d5f-121">
              <b>False</b> if characters in the specified WordArt retain their original orientation relative to the bounding shape.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="a5d5f-122">Wenn das WordArt-Objekt horizontalen Text enthält, werden die Zeichen um 90 Grad gegen den Uhrzeigersinn gedreht, wenn die <b>RotatedChars</b> -Eigenschaft auf <b>MsoTrue</b> festlegen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a5d5f-122">If the WordArt has horizontal text, setting the <b>RotatedChars</b> property to <b>msoTrue</b> rotates the characters 90 degrees counterclockwise.</span>
            </span>
            <span data-ttu-id="a5d5f-123">Wenn das WordArt-Objekt vertikalen Text enthält, werden die Zeichen um 90 Grad im Uhrzeigersinn gedreht, Festlegen der <b>RotatedChars</b> -Eigenschaft auf <b>msoFalse festgelegt</b>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a5d5f-123">If the WordArt has vertical text, setting the <b>RotatedChars</b> property to <b>msoFalse</b> rotates the characters 90 degrees clockwise.</span>
            </span>
            <span data-ttu-id="a5d5f-124">Verwendung der <see cref="M:Microsoft.Office.Interop.Excel.TextEffectFormat.ToggleVerticalText" /> -Methode zum Umschalten zwischen horizontalen und vertikalen Textfluss.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a5d5f-124">Use the <see cref="M:Microsoft.Office.Interop.Excel.TextEffectFormat.ToggleVerticalText" /> method to switch between horizontal and vertical text flow.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="a5d5f-125">Die <see cref="M:Microsoft.Office.Interop.Excel.Shape.Flip(Microsoft.Office.Core.MsoFlipCmd)" /> -Methode und <see cref="P:Microsoft.Office.Interop.Excel.Shape.Rotation" /> -Eigenschaft des der <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> -Objekt und der <b>RotatedChars</b> -Eigenschaft und <see cref="M:Microsoft.Office.Interop.Excel.TextEffectFormat.ToggleVerticalText" /> -Methode des der <see cref="T:Microsoft.Office.Interop.Excel.TextEffectFormat" /> -Objekts beeinflussen die Ausrichtung Zeichen und die Richtung der Textfluss in ein <b>Shape</b> -Objekt, das darstellt Ein WordArt-Objekt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a5d5f-125">The <see cref="M:Microsoft.Office.Interop.Excel.Shape.Flip(Microsoft.Office.Core.MsoFlipCmd)" /> method and <see cref="P:Microsoft.Office.Interop.Excel.Shape.Rotation" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object and the <b>RotatedChars</b> property and <see cref="M:Microsoft.Office.Interop.Excel.TextEffectFormat.ToggleVerticalText" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.TextEffectFormat" /> object all affect the character orientation and direction of text flow in a <b>Shape</b> object that represents WordArt.</span>
            </span>
            <span data-ttu-id="a5d5f-126">Möglicherweise müssen Sie experimentieren, um herauszufinden, wie Sie die Effekte dieser Eigenschaften und Methoden verwenden, um das Ergebnis zu erzielen Sie die gewünschten kombinieren.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a5d5f-126">You may have to experiment to find out how to combine the effects of these properties and methods to get the result you want.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5d5f-127">Gibt den Text des angegebenen Objekts zurück oder legt ihn fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5d5f-127">Returns or sets the text for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleVerticalText">
      <MemberSignature Language="C#" Value="public void ToggleVerticalText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleVerticalText() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.TextEffectFormat.ToggleVerticalText" />
      <MemberSignature Language="VB.NET" Value="Public Sub ToggleVerticalText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ToggleVerticalText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a5d5f-128">Ändert den Textfluss im angegebenen WordArt-Objekt von horizontal in vertikal oder umgekehrt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5d5f-128">Switches the text flow in the specified WordArt from horizontal to vertical, or vice versa.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="a5d5f-129">Mit der <b>ToggleVerticalText</b> -Methode vertauscht die Werte der der <see cref="P:Microsoft.Office.Interop.Excel.Shape.Width" /> und <see cref="P:Microsoft.Office.Interop.Excel.Shape.Height" /> Eigenschaften des <b>Shape</b> -Objekts, das das WordArt-Objekt darstellt und bewirkt, dass, die <see cref="P:Microsoft.Office.Interop.Excel.Shape.Left" /> und <see cref="P:Microsoft.Office.Interop.Excel.Shape.Top" /> Eigenschaften bleibt unverändert.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a5d5f-129">Using the <b>ToggleVerticalText</b> method swaps the values of the <see cref="P:Microsoft.Office.Interop.Excel.Shape.Width" /> and <see cref="P:Microsoft.Office.Interop.Excel.Shape.Height" /> properties of the <b>Shape</b> object that represents the WordArt and leaves the <see cref="P:Microsoft.Office.Interop.Excel.Shape.Left" /> and <see cref="P:Microsoft.Office.Interop.Excel.Shape.Top" /> properties unchanged.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="a5d5f-130">Die <see cref="M:Microsoft.Office.Interop.Excel.Shape.Flip(Microsoft.Office.Core.MsoFlipCmd)" /> Methode und <see cref="P:Microsoft.Office.Interop.Excel.Shape.Rotation" /> -Eigenschaft des der <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> Objekt und die <see cref="P:Microsoft.Office.Interop.Excel.TextEffectFormat.RotatedChars" /> -Eigenschaft und der <b>ToggleVerticalText</b> -Methode der <see cref="T:Microsoft.Office.Interop.Excel.TextEffectFormat" /> -Objekts wirken sich alle auf die Ausrichtung der Zeichen und die Richtung der Textfluss in einem <b>Shape</b> -Objekt, das ein WordArt-Objekt darstellt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a5d5f-130">The <see cref="M:Microsoft.Office.Interop.Excel.Shape.Flip(Microsoft.Office.Core.MsoFlipCmd)" /> method and <see cref="P:Microsoft.Office.Interop.Excel.Shape.Rotation" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object and the <see cref="P:Microsoft.Office.Interop.Excel.TextEffectFormat.RotatedChars" /> property and <b>ToggleVerticalText</b> method of the <see cref="T:Microsoft.Office.Interop.Excel.TextEffectFormat" /> object all affect the character orientation and the direction of text flow in a <b>Shape</b> object that represents WordArt.</span>
            </span>
            <span data-ttu-id="a5d5f-131">Möglicherweise müssen Sie experimentieren, um herauszufinden, wie Sie die Effekte dieser Eigenschaften und Methoden verwenden, um das Ergebnis zu erzielen Sie die gewünschten kombinieren.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a5d5f-131">You may have to experiment to find out how to combine the effects of these properties and methods to get the result you want.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tracking">
      <MemberSignature Language="C#" Value="public float Tracking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Tracking" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextEffectFormat.Tracking" />
      <MemberSignature Language="VB.NET" Value="Public Property Tracking As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Tracking { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5d5f-132">Gibt zurück oder legt das Verhältnis von den horizontalen Abstand für die einzelnen Zeichen im angegebenen WordArt-Objekt auf die Breite des Zeichens vorgesehen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5d5f-132">Returns or sets the ratio of the horizontal space allotted to each character in the specified WordArt to the width of the character.</span>
          </span>
          <span data-ttu-id="a5d5f-133">Ein Wert zwischen 0 (null) und 5 kann sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5d5f-133">Can be a value from 0 (zero) through 5.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="a5d5f-134">Große Werte für diese Eigenschaft angeben Platz zwischen Zeichen. Werte, die kleiner als 1 kann zu zeichenüberschneidungen führen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a5d5f-134">Large values for this property specify ample space between characters; values less than 1 can produce character overlap.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="a5d5f-135">Die folgende Tabelle enthält die entsprechenden Werte der <b>Tracking</b> -Eigenschaft mit den Einstellungen, die in der Benutzeroberfläche verfügbar.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a5d5f-135">The following table gives the values of the <b>Tracking</b> property that correspond to the settings available in the user interface.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="a5d5f-136">Sehr eng</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a5d5f-136">Very Tight</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a5d5f-137">0,8</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a5d5f-137">0.8</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a5d5f-138">Eng</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a5d5f-138">Tight</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a5d5f-139">0,9</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a5d5f-139">0.9</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a5d5f-140">Normal</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a5d5f-140">Normal</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a5d5f-141">1,0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a5d5f-141">1.0</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a5d5f-142">Weit</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a5d5f-142">Loose</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a5d5f-143">1.2</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a5d5f-143">1.2</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a5d5f-144">Sehr weit</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a5d5f-144">Very Loose</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a5d5f-145">1,5</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a5d5f-145">1.5</span>
                </span>
              </description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>