<Type Name="Shape" FullName="Microsoft.Office.Interop.Excel.Shape">
  <Metadata><Meta Name="ms.openlocfilehash" Value="79407cc874dc91aaa0bdd4a827ab38f1c0fb6b0b" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50010367" /></Metadata><TypeSignature Language="C#" Value="public interface Shape" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Shape" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Shape" />
  <TypeSignature Language="VB.NET" Value="Public Interface Shape" />
  <TypeSignature Language="C++ CLI" Value="public interface class Shape" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024439-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b4bcb-101">Repräsentiert ein Objekt in der Zeichnungsschicht wie eine AutoForm, eine Freihandform, ein OLE-Objekt oder ein Bild.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-101">Represents an object in the drawing layer, such as an AutoShape, freeform, OLE object, or picture.</span></span> <span data-ttu-id="b4bcb-102">Das <b>Shape -Objekt</b> ist ein Element der <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-102">The <b>Shape</b> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection.</span></span> <span data-ttu-id="b4bcb-103">Die <b>Shapes -Auflistung</b> enthält alle Formen auf einer Folie.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-103">The <b>Shapes</b> collection contains all the shapes on a slide.</span></span></summary>
    <remarks><para><span data-ttu-id="b4bcb-104">Es gibt drei Objekte, die Formen darstellen: die <b>Shapes</b> -Auflistung, die alle Formen in einem Dokument darstellt; Die Auflistung, die eine angegebene Teilmenge der Formen in einem Dokument darstellt (z. B. könnte ein ShapeRange -Objekt die Formen 1 und 4 im Dokument darstellen, oder es kann alle ausgewählten Formen im Dokument darstellen); und das Shape -Objekt, das eine einzelne Form in einem Dokument <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> darstellt. <b></b> <b></b></span><span class="sxs-lookup"><span data-stu-id="b4bcb-104">There are three objects that represent shapes: the <b>Shapes</b> collection, which represents all the shapes on a document; the <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> collection, which represents a specified subset of the shapes on a document (for example, a <b>ShapeRange</b> object could represent shapes one and four on the document, or it could represent all the selected shapes on the document); and the <b>Shape</b> object, which represents a single shape on a document.</span></span> <span data-ttu-id="b4bcb-105">Wenn Sie mit mehreren Formen gleichzeitig oder mit Formen innerhalb einer Auswahl arbeiten möchten, verwenden Sie eine Sammlung <b>ShapeRange</b>.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-105">If you want to work with several shapes at the same time or with shapes within the selection, use a <b>ShapeRange</b> collection.</span></span></para>
      <para><span data-ttu-id="b4bcb-106">Dieser Abschnitt wird beschrieben, wie Sie:</span><span class="sxs-lookup"><span data-stu-id="b4bcb-106">This section describes how to:</span></span></para>
      <list type="bullet">
        <item>
          <description><span data-ttu-id="b4bcb-107">vorhandene Form zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-107">Return an existing shape.</span></span></description>
        </item>
        <item>
          <description><span data-ttu-id="b4bcb-108">eine Form innerhalb einer Auswahl zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-108">Return a shape within the selection.</span></span></description>
        </item>
        <item>
          <description><span data-ttu-id="b4bcb-109">Formen zurückgegeben werden, die am Ende eines Verbinders angefügt sind.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-109">Return the shapes attached to the ends of a connector.</span></span></description>
        </item>
        <item>
          <description><span data-ttu-id="b4bcb-110">eine neu erstellte Freihandform zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-110">Return a newly created freeform.</span></span></description>
        </item>
        <item>
          <description><span data-ttu-id="b4bcb-111">Zurückgeben einer einzelnen Form innerhalb einer Gruppe.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-111">Return a single shape from within a group.</span></span></description>
        </item>
        <item>
          <description><span data-ttu-id="b4bcb-112">Zurückgeben einer neu gebildeten Gruppe von Formen.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-112">Return a newly formed group of shapes.</span></span></description>
        </item>
      </list>
      <para><span data-ttu-id="b4bcb-113">Zurückgeben einer vorhandenen Form</span><span class="sxs-lookup"><span data-stu-id="b4bcb-113">Returning an Existing Shape</span></span></para>
      <para><span data-ttu-id="b4bcb-114">Verwenden <b>Sie Shapes</b>( ), wobei der Name der Form oder die Indexnummer ist, um ein Shape <paramref name="index" /> <paramref name="index" /> <b>-Objekt</b> zurück, das eine Form darstellt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-114">Use <b>Shapes</b>(<paramref name="index" />), where <paramref name="index" /> is the shape name or the index number, to return a <b>Shape</b> object that represents a shape.</span></span></para>
      <para><span data-ttu-id="b4bcb-115">Jeder Form wird ein Standardname zugewiesen, wenn Sie sie der Sammlung <b>Shapes</b> hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-115">Each shape is assigned a default name when you add it to the <b>Shapes</b> collection.</span></span> <span data-ttu-id="b4bcb-116">Verwenden Sie die Eigenschaft, um der Form einen aussagekräftigen Namen <see cref="P:Microsoft.Office.Interop.Excel.Shape.Name" /> zu geben.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-116">To give the shape a more meaningful name, use the <see cref="P:Microsoft.Office.Interop.Excel.Shape.Name" /> property.</span></span></para>
      <para><span data-ttu-id="b4bcb-117">Zurückgeben einer Form innerhalb einer Sammlung</span><span class="sxs-lookup"><span data-stu-id="b4bcb-117">Returning a Shape Within the Selection</span></span></para>
      <para><span data-ttu-id="b4bcb-118">Verwenden <b>Sie Selection.ShapeRange</b>( ), wobei der Name der Form oder die <paramref name="index" /> <paramref name="index" /> Indexnummer ist, um ein <b>Shape</b> -Objekt zurück, das eine Form innerhalb der Auswahl darstellt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-118">Use <b>Selection.ShapeRange</b>(<paramref name="index" />), where <paramref name="index" /> is the shape name or the index number, to return a <b>Shape</b> object that represents a shape within the selection.</span></span></para>
      <para><span data-ttu-id="b4bcb-119">Zurückgeben von Formen, die am Ende eines Verbinders angefügt sind</span><span class="sxs-lookup"><span data-stu-id="b4bcb-119">Returning the Shapes Attached to the Ends of a Connector</span></span></para>
      <para><span data-ttu-id="b4bcb-120">Wenn Sie ein <b>Shape -Objekt</b> zurückgeben möchten, das eine der formen darstellt, die mit einer Verbindung verbunden sind, verwenden Sie die <see cref="P:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnectedShape" /> oder <see cref="P:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnectedShape" /> -Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-120">To return a <b>Shape</b> object that represents one of the shapes attached by a connector, use the <see cref="P:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnectedShape" /> or <see cref="P:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnectedShape" /> property.</span></span></para>
      <para><span data-ttu-id="b4bcb-121">Zurückgeben einer neu erstellten Freihandform</span><span class="sxs-lookup"><span data-stu-id="b4bcb-121">Returning a newly created freeform</span></span></para>
      <para><span data-ttu-id="b4bcb-122">Verwenden Sie <see cref="M:Microsoft.Office.Interop.Excel.Shapes.BuildFreeform(Microsoft.Office.Core.MsoEditingType,System.Single,System.Single)" /> die Und-Methoden, um die Geometrie einer neuen Freihandform zu definieren, und verwenden Sie die Methode, um die Freihandform zu erstellen und das Shape -Objekt zurück, <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)" /> das sie <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.ConvertToShape" /> darstellt. <b></b></span><span class="sxs-lookup"><span data-stu-id="b4bcb-122">Use the <see cref="M:Microsoft.Office.Interop.Excel.Shapes.BuildFreeform(Microsoft.Office.Core.MsoEditingType,System.Single,System.Single)" /> and <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.AddNodes(Microsoft.Office.Core.MsoSegmentType,Microsoft.Office.Core.MsoEditingType,System.Single,System.Single,System.Object,System.Object,System.Object,System.Object)" /> methods to define the geometry of a new freeform, and use the <see cref="M:Microsoft.Office.Interop.Excel.FreeformBuilder.ConvertToShape" /> method to create the freeform and return the <b>Shape</b> object that represents it.</span></span></para>
      <para><span data-ttu-id="b4bcb-123">Zurückgeben einer einzelnen Form aus einer Gruppe</span><span class="sxs-lookup"><span data-stu-id="b4bcb-123">Returning a Single Shape from Within a Group</span></span></para>
      <para><span data-ttu-id="b4bcb-124">Verwenden <b>Sie GroupItems</b>( ), wobei der Name der Form oder die Indexnummer innerhalb der Gruppe ist, um ein Shape -Objekt zurück, das eine einzelne Form in einer gruppenierten <paramref name="index" /> Form <paramref name="index" /> darstellt. <b></b></span><span class="sxs-lookup"><span data-stu-id="b4bcb-124">Use <b>GroupItems</b>(<paramref name="index" />), where <paramref name="index" /> is the shape name or the index number within the group, to return a <b>Shape</b> object that represents a single shape in a grouped shape.</span></span></para>
      <para><span data-ttu-id="b4bcb-125">Zurückgeben einer neu gebildeten Gruppe von Formen</span><span class="sxs-lookup"><span data-stu-id="b4bcb-125">Returning a Newly Formed Group of Shapes</span></span></para>
      <para><span data-ttu-id="b4bcb-126">Verwenden Sie die or-Methode, um einen Bereich von Formen zu gruppieren und ein einzelnes Shape -Objekt zurück, <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.Group" /> <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.Regroup" /> das die neu gebildete Gruppe darstellt. <b></b></span><span class="sxs-lookup"><span data-stu-id="b4bcb-126">Use the <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.Group" /> or <see cref="M:Microsoft.Office.Interop.Excel.ShapeRange.Regroup" /> method to group a range of shapes and return a single <b>Shape</b> object that represents the newly formed group.</span></span> <span data-ttu-id="b4bcb-127">Nach dem bilden einer Gruppe können Sie arbeiten mit der Gruppe der gleichen Weise wie Arbeit mit einem anderen Shape.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-127">After a group has been formed, you can work with the group the same way you work with any other shape.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Adjustments">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Adjustments Adjustments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Adjustments Adjustments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Adjustments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Adjustments As Adjustments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Adjustments ^ Adjustments { Microsoft::Office::Interop::Excel::Adjustments ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1691)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1691)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Adjustments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-128">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Adjustments" /> Objekt zurück, das Anpassungswerte für alle Anpassungen in der angegebenen Form enthält.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-128">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Adjustments" /> object that contains adjustment values for all the adjustments in the specified shape.</span></span> <span data-ttu-id="b4bcb-129">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-129">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b4bcb-130">Diese Eigenschaft gilt für alle Objekte, die eine <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> AutoForm, eine WordArt oder eine Verbindung darstellt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-130">This property applies to any <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> or <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object that represents an AutoShape, WordArt, or a connector.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternativeText">
      <MemberSignature Language="C#" Value="public string AlternativeText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AlternativeText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.AlternativeText" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternativeText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AlternativeText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1891)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1891)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1891)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-131">Gibt die beschreibende (alternative) Textzeichenfolge für ein Objekt zurück oder legt sie fest, wenn das Objekt <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> auf einer Webseite gespeichert wird.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-131">Returns or sets the descriptive (alternative) text string for a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object when the object is saved to a Web page.</span></span> <span data-ttu-id="b4bcb-132"><b>Zeichenfolge</b> mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-132">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b4bcb-133">Der alternative Text kann entweder statt des Bilds des Shapes im Webbrowser oder direkt über dem Bild angezeigt werden, wenn der Mauszeiger auf das Bild zeigt (in Browsern, die diese Features unterstützen).</span><span class="sxs-lookup"><span data-stu-id="b4bcb-133">The alternative text can be displayed either in place of the shape’s image in the Web browser or directly over the image when the mouse pointer hovers over the image (in browsers that support these features).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-134">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> Objekt zurück, das die Microsoft Excel-Anwendung darstellt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-134">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span> <span data-ttu-id="b4bcb-135">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-135">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Apply() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.Apply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Apply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Apply();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1675)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4bcb-136">Gilt für die angegebene Formformatierung, die mithilfe der Methode kopiert <see cref="M:Microsoft.Office.Interop.Excel.Shape.PickUp" /> wurde.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-136">Applies to the specified shape formatting that’s been copied by using the <see cref="M:Microsoft.Office.Interop.Excel.Shape.PickUp" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoShapeType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoAutoShapeType AutoShapeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoAutoShapeType AutoShapeType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.AutoShapeType" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoShapeType As MsoAutoShapeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoAutoShapeType AutoShapeType { Microsoft::Office::Core::MsoAutoShapeType get(); void set(Microsoft::Office::Core::MsoAutoShapeType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1693)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1693)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1693)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoAutoShapeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-137">Gibt den Formtyp für das angegebene Objekt zurück, der eine andere AutoForm als eine Linie, Freihandform oder Verbindung darstellen muss, oder legt <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> diesen Typ fest.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-137">Returns or sets the shape type for the specified <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object, which must represent an AutoShape other than a line, freeform drawing, or connector.</span></span> <span data-ttu-id="b4bcb-138">Lese-/Schreibzugriff. <see cref="T:Microsoft.Office.Core.MsoAutoShapeType" /></span><span class="sxs-lookup"><span data-stu-id="b4bcb-138">Read/write <see cref="T:Microsoft.Office.Core.MsoAutoShapeType" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b4bcb-139">[!HINWEIS] Wenn Sie den Typ der Form ändern, bleiben Größe, Farbe und andere Eigenschaften der Form erhalten.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-139">When you change the type of a shape, the shape retains its size, color, and other attributes.</span></span></para>
          <para><span data-ttu-id="b4bcb-140">Verwenden Sie <see cref="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Type" /> die Eigenschaft des <see cref="T:Microsoft.Office.Interop.Excel.ConnectorFormat" /> Objekts, um den Connectortyp festlegen oder zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-140">Use the <see cref="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Type" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.ConnectorFormat" /> object to set or return the connector type.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoBackgroundStyleIndex BackgroundStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoBackgroundStyleIndex BackgroundStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.BackgroundStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackgroundStyle As MsoBackgroundStyleIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoBackgroundStyleIndex BackgroundStyle { Microsoft::Office::Core::MsoBackgroundStyleIndex get(); void set(Microsoft::Office::Core::MsoBackgroundStyleIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2661)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoBackgroundStyleIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-141">Gibt das Hintergrundformat zurück oder legt es fest.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-141">Returns or sets the background style.</span></span> <span data-ttu-id="b4bcb-142">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-142">Read/write.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Core.MsoBackgroundStyleIndex" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlackWhiteMode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoBlackWhiteMode BlackWhiteMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoBlackWhiteMode BlackWhiteMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.BlackWhiteMode" />
      <MemberSignature Language="VB.NET" Value="Public Property BlackWhiteMode As MsoBlackWhiteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoBlackWhiteMode BlackWhiteMode { Microsoft::Office::Core::MsoBlackWhiteMode get(); void set(Microsoft::Office::Core::MsoBlackWhiteMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1707)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1707)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1707)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoBlackWhiteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-143">Gibt einen Wert zurück, der angibt, wie die angegebene Form angezeigt wird, wenn die Präsentation im Schwarzweißmodus betrachtet wird, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-143">Returns or sets a value that indicates how the specified shape appears when the presentation is viewed in black-and-white mode.</span></span> <span data-ttu-id="b4bcb-144">Lese-/Schreibzugriff. <see cref="T:Microsoft.Office.Core.MsoBlackWhiteMode" /></span><span class="sxs-lookup"><span data-stu-id="b4bcb-144">Read/write <see cref="T:Microsoft.Office.Core.MsoBlackWhiteMode" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomRightCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range BottomRightCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range BottomRightCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.BottomRightCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BottomRightCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ BottomRightCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(615)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(615)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-145">Gibt ein Objekt zurück, das die Zelle darstellt, die unter der rechten unteren <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Ecke des Objekts liegt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-145">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell that lies under the lower-right corner of the object.</span></span> <span data-ttu-id="b4bcb-146">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-146">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Callout">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CalloutFormat Callout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CalloutFormat Callout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Callout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Callout As CalloutFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CalloutFormat ^ Callout { Microsoft::Office::Interop::Excel::CalloutFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1694)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1694)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CalloutFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-147">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.CalloutFormat" /> Objekt zurück, das Formatierungseigenschaften für die Angegebene Form enthält.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-147">Returns a <see cref="T:Microsoft.Office.Interop.Excel.CalloutFormat" /> object that contains callout formatting properties for the specified shape.</span></span> <span data-ttu-id="b4bcb-148">Gilt für <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> Objekte, die Linienanrufe darstellen.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-148">Applies to <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objects that represent line callouts.</span></span> <span data-ttu-id="b4bcb-149">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-149">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasCropBottom">
      <MemberSignature Language="C#" Value="public void CanvasCropBottom (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CanvasCropBottom([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.CanvasCropBottom(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CanvasCropBottom (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CanvasCropBottom(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">To be added.</param>
        <summary><span data-ttu-id="b4bcb-150">Für interne Zwecke vorbehalten. </span><span class="sxs-lookup"><span data-stu-id="b4bcb-150">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasCropLeft">
      <MemberSignature Language="C#" Value="public void CanvasCropLeft (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CanvasCropLeft([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.CanvasCropLeft(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CanvasCropLeft (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CanvasCropLeft(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2172)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">To be added.</param>
        <summary><span data-ttu-id="b4bcb-151">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-151">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasCropRight">
      <MemberSignature Language="C#" Value="public void CanvasCropRight (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CanvasCropRight([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.CanvasCropRight(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CanvasCropRight (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CanvasCropRight(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2174)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">To be added.</param>
        <summary><span data-ttu-id="b4bcb-152">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-152">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasCropTop">
      <MemberSignature Language="C#" Value="public void CanvasCropTop (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CanvasCropTop([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.CanvasCropTop(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CanvasCropTop (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CanvasCropTop(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2173)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment">To be added.</param>
        <summary><span data-ttu-id="b4bcb-153">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-153">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasItems">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CanvasShapes CanvasItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CanvasShapes CanvasItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.CanvasItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanvasItems As CanvasShapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CanvasShapes ^ CanvasItems { Microsoft::Office::Core::CanvasShapes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CanvasShapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-154">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-154">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Chart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart Chart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart Chart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Chart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Chart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ Chart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-155">Gibt ein Objekt zurück, das das <see cref="T:Microsoft.Office.Interop.Excel._Chart" /> enthaltene Objekt <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-155">Returns an object that represents the <see cref="T:Microsoft.Office.Interop.Excel._Chart" /> contained in the <see cref="T:Microsoft.Office.Interop.Excel.Shape" />.</span></span> <span data-ttu-id="b4bcb-156">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-156">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel._Chart" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Child">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState Child { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState Child" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Child" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Child As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState Child { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2169)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-157">Gibt <b>msoTrue</b> zurück, wenn die angegebene Form eine untergeordnete Form ist oder alle Formen in einem Formenbereich untergeordnete Formen derselben übergeordneten Form sind.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-157">Returns <b>msoTrue</b> if the specified shape is a child shape or if all shapes in a shape range are child shapes of the same parent.</span></span> <span data-ttu-id="b4bcb-158"><see cref="T:Microsoft.Office.Core.MsoTriState" />Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-158">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionSiteCount">
      <MemberSignature Language="C#" Value="public int ConnectionSiteCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionSiteCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.ConnectionSiteCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionSiteCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ConnectionSiteCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1695)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1695)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-159">Gibt die Anzahl der Verbindungsseiten der angegebenen Form zurück.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-159">Returns the number of connection sites on the specified shape.</span></span> <span data-ttu-id="b4bcb-160">Schreibgeschützte <b>ganze Zahl</b>.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-160">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connector">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState Connector { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState Connector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Connector" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connector As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState Connector { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1696)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1696)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-161"><b>True</b>, wenn es sich bei der angegebenen Form um eine Verbindung handelt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-161"><b>True</b> if the specified shape is a connector.</span></span> <span data-ttu-id="b4bcb-162"><see cref="T:Microsoft.Office.Core.MsoTriState" />Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-162">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectorFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ConnectorFormat ConnectorFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ConnectorFormat ConnectorFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.ConnectorFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectorFormat As ConnectorFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ConnectorFormat ^ ConnectorFormat { Microsoft::Office::Interop::Excel::ConnectorFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1697)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1697)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ConnectorFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-163">Gibt ein Objekt <see cref="T:Microsoft.Office.Interop.Excel.ConnectorFormat" /> zurück, das Formatierungseigenschaften für Verbinder enthält.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-163">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ConnectorFormat" /> object that contains connector formatting properties.</span></span> <span data-ttu-id="b4bcb-164">Gilt für <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> Objekte, die Konnektoren darstellen.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-164">Applies to <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objects that represent connectors.</span></span> <span data-ttu-id="b4bcb-165">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-165">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ControlFormat ControlFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ControlFormat ControlFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.ControlFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlFormat As ControlFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ControlFormat ^ ControlFormat { Microsoft::Office::Interop::Excel::ControlFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1709)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1709)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ControlFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-166">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.ControlFormat" /> Objekt zurück, das Eigenschaften von Microsoft Excel-Steuerelementen enthält.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-166">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ControlFormat" /> object that contains Microsoft Excel control properties.</span></span> <span data-ttu-id="b4bcb-167">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-167">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4bcb-168">Kopiert das Objekt in die Zwischenablage.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-168">Copies the object to the Clipboard.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyPicture">
      <MemberSignature Language="C#" Value="public void CopyPicture (object Appearance, object Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyPicture([in]object Appearance, [in]object Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.CopyPicture(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyPicture (Optional Appearance As Object, Optional Format As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(213)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Appearance" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Appearance"><span data-ttu-id="b4bcb-169">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-169">Optional <b>Object</b>.</span></span> <span data-ttu-id="b4bcb-170">Gibt an, wie das Bild kopiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-170">Specifies how the picture should be copied.</span></span></param>
        <param name="Format"><span data-ttu-id="b4bcb-171">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-171">Optional <b>Object</b>.</span></span> <span data-ttu-id="b4bcb-172">Das Bildformat.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-172">The format of the picture.</span></span></param>
        <summary><span data-ttu-id="b4bcb-173">Kopiert das ausgewählte Objekt als Bild in die Zwischenablage.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-173">Copies the selected object to the Clipboard as a picture.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-174">Gibt einen ganzzahligen 32-Bit-Wert zurück, der die Anwendung angibt, in der dieses Objekt erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-174">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="b4bcb-175">Wenn das Objekt in Microsoft Excel erstellt wurde, gibt die Eigenschaft die Zeichenfolge XCEL zurück, die der Hexadezimalzahl 5843454C entspricht.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-175">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="b4bcb-176"><see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-176">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b4bcb-177">Die <b>Creator</b>-Eigenschaft wurde speziell für den Einsatz in Microsoft Excel für den Macintosh geschaffen, wo jede Anwendung einen Urhebercode aus vier Zeichen besitzt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-177">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="b4bcb-178">Der Urhebercode für Microsoft Excel lautet "XCEL".</span><span class="sxs-lookup"><span data-stu-id="b4bcb-178">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cut() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(565)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4bcb-179">Schneidet das Objekt aus, legt es in die Zwischenablage oder fügt es an einer angegebenen Stelle ein.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-179">Cuts the object to the Clipboard or pastes it into a specified destination.</span></span></summary>
        <remarks><para><span data-ttu-id="b4bcb-180">Der ausgeschnittene Bereich muss aus angrenzenden Zellen bestehen.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-180">The cut range must be made up of adjacent cells.</span></span></para>
          <para><span data-ttu-id="b4bcb-181">Es können nur eingebettete Diagramme ausgeschnitten werden.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-181">Only embedded charts can be cut.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4bcb-182">Löscht das Objekt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-182">Deletes the object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Diagram">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Diagram Diagram { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Diagram Diagram" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Diagram" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Diagram As Diagram" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Diagram ^ Diagram { Microsoft::Office::Interop::Excel::Diagram ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2167)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2167)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Diagram</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-183">Gibt ein Objekt <see cref="T:Microsoft.Office.Interop.Excel.Diagram" /> zurück, das ein Diagramm darstellt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-183">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Diagram" /> object representing a diagram.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiagramNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DiagramNode DiagramNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DiagramNode DiagramNode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.DiagramNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DiagramNode As DiagramNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DiagramNode ^ DiagramNode { Microsoft::Office::Interop::Excel::DiagramNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2165)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2165)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DiagramNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-184">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> Objekt zurück, das einen Knoten in einem Diagramm darstellt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-184">Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> object that represents a node in a diagram.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawingObject">
      <MemberSignature Language="C#" Value="public object DrawingObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DrawingObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.DrawingObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DrawingObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DrawingObject { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1708)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1708)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-185">Für die interne Verwendung reserviert.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-185">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duplicate">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape Duplicate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Shape Duplicate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.Duplicate" />
      <MemberSignature Language="VB.NET" Value="Public Function Duplicate () As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Shape ^ Duplicate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1039)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4bcb-186">Dupliziert das Objekt und gibt einen Bezug auf die neue Kopie zurück.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-186">Duplicates the object and returns a reference to the new copy.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.FillFormat Fill { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.FillFormat Fill" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Fill" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Fill As FillFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::FillFormat ^ Fill { Microsoft::Office::Interop::Excel::FillFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1663)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.FillFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-187">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> Objekt zurück, das Füllungsformatierungseigenschaften für das angegebene Diagramm oder die angegebene Form enthält.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-187">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object that contains fill formatting properties for the specified chart or shape.</span></span> <span data-ttu-id="b4bcb-188">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-188">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flip">
      <MemberSignature Language="C#" Value="public void Flip (Microsoft.Office.Core.MsoFlipCmd FlipCmd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flip([in]valuetype Microsoft.Office.Core.MsoFlipCmd FlipCmd) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.Flip(Microsoft.Office.Core.MsoFlipCmd)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flip (FlipCmd As MsoFlipCmd)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flip(Microsoft::Office::Core::MsoFlipCmd FlipCmd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1676)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FlipCmd" Type="Microsoft.Office.Core.MsoFlipCmd" />
      </Parameters>
      <Docs>
        <param name="FlipCmd"><span data-ttu-id="b4bcb-189"><see cref="T:Microsoft.Office.Core.MsoFlipCmd" />Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-189">Required <see cref="T:Microsoft.Office.Core.MsoFlipCmd" />.</span></span> <span data-ttu-id="b4bcb-190">Gibt an, ob die Form horizontal oder vertikal gespiegelt werden soll.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-190">Specifies whether the shape is to be flipped horizontally or vertically.</span></span></param>
        <summary><span data-ttu-id="b4bcb-191">Spiegelt die angegebene Form an ihrer horizontalen oder vertikalen Achse.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-191">Flips the specified shape around its horizontal or vertical axis.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormControlType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFormControl FormControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFormControl FormControlType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.FormControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormControlType As XlFormControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFormControl FormControlType { Microsoft::Office::Interop::Excel::XlFormControl get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1712)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1712)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFormControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-192">Gibt den Typ eines Microsoft Excel-Steuerelements zurück.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-192">Returns the Microsoft Excel control type.</span></span> <span data-ttu-id="b4bcb-193"><see cref="T:Microsoft.Office.Interop.Excel.XlFormControl" />Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-193">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlFormControl" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b4bcb-194">Sie können diese Eigenschaft nicht mit ActiveX verwenden (die Eigenschaft für das Objekt <see cref="P:Microsoft.Office.Interop.Excel.Shape.Type" /> <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> muss <b>MsoFormControl zurückgeben).</b></span><span class="sxs-lookup"><span data-stu-id="b4bcb-194">You cannot use this property with ActiveX controls (the <see cref="P:Microsoft.Office.Interop.Excel.Shape.Type" /> property for the <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object must return <b>msoFormControl</b>).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Glow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.GlowFormat Glow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.GlowFormat Glow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Glow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Glow As GlowFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::GlowFormat ^ Glow { Microsoft::Office::Core::GlowFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2663)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.GlowFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-195">Gibt ein Objekt für eine angegebene Form zurück, das Leuchtformatierungseigenschaften für diese Form enthält.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-195">Returns an object for a specified shape that contains glow formatting properties for that shape.</span></span> <span data-ttu-id="b4bcb-196">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-196">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Core.GlowFormat" /></value>
        <remarks><para><span data-ttu-id="b4bcb-197">Der Leuchteffekt fügt Grafiken einen Rand in leuchtenden Farben hinzu.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-197">The glow effect adds a vibrant colored edge to graphics.</span></span>  </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupItems">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.GroupShapes GroupItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.GroupShapes GroupItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.GroupItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GroupItems As GroupShapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::GroupShapes ^ GroupItems { Microsoft::Office::Interop::Excel::GroupShapes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1698)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1698)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.GroupShapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-198">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.GroupShapes" /> Objekt zurück, das die einzelnen Formen in der angegebenen Gruppe darstellt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-198">Returns a <see cref="T:Microsoft.Office.Interop.Excel.GroupShapes" /> object that represents the individual shapes in the specified group.</span></span> <span data-ttu-id="b4bcb-199">Verwenden Sie <see cref="M:Microsoft.Office.Interop.Excel.GroupShapes.Item(System.Object)" /> die Methode des <b>GroupShapes -Objekts,</b> um eine einzelne Form aus der Gruppe zurückzukehren.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-199">Use the <see cref="M:Microsoft.Office.Interop.Excel.GroupShapes.Item(System.Object)" /> method of the <b>GroupShapes</b> object to return a single shape from the group.</span></span> <span data-ttu-id="b4bcb-200">Gilt für <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> Objekte, die gruppierende Formen darstellen.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-200">Applies to <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objects that represent grouped shapes.</span></span> <span data-ttu-id="b4bcb-201">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-201">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HasChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HasChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.HasChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChart As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HasChart { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2658)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2658)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-202">Gibt Informationen darüber zurück, ob ein <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> Diagramm enthält.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-202">Returns information on if a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> contains a chart.</span></span> <span data-ttu-id="b4bcb-203">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-203">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Core.MsoTriState" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDiagram">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HasDiagram { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HasDiagram" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.HasDiagram" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasDiagram As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HasDiagram { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-204">Gibt zurück, ob eine Form oder ein Formenbereich ein Diagramm enthält.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-204">Returns whether a shape or shape range contains a diagram.</span></span> <span data-ttu-id="b4bcb-205"><see cref="T:Microsoft.Office.Core.MsoTriState" />Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-205">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDiagramNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HasDiagramNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HasDiagramNode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.HasDiagramNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasDiagramNode As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HasDiagramNode { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2166)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2166)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-206">Gibt einen Wert zurück, der angibt, ob ein Diagrammknoten in einer bestimmten Form oder einem bestimmten Formbereich vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-206">Returns a value indicating whether a diagram node exists in a given shape or shape range.</span></span> <span data-ttu-id="b4bcb-207"><see cref="T:Microsoft.Office.Core.MsoTriState" />Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-207">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSmartArt">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HasSmartArt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HasSmartArt" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.HasSmartArt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasSmartArt As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HasSmartArt { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2918)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2918)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-208">Ruft ab, ob ein SmartArt-Diagramm in der angegebenen Form vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-208">Gets whether there is a SmartArt diagram present on the specified shape.</span></span></summary>
        <value><span data-ttu-id="b4bcb-209">Ein <see cref="T:Microsoft.Office.Core.MsoTriState" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-209">A <see cref="T:Microsoft.Office.Core.MsoTriState" /> object.</span></span></value>
        <remarks><para><span data-ttu-id="b4bcb-210">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-210">Read-only.</span></span></para>
          <para><span data-ttu-id="b4bcb-211">msoTrue
            <b>msoTrue</b> (-1), wenn ein SmartArt-Diagramm auf der Form vorhanden ist, andernfalls <b>msoFalse</b> (0).</span><span class="sxs-lookup"><span data-stu-id="b4bcb-211">
            <b>msoTrue</b> (-1) if there is a SmartArt diagram present on the shape; otherwise <b>msoFalse</b> (0).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public float Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Height { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-212">Die Höhe des Objekts.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-212">The height of the object.</span></span> <span data-ttu-id="b4bcb-213">Lese-/Schreibzugriff <b>einzelnen</b>.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-213">Read/write <b>Single</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalFlip">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState HorizontalFlip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState HorizontalFlip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.HorizontalFlip" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HorizontalFlip As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState HorizontalFlip { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1699)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1699)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-214"><b>True</b>, wenn die angegebene Form um die horizontale Achse gekippt ist.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-214"><b>True</b> if the specified shape is flipped around the horizontal axis.</span></span> <span data-ttu-id="b4bcb-215"><see cref="T:Microsoft.Office.Core.MsoTriState" />Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-215">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlink">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlink Hyperlink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlink Hyperlink" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Hyperlink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hyperlink As Hyperlink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Hyperlink ^ Hyperlink { Microsoft::Office::Interop::Excel::Hyperlink ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1706)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1706)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-216">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Hyperlink" /> Objekt zurück, das den Hyperlink für die Form darstellt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-216">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlink" /> object that represents the hyperlink for the shape.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public int ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.ID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ID { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(570)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(570)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-217">Gibt den Typ für das angegebene Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-217">Returns the type for the specified object.</span></span> <span data-ttu-id="b4bcb-218">Schreibgeschützte <b>ganze Zahl</b>.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-218">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b4bcb-219">Sie können eine ID-Beschriftung in anderen HTML-Dokumenten oder auf derselben Webseite als Hyperlinkverweis verwenden.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-219">You can use an ID label as a hyperlink reference in other HTML documents or on the same Web page.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementLeft">
      <MemberSignature Language="C#" Value="public void IncrementLeft (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IncrementLeft([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.IncrementLeft(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncrementLeft (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncrementLeft(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1678)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment"><span data-ttu-id="b4bcb-220">Erforderlicher <b>Single</b>-Wert.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-220">Required <b>Single</b>.</span></span> <span data-ttu-id="b4bcb-221">Gibt an, wie weit die Form horizontal in Punkt verschoben werden soll.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-221">Specifies how far the shape is to be moved horizontally in points.</span></span> <span data-ttu-id="b4bcb-222">Ein positiver Wert verschiebt die Form nach rechts, ein negativer Wert verschiebt sie nach links.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-222">A positive value moves the shape to the right; a negative value moves it to the left.</span></span></param>
        <summary><span data-ttu-id="b4bcb-223">Verschiebt die angegebene Form horizontal um die angegebene Punktanzahl.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-223">Moves the specified shape horizontally by the specified number of points.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementRotation">
      <MemberSignature Language="C#" Value="public void IncrementRotation (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IncrementRotation([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.IncrementRotation(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncrementRotation (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncrementRotation(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1680)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment"><span data-ttu-id="b4bcb-224">Erforderlicher <b>Single</b>-Wert.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-224">Required <b>Single</b>.</span></span> <span data-ttu-id="b4bcb-225">Gibt an, wie weit die Form horizontal in Grad gedreht werden soll.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-225">Specifies how far the shape is to be rotated horizontally in degrees.</span></span> <span data-ttu-id="b4bcb-226">Ein positiver Wert dreht die Form im Uhrzeigersinn; ein negativer Wert gegen den Uhrzeigersinn gedreht.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-226">A positive value rotates the shape clockwise; a negative value rotates it counterclockwise.</span></span></param>
        <summary><span data-ttu-id="b4bcb-227">Ändert die Drehung der angegebenen Form um die z-Achse um die angegebene Gradzahl.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-227">Changes the rotation of the specified shape around the z-axis by the specified number of degrees.</span></span> <span data-ttu-id="b4bcb-228">Mit der <see cref="P:Microsoft.Office.Interop.Excel.Shape.Rotation" /> Eigenschaft können Sie die absolute Drehung der Form festlegen.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-228">Use the <see cref="P:Microsoft.Office.Interop.Excel.Shape.Rotation" /> property to set the absolute rotation of the shape.</span></span></summary>
        <remarks><para><span data-ttu-id="b4bcb-229">Um eine dreidimensionale Form um die X-Achse oder die Y-Achse zu drehen, verwenden Sie die <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationX(System.Single)" /> Methode oder die <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationY(System.Single)" /> Methode.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-229">To rotate a three-dimensional shape around the x-axis or the y-axis, use the <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationX(System.Single)" /> method or the <see cref="M:Microsoft.Office.Interop.Excel.ThreeDFormat.IncrementRotationY(System.Single)" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementTop">
      <MemberSignature Language="C#" Value="public void IncrementTop (float Increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IncrementTop([in]float32 Increment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.IncrementTop(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncrementTop (Increment As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncrementTop(float Increment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1681)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Increment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Increment"><span data-ttu-id="b4bcb-230">Erforderlicher <b>Single</b>-Wert.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-230">Required <b>Single</b>.</span></span> <span data-ttu-id="b4bcb-231">Gibt an, wie weit das Formobjekt vertikal in Punkt verschoben werden soll.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-231">Specifies how far the shape object is to be moved vertically in points.</span></span> <span data-ttu-id="b4bcb-232">Ein positiver Wert verschiebt die Form nach unten, ein negativer Wert verschiebt sie nach oben.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-232">A positive value moves the shape down; a negative value moves it up.</span></span></param>
        <summary><span data-ttu-id="b4bcb-233">Verschiebt die angegebene Form vertikal um die angegebene Anzahl von Punkten.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-233">Moves the specified shape vertically by the specified number of points.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public float Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Left { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-234">Der Abstand zwischen dem linken Rand des Objekts und dem linken Rand von Spalte A (auf einem Arbeitsblatt) oder dem linken Rand des Diagrammbereichs (in einem Diagramm).</span><span class="sxs-lookup"><span data-stu-id="b4bcb-234">The distance from the left edge of the object to the left edge of column A (on a worksheet) or the left edge of the chart area (on a chart).</span></span> <span data-ttu-id="b4bcb-235">Lese-/Schreibzugriff <b>einzelnen</b>.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-235">Read/write <b>Single</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Line">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.LineFormat Line { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.LineFormat Line" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Line" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Line As LineFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::LineFormat ^ Line { Microsoft::Office::Interop::Excel::LineFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(817)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(817)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.LineFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-236">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.LineFormat" /> Objekt zurück, das Linienformatierungseigenschaften für die angegebene Form enthält.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-236">Returns a <see cref="T:Microsoft.Office.Interop.Excel.LineFormat" /> object that contains line formatting properties for the specified shape.</span></span> <span data-ttu-id="b4bcb-237">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-237">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b4bcb-238">Bei einer Linie stellt <b>das LineFormat -Objekt</b> die Linie selbst dar; für eine Form mit einem Rahmen stellt <b>das LineFormat -Objekt</b> den Rahmen dar.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-238">For a line, the <b>LineFormat</b> object represents the line itself; for a shape with a border, the <b>LineFormat</b> object represents the border.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.LinkFormat LinkFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.LinkFormat LinkFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.LinkFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinkFormat As LinkFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::LinkFormat ^ LinkFormat { Microsoft::Office::Interop::Excel::LinkFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1710)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1710)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.LinkFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-239">Gibt ein Objekt <see cref="T:Microsoft.Office.Interop.Excel.LinkFormat" /> zurück, das verknüpfte Eigenschaften des OBJEKTS enthält.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-239">Returns a <see cref="T:Microsoft.Office.Interop.Excel.LinkFormat" /> object that contains linked OLE object properties.</span></span> <span data-ttu-id="b4bcb-240">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-240">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockAspectRatio">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState LockAspectRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState LockAspectRatio" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.LockAspectRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property LockAspectRatio As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState LockAspectRatio { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1700)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1700)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1700)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-241"><b>True</b>, wenn für die angegebene Form bei einer Größenänderung deren ursprüngliche Proportionen beibehalten werden.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-241"><b>True</b> if the specified shape retains its original proportions when you resize it.</span></span> <span data-ttu-id="b4bcb-242"><b>False</b>, wenn Sie bei einer Größenänderung die Höhe und Breite der Form unabhängig voneinander ändern können.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-242"><b>False</b> if you can change the height and width of the shape independently of one another when you resize it.</span></span> <span data-ttu-id="b4bcb-243">Lese-/Schreibzugriff. <see cref="T:Microsoft.Office.Core.MsoTriState" /></span><span class="sxs-lookup"><span data-stu-id="b4bcb-243">Read/write <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Locked">
      <MemberSignature Language="C#" Value="public bool Locked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Locked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Locked" />
      <MemberSignature Language="VB.NET" Value="Public Property Locked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Locked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-244"><b>True,</b> wenn das Objekt gesperrt ist, <b>False,</b> wenn das Objekt geändert werden kann, wenn das Blatt geschützt ist.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-244"><b>True</b> if the object is locked, <b>False</b> if the object can be modified when the sheet is protected.</span></span> <span data-ttu-id="b4bcb-245"><b>Boolescher</b> Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-245">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-246">Gibt den Namen des Objekts zurück oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-246">Returns or sets the name of the object.</span></span> <span data-ttu-id="b4bcb-247"><b>String</b> -Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-247">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b4bcb-248">Die folgende Tabelle enthält Beispielwerte der <b>Name</b>-Eigenschaft und verwandter Eigenschaften. Dabei wird von einer OLAP-Datenquelle mit dem eindeutigen Namen "[Europa].[Frankreich].[Paris]" und einer Nicht-OLAP-Datenquelle mit dem Elementnamen "Paris" ausgegangen.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-248">The following table shows example values of the <b>Name</b> property and related properties given an OLAP data source with the unique name "[Europe].[France].[Paris]" and a non-OLAP data source with the item name "Paris".</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="b4bcb-249">
                <b>Caption</b>
              </span><span class="sxs-lookup"><span data-stu-id="b4bcb-249">
                <b>Caption</b>
              </span></span></term>
              <description><span data-ttu-id="b4bcb-250">Paris</span><span class="sxs-lookup"><span data-stu-id="b4bcb-250">Paris</span></span></description>
              <description><span data-ttu-id="b4bcb-251">Paris</span><span class="sxs-lookup"><span data-stu-id="b4bcb-251">Paris</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="b4bcb-252">
                <b>Name</b>
              </span><span class="sxs-lookup"><span data-stu-id="b4bcb-252">
                <b>Name</b>
              </span></span></term>
              <description><span data-ttu-id="b4bcb-253">[Europa].[Frankreich].[Paris] (schreibgeschützt)</span><span class="sxs-lookup"><span data-stu-id="b4bcb-253">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="b4bcb-254">Paris</span><span class="sxs-lookup"><span data-stu-id="b4bcb-254">Paris</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="b4bcb-255">
                <b>SourceName</b>
              </span><span class="sxs-lookup"><span data-stu-id="b4bcb-255">
                <b>SourceName</b>
              </span></span></term>
              <description><span data-ttu-id="b4bcb-256">[Europa].[Frankreich].[Paris] (schreibgeschützt)</span><span class="sxs-lookup"><span data-stu-id="b4bcb-256">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="b4bcb-257">(Identisch mit SQL-Eigenschaftenwert, schreibgeschützt)</span><span class="sxs-lookup"><span data-stu-id="b4bcb-257">(Same as SQL property value, read-only)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="b4bcb-258">
                <b>Wert</b>
              </span><span class="sxs-lookup"><span data-stu-id="b4bcb-258">
                <b>Value</b>
              </span></span></term>
              <description><span data-ttu-id="b4bcb-259">[Europa].[Frankreich].[Paris] (schreibgeschützt)</span><span class="sxs-lookup"><span data-stu-id="b4bcb-259">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="b4bcb-260">Paris</span><span class="sxs-lookup"><span data-stu-id="b4bcb-260">Paris</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="b4bcb-261">Wenn Sie einen Index in der Auflistung angeben, können Sie <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> die in der folgenden Tabelle gezeigte Syntax verwenden.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-261">When specifying an index into the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, you can use the syntax shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="b4bcb-262">Ausdruck. PivotItems("[Europe].[ Frankreich]. [Paris]")</span><span class="sxs-lookup"><span data-stu-id="b4bcb-262">expression.PivotItems("[Europe].[France].[Paris]")</span></span></term>
              <description><span data-ttu-id="b4bcb-263">Expression.PivotItems("Paris")</span><span class="sxs-lookup"><span data-stu-id="b4bcb-263">Expression.PivotItems("Paris")</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="b4bcb-264">Wenn Sie die Eigenschaft verwenden, um auf ein bestimmtes Element einer Auflistung zu verweisen, können Sie den Textindexnamen wie in der <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> folgenden Tabelle dargestellt verwenden.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-264">When using the <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> property to reference a specific member of a collection, you can use the text index name as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="b4bcb-265">[Europa]. [Frankreich]. [Paris]</span><span class="sxs-lookup"><span data-stu-id="b4bcb-265">[Europe].[France].[Paris]</span></span></term>
              <description><span data-ttu-id="b4bcb-266">Paris</span><span class="sxs-lookup"><span data-stu-id="b4bcb-266">Paris</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShapeNodes Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ShapeNodes Nodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As ShapeNodes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ShapeNodes ^ Nodes { Microsoft::Office::Interop::Excel::ShapeNodes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1701)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1701)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShapeNodes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-267">Gibt eine <see cref="T:Microsoft.Office.Interop.Excel.ShapeNodes" /> Auflistung zurück, die die geometrische Beschreibung der angegebenen Form darstellt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-267">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ShapeNodes" /> collection that represents the geometric description of the specified shape.</span></span> <span data-ttu-id="b4bcb-268">Gilt für <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> Objekte, die Freihandzeichnungen darstellen.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-268">Applies to <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objects that represent freeform drawings.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.OLEFormat OLEFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.OLEFormat OLEFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.OLEFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OLEFormat As OLEFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::OLEFormat ^ OLEFormat { Microsoft::Office::Interop::Excel::OLEFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1711)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1711)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.OLEFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-269">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.OLEFormat" /> Objekt zurück, das ole-Objekteigenschaften enthält.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-269">Returns an <see cref="T:Microsoft.Office.Interop.Excel.OLEFormat" /> object that contains OLE object properties.</span></span> <span data-ttu-id="b4bcb-270">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-270">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAction">
      <MemberSignature Language="C#" Value="public string OnAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.OnAction" />
      <MemberSignature Language="VB.NET" Value="Public Property OnAction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnAction { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(596)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(596)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(596)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-271">Gibt den Namen des Makros zurück, das ausgeführt wird, wenn auf das angegebene Objekt geklickt wird, oder legt den Namen fest.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-271">Returns or sets the name of a macro that’s run when the specified object is clicked.</span></span> <span data-ttu-id="b4bcb-272"><b>String</b>-Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-272">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b4bcb-273">Durch Festlegen dieser Eigenschaft für ein Menüelement werden alle benutzerdefinierten, für das Menüelement eingerichteten Hilfeinformationen mit den für das zugewiesene Makro eingerichteten Informationen überschrieben.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-273">Setting this property for a menu item overrides any custom help information set up for the menu item with the information set up for the assigned macro.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-274">Gibt das übergeordnete Objekt für das angegebene Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-274">Returns the parent object for the specified object.</span></span> <span data-ttu-id="b4bcb-275">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-275">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape ParentGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shape ParentGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.ParentGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentGroup As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shape ^ ParentGroup { Microsoft::Office::Interop::Excel::Shape ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-276">Gibt ein Objekt zurück, das die allgemeine übergeordnete Form einer untergeordneten Form oder <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> eines Bereichs von untergeordneten Formen darstellt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-276">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object that represents the common parent shape of a child shape or a range of child shapes.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PickUp">
      <MemberSignature Language="C#" Value="public void PickUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PickUp() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.PickUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub PickUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PickUp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1682)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4bcb-277">Kopiert die Formatierung der angegebenen Form.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-277">Copies the formatting of the specified shape.</span></span> <span data-ttu-id="b4bcb-278">Verwenden Sie <see cref="M:Microsoft.Office.Interop.Excel.Shape.Apply" /> die Methode, um die kopierte Formatierung auf eine andere Form anzuwenden.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-278">Use the <see cref="M:Microsoft.Office.Interop.Excel.Shape.Apply" /> method to apply the copied formatting to another shape.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PictureFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PictureFormat PictureFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PictureFormat PictureFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.PictureFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PictureFormat As PictureFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PictureFormat ^ PictureFormat { Microsoft::Office::Interop::Excel::PictureFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1631)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1631)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PictureFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-279">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.PictureFormat" /> Objekt zurück, das Bildformatierungseigenschaften für die angegebene Form enthält.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-279">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PictureFormat" /> object that contains picture formatting properties for the specified shape.</span></span> <span data-ttu-id="b4bcb-280">Gilt für <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> Objekte, die Bilder oder OLE-Objekte darstellen.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-280">Applies to <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objects that represent pictures or OLE objects.</span></span> <span data-ttu-id="b4bcb-281">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-281">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Placement">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPlacement Placement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPlacement Placement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Placement" />
      <MemberSignature Language="VB.NET" Value="Public Property Placement As XlPlacement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPlacement Placement { Microsoft::Office::Interop::Excel::XlPlacement get(); void set(Microsoft::Office::Interop::Excel::XlPlacement value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(617)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(617)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(617)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPlacement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-282">Gibt die Art zurück, in der das Objekt an die zellen darunter stehenden Zellen angefügt wird, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-282">Returns or sets the way the object is attached to the cells below it.</span></span> <span data-ttu-id="b4bcb-283">Lese-/Schreibzugriff. <see cref="T:Microsoft.Office.Interop.Excel.XlPlacement" /></span><span class="sxs-lookup"><span data-stu-id="b4bcb-283">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlPlacement" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reflection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.ReflectionFormat Reflection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.ReflectionFormat Reflection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Reflection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Reflection As ReflectionFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::ReflectionFormat ^ Reflection { Microsoft::Office::Core::ReflectionFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2664)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2664)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.ReflectionFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-284">Gibt ein Objekt zurück, das Spiegelungsformatierungseigenschaften für die Form enthält.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-284">Returns an object that contains reflection formatting properties for the shape.</span></span> <span data-ttu-id="b4bcb-285">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-285">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Core.ReflectionFormat" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RerouteConnections">
      <MemberSignature Language="C#" Value="public void RerouteConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RerouteConnections() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" />
      <MemberSignature Language="VB.NET" Value="Public Sub RerouteConnections ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RerouteConnections();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1683)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4bcb-286">Leitet Connectors, damit sie den kürzesten möglichen Weg zwischen den Shapes nutzen, die sie verbinden.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-286">Reroutes connectors so that they take the shortest possible path between the shapes they connect.</span></span></summary>
        <remarks><para><span data-ttu-id="b4bcb-287">Um den kürzesten Pfad zu verwenden, kann die <b>RerouteConnections</b> -Methode die Enden einer Verbindung trennen und sie an verschiedene Verbindungsseiten an den verbundenen Shapes anbinden.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-287">To use the shortest path, the <b>RerouteConnections</b> method may detach the ends of a connector and reattach them to different connecting sites on the connected shapes.</span></span> <span data-ttu-id="b4bcb-288">Diese Methode erstellt alle Verbindungen neu, die der angegebenen Form angefügt sind. Handelt es sich bei der angegebenen Form um eine Verbindung, wird sie neu erstellt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-288">This method reroutes all connectors attached to the specified shape; if the specified shape is a connector, it’s rerouted.</span></span></para>
          <para><span data-ttu-id="b4bcb-p153">Wenn diese Methode auf eine Verbindung angewendet wird, wird nur die betreffende Verbindung umgeleitet. Wenn die Methode auf eine verbundene Form angewendet wird, werden sämtliche Verbindungen zu der Form umgeleitet.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-p153">If this method is applied to a connector, only that connector will be rerouted. If this method is applied to a connected shape, all connectors to that shape will be rerouted.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public float Rotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Rotation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Rotation" />
      <MemberSignature Language="VB.NET" Value="Public Property Rotation As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Rotation { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-291">Gibt die Drehung der Form in Grad zurück oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-291">Returns or sets the rotation of the shape in degrees.</span></span> <span data-ttu-id="b4bcb-292">Lese-/Schreibzugriff <b>einzelnen</b>.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-292">Read/write <b>Single</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleHeight">
      <MemberSignature Language="C#" Value="public void ScaleHeight (float Factor, Microsoft.Office.Core.MsoTriState RelativeToOriginalSize, object Scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScaleHeight([in]float32 Factor, [in]valuetype Microsoft.Office.Core.MsoTriState RelativeToOriginalSize, [in]object Scale) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.ScaleHeight(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleHeight (Factor As Single, RelativeToOriginalSize As MsoTriState, Optional Scale As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1684)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Factor" Type="System.Single" />
        <Parameter Name="RelativeToOriginalSize" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="Scale" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Factor"><span data-ttu-id="b4bcb-293">Erforderlicher <b>Single</b>-Wert.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-293">Required <b>Single</b>.</span></span> <span data-ttu-id="b4bcb-294">Gibt das Verhältnis zwischen der Höhe der Form nach der Änderung ihrer Größe und der aktuellen oder ursprünglichen Höhe an.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-294">Specifies the ratio between the height of the shape after you resize it and the current or original height.</span></span> <span data-ttu-id="b4bcb-295">Beispiel: Um ein Rechteck um 50 Prozent zu vergrößern, geben Sie für dieses Argument 1,5 an.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-295">For example, to make a rectangle 50 percent larger, specify 1.5 for this argument.</span></span></param>
        <param name="RelativeToOriginalSize"><span data-ttu-id="b4bcb-296"><see cref="T:Microsoft.Office.Core.MsoTriState" />Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-296">Required <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span> <span data-ttu-id="b4bcb-297">Mit  <b>msoTrue</b> wird die Form relativ zu ihrer Originalgröße skaliert.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-297"><b>msoTrue</b> to scale the shape relative to its original size.</span></span> <span data-ttu-id="b4bcb-298">Mit <b>msoFalse</b> wird sie relativ zu ihrer aktuellen Größe skaliert.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-298"><b>msoFalse</b> to scale it relative to its current size.</span></span> <span data-ttu-id="b4bcb-299">Sie können den Wert <b>msoTrue</b> für dieses Argument nur angeben, wenn es sich bei der angegebenen Form um ein Bild oder ein OLE-Objekt handelt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-299">You can specify <b>msoTrue</b> for this argument only if the specified shape is a picture or an OLE object.</span></span></param>
        <param name="Scale"><span data-ttu-id="b4bcb-300">Optional <see cref="T:Microsoft.Office.Core.MsoScaleFrom" /> .</span><span class="sxs-lookup"><span data-stu-id="b4bcb-300">Optional <see cref="T:Microsoft.Office.Core.MsoScaleFrom" />.</span></span> <span data-ttu-id="b4bcb-301">Gibt an, welcher Teil der Form beim Skalieren die Position beibehält.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-301">Specifies which part of the shape retains its position when the shape is scaled.</span></span></param>
        <summary><span data-ttu-id="b4bcb-302">Skaliert die Höhe der Form anhand eines angegebenen Faktors.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-302">Scales the height of the shape by a specified factor.</span></span></summary>
        <remarks><para><span data-ttu-id="b4bcb-303">Bei Bildern und OLE-Objekten können Sie angeben, ob die Form relativ zu ihrer ursprünglichen oder ihrer aktuellen Größe skaliert werden soll.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-303">For pictures and OLE objects, you can indicate whether you want to scale the shape relative to the original or the current size.</span></span> <span data-ttu-id="b4bcb-304">Andere Formen als Bilder und OLE-Objekte werden immer relativ zu ihrer aktuellen Höhe skaliert.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-304">Shapes other than pictures and OLE objects are always scaled relative to their current height.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleWidth">
      <MemberSignature Language="C#" Value="public void ScaleWidth (float Factor, Microsoft.Office.Core.MsoTriState RelativeToOriginalSize, object Scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScaleWidth([in]float32 Factor, [in]valuetype Microsoft.Office.Core.MsoTriState RelativeToOriginalSize, [in]object Scale) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.ScaleWidth(System.Single,Microsoft.Office.Core.MsoTriState,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleWidth (Factor As Single, RelativeToOriginalSize As MsoTriState, Optional Scale As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1688)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Factor" Type="System.Single" />
        <Parameter Name="RelativeToOriginalSize" Type="Microsoft.Office.Core.MsoTriState" />
        <Parameter Name="Scale" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Factor"><span data-ttu-id="b4bcb-305">Erforderlicher <b>Single</b>-Wert.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-305">Required <b>Single</b>.</span></span> <span data-ttu-id="b4bcb-306">Gibt das Verhältnis zwischen der Breite der Form nach der Änderung ihrer Größe und der aktuellen oder ursprünglichen Breite an.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-306">Specifies the ratio between the width of the shape after you resize it and the current or original width.</span></span> <span data-ttu-id="b4bcb-307">Beispiel: Um ein Rechteck um 50 Prozent zu verbreitern, geben Sie für dieses Argument 1,5 an.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-307">For example, to make a rectangle 50 percent larger, specify 1.5 for this argument.</span></span></param>
        <param name="RelativeToOriginalSize"><span data-ttu-id="b4bcb-308"><see cref="T:Microsoft.Office.Core.MsoTriState" />Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-308">Required <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span> <span data-ttu-id="b4bcb-309">Mit  False wird die Form relativ zu ihrer aktuellen Größe skaliert.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-309">False to scale it relative to its current size.</span></span> <span data-ttu-id="b4bcb-310">Sie können den Wert True für dieses Argument nur angeben, wenn es sich bei der angegebenen Form um ein Bild oder ein OLE-Objekt handelt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-310">You can specify True for this argument only if the specified shape is a picture or an OLE object.</span></span></param>
        <param name="Scale"><span data-ttu-id="b4bcb-311">Optional <see cref="T:Microsoft.Office.Core.MsoScaleFrom" /> .</span><span class="sxs-lookup"><span data-stu-id="b4bcb-311">Optional <see cref="T:Microsoft.Office.Core.MsoScaleFrom" />.</span></span> <span data-ttu-id="b4bcb-312">Gibt an, welcher Teil der Form beim Skalieren die Position beibehält.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-312">Specifies which part of the shape retains its position when the shape is scaled.</span></span></param>
        <summary><span data-ttu-id="b4bcb-313">Skaliert die Breite der Form anhand eines angegebenen Faktors.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-313">Scales the width of the shape by a specified factor.</span></span></summary>
        <remarks><para><span data-ttu-id="b4bcb-314">Bei Bildern und OLE-Objekten können Sie angeben, ob die Form relativ zu ihrer ursprünglichen oder ihrer aktuellen Größe skaliert werden soll.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-314">For pictures and OLE objects, you can indicate whether you want to scale the shape relative to the original or the current size.</span></span> <span data-ttu-id="b4bcb-315">Andere Formen als Bilder und OLE-Objekte werden immer relativ zu ihrer aktuellen Breite skaliert.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-315">Shapes other than pictures and OLE objects are always scaled relative to their current width.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Script">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Script Script { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Script Script" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Script" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Script As Script" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Script ^ Script { Microsoft::Office::Core::Script ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1892)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1892)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Script</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-316">Gibt das <b>Script</b>-Objekt zurück, das einen Skript- oder Codeblock auf der angegebenen Webseite darstellt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-316">Returns the <b>Script</b> object, which represents a block of script or code on the specified Web page.</span></span> <span data-ttu-id="b4bcb-317">Wenn die Seite kein Skript enthält, erfolgt keine Rückgabe.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-317">If the page contains no script, nothing is returned.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace"><span data-ttu-id="b4bcb-318">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-318">Optional <b>Object</b>.</span></span> <span data-ttu-id="b4bcb-319">Das zu ersetzende Objekt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-319">The object to replace.</span></span></param>
        <summary><span data-ttu-id="b4bcb-320">Markiert das Objekt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-320">Selects the object.</span></span></summary>
        <remarks><para><span data-ttu-id="b4bcb-321">Mithilfe der <b>Select</b>-Methode können Sie eine Zelle oder einen Zellbereich markieren.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-321">To select a cell or a range of cells, use the <b>Select</b> method.</span></span> <span data-ttu-id="b4bcb-322">Verwenden Sie die Methode, um eine einzelne Zelle zur aktiven Zelle <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> zu machen.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-322">To make a single cell the active cell, use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShapesDefaultProperties">
      <MemberSignature Language="C#" Value="public void SetShapesDefaultProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetShapesDefaultProperties() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.SetShapesDefaultProperties" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetShapesDefaultProperties ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetShapesDefaultProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1689)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4bcb-323">Übernimmt die Formatierung der angegebenen Form als Standardformatierung für die Form.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-323">Makes the formatting of the specified shape the default formatting for the shape.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shadow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShadowFormat Shadow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ShadowFormat Shadow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Shadow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Shadow As ShadowFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ShadowFormat ^ Shadow { Microsoft::Office::Interop::Excel::ShadowFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShadowFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-324"><b>True,</b> Wenn das Objekt einen Schatten hat.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-324"><b>True</b> if the object has a shadow.</span></span> <span data-ttu-id="b4bcb-325"><b>Boolescher</b> Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-325">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShapeStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoShapeStyleIndex ShapeStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoShapeStyleIndex ShapeStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.ShapeStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ShapeStyle As MsoShapeStyleIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoShapeStyleIndex ShapeStyle { Microsoft::Office::Core::MsoShapeStyleIndex get(); void set(Microsoft::Office::Core::MsoShapeStyleIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2660)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoShapeStyleIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-326">Gibt einen Wert zurück, der <see cref="T:Microsoft.Office.Core.MsoShapeStyleIndex" /> die Formart der Form darstellt, oder legt den Wert fest.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-326">Returns or sets a <see cref="T:Microsoft.Office.Core.MsoShapeStyleIndex" /> that represents the shape style of the shape.</span></span> <span data-ttu-id="b4bcb-327">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-327">Read/write.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Core.MsoShapeStyleIndex" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArt">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArt SmartArt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArt SmartArt" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.SmartArt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArt As SmartArt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArt ^ SmartArt { Microsoft::Office::Core::SmartArt ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2919)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2919)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArt</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-328">Ruft ein Objekt ab, das die dem Shape zugeordnete SmartArt darstellt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-328">Gets an object that represents the SmartArt associated with the shape.</span></span></summary>
        <value><span data-ttu-id="b4bcb-329">Ein Objekt, das die dem Shape zugeordnete SmartArt darstellt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-329">An object that represents the SmartArt associated with the shape.</span></span></value>
        <remarks><para><span data-ttu-id="b4bcb-330">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-330">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SoftEdge">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SoftEdgeFormat SoftEdge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SoftEdgeFormat SoftEdge" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.SoftEdge" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoftEdge As SoftEdgeFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SoftEdgeFormat ^ SoftEdge { Microsoft::Office::Core::SoftEdgeFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2662)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2662)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SoftEdgeFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-331">Gibt ein <see cref="T:Microsoft.Office.Core.SoftEdgeFormat" /> Objekt für eine angegebene Form zurück, das Formatierungseigenschaften für weiche Kanten für die Form enthält.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-331">Returns a <see cref="T:Microsoft.Office.Core.SoftEdgeFormat" /> object for a specified shape that contains soft edge formatting properties for the shape.</span></span> <span data-ttu-id="b4bcb-332">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-332">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Core.SoftEdgeFormat" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextEffect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TextEffectFormat TextEffect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TextEffectFormat TextEffect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.TextEffect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextEffect As TextEffectFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TextEffectFormat ^ TextEffect { Microsoft::Office::Interop::Excel::TextEffectFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1702)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1702)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TextEffectFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-333">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.TextEffectFormat" /> Objekt zurück, das Formatierungseigenschaften des Texteffekts für die angegebene Form enthält.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-333">Returns a <see cref="T:Microsoft.Office.Interop.Excel.TextEffectFormat" /> object that contains text-effect formatting properties for the specified shape.</span></span> <span data-ttu-id="b4bcb-334">Gilt für <b>T:Microsoft.Office.Interop.Excel.Shape-Objekte,</b> die WordArt darstellen.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-334">Applies to <b>T:Microsoft.Office.Interop.Excel.Shape</b> objects that represent WordArt.</span></span> <span data-ttu-id="b4bcb-335">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-335">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFrame">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TextFrame TextFrame { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TextFrame TextFrame" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.TextFrame" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextFrame As TextFrame" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TextFrame ^ TextFrame { Microsoft::Office::Interop::Excel::TextFrame ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1692)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1692)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TextFrame</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-336">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.TextFrame" /> Objekt zurück, das die Ausrichtungs- und Verankerungseigenschaften für die angegebene Form enthält.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-336">Returns a <see cref="T:Microsoft.Office.Interop.Excel.TextFrame" /> object that contains the alignment and anchoring properties for the specified shape.</span></span> <span data-ttu-id="b4bcb-337">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-337">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFrame2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TextFrame2 TextFrame2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TextFrame2 TextFrame2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.TextFrame2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextFrame2 As TextFrame2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TextFrame2 ^ TextFrame2 { Microsoft::Office::Interop::Excel::TextFrame2 ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2659)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2659)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TextFrame2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-338">Gibt ein Objekt zurück, das Textformatierung für die angegebene Form enthält.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-338">Returns an object that contains text formatting for the specified shape.</span></span> <span data-ttu-id="b4bcb-339">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-339">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.TextFrame2" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreeD">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ThreeDFormat ThreeD { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ThreeDFormat ThreeD" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.ThreeD" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreeD As ThreeDFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ThreeDFormat ^ ThreeD { Microsoft::Office::Interop::Excel::ThreeDFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1703)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1703)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ThreeDFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-340">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> Objekt zurück, das Formatierungseigenschaften für 3D-Effekte für die angegebene Form enthält.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-340">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ThreeDFormat" /> object that contains 3-D – effect formatting properties for the specified shape.</span></span> <span data-ttu-id="b4bcb-341">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-341">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-342">Ruft den Titel des alternativen Texts ab, der der angegebenen Form zugeordnet ist, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-342">Gets or sets the title of the alternative text associated with the specified shape.</span></span></summary>
        <value><span data-ttu-id="b4bcb-343">Der Titel des alternativen Texts, der der angegebenen Form zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-343">The title of the alternative text associated with the specified shape.</span></span></value>
        <remarks><para><span data-ttu-id="b4bcb-344">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-344">Read/write.</span></span></para>
          <para><span data-ttu-id="b4bcb-345">Verwenden Sie die Eigenschaft, um die beschreibende Textzeichenfolge des alternativen Texts für eine Form <see cref="P:Microsoft.Office.Interop.Excel.Shape.AlternativeText" /> festlegen.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-345">To set the descriptive text string of the alternative text for a shape, use the <see cref="P:Microsoft.Office.Interop.Excel.Shape.AlternativeText" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public float Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Top { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-346">Der Abstand zwischen dem oberen Rand der obersten Form im Formbereich und dem oberen Rand des Arbeitsblatts.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-346">The distance from the top edge of the topmost shape in the shape range to the top edge of the worksheet.</span></span> <span data-ttu-id="b4bcb-347">Lese-/Schreibzugriff <b>einzelnen</b>.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-347">Read/write <b>Single</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopLeftCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range TopLeftCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range TopLeftCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.TopLeftCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopLeftCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ TopLeftCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(620)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(620)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-348">Gibt ein Objekt zurück, das die Zelle darstellt, die sich unter der oberen <see cref="T:Microsoft.Office.Interop.Excel.Range" /> linken Ecke des angegebenen Objekts befindet.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-348">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell that lies under the upper-left corner of the specified object.</span></span> <span data-ttu-id="b4bcb-349">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-349">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoShapeType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoShapeType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As MsoShapeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoShapeType Type { Microsoft::Office::Core::MsoShapeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoShapeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-350">Gibt den Formtyp zurück oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-350">Returns or sets the shape type.</span></span> <span data-ttu-id="b4bcb-351"><see cref="T:Microsoft.Office.Core.MsoShapeType" />Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-351">Read-only <see cref="T:Microsoft.Office.Core.MsoShapeType" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ungroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ShapeRange Ungroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.ShapeRange Ungroup() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.Ungroup" />
      <MemberSignature Language="VB.NET" Value="Public Function Ungroup () As ShapeRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::ShapeRange ^ Ungroup();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(244)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ShapeRange</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4bcb-352">Hebt die Gruppierung aller gruppierten Formen in der angegebenen Form oder einen Bereich von Formen.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-352">Ungroups any grouped shapes in the specified shape or range of shapes.</span></span> <span data-ttu-id="b4bcb-353">Zerlegt Bilder und OLE-Objekte innerhalb der angegebenen Form.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-353">Disassembles pictures and OLE objects within the specified shape.</span></span> <span data-ttu-id="b4bcb-354">Gibt die formen ohne Gruppierung als einzelnes Objekt <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-354">Returns the ungrouped shapes as a single <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="b4bcb-355">Da eine Gruppe von Formen als <b>einzelnes Objekt</b> behandelt wird und die Indexnummern von Elementen, die nach den betroffenen Elementen in der Auflistung enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-355">Because a group of shapes is treated as a single object, grouping and ungrouping shapes changes the number of items in the <b>Shapes</b> collection and changes the index numbers of items that come after the affected items in the collection.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalFlip">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState VerticalFlip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState VerticalFlip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.VerticalFlip" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalFlip As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState VerticalFlip { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1704)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1704)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-356"><b>True</b>, wenn die angegebene Form um die vertikale Achse gedreht wurde.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-356"><b>True</b> if the specified shape is flipped around the vertical axis.</span></span> <span data-ttu-id="b4bcb-357"><see cref="T:Microsoft.Office.Core.MsoTriState" />Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-357">Read-only <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vertices">
      <MemberSignature Language="C#" Value="public object Vertices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Vertices" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Vertices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Vertices As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Vertices { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(621)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(621)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-358">Gibt die Koordinaten der Scheitelpunkte der angegebenen Freihandform (und der Kontrollpunkte für Bézierkurven) als Folge von Koordinatenpaaren zurück.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-358">Returns the coordinates of the specified freeform drawing's vertices (and control points for Bézier curves) as a series of coordinate pairs.</span></span> <span data-ttu-id="b4bcb-359">Read-only- <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-359">Read-only <b>Object</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b4bcb-360">Sie können das von dieser Eigenschaft zurückgegebene Array als Argument für die <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddCurve(System.Object)" /> Methode oder Methode <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddPolyline(System.Object)" /> verwenden.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-360">You can use the array returned by this property as an argument to the <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddCurve(System.Object)" /> method or <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddPolyline(System.Object)" /> method.</span></span></para>
          <para><span data-ttu-id="b4bcb-361">Die folgende Tabelle zeigt, wie die <b>Vertices</b>-Eigenschaft die Werte im vertArray()-Array mit den Koordinaten der Scheitelpunkte eines Dreiecks verknüpft.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-361">The following table shows how the <b>Vertices</b> property associates the values in the array vertArray() with the coordinates of a triangle's vertices.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="b4bcb-362">vertArray(1, 1)</span><span class="sxs-lookup"><span data-stu-id="b4bcb-362">vertArray(1, 1)</span></span></term>
              <description><span data-ttu-id="b4bcb-363">Der horizontale Abstand zwischen dem ersten Scheitelpunkt und der linken Seite des Dokuments</span><span class="sxs-lookup"><span data-stu-id="b4bcb-363">The horizontal distance from the first vertex to the left side of the document</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="b4bcb-364">vertArray(1, 2)</span><span class="sxs-lookup"><span data-stu-id="b4bcb-364">vertArray(1, 2)</span></span></term>
              <description><span data-ttu-id="b4bcb-365">Der vertikale Abstand zwischen dem ersten Scheitelpunkt und der oberen Seite des Dokuments</span><span class="sxs-lookup"><span data-stu-id="b4bcb-365">The vertical distance from the first vertex to the top of the document</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="b4bcb-366">vertArray(2, 1)</span><span class="sxs-lookup"><span data-stu-id="b4bcb-366">vertArray(2, 1)</span></span></term>
              <description><span data-ttu-id="b4bcb-367">Der horizontale Abstand zwischen dem zweiten Scheitelpunkt und der linken Seite des Dokuments</span><span class="sxs-lookup"><span data-stu-id="b4bcb-367">The horizontal distance from the second vertex to the left side of the document</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="b4bcb-368">vertArray(2, 2)</span><span class="sxs-lookup"><span data-stu-id="b4bcb-368">vertArray(2, 2)</span></span></term>
              <description><span data-ttu-id="b4bcb-369">Der vertikale Abstand zwischen dem zweiten Scheitelpunkt und der oberen Seite des Dokuments</span><span class="sxs-lookup"><span data-stu-id="b4bcb-369">The vertical distance from the second vertex to the top of the document</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="b4bcb-370">vertArray(3, 1)</span><span class="sxs-lookup"><span data-stu-id="b4bcb-370">vertArray(3, 1)</span></span></term>
              <description><span data-ttu-id="b4bcb-371">Der horizontale Abstand zwischen dem dritten Scheitelpunkt und der linken Seite des Dokuments</span><span class="sxs-lookup"><span data-stu-id="b4bcb-371">The horizontal distance from the third vertex to the left side of the document</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="b4bcb-372">vertArray(3, 2)</span><span class="sxs-lookup"><span data-stu-id="b4bcb-372">vertArray(3, 2)</span></span></term>
              <description><span data-ttu-id="b4bcb-373">Der vertikale Abstand zwischen dem dritten Scheitelpunkt und der oberen Seite des Dokuments</span><span class="sxs-lookup"><span data-stu-id="b4bcb-373">The vertical distance from the third vertex to the top of the document</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState Visible { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-374">Bestimmt, ob das Objekt sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-374">Determines whether the object is visible.</span></span> <span data-ttu-id="b4bcb-375">Lese-/Schreibzugriff. <see cref="T:Microsoft.Office.Core.MsoTriState" /></span><span class="sxs-lookup"><span data-stu-id="b4bcb-375">Read/write <see cref="T:Microsoft.Office.Core.MsoTriState" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public float Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Width { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-376">Die Breite des Objekts.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-376">The width of the object.</span></span> <span data-ttu-id="b4bcb-377">Lese-/Schreibzugriff <b>einzelnen</b>.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-377">Read/write <b>Single</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZOrder">
      <MemberSignature Language="C#" Value="public void ZOrder (Microsoft.Office.Core.MsoZOrderCmd ZOrderCmd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ZOrder([in]valuetype Microsoft.Office.Core.MsoZOrderCmd ZOrderCmd) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Shape.ZOrder(Microsoft.Office.Core.MsoZOrderCmd)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ZOrder (ZOrderCmd As MsoZOrderCmd)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ZOrder(Microsoft::Office::Core::MsoZOrderCmd ZOrderCmd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(622)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ZOrderCmd" Type="Microsoft.Office.Core.MsoZOrderCmd" />
      </Parameters>
      <Docs>
        <param name="ZOrderCmd"><span data-ttu-id="b4bcb-378"><see cref="T:Microsoft.Office.Core.MsoZOrderCmd" />Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-378">Required <see cref="T:Microsoft.Office.Core.MsoZOrderCmd" />.</span></span> <span data-ttu-id="b4bcb-379">Legt fest, wohin die angegebene Form relativ zu den anderen Formen verschoben werden soll.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-379">Specifies where to move the specified shape relative to the other shapes.</span></span></param>
        <summary><span data-ttu-id="b4bcb-380">Verschiebt die angegebene Form vor oder hinter andere Formen in der Sammlung (d. h. ändert die Position der Form in der Z-Reihenfolge).</span><span class="sxs-lookup"><span data-stu-id="b4bcb-380">Moves the specified shape in front of or behind other shapes in the collection (that is, changes the shape's position in the z-order).</span></span></summary>
        <remarks><para><span data-ttu-id="b4bcb-381">Verwenden Sie die Eigenschaft, um die aktuelle Position eines <see cref="P:Microsoft.Office.Interop.Excel.Shape.ZOrderPosition" /> Shapes in der Z-Reihenfolge zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-381">Use the <see cref="P:Microsoft.Office.Interop.Excel.Shape.ZOrderPosition" /> property to determine a shape's current position in the z-order.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ZOrderPosition">
      <MemberSignature Language="C#" Value="public int ZOrderPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ZOrderPosition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Shape.ZOrderPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ZOrderPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ZOrderPosition { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1705)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1705)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4bcb-382">Gibt die Position der angegebenen Form in der Z-Ordnung zurück.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-382">Returns the position of the specified shape in the z-order.</span></span> <span data-ttu-id="b4bcb-383">Schreibgeschützte <b>ganze Zahl</b>.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-383">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="b4bcb-384">Verwenden Sie die Methode, um die Position des Shapes in der Z-Reihenfolge <see cref="M:Microsoft.Office.Interop.Excel.Shape.ZOrder(Microsoft.Office.Core.MsoZOrderCmd)" /> zu setzen.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-384">To set the shape's position in the z-order, use the <see cref="M:Microsoft.Office.Interop.Excel.Shape.ZOrder(Microsoft.Office.Core.MsoZOrderCmd)" /> method.</span></span></para>
          <para><span data-ttu-id="b4bcb-385">Die Position eines Shapes in der Z-Reihenfolge entspricht der Indexnummer des Shapes in der <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-385">A shape's position in the z-order corresponds to the shape's index number in the <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection.</span></span> <span data-ttu-id="b4bcb-386">Beispielsweise gibt Shapes(1) die Form am Ende der Z-Reihenfolge zurück, und Shapes(4) gibt die Form am Anfang der Z-Reihenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-386">For example, Shapes(1) returns the shape at the back of the z-order, and Shapes(4) returns the shape at the front of the z-order.</span></span></para>
          <para><span data-ttu-id="b4bcb-387">Jede neue Form, die einem Dokument hinzugefügt wird, wird standardmäßig am Anfang der Z-Reihenfolge eingefügt.</span><span class="sxs-lookup"><span data-stu-id="b4bcb-387">Whenever you add a new shape to a collection, it’s added to the front of the z-order by default.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>