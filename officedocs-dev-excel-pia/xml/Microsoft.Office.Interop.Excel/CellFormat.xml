<Type Name="CellFormat" FullName="Microsoft.Office.Interop.Excel.CellFormat">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bb607767f33cbf4ea76bfc37821ee59c522eeb21" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20581172" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface CellFormat" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract CellFormat" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.CellFormat" />
  <TypeSignature Language="VB.NET" Value="Public Interface CellFormat" />
  <TypeSignature Language="C++ CLI" Value="public interface class CellFormat" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024450-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3255b-101">Stellt die Suchkriterien für das Zellenformat dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3255b-101">Represents the search criteria for the cell format.</span>
      </span>
    </summary>
    <remarks>
      <para>
        <span data-ttu-id="3255b-102">Verwendung der <see cref="P:Microsoft.Office.Interop.Excel._Application.FindFormat" /> oder <see cref="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat" /> Eigenschaften der <see cref="P:Microsoft.Office.Interop.Excel._Application.Application" /> Objekts, um ein <b>CellFormat</b> -Objekt zurückzugeben.</span>
        <span class="sxs-lookup">
          <span data-stu-id="3255b-102">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.FindFormat" /> or <see cref="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat" /> properties of the <see cref="P:Microsoft.Office.Interop.Excel._Application.Application" /> object to return a <b>CellFormat</b> object.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="3255b-103">Sie können die <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Borders" />, <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Font" />, oder <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Interior" /> Eigenschaften des <b>CellFormat</b> -Objekts, um die Suchkriterien für das Zellenformat zu definieren.</span>
        <span class="sxs-lookup">
          <span data-stu-id="3255b-103">You can use the <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Borders" />, <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Font" />, or <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Interior" /> properties of the <b>CellFormat</b> object to define the search criteria for the cell format.</span>
        </span>
      </para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddIndent">
      <MemberSignature Language="C#" Value="public object AddIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AddIndent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.AddIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property AddIndent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AddIndent { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3255b-104">
            <b>True,</b> Wenn Text automatisch eingezogen wird, wenn die Ausrichtung des Texts in einer Zelle auf gleiche Verteilung, horizontal oder vertikal festgelegt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3255b-104">
              <b>True</b> if text is automatically indented when the text alignment in a cell is set to equal distribution either horizontally or vertically.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3255b-105">Um die textausrichtung auf gleiche Verteilung festgelegt, können Sie festlegen der <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.VerticalAlignment" /> -Eigenschaft auf <b>XlVAlignDistributed</b> Wenn der Wert der der <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Orientation" /> -Eigenschaft ist <b>XlVertical</b>, und Sie können festlegen der <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.HorizontalAlignment" /> -Eigenschaft auf <b>XlHAlignDistributed</b> beim der Wert der <b>Orientation</b> -Eigenschaft ist <b>XlHorizontal</b>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-105">To set text alignment to equal distribution, you can set the <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.VerticalAlignment" /> property to <b>xlVAlignDistributed</b> when the value of the <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.Orientation" /> property is <b>xlVertical</b>, and you can set the <see cref="P:Microsoft.Office.Interop.Excel.CellFormat.HorizontalAlignment" /> property to <b>xlHAlignDistributed</b> when the value of the <b>Orientation</b> property is <b>xlHorizontal</b>.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3255b-106">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> -Objekt, das die Anwendung Microsoft Excel darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3255b-106">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Borders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Borders Borders { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Borders Borders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Borders" />
      <MemberSignature Language="VB.NET" Value="Public Property Borders As Borders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Borders ^ Borders { Microsoft::Office::Interop::Excel::Borders ^ get(); void set(Microsoft::Office::Interop::Excel::Borders ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Borders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3255b-107">Ermöglicht dem Benutzer, um die Suchkriterien basierend auf dem Rahmenformat der Zelle zurückzugeben oder festzulegen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3255b-107">Allows the user to set or return the search criteria based on the cell's border format.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.CellFormat.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3255b-108">Löscht die Kriterien der <see cref="P:Microsoft.Office.Interop.Excel._Application.FindFormat" /> und <see cref="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat" /> Eigenschaften.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3255b-108">Clears the criteria set in the <see cref="P:Microsoft.Office.Interop.Excel._Application.FindFormat" /> and <see cref="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat" /> properties.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3255b-109">Gibt eine 32-Bit-Ganzzahl, die die Anwendung angibt, in der das Objekt erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3255b-109">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3255b-110">Wenn das Objekt in Microsoft Excel erstellt wurde, gibt diese Eigenschaft die Zeichenfolge XCEL zurück, dies entspricht die hexadezimale Zahl 5843454 c ist.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-110">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3255b-111">Die <b>Creator</b> -Eigenschaft ist in Microsoft Excel für den Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen verfügt über entwickelt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-111">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="3255b-112">Der Erstellercode von Microsoft Excel lautet beispielsweise XCEL zurück.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-112">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Font ^ Font { Microsoft::Office::Interop::Excel::Font ^ get(); void set(Microsoft::Office::Interop::Excel::Font ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3255b-113">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Font" /> -Objekt, sodass der Benutzer die Suchkriterien anhand Schriftformats der Zelle zurückzugeben oder festzulegen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3255b-113">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object, allowing the user to set or return the search criteria based on the cell's font format.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaHidden">
      <MemberSignature Language="C#" Value="public object FormulaHidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaHidden" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.FormulaHidden" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaHidden As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaHidden { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3255b-114">
            <b>True,</b> Wenn die Formel ausgeblendet ist, wenn das Arbeitsblatt geschützt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3255b-114">
              <b>True</b> if the formula will be hidden when the worksheet is protected.</span>
          </span>
          <span data-ttu-id="3255b-115">Gibt <b>Null</b> zurück, wenn der angegebene Bereich einige Zellen mit <b>FormulaHidden</b> gleich <b>True</b> enthält, und einige Zellen mit <b>FormulaHidden</b><b>False gleich</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3255b-115">Returns <b>Null</b> if the specified range contains some cells with <b>FormulaHidden</b> equal to <b>True</b> and some cells with <b>FormulaHidden</b> equal to <b>False</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3255b-116">Verwechseln Sie diese Eigenschaft mit nicht die <see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" /> Eigenschaft.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-116">Don’t confuse this property with the <see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" /> property.</span>
            </span>
            <span data-ttu-id="3255b-117">Die Formel wird nicht ausgeblendet werden, wenn die Arbeitsmappe geschützt ist und das Arbeitsblatt nicht; Es wird nur dann, wenn das Arbeitsblatt geschützt ist ausgeblendet.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-117">The formula will not be hidden if the workbook is protected and the worksheet is not; it will be hidden only if the worksheet is protected.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlignment">
      <MemberSignature Language="C#" Value="public object HorizontalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HorizontalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.HorizontalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalAlignment As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HorizontalAlignment { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3255b-118">Zurückgeben oder festlegen die horizontale Ausrichtung für das angegebene Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3255b-118">Returns or sets the horizontal alignment for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3255b-119">Die folgenden Konstanten können verwendet werden:</span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-119">The following constants can be used:</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3255b-120">
              <b>xlCenter</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-120">
                <b>xlCenter</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3255b-121">
              <b>xlDistributed</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-121">
                <b>xlDistributed</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3255b-122">
              <b>xlJustify</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-122">
                <b>xlJustify</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3255b-123">
              <b>xlLeft</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-123">
                <b>xlLeft</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3255b-124">
              <b>xlRight</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-124">
                <b>xlRight</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3255b-125">[!HINWEIS] Einige dieser Konstanten stehen Ihnen, abhängig von der ausgewählten oder installierten Sprachunterstützung (z. B. Deutsch), möglicherweise nicht zur Verfügung.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-125">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you've selected or installed.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public object IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object IndentLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentLevel As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ IndentLevel { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3255b-126">Zurück oder legt die Einzugsebene für die Zelle oder einen Bereich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3255b-126">Returns or sets the indent level for the cell or range.</span>
          </span>
          <span data-ttu-id="3255b-127">Eine ganze Zahl zwischen 0 und 15 kann sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3255b-127">Can be an integer from 0 to 15.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3255b-128">Wird diese Eigenschaft verwendet, um die Einzugsebene auf eine Zahl kleiner als 0 (null) oder größer als 15 festzulegen, führt dies zu einem Fehler.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-128">Using this property to set the indent level to a number less than 0 (zero) or greater than 15 causes an error.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Interior" />
      <MemberSignature Language="VB.NET" Value="Public Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); void set(Microsoft::Office::Interop::Excel::Interior ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3255b-129">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> Objekt, sodass der Benutzer die Suchkriterien anhand des Formats des Innenbereichs der Zelle zurückzugeben oder festzulegen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3255b-129">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object allowing the user to set or return the search criteria based on the cell's interior format.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Locked">
      <MemberSignature Language="C#" Value="public object Locked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Locked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Locked" />
      <MemberSignature Language="VB.NET" Value="Public Property Locked As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Locked { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3255b-130">
            <b>True,</b> Wenn das Objekt gesperrt ist. <b>False,</b> Wenn das Objekt geändert werden kann, wenn das Blatt geschützt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3255b-130">
              <b>True</b> if the object is locked; <b>False</b> if the object can be modified when the sheet is protected.</span>
          </span>
          <span data-ttu-id="3255b-131">Gibt <b>Null</b> zurück, wenn der angegebene Bereich gesperrte und nicht gesperrte Zellen enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3255b-131">Returns <b>Null</b> if the specified range contains both locked and unlocked cells.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeCells">
      <MemberSignature Language="C#" Value="public object MergeCells { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MergeCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.MergeCells" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeCells As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MergeCells { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3255b-132">
            <b>True,</b> Wenn der Bereich oder die Formatvorlage enthält zusammengeführte Zellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3255b-132">
              <b>True</b> if the range or style contains merged cells.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3255b-133">Wenn Sie einen Bereich, der verbundene Zellen enthält auswählen, kann die resultierende Auswahl von der beabsichtigten Markierung anders lauten.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-133">When you select a range that contains merged cells, the resulting selection may be different from the intended selection.</span>
            </span>
            <span data-ttu-id="3255b-134">Verwendung der <see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" /> -Eigenschaft auf die Adresse des markierten Bereichs zu überprüfen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-134">Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" /> property to check the address of the selected range.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public object NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormat { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3255b-135">Zurückgeben oder festlegen den Formatierungscode für das Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3255b-135">Returns or sets the format code for the object.</span>
          </span>
          <span data-ttu-id="3255b-136">Gibt <b>Null</b> zurück, wenn alle Zellen im angegebenen Bereich dasselbe Zahlenformat besitzen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3255b-136">Returns <b>Null</b> if all cells in the specified range don't have the same number format.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3255b-137">Der Formatierungscode ist dieselbe Zeichenfolge wie die Option Formatierungscode im Dialogfeld Zellen formatieren.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-137">The format code is the same string as the Format Codes option in the Format Cells dialog box.</span>
            </span>
            <span data-ttu-id="3255b-138">Die Visual Basic- <b>Format</b> -Funktion verwendet andere Zeichenfolgen im Formatierungscode als die <b>NumberFormat</b> und <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" /> Eigenschaften.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-138">The Visual Basic <b>Format</b> function uses different format code strings than do the <b>NumberFormat</b> and <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" /> properties.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormatLocal">
      <MemberSignature Language="C#" Value="public object NumberFormatLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormatLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.NumberFormatLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormatLocal As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormatLocal { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3255b-139">Zurückgeben oder festlegen den Formatierungscode des Objekts als Zeichenfolge in der Sprache des Benutzers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3255b-139">Returns or sets the format code for the object as a string in the language of the user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3255b-140">Die Visual Basic- <b>Format</b> -Funktion verwendet andere Zeichenfolgen im Formatierungscode als die <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" /> und <b>NumberFormatLocal</b> -Eigenschaften.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-140">The Visual Basic <b>Format</b> function uses different format code strings than do the <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" /> and <b>NumberFormatLocal</b> properties.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public object Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Orientation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Orientation { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3255b-141">Die Ausrichtung von Text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3255b-141">The text orientation.</span>
          </span>
          <span data-ttu-id="3255b-142">Eine Ganzzahl zwischen-90 und 90 Grad kann sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3255b-142">Can be an integer value from –90 to 90 degrees.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3255b-143">
              <b>Orientation</b> -Eigenschaft kann eine der folgenden Konstanten sein:</span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-143">The <b>Orientation</b> property can be one of the following constants:</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3255b-144">
              <b>xlDownward</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-144">
                <b>xlDownward</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3255b-145">
              <b>xlHorizontal</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-145">
                <b>xlHorizontal</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3255b-146">
              <b>xlUpward</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-146">
                <b>xlUpward</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3255b-147">
              <b>xlVertical</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-147">
                <b>xlVertical</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3255b-148">Bei OLAP-Datenquellen wird durch Festlegen dieser Eigenschaft für ein Feld in einer Hierarchie die Ausrichtung für die anderen Felder in der gleichen Hierarchie.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-148">For OLAP data sources, setting this property for one field in a hierarchy sets the orientation for the other fields in the same hierarchy.</span>
            </span>
            <span data-ttu-id="3255b-149">Dimensionsfelder können nur in der Zeile, Spalte und Seite Feld Bereichen des PivotTable-Berichts angeordnet werden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-149">Dimension fields can only be oriented in the row, column, and page field areas of the PivotTable report.</span>
            </span>
            <span data-ttu-id="3255b-150">Felder der Maßeinheiten können nur im Datenbereich angeordnet werden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-150">Measure fields can only be oriented in the data area.</span>
            </span>
            <span data-ttu-id="3255b-151">Wird eine Hierarchie oder ein Datenfeld auf <b>xlHidden eingestellt</b> werden die Hierarchie oder das Feld aus dem PivotTable-Bericht entfernt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-151">Setting a hierarchy or data field to <b>xlHidden</b> removes the hierarchy or field from the PivotTable report.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3255b-152">Gibt das übergeordnete Objekt für das angegebene Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3255b-152">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShrinkToFit">
      <MemberSignature Language="C#" Value="public object ShrinkToFit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ShrinkToFit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.ShrinkToFit" />
      <MemberSignature Language="VB.NET" Value="Public Property ShrinkToFit As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ShrinkToFit { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3255b-153">
            <b>True,</b> Wenn Text automatisch an die verfügbare Spaltenbreite angepasst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3255b-153">
              <b>True</b> if text automatically shrinks to fit in the available column width.</span>
          </span>
          <span data-ttu-id="3255b-154">Gibt <b>Null</b> zurück, wenn diese Eigenschaft auf denselben Wert für alle Zellen im angegebenen Bereich nicht festgelegt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3255b-154">Returns <b>Null</b> if this property isn’t set to the same value for all cells in the specified range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalAlignment">
      <MemberSignature Language="C#" Value="public object VerticalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object VerticalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.VerticalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalAlignment As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ VerticalAlignment { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3255b-155">Gibt zurück oder legt die vertikale Ausrichtung des angegebenen Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3255b-155">Returns or sets the vertical alignment of the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3255b-156">
              <b>VerticalAlignment</b> -Eigenschaft kann eine der folgenden Konstanten sein:</span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-156">The <b>VerticalAlignment</b> property can be one of the following constants:</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3255b-157">
              <b>xlBottom</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-157">
                <b>xlBottom</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3255b-158">
              <b>xlCenter</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-158">
                <b>xlCenter</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3255b-159">
              <b>xlDistributed</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-159">
                <b>xlDistributed</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3255b-160">
              <b>xlJustify</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-160">
                <b>xlJustify</b>
              </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="3255b-161">
              <b>xlTop</b>
            </span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-161">
                <b>xlTop</b>
              </span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapText">
      <MemberSignature Language="C#" Value="public object WrapText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WrapText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.CellFormat.WrapText" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapText As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ WrapText { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3255b-162">
            <b>True,</b> Wenn den Text im Objekt Microsoft Excel umbrochen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3255b-162">
              <b>True</b> if Microsoft Excel wraps the text in the object.</span>
          </span>
          <span data-ttu-id="3255b-163">Gibt <b>Null</b> zurück, wenn der angegebene Bereich einige Zellen mit Textumbruch und einige Zellen ohne enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3255b-163">Returns <b>Null</b> if the specified range contains some cells that wrap text and other cells that don’t.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="3255b-164">Falls erforderlich, wird die Zeilenhöhe im Bereich von Microsoft Excel an die Texthöhe angepasst.</span>
            <span class="sxs-lookup">
              <span data-stu-id="3255b-164">Microsoft Excel will change the row height of the range, if necessary, to accommodate the text in the range.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>