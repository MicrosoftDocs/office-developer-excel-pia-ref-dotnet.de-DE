<Type Name="Filter" FullName="Microsoft.Office.Interop.Excel.Filter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0a55068feedec78d62f267ca39e674ead9d7d9f3" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50012243" /></Metadata><TypeSignature Language="C#" Value="public interface Filter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Filter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Filter" />
  <TypeSignature Language="VB.NET" Value="Public Interface Filter" />
  <TypeSignature Language="C++ CLI" Value="public interface class Filter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024434-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0b4be-101">Stellt einen Filter für eine einzelne Spalte dar.</span><span class="sxs-lookup"><span data-stu-id="0b4be-101">Represents a filter for a single column.</span></span> <span data-ttu-id="0b4be-102">Das <b>Filter</b> -Objekt ist ein Element der <see cref="T:Microsoft.Office.Interop.Excel.Filters" /> Auflistung.</span><span class="sxs-lookup"><span data-stu-id="0b4be-102">The <b>Filter</b> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.Filters" /> collection.</span></span> <span data-ttu-id="0b4be-103">Die <b>Filters</b>-Auflistung enthält alle Filter in einem automatisch gefilterten Bereich.</span><span class="sxs-lookup"><span data-stu-id="0b4be-103">The <b>Filters</b> collection contains all the filters in an autofiltered range.</span></span></summary>
    <remarks><para><span data-ttu-id="0b4be-104">Verwenden <b>Sie Filter</b>( ), wobei der Filtertitel oder die Indexnummer, um ein <paramref name="index" /> <paramref name="index" /> einzelnes Filter <b>-Objekt zurück.</b></span><span class="sxs-lookup"><span data-stu-id="0b4be-104">Use <b>Filters</b>(<paramref name="index" />), where <paramref name="index" /> is the filter title or index number, to return a single <b>Filter</b> object.</span></span></para>
      <para><span data-ttu-id="0b4be-105">Beachten Sie, dass alle Eigenschaften des <b>Filter</b>-Objekts schreibgeschützt sind.</span><span class="sxs-lookup"><span data-stu-id="0b4be-105">Note that all the properties of the <b>Filter</b> object are read-only.</span></span> <span data-ttu-id="0b4be-106">Wenn Sie diese Eigenschaften festlegen möchten, wenden Sie die automatische Filterung manuell oder mithilfe der <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> Methode des Objekts <see cref="T:Microsoft.Office.Interop.Excel.Range" /> an.</span><span class="sxs-lookup"><span data-stu-id="0b4be-106">To set these properties, apply autofiltering manually or using the <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Operator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlAutoFilterOperator _Operator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlAutoFilterOperator _Operator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Filter._Operator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property _Operator As XlAutoFilterOperator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlAutoFilterOperator _Operator { Microsoft::Office::Interop::Excel::XlAutoFilterOperator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2641)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2641)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlAutoFilterOperator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Filter.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b4be-107">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> Objekt zurück, das die Microsoft Excel-Anwendung darstellt.</span><span class="sxs-lookup"><span data-stu-id="0b4be-107">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Filter.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b4be-108">Gibt die Anzahl der Objekte in der Auflistung zurück.</span><span class="sxs-lookup"><span data-stu-id="0b4be-108">Returns the number of objects in the collection.</span></span> <span data-ttu-id="0b4be-109">Schreibgeschützte <b>ganze Zahl</b>.</span><span class="sxs-lookup"><span data-stu-id="0b4be-109">Read-only <b>Integer</b>.</span></span></summary>
        <value><span data-ttu-id="0b4be-110"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="0b4be-110"><b>Integer</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Filter.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b4be-111">Gibt einen ganzzahligen 32-Bit-Wert zurück, der die Anwendung angibt, in der dieses Objekt erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="0b4be-111">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="0b4be-112">Wenn das Objekt in Microsoft Excel erstellt wurde, gibt die Eigenschaft die Zeichenfolge XCEL zurück, die der Hexadezimalzahl 5843454C entspricht.</span><span class="sxs-lookup"><span data-stu-id="0b4be-112">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="0b4be-113">Die <b>Creator </b>-Eigenschaft ist für die Verwendung in Microsoft Excel für Macintosh konzipiert, wobei jede Anwendung einen vier Zeichen großen Erstellercode hat.</span><span class="sxs-lookup"><span data-stu-id="0b4be-113">The <b>Creator </b>property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="0b4be-114">Der Urhebercode für Microsoft Excel lautet "XCEL".</span><span class="sxs-lookup"><span data-stu-id="0b4be-114">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Criteria1">
      <MemberSignature Language="C#" Value="public object Criteria1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Criteria1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Filter.Criteria1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Criteria1 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Criteria1 { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(796)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(796)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b4be-115">Gibt den ersten gefilterten Wert für die angegebene Spalte in einem gefilterten Bereich zurück.</span><span class="sxs-lookup"><span data-stu-id="0b4be-115">Returns the first filtered value for the specified column in a filtered range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Criteria2">
      <MemberSignature Language="C#" Value="public object Criteria2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Criteria2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Filter.Criteria2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Criteria2 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Criteria2 { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(798)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(798)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b4be-116">Gibt den zweiten gefilterten Wert für die angegebene Spalte in einem gefilterten Bereich zurück.</span><span class="sxs-lookup"><span data-stu-id="0b4be-116">Returns the second filtered value for the specified column in a filtered range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="0b4be-117">Beim Versuch, auf die <b>Criteria2</b>-Eigenschaft eines Filters zuzugreifen, der nur ein Kriterium verwendet, tritt ein Fehler auf.</span><span class="sxs-lookup"><span data-stu-id="0b4be-117">If you try to access the <b>Criteria2</b> property for a filter that does not use two criteria, an error will occur.</span></span> <span data-ttu-id="0b4be-118">Überprüfen Sie, ob die Eigenschaft eines Objekts nicht gleich Null (0) ist, bevor Sie versuchen, auf die <see cref="P:Microsoft.Office.Interop.Excel.Filter.Operator" /> <see cref="T:Microsoft.Office.Interop.Excel.Filter" /> Eigenschaft <b>"Criteria2" zu</b> zugreifen.</span><span class="sxs-lookup"><span data-stu-id="0b4be-118">Check that the <see cref="P:Microsoft.Office.Interop.Excel.Filter.Operator" /> property of a <see cref="T:Microsoft.Office.Interop.Excel.Filter" /> object doesn’t equal zero (0) before trying to access the <b>Criteria2</b> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="On">
      <MemberSignature Language="C#" Value="public bool On { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool On" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Filter.On" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property On As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool On { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1618)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1618)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b4be-119"><b>True</b>, wenn der angegebene Filter aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="0b4be-119"><b>True</b> if the specified filter is on.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Operator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlAutoFilterOperator Operator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlAutoFilterOperator Operator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Filter.Operator" />
      <MemberSignature Language="VB.NET" Value="Public Property Operator As XlAutoFilterOperator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlAutoFilterOperator Operator { Microsoft::Office::Interop::Excel::XlAutoFilterOperator get(); void set(Microsoft::Office::Interop::Excel::XlAutoFilterOperator value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlAutoFilterOperator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b4be-120">Gibt den Operator zurück, der die beiden vom angegebenen Filter angewendeten Kriterien zu ordnet.</span><span class="sxs-lookup"><span data-stu-id="0b4be-120">Returns the operator that associates the two criteria applied by the specified filter.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Filter.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b4be-121">Gibt das übergeordnete Objekt für das angegebene Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="0b4be-121">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>