<Type Name="_Chart" FullName="Microsoft.Office.Interop.Excel._Chart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="57339bb20d25fcbe71c1c566971bde680079bc66" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20580325" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _Chart" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Chart" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Chart" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Chart" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Chart" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208D6-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4e684-101">Dies ist eine primäre Schnittstelle in einem COM-Co-Klasse, die von verwaltetem Code für die Interoperabilität mit den entsprechenden COM-Objekt erforderlich ist.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4e684-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span>
      </span>
      <span data-ttu-id="4e684-102">Verwenden Sie diese primäre Schnittstelle nur, wenn die Methode, den, die Sie verwenden möchten, den gleichen Namen wie die COM-Objekt gemeinsam verwendet. In diesem Fall dieser Schnittstelle zum Aufrufen der Methode umgewandelt, und in die neuesten Ereignisschnittstelle für die Verbindung an das Ereignis umgewandelt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4e684-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span>
      </span>
      <span data-ttu-id="4e684-103">Verwenden Sie andernfalls die .NET-Schnittstelle, die von der COM-Co-Klasse Zugriff auf Methoden, Eigenschaften und Ereignisse das COM-Objekt abgeleitet ist.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4e684-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span>
      </span>
      <span data-ttu-id="4e684-104">Weitere Informationen über das COM-Objekt finden Sie unter <see cref="T:Microsoft.Office.Interop.Excel.Chart" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4e684-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.Chart" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_ApplyDataLabels">
      <MemberSignature Language="C#" Value="public void _ApplyDataLabels (Microsoft.Office.Interop.Excel.XlDataLabelsType Type = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, object LegendKey, object AutoText, object HasLeaderLines);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _ApplyDataLabels([in]valuetype Microsoft.Office.Interop.Excel.XlDataLabelsType Type, [in]object LegendKey, [in]object AutoText, [in]object HasLeaderLines) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart._ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _ApplyDataLabels (Optional Type As XlDataLabelsType = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, Optional LegendKey As Object, Optional AutoText As Object, Optional HasLeaderLines As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(151)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataLabelsType" />
        <Parameter Name="LegendKey" Type="System.Object" />
        <Parameter Name="AutoText" Type="System.Object" />
        <Parameter Name="HasLeaderLines" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">To be added.</param>
        <param name="LegendKey">To be added.</param>
        <param name="AutoText">To be added.</param>
        <param name="HasLeaderLines">To be added.</param>
        <summary>
          <span data-ttu-id="4e684-105">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-105">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_CodeName">
      <MemberSignature Language="C#" Value="public string _CodeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart._CodeName" />
      <MemberSignature Language="VB.NET" Value="Public Property _CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ _CodeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-106">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-106">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Dummy23">
      <MemberSignature Language="C#" Value="public void _Dummy23 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Dummy23() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart._Dummy23" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Dummy23 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Dummy23();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(65559)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4e684-107">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-107">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Evaluate">
      <MemberSignature Language="C#" Value="public object _Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart._Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ _Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <summary>
          <span data-ttu-id="4e684-108">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-108">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary>
          <span data-ttu-id="4e684-109">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-109">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Protect">
      <MemberSignature Language="C#" Value="public void _Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Protect([in]object Password, [in]object DrawingObjects, [in]object Contents, [in]object Scenarios, [in]object UserInterfaceOnly) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Protect (Optional Password As Object, Optional DrawingObjects As Object, Optional Contents As Object, Optional Scenarios As Object, Optional UserInterfaceOnly As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(282)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">To be added.</param>
        <param name="DrawingObjects">To be added.</param>
        <param name="Contents">To be added.</param>
        <param name="Scenarios">To be added.</param>
        <param name="UserInterfaceOnly">To be added.</param>
        <summary>
          <span data-ttu-id="4e684-110">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-110">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_SaveAs">
      <MemberSignature Language="C#" Value="public void _SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _SaveAs([in]string Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _SaveAs (Filename As String, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(284)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <param name="TextCodepage">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary>
          <span data-ttu-id="4e684-111">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-111">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4e684-112">Macht das aktuelle Diagramm zum aktiven Diagramm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-112">Makes the current chart the active chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-113">Wenn ohne einen Objektbezeichner verwendet wird, gibt diese Eigenschaft ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> -Objekt, das die Anwendung Microsoft Excel darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-113">When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="4e684-114">Mit Objektkennzeichner hingegen gibt diese Eigenschaft ein <b>Application</b>-Objekt zurück, das die Erstellungsanwendung des angegebenen Objekts darstellt. (Sie können diese Eigenschaft mit einem OLE-Automatisierungsobjekt verwenden, um die Anwendung dieses Objekts zurückzugeben.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-114">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyChartTemplate">
      <MemberSignature Language="C#" Value="public void ApplyChartTemplate (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyChartTemplate([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ApplyChartTemplate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyChartTemplate (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyChartTemplate(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2507)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="4e684-115">Der Dateiname für eine Diagrammvorlage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-115">The file name for a chart template.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-116">Weist einem Diagramm einen Standarddiagrammtyp oder einen benutzerdefinierten Diagrammtyp zu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-116">Applies a standard or custom chart type to a chart.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="4e684-117">Diese Methode unterstützt das Annehmen von Konstanten für systemeigene oder Verbunddiagramme nicht.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-117">This method  does not support taking constants for native or combination charts.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyCustomType">
      <MemberSignature Language="C#" Value="public void ApplyCustomType (Microsoft.Office.Interop.Excel.XlChartType ChartType, object TypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyCustomType([in]valuetype Microsoft.Office.Interop.Excel.XlChartType ChartType, [in]object TypeName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ApplyCustomType(Microsoft.Office.Interop.Excel.XlChartType,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyCustomType (ChartType As XlChartType, Optional TypeName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ChartType" Type="Microsoft.Office.Interop.Excel.XlChartType" />
        <Parameter Name="TypeName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ChartType">
          <span data-ttu-id="4e684-118">Erforderliche <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-118">Required <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          </span>
          <span data-ttu-id="4e684-119">Einen Standarddiagrammtyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-119">A standard chart type.</span>
          </span>
        </param>
        <param name="TypeName">
          <span data-ttu-id="4e684-120">Optionales- <b>Objekt</b> (nur bei verwendet eine <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> Objekt).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-120">Optional <b>object</b> (used only with a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object).</span>
          </span>
          <span data-ttu-id="4e684-121">Geben Sie der Namen des benutzerdefinierten Diagramms Wenn <paramref name="ChartType" /> gibt eine benutzerdefinierte Diagrammsammlung an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-121">The name of the custom chart type if <paramref name="ChartType" /> specifies a custom chart gallery.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-122">Weist einem Diagramm einen Standarddiagrammtyp oder einen benutzerdefinierten Diagrammtyp zu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-122">Applies a standard or custom chart type to a chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDataLabels">
      <MemberSignature Language="C#" Value="public void ApplyDataLabels (Microsoft.Office.Interop.Excel.XlDataLabelsType Type = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, object LegendKey, object AutoText, object HasLeaderLines, object ShowSeriesName, object ShowCategoryName, object ShowValue, object ShowPercentage, object ShowBubbleSize, object Separator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDataLabels([in]valuetype Microsoft.Office.Interop.Excel.XlDataLabelsType Type, [in]object LegendKey, [in]object AutoText, [in]object HasLeaderLines, [in]object ShowSeriesName, [in]object ShowCategoryName, [in]object ShowValue, [in]object ShowPercentage, [in]object ShowBubbleSize, [in]object Separator) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyDataLabels (Optional Type As XlDataLabelsType = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, Optional LegendKey As Object, Optional AutoText As Object, Optional HasLeaderLines As Object, Optional ShowSeriesName As Object, Optional ShowCategoryName As Object, Optional ShowValue As Object, Optional ShowPercentage As Object, Optional ShowBubbleSize As Object, Optional Separator As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1922)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataLabelsType" />
        <Parameter Name="LegendKey" Type="System.Object" />
        <Parameter Name="AutoText" Type="System.Object" />
        <Parameter Name="HasLeaderLines" Type="System.Object" />
        <Parameter Name="ShowSeriesName" Type="System.Object" />
        <Parameter Name="ShowCategoryName" Type="System.Object" />
        <Parameter Name="ShowValue" Type="System.Object" />
        <Parameter Name="ShowPercentage" Type="System.Object" />
        <Parameter Name="ShowBubbleSize" Type="System.Object" />
        <Parameter Name="Separator" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="4e684-123">Optionale <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-123">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType" />.</span>
          </span>
          <span data-ttu-id="4e684-124">Der anzuwendende Datenbeschriftungstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-124">The type of data label to apply.</span>
          </span>
        </param>
        <param name="LegendKey">
          <span data-ttu-id="4e684-125">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-125">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-126">
            <b>True</b>, wenn die Legende neben dem Datenpunkt anzeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-126">
              <b>True</b> to show the legend key next to the point.</span>
          </span>
          <span data-ttu-id="4e684-127">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-127">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AutoText">
          <span data-ttu-id="4e684-128">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-128">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-129">
            <b>True,</b> Wenn das Objekt automatisch basierend auf dem Inhalt angemessenen Text generiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-129">
              <b>True</b> if the object automatically generates appropriate text based on content.</span>
          </span>
        </param>
        <param name="HasLeaderLines">
          <span data-ttu-id="4e684-130">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-130">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-131">Für die <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> und <see cref="T:Microsoft.Office.Interop.Excel.Series" /> Objekte, <b>true,</b> Wenn die Datenreihe Führungslinien aufweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-131">For the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> and <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objects, <b>True</b> if the series has leader lines.</span>
          </span>
        </param>
        <param name="ShowSeriesName">
          <span data-ttu-id="4e684-132">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-132">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-133">Den Datenreihennamen für die Datenbeschriftung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-133">The series name for the data label.</span>
          </span>
        </param>
        <param name="ShowCategoryName">
          <span data-ttu-id="4e684-134">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-134">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-135">Der Kategoriename für die Datenbeschriftung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-135">The category name for the data label.</span>
          </span>
        </param>
        <param name="ShowValue">
          <span data-ttu-id="4e684-136">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-136">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-137">Der Wert für die Datenbeschriftung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-137">The value for the data label.</span>
          </span>
        </param>
        <param name="ShowPercentage">
          <span data-ttu-id="4e684-138">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-138">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-139">Der Prozentsatz für die Datenbeschriftung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-139">The percentage for the data label.</span>
          </span>
        </param>
        <param name="ShowBubbleSize">
          <span data-ttu-id="4e684-140">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-140">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-141">Die Blasengröße für die Datenbeschriftung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-141">The bubble size for the data label.</span>
          </span>
        </param>
        <param name="Separator">
          <span data-ttu-id="4e684-142">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-142">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-143">Das Trennzeichen für die Datenbeschriftung</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-143">The separator for the data label.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-144">Weist dem Datenpunkt, der Datenreihe oder allen Datenreihen im Diagramm Datenbeschriftungen zu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-144">Applies data labels to a point, a series, or all the series in a chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyLayout">
      <MemberSignature Language="C#" Value="public void ApplyLayout (int Layout, object ChartType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyLayout([in]int32 Layout, [in]object ChartType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ApplyLayout(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyLayout (Layout As Integer, Optional ChartType As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2500)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Layout" Type="System.Int32" />
        <Parameter Name="ChartType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Layout">
          <span data-ttu-id="4e684-p115">Gibt den Layouttyp an. Der Layouttyp wird mit einer Zahl zwischen 1 und 10 angegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-p115">Specifies the type of layout.  The type of layout is denoted by a number from 1 to 10.</span>
          </span>
        </param>
        <param name="ChartType">
          <span data-ttu-id="4e684-147">Der Typ des Diagramms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-147">The type of chart.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-148">Wendet die im Band angezeigten Layouts an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-148">Applies the layouts shown in the ribbon.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="4e684-p116">Wenn Sie ein Layout für den aktuellen Diagrammtyp verwenden, wird eine Zahl zwischen 1 und 10 auf den Diagrammtyp angewendet. Sie können das Layout eines Diagrammtyps auch auf einen anderen Diagrammtyp anwenden. Beispielsweise können Sie die Layouts, die für ein Liniendiagramm verfügbar sind, auf ein Säulendiagramm anwenden. Das Layout fügt nur Diagrammelemente hinzu, die für den jeweiligen Diagrammtyp verfügbar sind.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-p116">When you use a layout on the current chart type, a number from 1 to 10 is applied to the chart type.  You can also apply the layout of one chart type on another chart type.  For example, you can  apply the layouts that are available from a line chart to a column chart.  The layout only adds chart elements that are available for that particular chart type.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Arcs">
      <MemberSignature Language="C#" Value="public object Arcs (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Arcs([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Arcs(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Arcs (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(760)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="4e684-153">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-153">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Area3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Area3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Area3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Area3DGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Area3DGroup As ChartGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartGroup ^ Area3DGroup { Microsoft::Office::Interop::Excel::ChartGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(17)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(17)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-154">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> -Objekt, das die Flächendiagrammgruppe in einem 3D-Diagramm darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-154">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the area chart group on a 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreaGroups">
      <MemberSignature Language="C#" Value="public object AreaGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AreaGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.AreaGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AreaGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="4e684-155">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-155">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-156">Die Anzahl der Diagrammgruppen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-156">The chart group number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-157">Gibt in einem 2D-Diagramm ein Objekt, das darstellt zurück, das eine einzelne Flächendiagrammgruppe (ein <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> Objekt) oder eine Auflistung der Flächendiagrammgruppen (eine <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> Auflistung).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-157">On a 2-D chart, returns an object that represents either a single area chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the area chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormat">
      <MemberSignature Language="C#" Value="public void AutoFormat (int Gallery, object Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AutoFormat([in]int32 Gallery, [in]object Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.AutoFormat(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoFormat (Gallery As Integer, Optional Format As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(114)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Gallery" Type="System.Int32" />
        <Parameter Name="Format" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Gallery">To be added.</param>
        <param name="Format">To be added.</param>
        <summary>
          <span data-ttu-id="4e684-158">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-158">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScaling">
      <MemberSignature Language="C#" Value="public bool AutoScaling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScaling" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.AutoScaling" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoScaling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoScaling { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(107)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-159">
            <b>True,</b> Wenn Microsoft Excel ein 3D-Diagramm skaliert, sodass sich seine Größe entsprechende 2D-Diagramm annähert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-159">
              <b>True</b> if Microsoft Excel scales a 3-D chart so that it's closer in size to the equivalent 2-D chart.</span>
          </span>
          <span data-ttu-id="4e684-160">Die <see cref="P:Microsoft.Office.Interop.Excel._Chart.RightAngleAxes" /> -Eigenschaft muss <b>True</b>sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-160">The <see cref="P:Microsoft.Office.Interop.Excel._Chart.RightAngleAxes" /> property must be <b>True</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Axes">
      <MemberSignature Language="C#" Value="public object Axes (object Type, Microsoft.Office.Interop.Excel.XlAxisGroup AxisGroup = Microsoft.Office.Interop.Excel.XlAxisGroup.xlPrimary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Axes([in]object Type, [in]valuetype Microsoft.Office.Interop.Excel.XlAxisGroup AxisGroup) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Axes(System.Object,Microsoft.Office.Interop.Excel.XlAxisGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Axes (Optional Type As Object, Optional AxisGroup As XlAxisGroup = Microsoft.Office.Interop.Excel.XlAxisGroup.xlPrimary) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(23)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="AxisGroup" Type="Microsoft.Office.Interop.Excel.XlAxisGroup" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="4e684-161">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-161">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-162">Gibt die zurückzugebende Achse an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-162">Specifies the axis to return.</span>
          </span>
          <span data-ttu-id="4e684-163">Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> Konstanten: <b>XlValue</b>, <b>XlCategory</b>oder <b>XlSeriesAxis</b> (<b>XlSeriesAxis</b> gilt nur für 3D-Diagramme).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-163">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constants: <b>xlValue</b>, <b>xlCategory</b>, or <b>xlSeriesAxis</b> (<b>xlSeriesAxis</b> is valid only for 3-D charts).</span>
          </span>
        </param>
        <param name="AxisGroup">
          <span data-ttu-id="4e684-164">Optionale <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-164">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" />.</span>
          </span>
          <span data-ttu-id="4e684-165">Gibt die Achsengruppe an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-165">Specifies the axis group.</span>
          </span>
          <span data-ttu-id="4e684-166">Wenn dieses Argument ausgelassen wird, wird die primäre Gruppe verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-166">If this argument is omitted, the primary group is used.</span>
          </span>
          <span data-ttu-id="4e684-167">3D-Diagramme haben nur eine Achsengruppe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-167">3-D charts have only one axis group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-168">Gibt ein Objekt zurück, das entweder eine einzelne Achse oder eine Sammlung der Achsen im Diagramm darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-168">Returns an object that represents either a single axis or a collection of the axes on the chart.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackWall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Walls BackWall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Walls BackWall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.BackWall" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BackWall As Walls" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Walls ^ BackWall { Microsoft::Office::Interop::Excel::Walls ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2506)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2506)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Walls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-169">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> -Objekt, das dem Benutzer ermöglicht, die Back Wand eines 3D-Diagramms individuell formatieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-169">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that allows the user to individually format the back wall of a 3-D chart.</span>
          </span>
          <span data-ttu-id="4e684-170">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-170">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4e684-171">
            <b>Walls</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-171">
              <b>Walls</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bar3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Bar3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Bar3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Bar3DGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bar3DGroup As ChartGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartGroup ^ Bar3DGroup { Microsoft::Office::Interop::Excel::ChartGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(18)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(18)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-172">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> -Objekt, das die Balkendiagrammgruppe in einem 3D-Diagramm darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-172">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the bar chart group on a 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BarGroups">
      <MemberSignature Language="C#" Value="public object BarGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BarGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.BarGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BarGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="4e684-173">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-173">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-174">Gibt die Diagrammgruppe an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-174">Specifies the chart group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-175">Gibt in einem 2D-Diagramm ein Objekt, das darstellt zurück, das eine einzelne Balkendiagrammgruppe (ein <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> Objekt) oder eine Auflistung der Balkendiagrammgruppen (eine <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> Auflistung).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-175">On a 2-D chart, returns an object that represents either a single bar chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the bar chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BarShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlBarShape BarShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlBarShape BarShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.BarShape" />
      <MemberSignature Language="VB.NET" Value="Public Property BarShape As XlBarShape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlBarShape BarShape { Microsoft::Office::Interop::Excel::XlBarShape get(); void set(Microsoft::Office::Interop::Excel::XlBarShape value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1403)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlBarShape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-176">Gibt an, oder die mit einem 3D-Balkendiagramm oder Säulendiagramm verwendete Form festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-176">Returns or sets the shape used with the 3-D bar or column chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Buttons">
      <MemberSignature Language="C#" Value="public object Buttons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Buttons([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Buttons(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Buttons (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(557)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="4e684-177">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-177">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryLabelLevel">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCategoryLabelLevel CategoryLabelLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCategoryLabelLevel CategoryLabelLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.CategoryLabelLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryLabelLevel As XlCategoryLabelLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCategoryLabelLevel CategoryLabelLevel { Microsoft::Office::Interop::Excel::XlCategoryLabelLevel get(); void set(Microsoft::Office::Interop::Excel::XlCategoryLabelLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3048)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3048)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3048)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCategoryLabelLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-178">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.XlCategoryLabelLevel" /> Konstanten in Bezug auf die Ebene der, in dem die Kategorie Beschriftungen aus einer Führungslinie basieren wird sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-178">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlCategoryLabelLevel" /> constant referring to the level of where the category labels are being sourced from.</span>
          </span>
          <span data-ttu-id="4e684-179">
            <b>Ganze Zahl</b> (<b>Int</b> in c#) Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-179">
              <b>Integer</b> (<b>int</b> in C#) Read/Write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="4e684-180">Ist eine Hierarchie, 0 bezieht sich auf die meisten übergeordneten Ebene, 1 bezieht sich auf die untergeordneten Elemente und So weiter.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-180">If there is a hierarchy, 0 refers to the most parent level, 1 refers to its children, and so on.</span>
            </span>
            <span data-ttu-id="4e684-181">Damit die erste Ebene, gleich 0 ist gleich 1 ist der zweiten Ebene, 2 entspricht den dritten Ebene, und so weiter.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-181">So, 0 equals the first level, 1 equals the second level, 2 equals the third level, and so on.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartArea">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartArea ChartArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartArea ChartArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ChartArea" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChartArea As ChartArea" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartArea ^ ChartArea { Microsoft::Office::Interop::Excel::ChartArea ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(80)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(80)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartArea</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-182">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" /> -Objekt, das die vollständige Diagrammfläche des Diagramms darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-182">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartArea" /> object that represents the complete chart area for the chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartColor">
      <MemberSignature Language="C#" Value="public object ChartColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChartColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ChartColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartColor As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ChartColor { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3052)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3052)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3052)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-183">Zurück oder legt eine <b>ganze Zahl</b> (<b>Int</b> in c#), die das Farbschema für das Diagramm darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-183">Returns or sets an <b>Integer</b> (<b>int</b> in C#) that represents the color scheme for the chart.</span>
          </span>
          <span data-ttu-id="4e684-184">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-184">Read-write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartGroups">
      <MemberSignature Language="C#" Value="public object ChartGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChartGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ChartGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChartGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="4e684-185">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-185">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-186">Die Anzahl der Diagrammgruppen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-186">The chart group number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-187">Gibt ein Objekt, das entweder eine einzelne Diagrammgruppe (ein <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> Objekt) oder eine Auflistung aller Diagrammgruppen im Diagramm (ein <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> Objekt).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-187">Returns an object that represents either a single chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of all the chart groups in the chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> object).</span>
          </span>
          <span data-ttu-id="4e684-188">Die zurückgegebene Auflistung schließt jede Art von Gruppe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-188">The returned collection includes every type of group.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartObjects">
      <MemberSignature Language="C#" Value="public object ChartObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChartObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ChartObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChartObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="4e684-189">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-189">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-190">Der Name oder die Nummer des Diagramms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-190">The name or number of the chart.</span>
          </span>
          <span data-ttu-id="4e684-191">Dieses Argument kann ein Array zur Angabe der mehr als ein Diagramm sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-191">This argument can be an array to specify more than one chart.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-192">Gibt ein Objekt, das entweder stellt ein einzelnes eingebettetes Diagramm (ein <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> Objekt) oder eine Auflistung aller eingebetteten Diagramme (ein <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> Object) auf dem Blatt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-192">Returns an object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> object) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> object) on the sheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="4e684-193">Diese Methode entspricht nicht der <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Charts" /> Eigenschaft.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-193">This method isn't equivalent to the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Charts" /> property.</span>
            </span>
            <span data-ttu-id="4e684-194">Diese Methode gibt eingebettete Diagramme zurück. die <b>Charts</b> -Eigenschaft gibt Diagrammblätter zurück.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-194">This method returns embedded charts; the <b>Charts</b> property returns chart sheets.</span>
            </span>
            <span data-ttu-id="4e684-195">Verwendung der <see cref="P:Microsoft.Office.Interop.Excel.ChartObject.Chart" /> -Eigenschaft auf das <b>Chart</b> -Objekt für ein eingebettetes Diagramm zurück.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-195">Use the <see cref="P:Microsoft.Office.Interop.Excel.ChartObject.Chart" /> property to return the <b>Chart</b> object for an embedded chart.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartStyle">
      <MemberSignature Language="C#" Value="public object ChartStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChartStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ChartStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ChartStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2509)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2509)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2509)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-196">Zurückgeben oder Festlegen des Diagrammformats für das Diagramm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-196">Returns or sets the chart style for the chart.</span>
          </span>
          <span data-ttu-id="4e684-197">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-197">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4e684-198">
            <b>Objekt</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-198">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="4e684-199">Sie können zum Festlegen des Diagrammformats eine Zahl zwischen 1 und 48 verwenden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-199">You can use a number from 1 to 48 to set the chart style.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartTitle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartTitle ChartTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartTitle ChartTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ChartTitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChartTitle As ChartTitle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartTitle ^ ChartTitle { Microsoft::Office::Interop::Excel::ChartTitle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(81)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(81)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartTitle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-200">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> -Objekt, das den Titel des angegebenen Diagramms darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-200">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> object that represents the title of the specified chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlChartType ChartType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlChartType ChartType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ChartType" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartType As XlChartType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlChartType ChartType { Microsoft::Office::Interop::Excel::XlChartType get(); void set(Microsoft::Office::Interop::Excel::XlChartType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1400)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1400)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1400)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlChartType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-201">Gibt den Diagrammtyp zurück oder legt ihn fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-201">Returns or sets the chart type.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="4e684-202">Einige Diagrammtypen sind für PivotChart-Berichte nicht verfügbar.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-202">Some chart types aren’t available for PivotChart reports.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartWizard">
      <MemberSignature Language="C#" Value="public void ChartWizard (object Source, object Gallery, object Format, object PlotBy, object CategoryLabels, object SeriesLabels, object HasLegend, object Title, object CategoryTitle, object ValueTitle, object ExtraTitle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChartWizard([in]object Source, [in]object Gallery, [in]object Format, [in]object PlotBy, [in]object CategoryLabels, [in]object SeriesLabels, [in]object HasLegend, [in]object Title, [in]object CategoryTitle, [in]object ValueTitle, [in]object ExtraTitle) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ChartWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChartWizard (Optional Source As Object, Optional Gallery As Object, Optional Format As Object, Optional PlotBy As Object, Optional CategoryLabels As Object, Optional SeriesLabels As Object, Optional HasLegend As Object, Optional Title As Object, Optional CategoryTitle As Object, Optional ValueTitle As Object, Optional ExtraTitle As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(196)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Gallery" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="PlotBy" Type="System.Object" />
        <Parameter Name="CategoryLabels" Type="System.Object" />
        <Parameter Name="SeriesLabels" Type="System.Object" />
        <Parameter Name="HasLegend" Type="System.Object" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="CategoryTitle" Type="System.Object" />
        <Parameter Name="ValueTitle" Type="System.Object" />
        <Parameter Name="ExtraTitle" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="4e684-203">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-203">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-204">Der Bereich, der die Quelldaten für das neue Diagramm enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-204">The range that contains the source data for the new chart.</span>
          </span>
          <span data-ttu-id="4e684-205">Wenn dieses Argument ausgelassen wird, bearbeitet Microsoft Excel das aktive Diagrammblatt oder das ausgewählte Diagramm im aktiven Arbeitsblatt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-205">If this argument is omitted, Microsoft Excel edits the active chart sheet or the selected chart on the active worksheet.</span>
          </span>
        </param>
        <param name="Gallery">
          <span data-ttu-id="4e684-206">Optionale <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-206">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          </span>
          <span data-ttu-id="4e684-207">Der Diagrammtyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-207">The chart type.</span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="4e684-208">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-208">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-209">Die Optionsnummer für die integrierten automatischen Formate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-209">The option number for the built-in autoformats.</span>
          </span>
          <span data-ttu-id="4e684-210">Dabei kann es sich um eine Zahl von 1 bis 10 handeln, je nach Katalogtyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-210">Can be a number from 1 through 10, depending on the gallery type.</span>
          </span>
          <span data-ttu-id="4e684-211">Wenn dieses Argument nicht angegeben ist, wählt Microsoft Excel einen Standardwert basierend auf den Katalog und der Datenquelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-211">If this argument is omitted, Microsoft Excel chooses a default value based on the gallery type and data source.</span>
          </span>
        </param>
        <param name="PlotBy">
          <span data-ttu-id="4e684-212">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-212">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-213">Gibt an, ob die Daten für jede Reihe in Zeilen oder Spalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-213">Specifies whether the data for each series is in rows or columns.</span>
          </span>
          <span data-ttu-id="4e684-214">Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> Konstanten: <b>XlRows</b> oder <b>XlColumns</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-214">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: <b>xlRows</b> or <b>xlColumns</b>.</span>
          </span>
        </param>
        <param name="CategoryLabels">
          <span data-ttu-id="4e684-215">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-215">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-216">Eine ganze Zahl, gibt die Anzahl von Zeilen oder Spalten innerhalb des Bereichs für die Datenquelle, die rubrikenbeschriftungen enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-216">An integer specifying the number of rows or columns within the source range that contain category labels.</span>
          </span>
          <span data-ttu-id="4e684-217">Zulässige Werte reichen von 0 (null) über die maximale Anzahl der entsprechenden Kategorien oder Reihen minus 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-217">Legal values are from 0 (zero) through one less than the maximum number of the corresponding categories or series.</span>
          </span>
        </param>
        <param name="SeriesLabels">
          <span data-ttu-id="4e684-218">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-218">Optional <b>object</b>.</span>
          </span>
          <span data-ttu-id="4e684-219">Eine ganze Zahl, gibt die Anzahl von Zeilen oder Spalten innerhalb des Bereichs für die Datenquelle, die Beschriftung der Datenreihe enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-219">An integer specifying the number of rows or columns within the source range that contain series labels.</span>
          </span>
          <span data-ttu-id="4e684-220">Zulässige Werte reichen von 0 (null) über die maximale Anzahl der entsprechenden Kategorien oder Reihen minus 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-220">Legal values are from 0 (zero) through one less than the maximum number of the corresponding categories or series.</span>
          </span>
        </param>
        <param name="HasLegend">
          <span data-ttu-id="4e684-221">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-221">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-222">
            <b>True</b>, wenn eine Legende.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-222">
              <b>True</b> to include a legend.</span>
          </span>
        </param>
        <param name="Title">
          <span data-ttu-id="4e684-223">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-223">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-224">Der Diagrammtitel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-224">The chart title text.</span>
          </span>
        </param>
        <param name="CategoryTitle">
          <span data-ttu-id="4e684-225">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-225">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-226">Der Text für die Rubrikenachse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-226">The category axis title text.</span>
          </span>
        </param>
        <param name="ValueTitle">
          <span data-ttu-id="4e684-227">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-227">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-228">Der Text für die Größenachse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-228">The value axis title text.</span>
          </span>
        </param>
        <param name="ExtraTitle">
          <span data-ttu-id="4e684-229">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-229">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-230">Der Text für die zweite Serienachse in 3D-Diagrammen bzw. Beschriftung der zweiten Größenachse in 2D-Diagrammen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-230">The series axis title for 3-D charts or the second value axis title for 2-D charts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-231">Ändert die Eigenschaften für ein bestimmtes Diagramm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-231">Modifies the properties of the given chart.</span>
          </span>
          <span data-ttu-id="4e684-232">Ermöglicht die schnelle Formatierung eines Diagramms, ohne jede einzelne Eigenschaft festzulegen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-232">You can use this method to quickly format a chart without setting all the individual properties.</span>
          </span>
          <span data-ttu-id="4e684-233">Diese Methode ist nicht interaktiv, und es wird nur die angegebenen Eigenschaften geändert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-233">This method is non-interactive, and it changes only the specified properties.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="4e684-234">Wenn <paramref name="Source" /> ausgelassen wird und entweder der Auswahl nicht um ein eingebettetes Diagramm im aktiven Arbeitsblatt oder das aktive Blatt kein Diagramm, schlägt diese Methode fehl und ein Fehler auftritt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-234">If <paramref name="Source" /> is omitted and either the selection isn't an embedded chart on the active worksheet or the active sheet isn't an existing chart, this method fails and an error occurs.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public object CheckBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CheckBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.CheckBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(824)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="4e684-235">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-235">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public void CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.CheckSpelling(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">
          <span data-ttu-id="4e684-236">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-236">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-237">Eine Zeichenfolge, die angibt, der Dateiname des Benutzerwörterbuchs untersucht werden, wenn das Wort im Hauptwörterbuch nicht gefunden wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-237">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary.</span>
          </span>
          <span data-ttu-id="4e684-238">Wenn dieses Argument ausgelassen wird, wird das derzeit angegebene Wörterbuch verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-238">If this argument is omitted, the currently specified dictionary is used.</span>
          </span>
        </param>
        <param name="IgnoreUppercase">
          <span data-ttu-id="4e684-239">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-239">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-240">
            <b>True</b> , wenn Microsoft Excel Wörter ignorieren soll, die vollständig in Großbuchstaben sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-240">
              <b>True</b> to have Microsoft Excel ignore words that are all uppercase.</span>
          </span>
          <span data-ttu-id="4e684-241">
            <b>False</b> , wenn Microsoft Excel-Kontrollkästchen Wörter, die vollständig in Großbuchstaben sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-241">
              <b>False</b> to have Microsoft Excel check words that are all uppercase.</span>
          </span>
          <span data-ttu-id="4e684-242">Wenn dieses Argument ausgelassen wird, wird die aktuelle Einstellung verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-242">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <param name="AlwaysSuggest">
          <span data-ttu-id="4e684-243">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-243">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-244">
            <b>True</b> , wenn Microsoft Excel eine Liste der alternativen Schreibweisen angezeigt wird, wenn eine falsche Schreibweise gefunden wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-244">
              <b>True</b> to have Microsoft Excel display a list of suggested alternate spellings when an incorrect spelling is found.</span>
          </span>
          <span data-ttu-id="4e684-245">
            <b>False</b> , wenn Microsoft Excel warten soll, bis Sie die korrekte Schreibweise eingeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-245">
              <b>False</b> to have Microsoft Excel wait for you to input the correct spelling.</span>
          </span>
          <span data-ttu-id="4e684-246">Wenn dieses Argument ausgelassen wird, wird die aktuelle Einstellung verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-246">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <param name="SpellLang">
          <span data-ttu-id="4e684-247">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-247">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-248">Die Sprache des verwendeten Wörterbuchs an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-248">The language of the dictionary being used.</span>
          </span>
          <span data-ttu-id="4e684-249">Kann eine der der <see cref="T:Microsoft.Office.Core.MsoLanguageID" /> von verwendeten Werte der <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-249">Can be one of the <see cref="T:Microsoft.Office.Core.MsoLanguageID" /> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-250">Prüft die Rechtschreibung eines Objekts und zeigt das Dialogfeld Rechtschreibung an</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-250">Checks the spelling of an object and displays the Spelling dialog box</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearToMatchColorStyle">
      <MemberSignature Language="C#" Value="public void ClearToMatchColorStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearToMatchColorStyle() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ClearToMatchColorStyle" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearToMatchColorStyle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearToMatchColorStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3053)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4e684-251">Löscht alle Farben im angegebenen Diagramm, die nicht die Farbe Formatvorlage von im Diagramm folgen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-251">Clears all colors on the specified chart that do not follow the color style applied to the chart.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="4e684-252">Verwenden Sie diese Methode, um alle Formatierung auf die Farbe Formatvorlage dem Diagramm Diagramm Farbe zurückzusetzen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-252">Use this method to reset all the chart color formatting to the color style applied to the chart.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearToMatchStyle">
      <MemberSignature Language="C#" Value="public void ClearToMatchStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearToMatchStyle() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ClearToMatchStyle" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearToMatchStyle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearToMatchStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2510)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4e684-253">Deaktiviert die Formatierung der Diagrammelemente und legt die automatische Formatierung fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-253">Clears the chart elements formatting to automatic.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="4e684-254">Mit dieser Methode können Sie die Formatierung der Diagrammelemente auf automatische Formatierung zurücksetzen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-254">Use this method to reset the chart elements formatting to automatic.</span>
            </span>
            <span data-ttu-id="4e684-255">Wenn Sie diese Methode für ein Diagramm anwenden, werden alle Formatierungen (auch Überschreibungen) zurückgesetzt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-255">If you use this method on a chart, all formatting (including overrides) will be reset.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeName">
      <MemberSignature Language="C#" Value="public string CodeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.CodeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-256">Gibt den Namen der Code für das Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-256">Returns the code name for the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="4e684-257">Der Wert, den Sie in der Zelle rechts neben (Name) im Fenster Eigenschaften finden Sie unter wird der Codename des ausgewählten Objekts an.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-257">The value that you see in the cell to the right of (Name) in the Properties window is the code name of the selected object.</span>
            </span>
            <span data-ttu-id="4e684-258">Zur Entwurfszeit können Sie den Namen eines Objekts Code durch Ändern dieses Werts ändern.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-258">At design time, you can change the code name of an object by changing this value.</span>
            </span>
            <span data-ttu-id="4e684-259">Diese Eigenschaft kann nicht programmgesteuert zur Laufzeit geändert werden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-259">You cannot programmatically change this property at run time.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="4e684-260">Der Codename für ein Objekt kann anstelle eines Ausdrucks verwendet werden, der das Objekt zurückgibt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-260">The code name for an object can be used in place of an expression that returns the object.</span>
            </span>
            <span data-ttu-id="4e684-261">Es ist möglich, dass der Name des Arbeitsblatts aus der Codename des ersten unterschiedlich sein.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-261">It’s possible for the sheet name to be different from the code name.</span>
            </span>
            <span data-ttu-id="4e684-262">Wenn Sie ein Arbeitsblatt erstellen, der Name des Blatts und Codename identisch sind, aber ändern den Namen des Arbeitsblatts wird der Codename nicht geändert, und Ändern der Codename nicht der Name des Arbeitsblatts.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-262">When you create a sheet, the sheet name and code name are the same, but changing the sheet name doesn’t change the code name, and changing the code name doesn’t change the sheet name.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Column3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Column3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Column3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Column3DGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Column3DGroup As ChartGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartGroup ^ Column3DGroup { Microsoft::Office::Interop::Excel::ChartGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(19)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(19)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-263">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> -Objekt, das die Säulendiagrammgruppe in einem 3D-Diagramm darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-263">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the column chart group on a 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnGroups">
      <MemberSignature Language="C#" Value="public object ColumnGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ColumnGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ColumnGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ColumnGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(11)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="4e684-264">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-264">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-265">Gibt die Diagrammgruppe an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-265">Specifies the chart group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-266">Gibt in einem 2D-Diagramm ein Objekt, das darstellt zurück, das eine einzelne Säulendiagrammgruppe (ein <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> Objekt) oder eine Auflistung der Säulendiagrammgruppen (eine <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> Auflistung).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-266">On a 2-D chart, returns an object that represents either a single column chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the column chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Copy(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="4e684-267">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-267">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-268">Das Blatt vor dem das kopierte Blatt eingefügt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-268">The sheet before which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="4e684-269">Sie können nicht angeben <paramref name="Before" /> bei Angabe <paramref name="After" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-269">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="4e684-270">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-270">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-271">Das Blatt, hinter, dem das kopierte Blatt platziert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-271">The sheet after which the copied sheet will be placed.</span>
          </span>
          <span data-ttu-id="4e684-272">Sie können nicht angeben <paramref name="After" /> bei Angabe <paramref name="Before" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-272">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-273">Kopiert das Blatt an eine andere Position in der Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-273">Copies the sheet to another location in the workbook.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="4e684-274">Wenn Sie entweder nicht angeben <paramref name="Before" /> oder <paramref name="After" />, erstellt Microsoft Excel eine neue Arbeitsmappe, die das kopierte Blatt enthält.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-274">If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the copied sheet.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyChartBuild">
      <MemberSignature Language="C#" Value="public void CopyChartBuild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyChartBuild() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.CopyChartBuild" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyChartBuild ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyChartBuild();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4e684-275">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-275">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyPicture">
      <MemberSignature Language="C#" Value="public void CopyPicture (Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture, Microsoft.Office.Interop.Excel.XlPictureAppearance Size = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlPrinter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyPicture([in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]valuetype Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Size) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat,Microsoft.Office.Interop.Excel.XlPictureAppearance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyPicture (Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional Format As XlCopyPictureFormat = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture, Optional Size As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlPrinter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />
        <Parameter Name="Size" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
      </Parameters>
      <Docs>
        <param name="Appearance">
          <span data-ttu-id="4e684-276">Optionale <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-276">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span>
          </span>
          <span data-ttu-id="4e684-277">Gibt an, wie das Bild kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-277">Specifies how the picture should be copied.</span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="4e684-278">Optionale <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-278">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />.</span>
          </span>
          <span data-ttu-id="4e684-279">Das Format des Bilds.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-279">The format of the picture.</span>
          </span>
        </param>
        <param name="Size">
          <span data-ttu-id="4e684-280">Optionale <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-280">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span>
          </span>
          <span data-ttu-id="4e684-281">Die Größe des kopierten Bilds, wenn das Objekt ein Diagramm in einem Diagrammblatt (nicht in einem Arbeitsblatt eingebettet) ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-281">The size of the copied picture when the object is a chart on a chart sheet (not embedded on a worksheet).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-282">Kopiert das ausgewählte Objekt als Bild in die Zwischenablage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-282">Copies the selected object to the Clipboard as a picture.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Corners">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Corners Corners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Corners Corners" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Corners" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Corners As Corners" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Corners ^ Corners { Microsoft::Office::Interop::Excel::Corners ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(79)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(79)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Corners</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-283">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Corners" /> -Objekt, das die Ecken eines 3D-Diagramms darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-283">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Corners" /> object that represents the corners of a 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePublisher">
      <MemberSignature Language="C#" Value="public void CreatePublisher (object Edition, Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Microsoft.Office.Interop.Excel.XlPictureAppearance Size = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, object ContainsPICT, object ContainsBIFF, object ContainsRTF, object ContainsVALU);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreatePublisher([in]object Edition, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Size, [in]object ContainsPICT, [in]object ContainsBIFF, [in]object ContainsRTF, [in]object ContainsVALU) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreatePublisher (Optional Edition As Object, Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional Size As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional ContainsPICT As Object, Optional ContainsBIFF As Object, Optional ContainsRTF As Object, Optional ContainsVALU As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(458)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.Object" />
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Size" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="ContainsPICT" Type="System.Object" />
        <Parameter Name="ContainsBIFF" Type="System.Object" />
        <Parameter Name="ContainsRTF" Type="System.Object" />
        <Parameter Name="ContainsVALU" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Edition">
          <span data-ttu-id="4e684-284">Dieser Parameter ist nur für Macintosh gedacht und sollte nicht verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-284">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Appearance">
          <span data-ttu-id="4e684-285">Dieser Parameter ist nur für Macintosh gedacht und sollte nicht verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-285">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Size">
          <span data-ttu-id="4e684-286">Dieser Parameter ist nur für Macintosh gedacht und sollte nicht verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-286">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ContainsPICT">
          <span data-ttu-id="4e684-287">Dieser Parameter ist nur für Macintosh gedacht und sollte nicht verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-287">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ContainsBIFF">
          <span data-ttu-id="4e684-288">Dieser Parameter ist nur für Macintosh gedacht und sollte nicht verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-288">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ContainsRTF">
          <span data-ttu-id="4e684-289">Dieser Parameter ist nur für Macintosh gedacht und sollte nicht verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-289">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="ContainsVALU">
          <span data-ttu-id="4e684-290">Dieser Parameter ist nur für Macintosh gedacht und sollte nicht verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-290">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-291">Für die interne Verwendung reserviert. Dieser Member ist nur für Macintosh und sollte nicht verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-291">Reserved for internal use.This member is for Macintosh only and should not be used.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-292">Gibt eine Konstante in der <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> -Enumeration, die die Anwendung angibt, in der dieses Objekt erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-292">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="4e684-293">Wenn das Objekt in Microsoft Excel erstellt wurde, gibt diese Eigenschaft die Zeichenfolge XCEL zurück, dies entspricht die hexadezimale Zahl 5843454 c ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-293">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
        </value>
        <remarks>
          <para>
            <span data-ttu-id="4e684-294">Die <b>Creator</b> -Eigenschaft ist in Microsoft Excel für den Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen verfügt über entwickelt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-294">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="4e684-295">Der Erstellercode von Microsoft Excel lautet beispielsweise XCEL zurück.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-295">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DataTable DataTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DataTable DataTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.DataTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataTable As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DataTable ^ DataTable { Microsoft::Office::Interop::Excel::DataTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1395)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-296">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.DataTable" /> -Objekt, das die Diagrammdatentabelle darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-296">Returns a <see cref="T:Microsoft.Office.Interop.Excel.DataTable" /> object that represents the chart data table.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4e684-297">Löscht das Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-297">Deletes the object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteHiddenContent">
      <MemberSignature Language="C#" Value="public void DeleteHiddenContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteHiddenContent() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.DeleteHiddenContent" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteHiddenContent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteHiddenContent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3051)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DepthPercent">
      <MemberSignature Language="C#" Value="public int DepthPercent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DepthPercent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.DepthPercent" />
      <MemberSignature Language="VB.NET" Value="Public Property DepthPercent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DepthPercent { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(48)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(48)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(48)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-298">Gibt die Tiefe eines 3D-Diagramms als Prozentsatz der Diagrammbreite (zwischen 20 und 2000 Prozent) zurück oder legt sie fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-298">Returns or sets the depth of a 3-D chart as a percentage of the chart width (between 20 and 2000 percent).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deselect">
      <MemberSignature Language="C#" Value="public void Deselect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deselect() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Deselect" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deselect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Deselect();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1120)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4e684-299">Hebt die Auswahl des angegebenen Diagramms auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-299">Cancels the selection for the specified chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayBlanksAs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDisplayBlanksAs DisplayBlanksAs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDisplayBlanksAs DisplayBlanksAs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.DisplayBlanksAs" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayBlanksAs As XlDisplayBlanksAs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDisplayBlanksAs DisplayBlanksAs { Microsoft::Office::Interop::Excel::XlDisplayBlanksAs get(); void set(Microsoft::Office::Interop::Excel::XlDisplayBlanksAs value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(93)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(93)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(93)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDisplayBlanksAs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-300">Gibt zurück oder legt fest, wie leere Zellen in einem Diagramm gezeichnet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-300">Returns or sets the way that blank cells are plotted on a chart.</span>
          </span>
          <span data-ttu-id="4e684-301">Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs" /> Konstanten: <b>XlNotPlotted</b>, <b>XlInterpolated</b>oder <b>XlZero</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-301">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayBlanksAs" /> constants: <b>xlNotPlotted</b>, <b>xlInterpolated</b>, or <b>xlZero</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoughnutGroups">
      <MemberSignature Language="C#" Value="public object DoughnutGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DoughnutGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.DoughnutGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DoughnutGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="4e684-302">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-302">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-303">Gibt die Diagrammgruppe an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-303">Specifies the chart group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-304">Gibt in einem 2D-Diagramm ein Objekt, das darstellt zurück, das eine einzelne Ringdiagrammgruppe (ein <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> Objekt) oder eine Auflistung der Ringdiagrammgruppen (eine <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> Auflistung).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-304">On a 2-D chart, returns an object that represents either a single doughnut chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the doughnut chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawingObjects">
      <MemberSignature Language="C#" Value="public object DrawingObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DrawingObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.DrawingObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DrawingObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(88)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="4e684-305">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-305">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Drawings">
      <MemberSignature Language="C#" Value="public object Drawings (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Drawings([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Drawings(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Drawings (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="4e684-306">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-306">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDowns">
      <MemberSignature Language="C#" Value="public object DropDowns (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DropDowns([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.DropDowns(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DropDowns (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(836)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="4e684-p160">Bei Legenden mit einem explizit festgelegten Ansatzwert gibt diese Eigenschaft den vertikalen Abstand (in Punkt) zwischen dem Rand des umgebenden Felds für den Text und der Position zurück, an der die Legendenlinie mit dem Textfeld verbunden ist. Schreibgeschützter <b>Single</b>-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-p160">For callouts with an explicitly set drop value, this property returns the vertical distance (in points) from the edge of the text bounding box to the place where the callout line attaches to the text box. Read-only <b>Single</b>.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4e684-309">Gibt <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-309">Returns <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <para>
            <span data-ttu-id="4e684-p161">Dieser Abstand wird nur dann nicht vom oberen Rand des Textfelds gemessen, wenn die <b>AutoAttach</b>-Eigenschaft auf <b>True</b> festgelegt ist und das Textfeld sich links vom Ursprung der Legendenlinie befindet (der Position, auf die die Legende zeigt). In diesem Fall wird der Ansatzabstand vom unteren Rand des Textfelds gemessen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-p161">This distance is measured from the top of the text box unless the <b>AutoAttach</b> property is set to <b>True</b> and the text box is to the left of the origin of the callout line (the place that the callout points to), in which case the drop distance is measured from the bottom of the text box. </span>
            </span>
          </para>
          <para>
            <span data-ttu-id="4e684-311">Verwendung der <see cref="M:Microsoft.Office.Interop.Excel.CalloutFormat.CustomDrop(System.Single)" /> -Methode, um den Wert dieser Eigenschaft festzulegen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-311">Use the <see cref="M:Microsoft.Office.Interop.Excel.CalloutFormat.CustomDrop(System.Single)" /> method to set the value of this property.</span>
            </span>
          </para>
          <para></para>
          <para>
            <span data-ttu-id="4e684-312">Der Wert dieser Eigenschaft zeigt die Position der die Legendenlinie mit dem Textfeld nur dann, wenn die Legende einen explizit festgelegten drop Wert – d. h., wenn der Wert der <see cref="P:Microsoft.Office.Interop.Excel.CalloutFormat.DropType" /><b>-Eigenschaft ist</b>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-312">The value of this property accurately reflects the position of the callout line attachment to the text box only if the callout has an explicitly set drop value — that is, if the value of the <see cref="P:Microsoft.Office.Interop.Excel.CalloutFormat.DropType" /> property is <b>msoCalloutDropCustom</b>.</span>
            </span>
          </para>
          <para></para>
        </remarks>
        <example>
          <para>
            <span data-ttu-id="4e684-p162">In diesem Beispiel wird der benutzerdefinierte Ansatz der ersten Form in myDocument durch einen von zwei vordefinierten Ansätzen ersetzt. Welcher der vordefinierten Ansätze eingesetzt wird, hängt davon ab, ob der benutzerdefinierte Ansatzwert größer oder kleiner ist als die halbe Höhe des Legendentextfelds. Damit das Beispiel funktioniert, muss es sich bei der ersten Form um eine Legende handeln.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-p162">This example replaces the custom drop for shape one on myDocument with one of two preset drops, depending on whether the custom drop value is greater than or less than half the height of the callout text box. For the example to work, shape one must be a callout.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;Set myDocument = Worksheets(1)  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
With myDocument.Shapes(1).Callout  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
    If .DropType = msoCalloutDropCustom Then  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
        If .&lt;/span&gt;
&lt;i&gt;Drop&lt;/i&gt;
&lt;span class="label"&gt;&amp;lt; .Parent.Height / 2 Then             .PresetDrop msoCalloutDropTop         Else             .PresetDrop msoCalloutDropBottom         End If     End If End With&lt;/span&gt;</code>
        </example>
        <example>
          <para>
            <span data-ttu-id="4e684-p163">In diesem Beispiel wird der benutzerdefinierte Ansatz der ersten Form in myDocument durch einen von zwei vordefinierten Ansätzen ersetzt. Welcher der vordefinierten Ansätze eingesetzt wird, hängt davon ab, ob der benutzerdefinierte Ansatzwert größer oder kleiner ist als die halbe Höhe des Legendentextfelds. Damit das Beispiel funktioniert, muss es sich bei der ersten Form um eine Legende handeln.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-p163">This example replaces the custom drop for shape one on myDocument with one of two preset drops, depending on whether the custom drop value is greater than or less than half the height of the callout text box. For the example to work, shape one must be a callout.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;Set myDocument = Worksheets(1)  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
With myDocument.Shapes(1).Callout  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
    If .DropType = msoCalloutDropCustom Then  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
        If .&lt;/span&gt;
&lt;i&gt;Drop&lt;/i&gt;
&lt;span class="label"&gt;&amp;lt; .Parent.Height / 2 Then             .PresetDrop msoCalloutDropTop         Else             .PresetDrop msoCalloutDropBottom         End If     End If End With&lt;/span&gt;</code>
        </example>
        <example>
          <para>
            <span data-ttu-id="4e684-p164">In diesem Beispiel wird der benutzerdefinierte Ansatz der ersten Form in myDocument durch einen von zwei vordefinierten Ansätzen ersetzt. Welcher der vordefinierten Ansätze eingesetzt wird, hängt davon ab, ob der benutzerdefinierte Ansatzwert größer oder kleiner ist als die halbe Höhe des Legendentextfelds. Damit das Beispiel funktioniert, muss es sich bei der ersten Form um eine Legende handeln.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-p164">This example replaces the custom drop for shape one on myDocument with one of two preset drops, depending on whether the custom drop value is greater than or less than half the height of the callout text box. For the example to work, shape one must be a callout.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;Set myDocument = Worksheets(1)  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
With myDocument.Shapes(1).Callout  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
    If .DropType = msoCalloutDropCustom Then  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
        If .&lt;/span&gt;
&lt;i&gt;Drop&lt;/i&gt;
&lt;span class="label"&gt;&amp;lt; .Parent.Height / 2 Then             .PresetDrop msoCalloutDropTop         Else             .PresetDrop msoCalloutDropBottom         End If     End If End With&lt;/span&gt;</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Dummy24">
      <MemberSignature Language="C#" Value="public bool Dummy24 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy24" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Dummy24" />
      <MemberSignature Language="VB.NET" Value="Public Property Dummy24 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dummy24 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2858)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2858)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2858)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy25">
      <MemberSignature Language="C#" Value="public bool Dummy25 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy25" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Dummy25" />
      <MemberSignature Language="VB.NET" Value="Public Property Dummy25 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dummy25 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2859)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2859)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2859)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Elevation">
      <MemberSignature Language="C#" Value="public int Elevation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Elevation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Elevation" />
      <MemberSignature Language="VB.NET" Value="Public Property Elevation As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Elevation { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(49)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(49)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(49)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-319">Zurückgeben oder festlegen die Erhöhung von 3D-Diagrammansicht in Grad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-319">Returns or sets the elevation of the 3-D chart view in degrees.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="4e684-320">Die Erhöhung Diagramm ist die Höhe, an der Sie das Diagramm in Grad anzeigen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-320">The chart elevation is the height at which you view the chart in degrees.</span>
            </span>
            <span data-ttu-id="4e684-321">Der Standardwert ist 15 für die meisten Diagrammtypen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-321">The default is 15 for most chart types.</span>
            </span>
            <span data-ttu-id="4e684-322">Der Wert dieser Eigenschaft muss zwischen-90 und 90 3D-Diagramme Leiste, in dem sie zwischen 0 und 44 muss.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-322">The value of this property must be between -90 and 90, except for 3-D bar charts, where it must be between 0 and 44.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="4e684-323">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-323">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-324">Der Name des Objekts, wobei die für Microsoft Excel gültigen Namenskonventionen zu berücksichtigen sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-324">The name of the object, using the naming convention of Microsoft Excel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-325">Diese Methode konvertiert einen Microsoft Excel-Namen in ein Objekt oder in einen Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-325">Converts a Microsoft Excel name to an object or a value.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public bool Export (string Filename, object FilterName, object Interactive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Export([in]string Filename, [in]object FilterName, [in]object Interactive) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Export(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Export (Filename As String, Optional FilterName As Object, Optional Interactive As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1414)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FilterName" Type="System.Object" />
        <Parameter Name="Interactive" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="4e684-326">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-326">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="4e684-327">Der Name der exportierten Datei</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-327">The name of the exported file.</span>
          </span>
        </param>
        <param name="FilterName">
          <span data-ttu-id="4e684-328">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-328">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-329">Der sprachenunabhängige Name des Grafikfilters, wie er in der Registrierung angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-329">The language-independent name of the graphic filter as it appears in the registry.</span>
          </span>
        </param>
        <param name="Interactive">
          <span data-ttu-id="4e684-330">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-330">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-331">
            <b>True</b>, wenn das Dialogfeld anzuzeigen, die die Filter-spezifischen Optionen enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-331">
              <b>True</b> to display the dialog box that contains the filter-specific options.</span>
          </span>
          <span data-ttu-id="4e684-332">Wenn dieses Argument auf <b>False</b>festgelegt ist, verwendet Microsoft Excel die Standardwerte für den Filter ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-332">If this argument is <b>False</b>, Microsoft Excel uses the default values for the filter.</span>
          </span>
          <span data-ttu-id="4e684-333">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-333">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-334">Exportiert das Diagramm in einem Grafikformat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-334">Exports the chart in a graphic format.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, [in]object Filename, [in]object Quality, [in]object IncludeDocProperties, [in]object IgnorePrintAreas, [in]object From, [in]object To, [in]object OpenAfterPublish, [in]object FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (Type As XlFixedFormatType, Optional Filename As Object, Optional Quality As Object, Optional IncludeDocProperties As Object, Optional IgnorePrintAreas As Object, Optional From As Object, Optional To As Object, Optional OpenAfterPublish As Object, Optional FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="4e684-335">Der Typ des Dateiformats, in das exportiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-335">The type of file format to export to.</span>
          </span>
        </param>
        <param name="Filename">
          <span data-ttu-id="4e684-336">Der Dateiname der Datei gespeichert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-336">The file name of the file to be saved.</span>
          </span>
          <span data-ttu-id="4e684-337">Sie können einen vollständigen Pfad einschließen, oder short_Excel2007 speichert die Datei im aktuellen Ordner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-337">You can include a full path, or short_Excel2007 saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Quality">
          <span data-ttu-id="4e684-338">Optionale <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-338">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />.</span>
          </span>
          <span data-ttu-id="4e684-339">Gibt die Qualität der veröffentlichten Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-339">Specifies the quality of the published file.</span>
          </span>
        </param>
        <param name="IncludeDocProperties">
          <span data-ttu-id="4e684-340">
            <b>True</b>, um die Dokumenteigenschaften einzuschließen, andernfalls <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-340">
              <b>True</b> to include the document properties; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="IgnorePrintAreas">
          <span data-ttu-id="4e684-341">
            <b>True</b>, um alle festgelegten Druckbereiche beim Veröffentlichen zu ignorieren, andernfalls <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-341">
              <b>True</b> to ignore any print areas set when publishing; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="From">
          <span data-ttu-id="4e684-p172">Die Seitenzahl, bei der die Veröffentlichung begonnen werden soll. Wenn dieses Argument nicht angegeben wird, beginnt die Veröffentlichung am Anfang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-p172">The number of the page at which to start publishing. If this argument is omitted, publishing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="4e684-p173">Die Seitenzahl der letzten Seite, die veröffentlicht werden soll. Wenn Sie dieses Argument nicht angeben, wird bis zur letzten Seite veröffentlicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-p173">The number of the last page to publish. If this argument is omitted, publishing ends with the last page.</span>
          </span>
        </param>
        <param name="OpenAfterPublish">
          <span data-ttu-id="4e684-346">
            <b>True</b>, um die Datei nach dem Veröffentlichen im Viewer anzuzeigen, andernfalls <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-346">
              <b>True</b> to display the file in the viewer after it is published; otherwise <b>False</b>.</span>
          </span>
        </param>
        <param name="FixedFormatExtClassPtr">
          <span data-ttu-id="4e684-347">Zeiger auf die FixedFormatExt-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-347">Pointer to the FixedFormatExt class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-348">Exportiert in eine Datei mit dem angegebenen Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-348">Exports to a file of the specified format.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="4e684-p174">Diese Methode unterstützt außerdem das Initialisieren eines Add-Ins, um eine Datei in eine Datei mit einem festen Format zu exportieren. In Excel wird beispielsweise eine Dateiformatkonvertierung ausgeführt, wenn Konverter vorhanden sind. Die Konvertierung wird normalerweise vom Benutzer initiiert.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-p174">This method also supports initializing an add-in to export a file to a fixed-format file. For example, Excel will perform file format conversion if the converters are  present. The conversion is usually initiated by the user.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Floor Floor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Floor Floor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Floor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Floor As Floor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Floor ^ Floor { Microsoft::Office::Interop::Excel::Floor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(83)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(83)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Floor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-352">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Floor" /> -Objekt, das die Bodenfläche eines 3D-Diagramms darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-352">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Floor" /> object that represents the floor of the 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullSeriesCollection">
      <MemberSignature Language="C#" Value="public object FullSeriesCollection (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FullSeriesCollection([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.FullSeriesCollection(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FullSeriesCollection (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3047)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="4e684-353">Indizierte Anzahl der gefilterten out <b>Series</b> -Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-353">The indexed number of the filtered out <b>Series</b> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-354">Ermöglicht das Abrufen der durch das Index-Argument angegebenen herausgefilterten Serie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-354">Enables retrieving the filtered out series specified by the Index argument.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="4e684-355">
              <b>Series</b> Objekte in ausgeblendeten Zeilen oder Spalten werden nicht in der aktuellen Series-Auflistung angezeigt, es sei denn, der Benutzer hat die Option <b>Daten in ausgeblendeten Zeilen und Spalten anzeigen</b> im Dialogfeld Daten auswählen aktiviert.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-355">
                <b>Series</b> objects in hidden rows or columns do not appear in the current series collection unless the user has enabled the <b>Show data in hidden rows and columns</b> option in the Select Data dialog.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GapDepth">
      <MemberSignature Language="C#" Value="public int GapDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GapDepth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.GapDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property GapDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int GapDepth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(50)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(50)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(50)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-356">Zurückgeben oder festlegen den Abstand zwischen den Datenreihen in einem 3D-Diagramm als einen prozentualen Anteil der Markierungsbreite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-356">Returns or sets the distance between the data series in a 3-D chart as a percentage of the marker width.</span>
          </span>
          <span data-ttu-id="4e684-357">Der Wert dieser Eigenschaft muss zwischen 0 und 500 liegen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-357">The value of this property must be between 0 and 500.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChartElement">
      <MemberSignature Language="C#" Value="public void GetChartElement (int x, int y, ref int ElementID, ref int Arg1, ref int Arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetChartElement([in]int32 x, [in]int32 y, [in]int32&amp; ElementID, [in]int32&amp; Arg1, [in]int32&amp; Arg2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.GetChartElement(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetChartElement (x As Integer, y As Integer, ByRef ElementID As Integer, ByRef Arg1 As Integer, ByRef Arg2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetChartElement(int x, int y, int % ElementID, int % Arg1, int % Arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1409)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="ElementID" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="Arg1" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="Arg2" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="4e684-358">
            <b>Integer</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-358">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="4e684-359">Die X-Koordinate des Diagrammelements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-359">The X coordinate of the chart element.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="4e684-360">
            <b>Integer</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-360">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="4e684-361">Die Y-Koordinate des Diagrammelements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-361">The Y coordinate of the chart element.</span>
          </span>
        </param>
        <param name="ElementID">
          <span data-ttu-id="4e684-362">
            <b>Integer</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-362">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="4e684-363">Wenn die Methode zurückgegeben wird, enthält dieses Argument den <see cref="T:Microsoft.Office.Interop.Excel.XlChartItem" /> Wert des Diagrammelements an den angegebenen Koordinaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-363">When the method returns, this argument contains the <see cref="T:Microsoft.Office.Interop.Excel.XlChartItem" /> value of the chart element at the specified coordinates.</span>
          </span>
          <span data-ttu-id="4e684-364">Weitere Informationen finden Sie unter "Anmerkungen".</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-364">For more information, see the Remarks section.</span>
          </span>
        </param>
        <param name="Arg1">
          <span data-ttu-id="4e684-365">
            <b>Integer</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-365">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="4e684-366">Nach Beendigung der Methode enthält dieses Argument Informationen zum Diagrammelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-366">When the method returns, this argument contains information related to the chart element.</span>
          </span>
          <span data-ttu-id="4e684-367">Weitere Informationen finden Sie unter "Anmerkungen".</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-367">For more information, see the Remarks section.</span>
          </span>
        </param>
        <param name="Arg2">
          <span data-ttu-id="4e684-368">
            <b>Integer</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-368">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="4e684-369">Nach Beendigung der Methode enthält dieses Argument Informationen zum Diagrammelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-369">When the method returns, this argument contains information related to the chart element.</span>
          </span>
          <span data-ttu-id="4e684-370">Weitere Informationen finden Sie unter "Anmerkungen".</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-370">For more information, see the Remarks section.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-p181">Gibt Informationen über das Diagrammelement an den angegebenen X- und Y-Koordinaten zurück. Diese Methode ist insofern ungewöhnlich, als Sie nur für die beiden ersten Argumente Werte festlegen. Microsoft Excel fügt die anderen Argumente ein. Ihr Code sollte diese Werte nach Beendigung der Methode untersuchen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-p181">Returns information about the chart element at specified X and Y coordinates. This method is unusual in that you specify values for only the first two arguments. Microsoft Excel fills in the other arguments, and your code should examine those values when the method returns.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="4e684-374">Der Wert der <paramref name="ElementID" /> nach Beendigung die Methode bestimmt, ob <paramref name="Arg1" /> und <paramref name="Arg2" /> Informationen enthalten, wie in der folgenden Tabelle dargestellt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-374">The value of <paramref name="ElementID" /> after the method returns determines whether <paramref name="Arg1" /> and <paramref name="Arg2" /> contain any information, as shown in the following table.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="4e684-375">
                  <b>xlAxis</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-375">
                    <b>xlAxis</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-376">AxisIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-376">AxisIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-377">AxisType</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-377">AxisType</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-378">
                  <b>xlAxisTitle</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-378">
                    <b>xlAxisTitle</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-379">AxisIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-379">AxisIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-380">AxisType</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-380">AxisType</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-381">
                  <b>xlDisplayUnitLabel</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-381">
                    <b>xlDisplayUnitLabel</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-382">AxisIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-382">AxisIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-383">AxisType</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-383">AxisType</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-384">
                  <b>xlMajorGridlines</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-384">
                    <b>xlMajorGridlines</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-385">AxisIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-385">AxisIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-386">AxisType</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-386">AxisType</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-387">
                  <b>xlMinorGridlines</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-387">
                    <b>xlMinorGridlines</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-388">AxisIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-388">AxisIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-389">AxisType</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-389">AxisType</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-390">
                  <b>xlPivotChartDropZone</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-390">
                    <b>xlPivotChartDropZone</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-391">DropZoneType</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-391">DropZoneType</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-392">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-392">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-393">
                  <b>xlPivotChartFieldButton</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-393">
                    <b>xlPivotChartFieldButton</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-394">DropZoneType</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-394">DropZoneType</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-395">PivotFieldIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-395">PivotFieldIndex</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-396">
                  <b>xlDownBars</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-396">
                    <b>xlDownBars</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-397">GroupIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-397">GroupIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-398">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-398">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-399">
                  <b>xlDropLines</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-399">
                    <b>xlDropLines</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-400">GroupIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-400">GroupIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-401">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-401">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-402">
                  <b>xlHiLoLines</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-402">
                    <b>xlHiLoLines</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-403">GroupIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-403">GroupIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-404">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-404">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-405">
                  <b>xlRadarAxisLabels</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-405">
                    <b>xlRadarAxisLabels</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-406">GroupIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-406">GroupIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-407">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-407">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-408">
                  <b>xlSeriesLines</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-408">
                    <b>xlSeriesLines</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-409">GroupIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-409">GroupIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-410">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-410">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-411">
                  <b>xlUpBars</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-411">
                    <b>xlUpBars</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-412">GroupIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-412">GroupIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-413">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-413">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-414">
                  <b>xlChartArea</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-414">
                    <b>xlChartArea</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-415">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-415">None</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-416">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-416">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-417">
                  <b>xlChartTitle</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-417">
                    <b>xlChartTitle</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-418">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-418">None</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-419">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-419">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-420">
                  <b>xlCorners</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-420">
                    <b>xlCorners</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-421">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-421">None</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-422">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-422">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-423">
                  <b>xlDataTable</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-423">
                    <b>xlDataTable</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-424">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-424">None</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-425">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-425">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-426">
                  <b>xlFloor</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-426">
                    <b>xlFloor</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-427">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-427">None</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-428">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-428">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-429">
                  <b>xlLegend</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-429">
                    <b>xlLegend</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-430">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-430">None</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-431">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-431">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-432">
                  <b>xlNothing</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-432">
                    <b>xlNothing</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-433">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-433">None</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-434">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-434">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-435">
                  <b>xlPlotArea</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-435">
                    <b>xlPlotArea</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-436">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-436">None</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-437">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-437">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-438">
                  <b>xlWalls</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-438">
                    <b>xlWalls</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-439">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-439">None</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-440">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-440">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-441">
                  <b>xlDataLabel</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-441">
                    <b>xlDataLabel</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-442">SeriesIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-442">SeriesIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-443">PointIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-443">PointIndex</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-444">
                  <b>xlErrorBars</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-444">
                    <b>xlErrorBars</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-445">SeriesIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-445">SeriesIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-446">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-446">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-447">
                  <b>xlLegendEntry</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-447">
                    <b>xlLegendEntry</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-448">SeriesIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-448">SeriesIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-449">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-449">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-450">
                  <b>xlLegendKey</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-450">
                    <b>xlLegendKey</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-451">SeriesIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-451">SeriesIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-452">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-452">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-453">
                  <b>Ist</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-453">
                    <b>xlSeries</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-454">SeriesIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-454">SeriesIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-455">PointIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-455">PointIndex</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-456">
                  <b>xlShape</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-456">
                    <b>xlShape</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-457">ShapeIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-457">ShapeIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-458">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-458">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-459">
                  <b>xlTrendline</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-459">
                    <b>xlTrendline</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-460">SeriesIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-460">SeriesIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-461">TrendLineIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-461">TrendLineIndex</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-462">
                  <b>xlXErrorBars</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-462">
                    <b>xlXErrorBars</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-463">SeriesIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-463">SeriesIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-464">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-464">None</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-465">
                  <b>xlYErrorBars</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-465">
                    <b>xlYErrorBars</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-466">SeriesIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-466">SeriesIndex</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="4e684-467">Keine</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-467">None</span>
                </span>
              </description>
            </item>
          </list>
          <para>
            <span data-ttu-id="4e684-468">Die folgende Tabelle beschreibt die Bedeutung des <paramref name="Arg1" /> und <paramref name="Arg2" /> nach Beendigung die Methode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-468">The following table describes the meaning of <paramref name="Arg1" /> and <paramref name="Arg2" /> after the method returns.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="4e684-469">AxisIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-469">AxisIndex</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-470">Gibt an, ob die Achse Primär oder sekundär ist.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-470">Specifies whether the axis is primary or secondary.</span>
                </span>
                <span data-ttu-id="4e684-471">Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" /> Konstanten: <b>XlPrimary</b> oder <b>XlSecondary</b>.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-471">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" /> constants: <b>xlPrimary</b> or <b>xlSecondary</b>.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-472">AxisType</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-472">AxisType</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-473">Gibt den Typ der Achse an.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-473">Specifies the axis type.</span>
                </span>
                <span data-ttu-id="4e684-474">Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> Konstanten: <b>XlCategory</b>, <b>XlSeriesAxis</b>oder <b>XlValue</b>.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-474">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constants: <b>xlCategory</b>, <b>xlSeriesAxis</b>, or <b>xlValue</b>.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-475">DropZoneType</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-475">DropZoneType</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-476">Gibt den Typ der Dropzone: Spalte, Daten, Seite oder Zeilenfeld.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-476">Specifies the drop zone type: column, data, page, or row field.</span>
                </span>
                <span data-ttu-id="4e684-477">Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation" /> Konstanten: <b>XlColumnField</b>, <b>XlDataField</b>, <b>XlPageField</b>oder <b>XlRowField</b>.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-477">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPivotFieldOrientation" /> constants: <b>xlColumnField</b>, <b>xlDataField</b>, <b>xlPageField</b>, or <b>xlRowField</b>.</span>
                </span>
                <span data-ttu-id="4e684-478">Die Spalten-als auch die Feld-Konstanten geben Sie die Felder Serie und Kategorie.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-478">The column and row field constants specify the series and category fields respectively.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-479">GroupIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-479">GroupIndex</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-480">Gibt den Offset innerhalb der <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> -Auflistung für eine bestimmte Diagrammgruppe.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-480">Specifies the offset within the <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection for a specific chart group.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-481">PivotFieldIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-481">PivotFieldIndex</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-482">Gibt den Offset innerhalb der <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> -Auflistung für ein bestimmtes Spalten-(Datenreihen-), Daten, Seite oder Zeilenfeld (Kategorienfeld).</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-482">Specifies the offset within the <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> collection for a specific column (series), data, page, or row (category) field.</span>
                </span>
                <span data-ttu-id="4e684-483">-1, wenn der Typ der Dropzone ist <b>XlDataField</b>.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-483">-1 if the drop zone type is <b>xlDataField</b>.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-484">PointIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-484">PointIndex</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-485">Gibt den Offset innerhalb der <see cref="T:Microsoft.Office.Interop.Excel.Points" /> -Auflistung für einen bestimmten Punkt in einer Datenreihe.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-485">Specifies the offset within the <see cref="T:Microsoft.Office.Interop.Excel.Points" /> collection for a specific point within a series.</span>
                </span>
                <span data-ttu-id="4e684-486">Wert-1 gibt an, dass alle Datenpunkte ausgewählt sind.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-486">A value of –1 indicates that all data points are selected.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-487">SeriesIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-487">SeriesIndex</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-488">Gibt den Offset innerhalb der <see cref="T:Microsoft.Office.Interop.Excel.Series" /> Auflistung einer bestimmten Datenreihe.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-488">Specifies the offset within the <see cref="T:Microsoft.Office.Interop.Excel.Series" /> collection for a specific series.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-489">ShapeIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-489">ShapeIndex</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-490">Gibt den Offset innerhalb der <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> -Auflistung für ein bestimmtes Shape.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-490">Specifies the offset within the <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> collection for a specific shape.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="4e684-491">TrendlineIndex</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-491">TrendlineIndex</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="4e684-492">Gibt den Offset innerhalb der <see cref="T:Microsoft.Office.Interop.Excel.Trendlines" /> -Auflistung einer bestimmten Trendlinie in einer Datenreihe.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-492">Specifies the offset within the <see cref="T:Microsoft.Office.Interop.Excel.Trendlines" /> collection for a specific trendline within a series.</span>
                </span>
              </description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBoxes">
      <MemberSignature Language="C#" Value="public object GroupBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.GroupBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(834)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="4e684-493">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-493">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupObjects">
      <MemberSignature Language="C#" Value="public object GroupObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.GroupObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1113)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="4e684-494">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-494">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAxis">
      <MemberSignature Language="C#" Value="public object HasAxis[object Index1, object Index2] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HasAxis(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HasAxis(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property HasAxis(Optional Index1 As Object, Optional Index2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HasAxis[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ Index1, System::Object ^ Index2); void set(System::Object ^ Index1, System::Object ^ Index2, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(52)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(52)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(52)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index1" Type="System.Object" />
        <Parameter Name="Index2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index1">
          <span data-ttu-id="4e684-495">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-495">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-496">Den Typ der Achse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-496">The axis type.</span>
          </span>
          <span data-ttu-id="4e684-497">Datenreihe - Achsen gelten nur für 3D-Diagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-497">Series axes apply only to 3-D charts.</span>
          </span>
          <span data-ttu-id="4e684-498">Kann eine der der <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> Konstanten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-498">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlAxisType" /> constants.</span>
          </span>
        </param>
        <param name="Index2">
          <span data-ttu-id="4e684-499">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-499">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-500">Die Achsengruppe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-500">The axis group.</span>
          </span>
          <span data-ttu-id="4e684-501">3D-Diagramme haben nur einen Satz von Achsen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-501">3-D charts have only one set of axes.</span>
          </span>
          <span data-ttu-id="4e684-502">Kann eine der der <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" /> Konstanten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-502">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" /> constants.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-503">Gibt zurück oder legt fest, welche Achsen im Diagramm vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-503">Returns or sets which axes exist on the chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="4e684-504">Microsoft Excel möglicherweise Achsen erstellt oder gelöscht, wenn Sie den Diagrammtyp ändern oder die <see cref="P:Microsoft.Office.Interop.Excel.Axis.AxisGroup" /> Eigenschaft.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-504">Microsoft Excel may create or delete axes if you change the chart type or the <see cref="P:Microsoft.Office.Interop.Excel.Axis.AxisGroup" /> property.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDataTable">
      <MemberSignature Language="C#" Value="public bool HasDataTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDataTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HasDataTable" />
      <MemberSignature Language="VB.NET" Value="Public Property HasDataTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasDataTable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1396)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-505">
            <b>True</b>, wenn das Diagramm eine Datentabelle besitzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-505">
              <b>True</b> if the chart has a data table.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasHiddenContent">
      <MemberSignature Language="C#" Value="public bool HasHiddenContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasHiddenContent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HasHiddenContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasHiddenContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasHiddenContent { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3050)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3050)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLegend">
      <MemberSignature Language="C#" Value="public bool HasLegend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLegend" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HasLegend" />
      <MemberSignature Language="VB.NET" Value="Public Property HasLegend As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasLegend { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(53)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(53)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(53)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-506">
            <b>True</b>, wenn das Diagramm eine Legende besitzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-506">
              <b>True</b> if the chart has a legend.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPivotFields">
      <MemberSignature Language="C#" Value="public bool HasPivotFields { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPivotFields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HasPivotFields" />
      <MemberSignature Language="VB.NET" Value="Public Property HasPivotFields As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPivotFields { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-507">
            <b>True,</b> Wenn die PivotChart-Steuerelemente im angegebenen PivotChart-Bericht angezeigt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-507">
              <b>True</b> if the PivotChart controls are displayed on the specified PivotChart report.</span>
          </span>
          <span data-ttu-id="4e684-508">Der Standardwert ist <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-508">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="4e684-509">Bei einem Standarddiagramm gibt diese Eigenschaft immer <b>False</b> zurückgibt und kann nicht festgelegt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-509">For a regular chart, this property always returns <b>False</b> and cannot be set.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasTitle">
      <MemberSignature Language="C#" Value="public bool HasTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HasTitle" />
      <MemberSignature Language="VB.NET" Value="Public Property HasTitle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasTitle { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(54)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(54)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(54)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-510">
            <b>True</b>, wenn die Achse eine sichtbare Beschriftung oder das Diagramm einen sichtbaren Titel aufweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-510">
              <b>True</b> if the axis or chart has a visible title.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="4e684-511">Ein Achsentitel wird durch dargestellt ein <see cref="T:Microsoft.Office.Interop.Excel.AxisTitle" /> Objekt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-511">An axis title is represented by an <see cref="T:Microsoft.Office.Interop.Excel.AxisTitle" /> object.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="4e684-512">Ein Diagrammtitel wird durch dargestellt eine <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> Objekt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-512">A chart title is represented by a <see cref="T:Microsoft.Office.Interop.Excel.ChartTitle" /> object.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeightPercent">
      <MemberSignature Language="C#" Value="public int HeightPercent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HeightPercent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.HeightPercent" />
      <MemberSignature Language="VB.NET" Value="Public Property HeightPercent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HeightPercent { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(55)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(55)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(55)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-513">Zurückgeben oder festlegen die Höhe eines 3D-Diagramms als Prozentsatz der Breite des Diagramms (zwischen 5 und 500 Prozent).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-513">Returns or sets the height of a 3-D chart as a percentage of the chart width (between 5 and 500 percent).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Hyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hyperlinks As Hyperlinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Hyperlinks ^ Hyperlinks { Microsoft::Office::Interop::Excel::Hyperlinks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-514">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> -Auflistung, die die Hyperlinks für den Bereich oder das Arbeitsblatt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-514">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range or worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-515">Gibt die Indexnummer des Objekts in einer Auflistung ähnlicher Objekte zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-515">Returns the index number of the object within the collection of similar objects.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Labels">
      <MemberSignature Language="C#" Value="public object Labels (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Labels([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Labels(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Labels (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(841)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="4e684-516">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-516">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Legend">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Legend Legend { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Legend Legend" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Legend" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Legend As Legend" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Legend ^ Legend { Microsoft::Office::Interop::Excel::Legend ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(84)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(84)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Legend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-517">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Legend" /> -Objekt, das die Legende für das Diagramm darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-517">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Legend" /> object that represents the legend for the chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Line3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Line3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Line3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Line3DGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Line3DGroup As ChartGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartGroup ^ Line3DGroup { Microsoft::Office::Interop::Excel::ChartGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(20)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(20)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-518">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> -Objekt, das die Liniendiagrammgruppe in einem 3D-Diagramm darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-518">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the line chart group on a 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineGroups">
      <MemberSignature Language="C#" Value="public object LineGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LineGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.LineGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LineGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="4e684-519">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-519">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-520">Gibt die Diagrammgruppe an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-520">Specifies the chart group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-521">Gibt in einem 2D-Diagramm ein Objekt, das darstellt zurück, das eine einzelne Liniendiagrammgruppe (ein <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> Objekt) oder eine Auflistung der Liniendiagrammgruppen (eine <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> Auflistung).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-521">On a 2-D chart, returns an object that represents either a single line chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the line chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public object Lines (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Lines([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Lines(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Lines (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(767)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="4e684-522">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-522">Reserved for internal use.</span>
          </span>
          <span data-ttu-id="4e684-523">f</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-523">f</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListBoxes">
      <MemberSignature Language="C#" Value="public object ListBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ListBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ListBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(832)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="4e684-p192">Die Indexnummer eines einzelnen festzulegenden oder zurückzugebenden Texteintrags. Wenn dieses Argument nicht angegeben wird, wird die gesamte Liste als Array mit Zeichenfolgen zurückgegeben oder festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-p192">The index number of a single text entry to be set or returned. If this argument is omitted, the entire list is returned or set as an array of strings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-p193">Gibt die Texteinträge des angegebenen Listenfelds oder des Kombinationsfelds als Matrix von Zeichenfolgen zurück oder legt die Einträge fest. Gibt auch einen einzelnen Texteintrag zurück oder legt ihn fest. Befinden sich keine Einträge in der Liste, so tritt ein Fehler auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-p193">Returns or sets the text entries in the specified list box or a combo box, as an array of strings, or returns or sets a single text entry. An error occurs if there are no entries in the list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4e684-528">Variant</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-528">Variant</span>
          </span>
        </returns>
        <remarks>
          <para>
            <span data-ttu-id="4e684-529">Durch Festlegen dieser Eigenschaft werden alle festgelegten durch die <see cref="P:Microsoft.Office.Interop.Excel.ControlFormat.ListFillRange" /> Eigenschaft.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-529">Setting this property clears any range specified by the <see cref="P:Microsoft.Office.Interop.Excel.ControlFormat.ListFillRange" /> property.</span>
            </span>
          </para>
          <para></para>
        </remarks>
        <example>
          <para>
            <span data-ttu-id="4e684-p194">In diesem Beispiel werden die Einträge in einem Listenfeld des ersten Arbeitsblatts festgelegt. Wenn Shapes(2) kein Listenfeld darstellt, schlägt dieses Beispiel fehl.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-p194">This example sets the entries in a list box on worksheet one. If Shapes(2) doesn’t represent a list box, this example fails.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;= _     Array("cogs", "widgets", "sprockets", "gizmos")&lt;/span&gt;</code>
          <para>
            <span data-ttu-id="4e684-p195">In diesem Beispiel wird der vierte Eintrag in einem Listenfeld des ersten Arbeitsblatts festgelegt. Wenn Shapes(2) kein Listenfeld darstellt, schlägt dieses Beispiel fehl.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-p195">This example sets entry four in a list box on worksheet one. If Shapes(2) doesn’t represent a list box, this example fails.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;(4) = "gadgets"&lt;/span&gt;</code>
        </example>
        <example>
          <para>
            <span data-ttu-id="4e684-p196">In diesem Beispiel werden die Einträge in einem Listenfeld des ersten Arbeitsblatts festgelegt. Wenn Shapes(2) kein Listenfeld darstellt, schlägt dieses Beispiel fehl.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-p196">This example sets the entries in a list box on worksheet one. If Shapes(2) doesn’t represent a list box, this example fails.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;= _     Array("cogs", "widgets", "sprockets", "gizmos")&lt;/span&gt;</code>
          <para>
            <span data-ttu-id="4e684-p197">In diesem Beispiel wird der vierte Eintrag in einem Listenfeld des ersten Arbeitsblatts festgelegt. Wenn Shapes(2) kein Listenfeld darstellt, schlägt dieses Beispiel fehl.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-p197">This example sets entry four in a list box on worksheet one. If Shapes(2) doesn’t represent a list box, this example fails.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;(4) = "gadgets"&lt;/span&gt;</code>
        </example>
        <example>
          <para>
            <span data-ttu-id="4e684-p198">In diesem Beispiel werden die Einträge in einem Listenfeld des ersten Arbeitsblatts festgelegt. Wenn Shapes(2) kein Listenfeld darstellt, schlägt dieses Beispiel fehl.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-p198">This example sets the entries in a list box on worksheet one. If Shapes(2) doesn’t represent a list box, this example fails.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;= _     Array("cogs", "widgets", "sprockets", "gizmos")&lt;/span&gt;</code>
          <para>
            <span data-ttu-id="4e684-p199">In diesem Beispiel wird der vierte Eintrag in einem Listenfeld des ersten Arbeitsblatts festgelegt. Wenn Shapes(2) kein Listenfeld darstellt, schlägt dieses Beispiel fehl.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-p199">This example sets entry four in a list box on worksheet one. If Shapes(2) doesn’t represent a list box, this example fails.</span>
            </span>
          </para>
          <code>&lt;span class="label"&gt;Worksheets(1).Shapes(2).ControlFormat.&lt;/span&gt;
&lt;i&gt;List&lt;/i&gt;
&lt;span class="label"&gt;(4) = "gadgets"&lt;/span&gt;</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart Location (Microsoft.Office.Interop.Excel.XlChartLocation Where, object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Chart Location([in]valuetype Microsoft.Office.Interop.Excel.XlChartLocation Where, [in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Location(Microsoft.Office.Interop.Excel.XlChartLocation,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Location (Where As XlChartLocation, Optional Name As Object) As Chart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1397)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Where" Type="Microsoft.Office.Interop.Excel.XlChartLocation" />
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Where">
          <span data-ttu-id="4e684-542">Erforderliche <see cref="T:Microsoft.Office.Interop.Excel.XlChartLocation" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-542">Required <see cref="T:Microsoft.Office.Interop.Excel.XlChartLocation" />.</span>
          </span>
          <span data-ttu-id="4e684-543">Die Position, an die das Diagramm verschoben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-543">Where to move the chart.</span>
          </span>
        </param>
        <param name="Name">
          <span data-ttu-id="4e684-544">Optional- <b>Objekt</b>. erforderlich, wenn <paramref name="Where" /> Wert <b>xlLocationAsObject besitzt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-544">Optional <b>Object</b>; required if <paramref name="Where" /> is <b>xlLocationAsObject</b>.</span>
          </span>
          <span data-ttu-id="4e684-545">Der Name des Blatts, in dem das Diagramm eingebettet wird, wenn <paramref name="Where" /> ist <b>den Wert XlLocationAsObject</b> oder der Name des neuen Blatts, wenn <paramref name="Where" /> Wert <b>xlLocationAsNewSheet besitzt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-545">The name of the sheet where the chart will be embedded if <paramref name="Where" /> is <b>xlLocationAsObject</b> or the name of the new sheet if <paramref name="Where" /> is <b>xlLocationAsNewSheet</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-546">Verschiebt das Diagramm an eine neue Position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-546">Moves the chart to a new location.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailEnvelope">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoEnvelope MailEnvelope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.MsoEnvelope MailEnvelope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.MailEnvelope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailEnvelope As MsoEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoEnvelope ^ MailEnvelope { Microsoft::Office::Core::MsoEnvelope ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2021)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2021)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoEnvelope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-547">Stellt eine E-mail-Kopfzeile für ein Dokument dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-547">Represents an e-mail header for a document.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Move(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(637)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before">
          <span data-ttu-id="4e684-548">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-548">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-549">Das Blatt vor dem das verschobene Blatt eingefügt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-549">The sheet before which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="4e684-550">Sie können nicht angeben <paramref name="Before" /> bei Angabe <paramref name="After" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-550">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span>
          </span>
        </param>
        <param name="After">
          <span data-ttu-id="4e684-551">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-551">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-552">Das Blatt, hinter, dem das verschobene Blatt platziert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-552">The sheet after which the moved sheet will be placed.</span>
          </span>
          <span data-ttu-id="4e684-553">Sie können nicht angeben <paramref name="After" /> bei Angabe <paramref name="Before" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-553">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-554">Verschiebt das Blatt an eine andere Position in der Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-554">Moves the sheet to another location in the workbook.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="4e684-555">Wenn Sie entweder nicht angeben <paramref name="Before" /> oder <paramref name="After" />, erstellt Microsoft Excel eine neue Arbeitsmappe, die das verschobene Blatt enthält.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-555">If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the moved sheet.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-556">Gibt den Namen des Objekts zurück oder legt ihn fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-556">Returns or sets the name of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public object Next { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Next" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Next" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Next As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Next { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-557">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> -Objekt, das das nächste Blatt oder Zelle darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-557">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the next sheet or cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEObjects">
      <MemberSignature Language="C#" Value="public object OLEObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OLEObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.OLEObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OLEObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(799)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="4e684-558">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-558">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-559">Der Name oder die Nummer des OLE-Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-559">The name or number of the OLE object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-560">Gibt ein Objekt, das entweder stellt ein einzelnes OLE-Objekt (ein <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) oder eine Auflistung aller OLE-Objekte (eine <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> Auflistung) im Diagramm oder Arbeitsblatt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-560">Returns an object that represents either a single OLE object (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) or a collection of all OLE objects (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> collection) on the chart or sheet.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="public string OnDoubleClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnDoubleClick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.OnDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Property OnDoubleClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnDoubleClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-561">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-561">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-562">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-562">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-563">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-563">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionButtons">
      <MemberSignature Language="C#" Value="public object OptionButtons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OptionButtons([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.OptionButtons(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OptionButtons (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(826)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="4e684-564">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-564">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ovals">
      <MemberSignature Language="C#" Value="public object Ovals (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Ovals([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Ovals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ovals (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(801)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="4e684-565">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-565">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSetup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PageSetup PageSetup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PageSetup PageSetup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.PageSetup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageSetup As PageSetup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PageSetup ^ PageSetup { Microsoft::Office::Interop::Excel::PageSetup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PageSetup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-566">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> -Objekt, das alle Seite Setup Einstellungen für das angegebene Objekt enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-566">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> object that contains all the page setup settings for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-567">Gibt das übergeordnete Objekt für das angegebene Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-567">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Paste([in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Paste(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste (Optional Type As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(211)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="4e684-568">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-568">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-569">Gibt die Diagramminformationen an, die eingefügt werden, wenn sich ein Diagramm in der Zwischenablage befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-569">Specifies the chart information to paste if a chart is on the Clipboard.</span>
          </span>
          <span data-ttu-id="4e684-570">Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" /> Konstanten: <b>XlFormats</b>, <b>XlFormulas</b>oder <b>XlAll</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-570">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" /> constants: <b>xlFormats</b>, <b>xlFormulas</b>, or <b>xlAll</b>.</span>
          </span>
          <span data-ttu-id="4e684-571">Der Standardwert ist <b>XlAll</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-571">The default value is <b>xlAll</b>.</span>
          </span>
          <span data-ttu-id="4e684-572">Wenn Daten als ein Diagramm in der Zwischenablage vorhanden ist, kann dieses Argument nicht verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-572">If there’s data other than a chart on the Clipboard, this argument cannot be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-573">Fügt Diagrammdaten aus der Zwischenablage in das angegebene Diagramm ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-573">Pastes chart data from the Clipboard into the specified chart.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="4e684-574">Diese Methode ändert die aktuelle Auswahl.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-574">This method changes the current selection.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Perspective">
      <MemberSignature Language="C#" Value="public int Perspective { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Perspective" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Perspective" />
      <MemberSignature Language="VB.NET" Value="Public Property Perspective As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Perspective { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(57)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(57)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(57)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-575">Zurückgeben oder festlegen die Perspektive für die 3D-Diagrammansicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-575">Returns or sets the perspective for the 3-D chart view.</span>
          </span>
          <span data-ttu-id="4e684-576">Muss zwischen 0 und 100 sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-576">Must be between 0 and 100.</span>
          </span>
          <span data-ttu-id="4e684-577">Diese Eigenschaft wird ignoriert, wenn die <see cref="P:Microsoft.Office.Interop.Excel._Chart.RightAngleAxes" /> -Eigenschaft ist <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-577">This property is ignored if the <see cref="P:Microsoft.Office.Interop.Excel._Chart.RightAngleAxes" /> property is <b>True</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pictures">
      <MemberSignature Language="C#" Value="public object Pictures (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Pictures([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Pictures(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pictures (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(771)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="4e684-578">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-578">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pie3DGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup Pie3DGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup Pie3DGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Pie3DGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Pie3DGroup As ChartGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartGroup ^ Pie3DGroup { Microsoft::Office::Interop::Excel::ChartGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(21)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(21)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-579">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> -Objekt, das die Kreisdiagrammgruppe in einem 3D-Diagramm darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-579">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the pie chart group on a 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PieGroups">
      <MemberSignature Language="C#" Value="public object PieGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PieGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.PieGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PieGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(13)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="4e684-580">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-580">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-581">Gibt die Diagrammgruppe an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-581">Specifies the chart group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-582">Gibt in einem 2D-Diagramm ein Objekt, das darstellt zurück, das eine einzelne Kreisdiagrammgruppe (ein <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> Objekt) oder eine Auflistung der Kreisdiagrammgruppe (ein <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> Auflistung).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-582">On a 2-D chart, returns an object that represents either a single pie chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the pie chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotLayout">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotLayout PivotLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotLayout PivotLayout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.PivotLayout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotLayout As PivotLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotLayout ^ PivotLayout { Microsoft::Office::Interop::Excel::PivotLayout ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1814)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1814)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-583">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" /> -Objekt, das die Positionierung von Feldern in einem PivotTable-Bericht und die Positionierung der Achsen in einem PivotChart-Bericht darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-583">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotLayout" /> object that represents the placement of fields in a PivotTable report and the placement of axes in a PivotChart report.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="4e684-584">Falls es sich bei dem angegebenen Diagramm nicht um einen PivotChart-Bericht handelt, beträgt der Wert dieser Eigenschaft <b>Nothing</b>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-584">If the chart you specify isn’t a PivotChart report, the value of this property is <b>Nothing</b>.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotArea">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PlotArea PlotArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PlotArea PlotArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.PlotArea" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PlotArea As PlotArea" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PlotArea ^ PlotArea { Microsoft::Office::Interop::Excel::PlotArea ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(85)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(85)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PlotArea</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-585">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> -Objekt, das die Zeichnungsfläche eines Diagramms darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-585">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PlotArea" /> object that represents the plot area of a chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotBy">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlRowCol PlotBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlRowCol PlotBy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.PlotBy" />
      <MemberSignature Language="VB.NET" Value="Public Property PlotBy As XlRowCol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlRowCol PlotBy { Microsoft::Office::Interop::Excel::XlRowCol get(); void set(Microsoft::Office::Interop::Excel::XlRowCol value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(202)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(202)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(202)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlRowCol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-586">Gibt zurück oder legt fest, wie die Spalten und Zeilen als Datenreihen im Diagramm verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-586">Returns or sets the way columns or rows are used as data series on the chart.</span>
          </span>
          <span data-ttu-id="4e684-587">Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> Konstanten: <b>XlColumns</b> oder <b>XlRows</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-587">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: <b>xlColumns</b> or <b>xlRows</b>.</span>
          </span>
          <span data-ttu-id="4e684-588">Für PivotChart-Berichten ist diese Eigenschaft ist schreibgeschützt und gibt immer <b>XlColumns</b> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-588">For PivotChart reports, this property is read-only and always returns <b>xlColumns</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotVisibleOnly">
      <MemberSignature Language="C#" Value="public bool PlotVisibleOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PlotVisibleOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.PlotVisibleOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property PlotVisibleOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PlotVisibleOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(92)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(92)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(92)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-589">
            <b>True,</b> Wenn nur sichtbare Zellen gezeichnet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-589">
              <b>True</b> if only visible cells are plotted.</span>
          </span>
          <span data-ttu-id="4e684-590">
            <b>False,</b> Wenn sichtbare und ausgeblendete Zellen gezeichnet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-590">
              <b>False</b> if both visible and hidden cells are plotted.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public object Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Previous" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Previous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Previous As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Previous { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-591">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> -Objekt, das das vorherige Blatt oder Zelle darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-591">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the previous sheet or cell.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintedCommentPages">
      <MemberSignature Language="C#" Value="public int PrintedCommentPages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PrintedCommentPages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.PrintedCommentPages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintedCommentPages As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PrintedCommentPages { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2857)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2857)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-592">Ruft die Anzahl der Kommentarseiten, die gedruckt werden für das aktuelle Diagramm ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-592">Gets the number of comment pages that will be printed for the current chart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4e684-593">Die Anzahl der Kommentarseiten, die für das aktuelle Diagramm gedruckt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-593">The number of comment pages that will be printed for the current chart.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="4e684-594">Schreibgeschützt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-594">Read-only.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="4e684-595">Da Diagramme und Diagrammblätter keine Kommentare unterstützen die <see cref="P:Microsoft.Office.Interop.Excel._Chart.PrintedCommentPages" /> -Eigenschaft des der <see cref="T:Microsoft.Office.Interop.Excel._Chart" /> Objekt gibt immer NULL zurück.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-595">Because charts and chart sheets do not support comments, the <see cref="P:Microsoft.Office.Interop.Excel._Chart.PrintedCommentPages" /> property of the <see cref="T:Microsoft.Office.Interop.Excel._Chart" /> object will always return zero.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">
          <span data-ttu-id="4e684-596">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-596">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-597">Die Anzahl der ersten Seite der Druckvorgang gestartet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-597">The number of the page at which to start printing.</span>
          </span>
          <span data-ttu-id="4e684-598">Wenn dieses Argument ausgelassen wird, beginnt der Druck am Anfang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-598">If this argument is omitted, printing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="4e684-599">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-599">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-600">Die Anzahl der letzten Seite gedruckt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-600">The number of the last page to print.</span>
          </span>
          <span data-ttu-id="4e684-601">Wenn dieses Argument ausgelassen wird, endet der Druckvorgang mit der letzten Seite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-601">If this argument is omitted, printing ends with the last page.</span>
          </span>
        </param>
        <param name="Copies">
          <span data-ttu-id="4e684-602">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-602">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-603">Die Anzahl der zu druckenden Exemplare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-603">The number of copies to print.</span>
          </span>
          <span data-ttu-id="4e684-604">Wenn dieses Argument ausgelassen wird, wird eine Kopie gedruckt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-604">If this argument is omitted, one copy is printed.</span>
          </span>
        </param>
        <param name="Preview">
          <span data-ttu-id="4e684-605">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-605">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-606">
            <b>True</b> , wenn Microsoft Excel vor dem Drucken des Objekts die Seitenansicht aufruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-606">
              <b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span>
          </span>
          <span data-ttu-id="4e684-607">
            <b>"False"</b> (oder weggelassen), wenn das Objekt sofort gedruckt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-607">
              <b>False</b> (or omitted) to print the object immediately.</span>
          </span>
        </param>
        <param name="ActivePrinter">
          <span data-ttu-id="4e684-608">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-608">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-609">Legt den Namen des aktiven Druckers fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-609">Sets the name of the active printer.</span>
          </span>
        </param>
        <param name="PrintToFile">
          <span data-ttu-id="4e684-610">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-610">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-611">
            <b>True</b> , wenn in eine Datei gedruckt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-611">
              <b>True</b> to print to a file.</span>
          </span>
          <span data-ttu-id="4e684-612">Wenn <paramref name="PrToFileName" /> nicht angegeben ist, wird Microsoft Excel fordert den Benutzer zur Eingabe des Namens der Ausgabedatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-612">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span>
          </span>
        </param>
        <param name="Collate">
          <span data-ttu-id="4e684-613">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-613">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-614">
            <b>True</b> zum Sortieren mehrerer Kopien.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-614">
              <b>True</b> to collate multiple copies.</span>
          </span>
        </param>
        <param name="PrToFileName">
          <span data-ttu-id="4e684-615">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-615">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-616">Wenn <paramref name="PrintToFile" /> festgelegt ist auf <b>"true"</b>, gibt dieses Argument den Namen der Datei, die Sie drucken möchten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-616">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-617">Druckt das Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-617">Prints the object.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="4e684-618">"Seiten" in den Beschreibungen des <paramref name="From" /> und <paramref name="To" /> bezieht sich auf gedruckte Seiten – nicht auf sämtliche Seiten des Arbeitsblatts oder der Arbeitsmappe.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-618">"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages— not overall pages in the sheet or workbook.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <summary>
          <span data-ttu-id="4e684-619">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-619">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges">
          <span data-ttu-id="4e684-620">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-620">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-621">
            <b>True</b> , wenn Änderungen an das Diagramm zu aktivieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-621">
              <b>True</b> to enable changes to the chart.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-622">Zeigt ein Objekt so an, wie es gedruckt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-622">Shows a preview of the object as it would look when printed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public void Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Protect([in]object Password, [in]object DrawingObjects, [in]object Contents, [in]object Scenarios, [in]object UserInterfaceOnly) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Protect (Optional Password As Object, Optional DrawingObjects As Object, Optional Contents As Object, Optional Scenarios As Object, Optional UserInterfaceOnly As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2029)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="4e684-623">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-623">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-624">Eine Zeichenfolge, die ein Kennwort für das Arbeitsblatt oder die Arbeitsmappe angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-624">A string that specifies a case-sensitive password for the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="4e684-625">Wenn dieses Argument ausgelassen wird, können Sie das Arbeitsblatt oder die Arbeitsmappe ohne Kennwort aufheben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-625">If this argument is omitted, you can unprotect the worksheet or workbook without using a password.</span>
          </span>
          <span data-ttu-id="4e684-626">Andernfalls müssen Sie das Kennwort für das Arbeitsblatt oder die Arbeitsmappe unprotect angeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-626">Otherwise, you must specify the password to unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="4e684-627">Wenn Sie das Kennwort vergessen haben, können nicht Sie das Arbeitsblatt oder die Arbeitsmappe aufheben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-627">If you forget the password, you cannot unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="4e684-628">Es ist ratsam, eine Liste Ihrer Kennwörter und der entsprechenden Dokumentnamen an einem sicheren Ort zu behalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-628">It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span>
          </span>
        </param>
        <param name="DrawingObjects">
          <span data-ttu-id="4e684-629">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-629">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-630">
            <b>True,</b> um Formen zu schützen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-630">
              <b>True</b> to protect shapes.</span>
          </span>
          <span data-ttu-id="4e684-631">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-631">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Contents">
          <span data-ttu-id="4e684-632">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-632">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-633">
            <b>True,</b> um Inhalte zu schützen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-633">
              <b>True</b> to protect contents.</span>
          </span>
          <span data-ttu-id="4e684-634">Für ein Diagramm das gesamte Diagramm geschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-634">For a chart, this protects the entire chart.</span>
          </span>
          <span data-ttu-id="4e684-635">Für ein Arbeitsblatt die gesperrten Zellen geschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-635">For a worksheet, this protects the locked cells.</span>
          </span>
          <span data-ttu-id="4e684-636">Der Standardwert ist <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-636">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Scenarios">
          <span data-ttu-id="4e684-637">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-637">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-638">
            <b>True,</b> um Szenarien zu schützen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-638">
              <b>True</b> to protect scenarios.</span>
          </span>
          <span data-ttu-id="4e684-639">Dieses Argument ist nur für Arbeitsblätter gültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-639">This argument is valid only for worksheets.</span>
          </span>
          <span data-ttu-id="4e684-640">Der Standardwert ist <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-640">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="UserInterfaceOnly">
          <span data-ttu-id="4e684-641">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-641">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-642">
            <b>True</b> , wenn die Benutzeroberfläche, jedoch keine Makros geschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-642">
              <b>True</b> to protect the user interface, but not macros.</span>
          </span>
          <span data-ttu-id="4e684-643">Wenn dieses Argument ausgelassen wird, gilt der Schutz für Makros und die Benutzeroberfläche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-643">If this argument is omitted, protection applies both to macros and to the user interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-644">Schützt ein Diagramm, damit es nicht verändert werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-644">Protects a chart so that it cannot be modified.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="4e684-p224">[!HINWEIS] Verwenden Sie sichere Kennwörter aus Groß- und Kleinbuchstaben, Zahlen und Symbolen. Unsichere Kennwörter enthalten keine Kombination dieser Elemente. Sicheres Kennwort: Y6dh!et5. Unsicheres Kennwort: Haus27. Verwenden Sie ein sicheres Kennwort, das Sie sich gut merken können, damit Sie es nicht aufschreiben müssen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-p224">Use strong passwords that combine upper- and lowercase letters, numbers, and symbols. Weak passwords don't mix these elements. Strong password: Y6dh!et5. Weak password: House27. Use a strong password that you can remember so that you don't have to write it down.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectContents">
      <MemberSignature Language="C#" Value="public bool ProtectContents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectContents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectContents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectContents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectContents { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(292)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(292)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-650">
            <b>True,</b> Wenn der Inhalt des Blatts geschützt sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-650">
              <b>True</b> if the contents of the sheet are protected.</span>
          </span>
          <span data-ttu-id="4e684-651">Dadurch wird das gesamte Diagramm verhindert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-651">This protects the entire chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectData">
      <MemberSignature Language="C#" Value="public bool ProtectData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectData" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectData { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1406)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-652">
            <b>True,</b> Wenn die Datenreihenformeln nicht vom Benutzer geändert werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-652">
              <b>True</b> if series formulas cannot be modified by the user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectDrawingObjects">
      <MemberSignature Language="C#" Value="public bool ProtectDrawingObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectDrawingObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectDrawingObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectDrawingObjects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectDrawingObjects { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(293)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(293)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-653">
            <b>True,</b> Wenn Formen geschützt sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-653">
              <b>True</b> if shapes are protected.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectFormatting">
      <MemberSignature Language="C#" Value="public bool ProtectFormatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectFormatting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectFormatting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectFormatting { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1405)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-654">
            <b>True,</b> Wenn der Formatierung nicht vom Benutzer geändert werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-654">
              <b>True</b> if chart formatting cannot be modified by the user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="4e684-655">Wenn diese Eigenschaft auf <b>True</b>festgelegt ist, der Befehl Objekt im Menü Format ist deaktiviert, und Diagrammelemente können nicht hinzugefügt, verschoben, geändert, oder gelöscht werden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-655">When this property is <b>True</b>, the Object command on the Format menu is disabled and chart elements cannot be added, moved, resized, or deleted.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectGoalSeek">
      <MemberSignature Language="C#" Value="public bool ProtectGoalSeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectGoalSeek" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectGoalSeek" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectGoalSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectGoalSeek { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-656">
            <b>True,</b> Wenn der Benutzer nicht werden kann, Diagrammdaten geändert mit Mausaktionen verweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-656">
              <b>True</b> if the user cannot modify chart data points with mouse actions.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionMode">
      <MemberSignature Language="C#" Value="public bool ProtectionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectionMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectionMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectionMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-657">
            <b>True,</b> Wenn die Benutzeroberfläche begrenzte Schutz aktiviert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-657">
              <b>True</b> if user-interface-only protection is turned on.</span>
          </span>
          <span data-ttu-id="4e684-658">Verwenden Sie zum Aktivieren von Schutz der Benutzeroberfläche der <see cref="M:Microsoft.Office.Interop.Excel._Chart.Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" /> -Methode mit der <paramref name="UserInterfaceOnly" /> Argument auf <b>True</b>festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-658">To turn on user interface protection, use the <see cref="M:Microsoft.Office.Interop.Excel._Chart.Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" /> method with the <paramref name="UserInterfaceOnly" /> argument set to <b>True</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectSelection">
      <MemberSignature Language="C#" Value="public bool ProtectSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ProtectSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1408)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-659">
            <b>True,</b> wenn Diagrammelemente nicht ausgewählt werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-659">
              <b>True</b> if chart elements cannot be selected.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="4e684-660">Wenn diese Eigenschaft auf <b>True</b> festgelegt ist, können Formen nicht in ein Diagramm aufgenommen werden, und die Click- und DoubleClick-Ereignisse treten für Diagrammelemente nicht auf.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-660">When this property is <b>True</b>, shapes cannot be added to the chart, and the Click and DoubleClick events for chart elements don’t occur.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RadarGroups">
      <MemberSignature Language="C#" Value="public object RadarGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RadarGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.RadarGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RadarGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(15)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="4e684-661">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-661">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-662">Gibt die Diagrammgruppe an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-662">Specifies the chart group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-663">Gibt in einem 2D-Diagramm ein Objekt, das darstellt zurück, das eine einzelne Netzdiagrammgruppe (ein <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> Objekt) oder eine Auflistung der Netzdiagrammgruppen (eine <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> Auflistung).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-663">On a 2-D chart, returns an object that represents either a single radar chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the radar chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rectangles">
      <MemberSignature Language="C#" Value="public object Rectangles (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Rectangles([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Rectangles(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rectangles (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="4e684-664">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-664">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Refresh() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1417)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4e684-665">Aktualisiert den Cache des der <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> oder <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-665">Updates the cache of the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> or <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightAngleAxes">
      <MemberSignature Language="C#" Value="public object RightAngleAxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RightAngleAxes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.RightAngleAxes" />
      <MemberSignature Language="VB.NET" Value="Public Property RightAngleAxes As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RightAngleAxes { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(58)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(58)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(58)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-666">
            <b>True,</b> Wenn die Diagrammachsen im rechten Winkel, unabhängig von der Drehung oder Elevation sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-666">
              <b>True</b> if the chart axes are at right angles, independent of chart rotation or elevation.</span>
          </span>
          <span data-ttu-id="4e684-667">Gilt nur für 3D-Linien-,, Spalte und Balkendiagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-667">Applies only to 3-D line, column, and bar charts.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="4e684-668">Wenn diese Eigenschaft <b>True</b>ist, die <see cref="P:Microsoft.Office.Interop.Excel._Chart.Perspective" /> -Eigenschaft wird ignoriert.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-668">If this property is <b>True</b>, the <see cref="P:Microsoft.Office.Interop.Excel._Chart.Perspective" /> property is ignored.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public object Rotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Rotation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Rotation" />
      <MemberSignature Language="VB.NET" Value="Public Property Rotation As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Rotation { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(59)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-669">Zurückgeben oder festlegen die Drehung der 3D-Diagrammansicht (die Drehung der Zeichnungsfläche um die z-Achse in Grad).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-669">Returns or sets the rotation of the 3-D chart view (the rotation of the plot area around the z-axis in degrees).</span>
          </span>
          <span data-ttu-id="4e684-670">Der Wert dieser Eigenschaft muss zwischen 0 und 360, außer für 3D-Diagramme Leiste, in dem der Wert von 0 bis 44 liegen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-670">The value of this property must be from 0 to 360, except for 3-D bar charts, where the value must be from 0 to 44.</span>
          </span>
          <span data-ttu-id="4e684-671">Der Standardwert ist 20.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-671">The default value is 20.</span>
          </span>
          <span data-ttu-id="4e684-672">Gilt nur für 3D-Diagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-672">Applies only to 3-D charts.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAs([in]string Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (Filename As String, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1925)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="4e684-673">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-673">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-674">Eine Zeichenfolge, die den Namen der zu speichernden Datei angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-674">A string that indicates the name of the file to be saved.</span>
          </span>
          <span data-ttu-id="4e684-675">Sie können einen vollständigen Pfad angeben. Wenn dies nicht der Fall, speichert Microsoft Excel die Datei im aktuellen Ordner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-675">You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="FileFormat">
          <span data-ttu-id="4e684-676">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-676">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-677">Das Dateiformat beim Speichern der Datei verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-677">The file format to use when you save the file.</span>
          </span>
          <span data-ttu-id="4e684-678">Eine Liste der gültigen finden Sie unter der <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-678">For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> property.</span>
          </span>
          <span data-ttu-id="4e684-679">Für eine vorhandene Datei ist das Standardformat das zuletzt angegebene Dateiformat; für eine neue Datei ist der Standardwert für das Format der Version von Excel verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-679">For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="4e684-680">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-680">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-681">Eine Zeichenfolge unter Berücksichtigung der Groß-/Kleinschreibung (maximal 15 Zeichen), mit der das Schutzkennwort für die Datei angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-681">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</span>
          </span>
        </param>
        <param name="WriteResPassword">
          <span data-ttu-id="4e684-682">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-682">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-683">Eine Zeichenfolge, die Schreibschutzkennwort für diese Datei angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-683">A string that indicates the write-reservation password for this file.</span>
          </span>
          <span data-ttu-id="4e684-684">Wenn eine Datei mit dem Kennwort gespeichert wird und das Kennwort nicht angegeben werden, wenn die Datei geöffnet wird, wird die Datei schreibgeschützt geöffnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-684">If a file is saved with the password and the password isn't supplied when the file is opened, the file is opened as read-only.</span>
          </span>
        </param>
        <param name="ReadOnlyRecommended">
          <span data-ttu-id="4e684-685">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-685">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-686">Mit  <b>True</b> wird beim Öffnen der Datei in einer Meldung empfohlen, die Datei schreibgeschützt zu öffnen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-686">
              <b>True</b> to display a message when the file is opened, recommending that the file be opened as read-only.</span>
          </span>
        </param>
        <param name="CreateBackup">
          <span data-ttu-id="4e684-687">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-687">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-688">Mit dem Wert  <b>True</b> wird eine Sicherungsdatei erstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-688">
              <b>True</b> to create a backup file.</span>
          </span>
        </param>
        <param name="AddToMru">
          <span data-ttu-id="4e684-689">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-689">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-690">
            <b>True</b> zum Hinzufügen dieser Arbeitsmappe zur Liste der zuletzt verwendeten Dateien.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-690">
              <b>True</b> to add this workbook to the list of recently used files.</span>
          </span>
          <span data-ttu-id="4e684-691">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-691">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="TextCodepage">
          <span data-ttu-id="4e684-692">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-692">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-693">Wird in Microsoft Excel mit US-Englisch nicht verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-693">Not used in U.S. English Microsoft Excel.</span>
          </span>
        </param>
        <param name="TextVisualLayout">
          <span data-ttu-id="4e684-694">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-694">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-695">Wird in Microsoft Excel mit US-Englisch nicht verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-695">Not used in U.S. English Microsoft Excel.</span>
          </span>
        </param>
        <param name="Local">
          <span data-ttu-id="4e684-696">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-696">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-697">
            <b>True,</b> speichert Dateien in der Sprache von Microsoft Excel (einschließlich der Einstellungen für den Dokumentinformationsbereich Control).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-697">
              <b>True</b> saves files against the language of Microsoft Excel (including control panel settings).</span>
          </span>
          <span data-ttu-id="4e684-698">
            <b>"False"</b> (Standard) speichert Dateien in der Sprache von Visual Basic für Applikationen (die in der Regel Englisch (USA) ist, es sei denn, das VBA-Projekt, in dem <b>Workbooks.Open</b> ausgeführt wird, ein altes internationalen XL5/95 VBA-Projekt).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-698">
              <b>False</b> (default) saves files against the language of Visual Basic for Applications (which is typically U.S. English unless the VBA project where <b>Workbooks.Open</b> is run from is an old internationalized XL5/95 VBA project).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-699">Speichert Änderungen am Diagramm oder Arbeitsblatt in einer anderen Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-699">Saves changes to the chart or worksheet in a different file.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChartTemplate">
      <MemberSignature Language="C#" Value="public void SaveChartTemplate (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveChartTemplate([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SaveChartTemplate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveChartTemplate (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveChartTemplate(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2508)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="4e684-700">Der Name der Diagrammvorlage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-700">The name of the chart template.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-701">Speichert eine benutzerdefinierte Diagrammvorlage in der Liste der verfügbaren Diagrammvorlagen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-701">Saves a custom chart template to the list of available chart templates.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="4e684-p240">Diese Methode speichert standardmäßig das aktive Diagramm im Diagrammvorlagenverzeichnis des Benutzers. Wenn ein UNC oder eine URL angegeben wird, wird das Diagramm stattdessen am angegebenen Speicherort gespeichert.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-p240">By default, this method saves the active chart to the user's chart template directory.  If a UNC or URL is specified, the chart will be saved to the specified location instead.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Scripts Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Scripts Scripts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Scripts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scripts As Scripts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Scripts ^ Scripts { Microsoft::Office::Core::Scripts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1816)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1816)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Scripts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-704">Gibt die <see cref="T:Microsoft.Office.Core.Scripts" /> -Auflistung, die enthält <see cref="T:Microsoft.Office.Core.Script" /> Objekte Code- oder Skriptblock im angegebenen Dokument darstellen, wenn es als Webseite gespeichert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-704">Returns the <see cref="T:Microsoft.Office.Core.Scripts" /> collection, which contains <see cref="T:Microsoft.Office.Core.Script" /> objects representing blocks of script or code in the specified document when it’s saved as a Web page.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public object ScrollBars (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ScrollBars([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.ScrollBars(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScrollBars (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(830)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="4e684-705">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-705">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace">
          <span data-ttu-id="4e684-706">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-706">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-707">Das Objekt zu ersetzen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-707">The object to replace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-708">Markiert das Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-708">Selects the object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeriesCollection">
      <MemberSignature Language="C#" Value="public object SeriesCollection (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SeriesCollection([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SeriesCollection(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SeriesCollection (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(68)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="4e684-709">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-709">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-710">Der Name oder die Nummer der Datenreihe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-710">The name or number of the series.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-711">Gibt ein Objekt, das entweder eine einzelne Datenreihe (ein <see cref="T:Microsoft.Office.Interop.Excel.Series" /> Objekt) oder eine Auflistung aller Datenreihen (eine <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> Auflistung) im Diagramm oder der Diagrammgruppe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-711">Returns an object that represents either a single series (a <see cref="T:Microsoft.Office.Interop.Excel.Series" /> object) or a collection of all the series (a <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> collection) in the chart or chart group.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeriesNameLevel">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSeriesNameLevel SeriesNameLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSeriesNameLevel SeriesNameLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.SeriesNameLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property SeriesNameLevel As XlSeriesNameLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSeriesNameLevel SeriesNameLevel { Microsoft::Office::Interop::Excel::XlSeriesNameLevel get(); void set(Microsoft::Office::Interop::Excel::XlSeriesNameLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3049)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3049)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3049)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSeriesNameLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-712">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.XlSeriesNameLevel" /> Konstanten in Bezug auf die Ebene der, in dem die Namen von Datenreihen aus Quelle wird werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-712">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlSeriesNameLevel" /> constant referring to the level of where the series names are being sourced from.</span>
          </span>
          <span data-ttu-id="4e684-713">
            <b>Ganze Zahl</b> (<b>Int</b> in c#) Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-713">
              <b>Integer</b> (<b>int</b> in C#) Read/Write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundPicture">
      <MemberSignature Language="C#" Value="public void SetBackgroundPicture (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundPicture([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SetBackgroundPicture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackgroundPicture (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackgroundPicture(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1188)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="4e684-714">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-714">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="4e684-715">Der Name der Grafikdatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-715">The name of the graphic file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-716">Legt die Hintergrundgrafik für ein Arbeitsblatt oder Diagramm fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-716">Sets the background graphic for a worksheet or chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultChart">
      <MemberSignature Language="C#" Value="public void SetDefaultChart (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultChart([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SetDefaultChart(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultChart (Name As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultChart(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(219)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="4e684-717">Gibt den Namen der Standarddiagrammvorlage, die beim Erstellen neuer Diagramme verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-717">Specifies the name of the default chart template that will be used when creating new charts.</span>
          </span>
          <span data-ttu-id="4e684-718">Dieser Name kann eine Zeichenfolge, die ein Diagramm im Katalog für eine benutzerdefinierte Vorlage naming sein oder es kann eine spezielle-Konstante sein <see cref="F:Microsoft.Office.Interop.Excel.XlChartGallery.xlBuiltIn" /> mit eine integrierten Diagrammvorlage angegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-718">This name can be a string naming a chart in the gallery for a user-defined template or it can be a special constant <see cref="F:Microsoft.Office.Interop.Excel.XlChartGallery.xlBuiltIn" /> to specify a built-in chart template.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-719">Gibt den Namen der Diagrammvorlage an, die in Microsoft Excel beim Erstellen neuer Diagramme verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-719">Specifies the name of the  chart template that Microsoft Excel uses when creating new charts.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetElement">
      <MemberSignature Language="C#" Value="public void SetElement (Microsoft.Office.Core.MsoChartElementType Element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetElement([in]valuetype Microsoft.Office.Core.MsoChartElementType Element) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SetElement(Microsoft.Office.Core.MsoChartElementType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetElement (Element As MsoChartElementType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetElement(Microsoft::Office::Core::MsoChartElementType Element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Element" Type="Microsoft.Office.Core.MsoChartElementType" />
      </Parameters>
      <Docs>
        <param name="Element">
          <span data-ttu-id="4e684-720">Gibt den Diagrammelementtyp an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-720">Specifies the chart element type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-721">Legt Diagrammelemente in einem Diagramm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-721">Sets chart elements on a chart.</span>
          </span>
          <span data-ttu-id="4e684-722">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-722">Read/write.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="4e684-723">Bei Diagrammen entsprechen die folgenden Befehle auf der Registerkarte Layout auf die <see cref="M:Microsoft.Office.Interop.Excel._Chart.SetElement(Microsoft.Office.Core.MsoChartElementType)" /> Methode:</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-723">For charts, the following commands in the Layout tab correspond to the <see cref="M:Microsoft.Office.Interop.Excel._Chart.SetElement(Microsoft.Office.Core.MsoChartElementType)" /> method:</span>
            </span>
          </para>
          <list type="bullet">
            <item>
              <description>
                <span data-ttu-id="4e684-724">Alles in der Gruppe Beschriftungen</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-724">Everything in the Labels group.</span>
                </span>
              </description>
            </item>
            <item>
              <description>
                <span data-ttu-id="4e684-725">Alles in der Gruppe Achsen</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-725">Everything in the Axes group.</span>
                </span>
              </description>
            </item>
            <item>
              <description>
                <span data-ttu-id="4e684-726">Alles in der Gruppe Analyse</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-726">Everything in the Analysis group.</span>
                </span>
              </description>
            </item>
            <item>
              <description>
                <span data-ttu-id="4e684-727">Die Schaltflächen Zeichnungsfläche, Diagrammwand und Diagrammboden</span>
                <span class="sxs-lookup">
                  <span data-stu-id="4e684-727">PlotArea, Chart Wall, and Chart Floor buttons.</span>
                </span>
              </description>
            </item>
          </list>
          <para></para>
          <para>
            <span data-ttu-id="4e684-728">
              <b>MsoChartElementType</b> ist eine Enumeration von Konstanten, die auf alle oben genannten Befehle verweisen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-728">
                <b>MsoChartElementType</b> is an enumeration of constants that refer to all of the above commands.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSourceData">
      <MemberSignature Language="C#" Value="public void SetSourceData (Microsoft.Office.Interop.Excel.Range Source, object PlotBy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSourceData([in]class Microsoft.Office.Interop.Excel.Range Source, [in]object PlotBy) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.SetSourceData(Microsoft.Office.Interop.Excel.Range,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSourceData (Source As Range, Optional PlotBy As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1413)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="PlotBy" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="4e684-729">Erforderliche <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-729">Required <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          </span>
          <span data-ttu-id="4e684-730">Der Bereich, in dem die Quelldaten enthalten sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-730">The range that contains the source data.</span>
          </span>
        </param>
        <param name="PlotBy">
          <span data-ttu-id="4e684-731">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-731">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-732">Gibt an, wie ab die Daten gezeichnet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-732">Specifies the way the data is to be plotted.</span>
          </span>
          <span data-ttu-id="4e684-733">Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> Konstanten: <b>XlColumns</b> oder <b>XlRows</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-733">Can be either of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRowCol" /> constants: <b>xlColumns</b> or <b>xlRows</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-734">Legt den Quelldatenbereich des Diagramms fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-734">Sets the source data range for the chart.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shapes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shapes Shapes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shapes Shapes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Shapes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Shapes As Shapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shapes ^ Shapes { Microsoft::Office::Interop::Excel::Shapes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1377)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-735">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> -Objekt, das alle Formen auf dem Arbeitsblatt oder Diagramm darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-735">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the worksheet or chart sheet.</span>
          </span>
          <span data-ttu-id="4e684-736">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-736">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAllFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowAllFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowAllFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowAllFieldButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowAllFieldButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowAllFieldButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2864)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-737">Ruft ab oder legt fest, ob die Anzeige aller Feldschaltflächen auf PivotChart.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-737">Gets or sets whether to display all field buttons on a PivotChart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4e684-738">
            <b>true,</b> Wenn alle Schaltflächen in einer PivotChart Feld angezeigt werden sollen; anderenfalls <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-738">
              <b>true</b> if all field buttons on a PivotChart should be displayed; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="4e684-739">Lese-/Schreibzugriff.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-739">Read/write.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="4e684-740">Legen Sie die <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAllFieldButtons" /> -Eigenschaft auf <b>true</b> alle Feldschaltflächen auf der angegebenen PivotChart-Bericht angezeigt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-740">Set the <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAllFieldButtons" /> property to <b>true</b> to display all field buttons on the specified PivotChart.</span>
            </span>
            <span data-ttu-id="4e684-741">Legen Sie die Eigenschaft auf <b>false,</b> um alle Feldschaltflächen auszublenden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-741">Set the property to <b>false</b> to hide all field buttons.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="4e684-742">Die <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAllFieldButtons" /> -Eigenschaft entspricht dem Befehl Alle ausblenden in der Dropdownliste Feldschaltflächen der Registerkarte Analyse, die bei ausgewähltem PivotChart verfügbar ist.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-742">The <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAllFieldButtons" /> property corresponds to the Hide All command on the Field Buttons drop-down list of the Analyze tab, which is available when a PivotChart is selected.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAxisFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowAxisFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowAxisFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowAxisFieldButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowAxisFieldButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowAxisFieldButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2862)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2862)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2862)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-743">Ruft ab oder legt fest, ob in einer PivotChart Achsenfelder-Schaltflächen angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-743">Gets or sets whether to display axis field buttons on a PivotChart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4e684-744">
            <b>true,</b> Wenn in einer PivotChart Achsenfelder-Schaltflächen angezeigt werden sollen; anderenfalls <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-744">
              <b>true</b> if axis field buttons on a PivotChart should be displayed; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="4e684-745">Lese-/Schreibzugriff.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-745">Read/write.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="4e684-746">Legen Sie die <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAxisFieldButtons" /> -Eigenschaft auf <b>true</b> Achsenfelder-Schaltflächen auf der angegebenen PivotChart-Bericht angezeigt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-746">Set the <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAxisFieldButtons" /> property to <b>true</b> to display axis field buttons on the specified PivotChart.</span>
            </span>
            <span data-ttu-id="4e684-747">Legen Sie die Eigenschaft auf <b>false,</b> um die Schaltflächen auszublenden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-747">Set the property to <b>false</b> to hide the buttons.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="4e684-748">Die <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAxisFieldButtons" /> -Eigenschaft entspricht dem Befehl Achsenfelder-Schaltflächen anzeigen in der Dropdownliste Feldschaltflächen der Registerkarte Analyse, die bei ausgewähltem PivotChart verfügbar ist.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-748">The <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowAxisFieldButtons" /> property corresponds to the Show Axis Field Buttons command on the Field Buttons drop-down list of the Analyze tab, which is available when a PivotChart is selected.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDataLabelsOverMaximum">
      <MemberSignature Language="C#" Value="public bool ShowDataLabelsOverMaximum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowDataLabelsOverMaximum" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowDataLabelsOverMaximum" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowDataLabelsOverMaximum As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowDataLabelsOverMaximum { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-749">Gibt zurück oder legt fest, ob für die datenbeschriftungen angezeigt, wenn der Wert größer als der maximale Wert für die Größenachse ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-749">Returns or sets whether to show the data labels when the value is greater than the  maximum value on the value axis.</span>
          </span>
          <span data-ttu-id="4e684-750">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-750">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4e684-751">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-751">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="4e684-p253">Wenn Sie die Wertachse so ändern, dass sie kleiner als die Größe der Datenpunkte ist, können Sie mit dieser Eigenschaft festlegen, ob die Datenbeschriftungen angezeigt werden sollen. Diese Eigenschaft kann nur auf 2D-Diagramme angewendet werden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-p253">If you change the value axis in such a way that it became  smaller than the size of the data points, you can use this property to set whether to show the data labels. This property applies to 2-D charts only.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowLegendFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowLegendFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowLegendFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowLegendFieldButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowLegendFieldButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowLegendFieldButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2861)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2861)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2861)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-754">Ruft ab oder legt fest, ob in einer PivotChart Legendenfelder-Schaltflächen angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-754">Gets or sets whether to display legend field buttons on a PivotChart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4e684-755">
            <b>true,</b> Wenn Legende Feld in einer PivotChart Schaltflächen angezeigt werden sollen; anderenfalls <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-755">
              <b>true</b> if legend field buttons on a PivotChart should be displayed; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="4e684-756">Lese-/Schreibzugriff.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-756">Read/write.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="4e684-757">Legen Sie die <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowLegendFieldButtons" /> -Eigenschaft auf <b>true</b> Legendenfelder-Schaltflächen auf der angegebenen PivotChart-Bericht angezeigt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-757">Set the <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowLegendFieldButtons" /> property to <b>true</b> to display legend field buttons on the specified PivotChart.</span>
            </span>
            <span data-ttu-id="4e684-758">Legen Sie die Eigenschaft auf <b>false,</b> um die Schaltflächen auszublenden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-758">Set the property to <b>false</b> to hide the buttons.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="4e684-759">Die <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowLegendFieldButtons" /> -Eigenschaft entspricht dem Befehl Legendenfelder-Schaltflächen anzeigen in der Dropdownliste Feldschaltflächen der Registerkarte Analyse, die bei ausgewähltem PivotChart verfügbar ist.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-759">The <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowLegendFieldButtons" /> property corresponds to the Show Legend Field Buttons command on the Field Buttons drop-down list of the Analyze tab, which is available when a PivotChart is selected.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowReportFilterFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowReportFilterFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowReportFilterFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowReportFilterFieldButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowReportFilterFieldButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowReportFilterFieldButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2860)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2860)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2860)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-760">Ruft ab oder legt fest, ob in einer PivotChart die Berichtsfilter-Feldschaltflächen anzeigen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-760">Gets or sets whether to display the report filter field buttons on a PivotChart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4e684-761">
            <b>true,</b> Wenn das Filterfeld den Schaltflächen auf PivotChart angezeigt werden sollen; anderenfalls <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-761">
              <b>true</b> if the report filter field buttons on a PivotChart should be displayed; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="4e684-762">Lese-/Schreibzugriff.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-762">Read/write.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="4e684-763">Legen Sie die <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowReportFilterFieldButtons" /> -Eigenschaft auf <b>true fest,</b> um die Berichtsfilter-Feldschaltflächen im angegebenen PivotChart-Bericht anzuzeigen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-763">Set the <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowReportFilterFieldButtons" /> property to <b>true</b> to display the Report Filter Field buttons on the specified PivotChart.</span>
            </span>
            <span data-ttu-id="4e684-764">Legen Sie die Eigenschaft auf <b>false,</b> um die Schaltflächen auszublenden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-764">Set the property to <b>false</b> to hide the buttons.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="4e684-765">Die <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowReportFilterFieldButtons" /> -Eigenschaft entspricht dem Befehl anzeigen Berichtsfilter-Feldschaltflächen auf der Registerkarte Analyse, die bei ausgewähltem PivotChart verfügbar ist in der Dropdownliste Feldschaltflächen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-765">The <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowReportFilterFieldButtons" /> property corresponds to the Show Report Filter Field Buttons command on the Field Buttons drop-down list of the Analyze tab, which is available when a PivotChart is selected.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowValueFieldButtons">
      <MemberSignature Language="C#" Value="public bool ShowValueFieldButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowValueFieldButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowValueFieldButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowValueFieldButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowValueFieldButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2863)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2863)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2863)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-766">Ruft ab oder legt fest, ob der Wert in einer PivotChart angezeigt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-766">Gets or sets whether to display the value field buttons on a PivotChart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4e684-767">
            <b>true,</b> Wenn das Wertefeld in einer PivotChart Schaltflächen angezeigt werden sollen; anderenfalls <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-767">
              <b>true</b> if the value field buttons on a PivotChart should be displayed; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="4e684-768">Lese-/Schreibzugriff.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-768">Read/write.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="4e684-769">Legen Sie die <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowValueFieldButtons" /> -Eigenschaft auf <b>true</b> , wenn der Wert der angegebenen PivotChart-Bericht angezeigt werden sollen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-769">Set the <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowValueFieldButtons" /> property to <b>true</b> to display the Value Field buttons on the specified PivotChart.</span>
            </span>
            <span data-ttu-id="4e684-770">Legen Sie die Eigenschaft auf <b>false,</b> um die Schaltfläche auszublenden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-770">Set the property to <b>false</b> to hide the button.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="4e684-771">Die <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowValueFieldButtons" /> -Eigenschaft entspricht dem Befehl Anzeigen aller Wertfelder-Schaltflächen auf der Registerkarte Analyse, die bei ausgewähltem PivotChart verfügbar ist in der Dropdownliste Feldschaltflächen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-771">The <see cref="P:Microsoft.Office.Interop.Excel._Chart.ShowValueFieldButtons" /> property corresponds to the Show Value Field Buttons command on the Field Buttons drop-down list of the Analyze tab, which is available when a PivotChart is selected.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowWindow">
      <MemberSignature Language="C#" Value="public bool ShowWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.ShowWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1399)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1399)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1399)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-772">
            <b>True,</b> Wenn das eingebettete Diagramm in einem separaten Fenster angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-772">
              <b>True</b> if the embedded chart is displayed in a separate window.</span>
          </span>
          <span data-ttu-id="4e684-773">Die <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> mit dieser Eigenschaft verwendete-Objekt muss auf ein eingebettetes Diagramm verweisen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-773">The <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object used with this property must refer to an embedded chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SideWall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Walls SideWall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Walls SideWall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.SideWall" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SideWall As Walls" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Walls ^ SideWall { Microsoft::Office::Interop::Excel::Walls ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2505)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Walls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-774">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> -Objekt, das dem Benutzer ermöglicht, das die seitliche Wand eines 3D-Diagramms individuell formatieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-774">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that allows the user to individually format the side wall of a 3-D chart.</span>
          </span>
          <span data-ttu-id="4e684-775">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-775">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Walls" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeWithWindow">
      <MemberSignature Language="C#" Value="public bool SizeWithWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SizeWithWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.SizeWithWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeWithWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SizeWithWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(94)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(94)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(94)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-776">
            <b>True,</b> Wenn Microsoft Excel das Diagramm, um die Größe des Fensters für das Diagrammblatt angepasst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-776">
              <b>True</b> if Microsoft Excel resizes the chart to match the size of the chart sheet window.</span>
          </span>
          <span data-ttu-id="4e684-777">
            <b>False,</b> Wenn die Diagrammgröße nicht an die Größe des Fensters ansetzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-777">
              <b>False</b> if the chart size isn't attached to the window size.</span>
          </span>
          <span data-ttu-id="4e684-778">Gilt nur für Diagrammblätter (gilt nicht für eingebettete Diagramme).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-778">Applies only to chart sheets (doesn't apply to embedded charts).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Spinners">
      <MemberSignature Language="C#" Value="public object Spinners (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Spinners([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Spinners(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Spinners (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(838)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="4e684-779">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-779">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubType">
      <MemberSignature Language="C#" Value="public int SubType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.SubType" />
      <MemberSignature Language="VB.NET" Value="Public Property SubType As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SubType { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(109)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-780">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-780">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SurfaceGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartGroup SurfaceGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartGroup SurfaceGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.SurfaceGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SurfaceGroup As ChartGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartGroup ^ SurfaceGroup { Microsoft::Office::Interop::Excel::ChartGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(22)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-781">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> -Objekt, das die Oberflächendiagrammgruppe eines 3D-Diagramms darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-781">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object that represents the surface chart group of a 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tab">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Tab Tab { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Tab Tab" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Tab" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tab As Tab" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Tab ^ Tab { Microsoft::Office::Interop::Excel::Tab ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1041)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1041)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Tab</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-782">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> -Objekt für ein Diagramm oder Arbeitsblatt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-782">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> object for a chart or a worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBoxes">
      <MemberSignature Language="C#" Value="public object TextBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object TextBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.TextBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(777)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="4e684-783">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-783">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Type { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-784">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-784">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public void Unprotect (object Password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unprotect([in]object Password) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.Unprotect(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unprotect (Optional Password As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(285)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="4e684-785">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-785">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-786">Eine Zeichenfolge, die das Groß-/Kleinschreibung beachtet Kennwort für das Blatt oder die Arbeitsmappe aufheben angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-786">A string that denotes the case-sensitive password to use to unprotect the sheet or workbook.</span>
          </span>
          <span data-ttu-id="4e684-787">Wenn das Blatt oder die Arbeitsmappe mit einem Kennwort geschützt ist, wird dieses Argument ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-787">If the sheet or workbook isn't protected with a password, this argument is ignored.</span>
          </span>
          <span data-ttu-id="4e684-788">Wenn Sie dieses Argument für ein Blatt, die mit einem Kennwort geschützt sind auslassen, werden Sie aufgefordert, das Kennwort aufgefordert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-788">If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password.</span>
          </span>
          <span data-ttu-id="4e684-789">Wenn Sie dieses Argument für eine Arbeitsmappe, die mit einem Kennwort geschützt ist auslassen, schlägt die Methode fehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-789">If you omit this argument for a workbook that's protected with a password, the method fails.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-p261">Hebt den Schutz eines Blatts oder einer Arbeitsmappe auf. Diese Methode hat keine Wirkung, wenn das Blatt oder die Arbeitsmappe nicht geschützt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-p261">Removes protection from a sheet or workbook. This method has no effect if the sheet or workbook isn't protected.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="4e684-p262">Wenn Sie das Kennwort vergessen, können Sie den Schutz des Blatts oder der Arbeitsmappe nicht wieder aufheben. Sie sollten daher eine Liste Ihrer Kennwörter und der zugehörigen Dateinamen an einem sicheren Ort aufbewahren.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-p262">If you forget the password, you cannot unprotect the sheet or workbook. It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSheetVisibility Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSheetVisibility Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As XlSheetVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSheetVisibility Visible { Microsoft::Office::Interop::Excel::XlSheetVisibility get(); void set(Microsoft::Office::Interop::Excel::XlSheetVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSheetVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-794">Bestimmt, ob das Objekt sichtbar ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-794">Determines whether the object is visible.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Walls">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Walls Walls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Walls Walls" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.Walls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Walls As Walls" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Walls ^ Walls { Microsoft::Office::Interop::Excel::Walls ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(86)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(86)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Walls</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-795">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> -Objekt, das die Wände eines 3D-Diagramms darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-795">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Walls" /> object that represents the walls of the 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="4e684-796">Diese Eigenschaft lässt sich nicht auf 3D-Kreisdiagramme anwenden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4e684-796">This property doesn't apply to 3-D pie charts.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WallsAndGridlines2D">
      <MemberSignature Language="C#" Value="public bool WallsAndGridlines2D { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WallsAndGridlines2D" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Chart.WallsAndGridlines2D" />
      <MemberSignature Language="VB.NET" Value="Public Property WallsAndGridlines2D As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WallsAndGridlines2D { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e684-797">
            <b>True,</b> Wenn Gitternetzlinien in einem 3D-Diagramm zweidimensional gezeichnet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-797">
              <b>True</b> if gridlines are drawn two-dimensionally on a 3-D chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XYGroups">
      <MemberSignature Language="C#" Value="public object XYGroups (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object XYGroups([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Chart.XYGroups(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XYGroups (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="4e684-798">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-798">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="4e684-799">Gibt die Diagrammgruppe an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-799">Specifies the chart group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e684-800">Gibt in einem 2D-Diagramm ein Objekt, das darstellt zurück, das eine Diagrammgruppe einzelne Punkt (XY) (eine <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> Objekt) oder eine Auflistung der Punkt (XY) Diagrammgruppen (eine <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> Auflistung).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e684-800">On a 2-D chart, returns an object that represents either a single scatter chart group (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroup" /> object) or a collection of the scatter chart groups (a <see cref="T:Microsoft.Office.Interop.Excel.ChartGroups" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>