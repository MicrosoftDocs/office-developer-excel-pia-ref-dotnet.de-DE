<Type Name="_Worksheet" FullName="Microsoft.Office.Interop.Excel._Worksheet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7f0ab611aa4d579db9ac504ef7ee328ea8f5b52e" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50012670" /></Metadata><TypeSignature Language="C#" Value="public interface _Worksheet" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Worksheet" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Worksheet" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Worksheet" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Worksheet" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208D8-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fc367-101">Hierbei handelt es sich um eine primäre Schnittstelle in einer COM-CoClass, die von verwaltetem Code benötigt wird, um Interoperabilität mit dem entsprechenden COM-Objekt sicherzustellen.</span><span class="sxs-lookup"><span data-stu-id="fc367-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span></span> <span data-ttu-id="fc367-102">Verwenden Sie diese primäre Schnittstelle nur, wenn die Methode, die Sie verwenden möchten, den gleichen Namen aufweist wie ein Ereignis des COM-Objekts; casten Sie in diesem Fall zu dieser Schnittstelle, um die Methode aufzurufen, und casten Sie zur aktuellen Ereignisschnittstelle, um eine Verbindung zum Ereignis herzustellen.</span><span class="sxs-lookup"><span data-stu-id="fc367-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span></span> <span data-ttu-id="fc367-103">Verwenden Sie andernfalls die von der COM-CoClass abgeleitete .NET-Schnittstelle, um auf Methoden, Eigenschaften und Ereignisse des COM-Objekts zuzugreifen.</span><span class="sxs-lookup"><span data-stu-id="fc367-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span></span> <span data-ttu-id="fc367-104">Weitere Informationen zum COM-Objekt finden Sie unter <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> .</span><span class="sxs-lookup"><span data-stu-id="fc367-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_CheckSpelling">
      <MemberSignature Language="C#" Value="public void _CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang, object IgnoreFinalYaa, object SpellScript);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang, [in]object IgnoreFinalYaa, [in]object SpellScript) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._CheckSpelling(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object, Optional IgnoreFinalYaa As Object, Optional SpellScript As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1817)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
        <Parameter Name="IgnoreFinalYaa" Type="System.Object" />
        <Parameter Name="SpellScript" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary">To be added.</param>
        <param name="IgnoreUppercase">To be added.</param>
        <param name="AlwaysSuggest">To be added.</param>
        <param name="SpellLang">To be added.</param>
        <param name="IgnoreFinalYaa">To be added.</param>
        <param name="SpellScript">To be added.</param>
        <summary><span data-ttu-id="fc367-105">Für interne Zwecke vorbehalten. </span><span class="sxs-lookup"><span data-stu-id="fc367-105">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_CodeName">
      <MemberSignature Language="C#" Value="public string _CodeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet._CodeName" />
      <MemberSignature Language="VB.NET" Value="Public Property _CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ _CodeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-106">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="fc367-106">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public int _DisplayRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 _DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet._DisplayRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property _DisplayRightToLeft As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int _DisplayRightToLeft { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-107">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="fc367-107">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Evaluate">
      <MemberSignature Language="C#" Value="public object _Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ _Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <summary><span data-ttu-id="fc367-108">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="fc367-108">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PasteSpecial">
      <MemberSignature Language="C#" Value="public void _PasteSpecial (object Format, object Link, object DisplayAsIcon, object IconFileName, object IconIndex, object IconLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PasteSpecial([in]object Format, [in]object Link, [in]object DisplayAsIcon, [in]object IconFileName, [in]object IconIndex, [in]object IconLabel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PasteSpecial (Optional Format As Object, Optional Link As Object, Optional DisplayAsIcon As Object, Optional IconFileName As Object, Optional IconIndex As Object, Optional IconLabel As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1027)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" />
        <Parameter Name="IconFileName" Type="System.Object" />
        <Parameter Name="IconIndex" Type="System.Object" />
        <Parameter Name="IconLabel" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Format">To be added.</param>
        <param name="Link">To be added.</param>
        <param name="DisplayAsIcon">To be added.</param>
        <param name="IconFileName">To be added.</param>
        <param name="IconIndex">To be added.</param>
        <param name="IconLabel">To be added.</param>
        <summary><span data-ttu-id="fc367-109">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="fc367-109">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary><span data-ttu-id="fc367-110">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="fc367-110">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Protect">
      <MemberSignature Language="C#" Value="public void _Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Protect([in]object Password, [in]object DrawingObjects, [in]object Contents, [in]object Scenarios, [in]object UserInterfaceOnly) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._Protect(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Protect (Optional Password As Object, Optional DrawingObjects As Object, Optional Contents As Object, Optional Scenarios As Object, Optional UserInterfaceOnly As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(282)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">To be added.</param>
        <param name="DrawingObjects">To be added.</param>
        <param name="Contents">To be added.</param>
        <param name="Scenarios">To be added.</param>
        <param name="UserInterfaceOnly">To be added.</param>
        <summary><span data-ttu-id="fc367-111">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="fc367-111">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_SaveAs">
      <MemberSignature Language="C#" Value="public void _SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _SaveAs([in]string Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet._SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _SaveAs (Filename As String, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(284)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <param name="TextCodepage">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary><span data-ttu-id="fc367-112">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="fc367-112">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc367-113">Legt das aktuelle Blatt als aktives Blatt fest.</span><span class="sxs-lookup"><span data-stu-id="fc367-113">Makes the current sheet the active sheet.</span></span> <span data-ttu-id="fc367-114">Entspricht dem Klicken auf die Registerkarte des Blatts.</span><span class="sxs-lookup"><span data-stu-id="fc367-114">Equivalent to clicking the sheet's tab.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-115">Wenn diese Eigenschaft ohne einen Objektbezeichner verwendet wird, gibt sie ein Objekt zurück, das <see cref="T:Microsoft.Office.Interop.Excel.Application" /> die Microsoft Excel-Anwendung darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc367-115">When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span> <span data-ttu-id="fc367-116">Mit Objektkennzeichner hingegen gibt diese Eigenschaft ein <b>Application</b>-Objekt zurück, das die Erstellungsanwendung des angegebenen Objekts darstellt. (Sie können diese Eigenschaft mit einem OLE-Automatisierungsobjekt verwenden, um die Anwendung dieses Objekts zurückzugeben.)</span><span class="sxs-lookup"><span data-stu-id="fc367-116">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span></span> <span data-ttu-id="fc367-117">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fc367-117">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arcs">
      <MemberSignature Language="C#" Value="public object Arcs (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Arcs([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Arcs(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Arcs (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(760)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="fc367-118">Für die interne Verwendung reserviert.</span><span class="sxs-lookup"><span data-stu-id="fc367-118">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilter">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoFilter AutoFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoFilter AutoFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutoFilter As AutoFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AutoFilter ^ AutoFilter { Microsoft::Office::Interop::Excel::AutoFilter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(793)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-119">Gibt ein Objekt <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> zurück, wenn die Filterung ein ist.</span><span class="sxs-lookup"><span data-stu-id="fc367-119">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> object if filtering is on.</span></span> <span data-ttu-id="fc367-120">Gibt <b>Nothing zurück,</b> wenn die Filterung deaktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="fc367-120">Returns <b>Nothing</b> if filtering is off.</span></span> <span data-ttu-id="fc367-121">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fc367-121">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fc367-122">Um ein <b>AutoFilter -Objekt</b> für ein Arbeitsblatt zu erstellen, müssen Sie die automatische Filterung für einen Bereich auf dem Arbeitsblatt manuell oder mithilfe der Methode <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> des Objekts <see cref="T:Microsoft.Office.Interop.Excel.Range" /> aktivieren.</span><span class="sxs-lookup"><span data-stu-id="fc367-122">To create an <b>AutoFilter</b> object for a worksheet, you must turn autofiltering on for a range on the worksheet either manually or using the <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilterMode">
      <MemberSignature Language="C#" Value="public bool AutoFilterMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFilterMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilterMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFilterMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFilterMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-123"><b>True</b>, wenn die Dropdownpfeile für AutoFilter momentan im Blatt angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="fc367-123"><b>True</b> if the AutoFilter drop-down arrows are currently displayed on the sheet.</span></span> <span data-ttu-id="fc367-124">Diese Eigenschaft ist unabhängig von der <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.FilterMode" /> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fc367-124">This property is independent of the <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.FilterMode" /> property.</span></span> <span data-ttu-id="fc367-125"><b>Boolescher</b> Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="fc367-125">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fc367-126">Diese Eigenschaft hat den Wert <b>True</b>True, wenn die Dropdownpfeile momentan angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="fc367-126">This property returns <b>True</b> if the drop-down arrows are currently displayed.</span></span> <span data-ttu-id="fc367-127">Sie können diese Eigenschaft auf <b>False</b>False festlegen, um die Pfeile zu entfernen, jedoch nicht auf <b>True</b>True, um sie einzublenden.</span><span class="sxs-lookup"><span data-stu-id="fc367-127">You can set this property to <b>False</b> to remove the arrows, but you cannot set it to <b>True</b>.</span></span> <span data-ttu-id="fc367-128">Verwenden Sie <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> die Methode, um eine Liste zu filtern und die Dropdownpfeile anzeigen.</span><span class="sxs-lookup"><span data-stu-id="fc367-128">Use the <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" /> method to filter a list and display the drop-down arrows.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Buttons">
      <MemberSignature Language="C#" Value="public object Buttons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Buttons([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Buttons(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Buttons (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(557)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="fc367-129">Für die interne Verwendung reserviert.</span><span class="sxs-lookup"><span data-stu-id="fc367-129">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public void Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Calculate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Calculate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(279)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc367-130">Diese Methode berechnet alle geöffneten Arbeitsmappen, ein bestimmtes Arbeitsblatt einer Arbeitsmappe oder einen bestimmten Zellbereich in einem Arbeitsblatt (siehe Tabelle unten).</span><span class="sxs-lookup"><span data-stu-id="fc367-130">Calculates all open workbooks, a specific worksheet in a workbook, or a specified range of cells on a worksheet, as shown in the following table.</span></span></summary>
        <remarks><list type="table">
            <item>
              <term><span data-ttu-id="fc367-131">Alle geöffneten Arbeitsmappen</span><span class="sxs-lookup"><span data-stu-id="fc367-131">All open workbooks</span></span></term>
              <description><span data-ttu-id="fc367-132">Application.Calculate</span><span class="sxs-lookup"><span data-stu-id="fc367-132">Application.Calculate</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="fc367-133">Ein bestimmtes Arbeitsblatt</span><span class="sxs-lookup"><span data-stu-id="fc367-133">A specific worksheet</span></span></term>
              <description><span data-ttu-id="fc367-134">Worksheets(1). Berechnen</span><span class="sxs-lookup"><span data-stu-id="fc367-134">Worksheets(1).Calculate</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="fc367-135">Ein bestimmter Bereich</span><span class="sxs-lookup"><span data-stu-id="fc367-135">A specified range</span></span></term>
              <description><span data-ttu-id="fc367-136">Worksheets(1). Rows(2). Berechnen</span><span class="sxs-lookup"><span data-stu-id="fc367-136">Worksheets(1).Rows(2).Calculate</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Cells { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-137">Gibt ein Objekt zurück, das alle Zellen des Arbeitsblatts darstellt (nicht nur die zellen, die <see cref="T:Microsoft.Office.Interop.Excel.Range" /> derzeit verwendet werden).</span><span class="sxs-lookup"><span data-stu-id="fc367-137">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells on the worksheet (not just the cells that are currently in use).</span></span> <span data-ttu-id="fc367-138">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fc367-138">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fc367-139">Da die Eigenschaft die Standardeigenschaft für das Range -Objekt ist, können Sie den Zeilen- und Spaltenindex unmittelbar nach dem <see cref="P:Microsoft.Office.Interop.Excel.Worksheets.Item(System.Object)" /> Schlüsselwort <b>Cells</b> angeben. <b></b></span><span class="sxs-lookup"><span data-stu-id="fc367-139">Because the <see cref="P:Microsoft.Office.Interop.Excel.Worksheets.Item(System.Object)" /> property is the default property for the <b>Range</b> object, you can specify the row and column index immediately after the <b>Cells</b> keyword.</span></span> <span data-ttu-id="fc367-140">Weitere Informationen finden Sie in der <b>Item-Eigenschaft.</b></span><span class="sxs-lookup"><span data-stu-id="fc367-140">For more information, see the <b>Item</b> property.</span></span></para>
          <para><span data-ttu-id="fc367-141">Wenn Sie diese Eigenschaft ohne einen Objektbezeichner verwenden, wird ein <b>Range</b>-Objekt zurückgegeben, das alle Zellen im aktiven Arbeitsblatt darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc367-141">Using this property without an object qualifier returns a <b>Range</b> object that represents all the cells on the active worksheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartObjects">
      <MemberSignature Language="C#" Value="public object ChartObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChartObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ChartObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChartObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="fc367-142">Optionaler <b>Variant</b>-Wert.</span><span class="sxs-lookup"><span data-stu-id="fc367-142">Optional <b>Variant</b>.</span></span> <span data-ttu-id="fc367-143">Der Name oder die Nummer des Diagramms.</span><span class="sxs-lookup"><span data-stu-id="fc367-143">The name or number of the chart.</span></span> <span data-ttu-id="fc367-144">Dieses Argument kann ein Array sein, um mehr als ein Diagramm anzugeben.</span><span class="sxs-lookup"><span data-stu-id="fc367-144">This argument can be an array to specify more than one chart.</span></span></param>
        <summary><span data-ttu-id="fc367-145">Gibt ein Objekt zurück, das ein einzelnes eingebettetes Diagramm (ein Objekt) oder eine Auflistung aller eingebetteten Diagramme (ein Objekt) auf dem <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> Blatt darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc367-145">Returns an object that represents either a single embedded chart (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObject" /> object) or a collection of all the embedded charts (a <see cref="T:Microsoft.Office.Interop.Excel.ChartObjects" /> object) on the sheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="fc367-146">Diese Methode entspricht nicht der <see cref="T:Microsoft.Office.Interop.Excel.Charts" /> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fc367-146">This method isn't equivalent to the <see cref="T:Microsoft.Office.Interop.Excel.Charts" /> property.</span></span> <span data-ttu-id="fc367-147">Diese Methode gibt eingebettete Diagramme zurück; die <b>Charts</b> -Eigenschaft gibt Diagrammblätter zurück.</span><span class="sxs-lookup"><span data-stu-id="fc367-147">This method returns embedded charts; the <b>Charts</b> property returns chart sheets.</span></span> <span data-ttu-id="fc367-148">Verwenden Sie die <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> Eigenschaft, um das <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> Objekt für ein eingebettetes Diagramm zurückzukehren.</span><span class="sxs-lookup"><span data-stu-id="fc367-148">Use the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> property to return the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object for an embedded chart.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public object CheckBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CheckBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.CheckBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(824)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="fc367-149">Für die interne Verwendung reserviert.</span><span class="sxs-lookup"><span data-stu-id="fc367-149">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public void CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.CheckSpelling(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary"><span data-ttu-id="fc367-150">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-150">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-151">Eine Zeichenfolge, mit der der Dateiname des Benutzerwörterbuchs angegeben wird, in dem ein Wort gesucht werden soll, das nicht im Standardwörterbuch zu finden ist.</span><span class="sxs-lookup"><span data-stu-id="fc367-151">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary.</span></span> <span data-ttu-id="fc367-152">Wenn Sie dieses Argument nicht angeben, wird das momentan angegebene Wörterbuch verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc367-152">If this argument is omitted, the currently specified dictionary is used.</span></span></param>
        <param name="IgnoreUppercase"><span data-ttu-id="fc367-153">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-153">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-154">Mit <b>True</b> werden alle Wörter in Großbuchstaben von Microsoft Excel ignoriert.</span><span class="sxs-lookup"><span data-stu-id="fc367-154"><b>True</b> to have Microsoft Excel ignore words that are all uppercase.</span></span> <span data-ttu-id="fc367-155">Lautet der Wert <b>False</b>, werden von Microsoft Excel auch alle Wörter in Großbuchstaben geprüft.</span><span class="sxs-lookup"><span data-stu-id="fc367-155"><b>False</b> to have Microsoft Excel check words that are all uppercase.</span></span> <span data-ttu-id="fc367-156">Wenn Sie dieses Argument nicht angeben, wird die aktuelle Einstellung verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc367-156">If this argument is omitted, the current setting will be used.</span></span></param>
        <param name="AlwaysSuggest"><span data-ttu-id="fc367-157">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-157">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-158">Mit <b>True</b> wird in Microsoft Excel eine Liste mit alternativen Schreibweisen angezeigt, wenn ein falsch geschriebenes Wort gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="fc367-158"><b>True</b> to have Microsoft Excel display a list of suggested alternate spellings when an incorrect spelling is found.</span></span> <span data-ttu-id="fc367-159">Lautet der Wert <b>False</b>, wird in Microsoft Excel auf die Eingabe des richtig geschriebenen Worts gewartet.</span><span class="sxs-lookup"><span data-stu-id="fc367-159"><b>False</b> to have Microsoft Excel wait for you to input the correct spelling.</span></span> <span data-ttu-id="fc367-160">Wenn Sie dieses Argument nicht angeben, wird die aktuelle Einstellung verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc367-160">If this argument is omitted, the current setting will be used.</span></span></param>
        <param name="SpellLang"><span data-ttu-id="fc367-161">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-161">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-162">Die Sprache des verwendeten Wörterbuchs.</span><span class="sxs-lookup"><span data-stu-id="fc367-162">The language of the dictionary being used.</span></span> <span data-ttu-id="fc367-163">Dies kann einer der von der Eigenschaft <b>verwendeten MsoLanguageID-Werte</b> <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> sein.</span><span class="sxs-lookup"><span data-stu-id="fc367-163">Can be one of the <b>MsoLanguageID</b> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</span></span></param>
        <summary><span data-ttu-id="fc367-164">Prüft die Rechtschreibung eines Objekts.</span><span class="sxs-lookup"><span data-stu-id="fc367-164">Checks the spelling of an object.</span></span> <span data-ttu-id="fc367-165">Dieses Formular hat keinen Rückgabewert; Microsoft Excel zeigt das Dialogfeld Rechtschreibung an.</span><span class="sxs-lookup"><span data-stu-id="fc367-165">This form has no return value; Microsoft Excel displays the Spelling dialog box.</span></span></summary>
        <remarks><para><span data-ttu-id="fc367-166">Verwenden Sie diese Methode, um Kopfzeilen, Fußzeilen und Objekte in einem Arbeitsblatt zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="fc367-166">Use this method to check headers, footers, and objects on a worksheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CircleInvalid">
      <MemberSignature Language="C#" Value="public void CircleInvalid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CircleInvalid() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.CircleInvalid" />
      <MemberSignature Language="VB.NET" Value="Public Sub CircleInvalid ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CircleInvalid();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1437)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc367-167">Kreist ungültige Einträge im Arbeitsblatt ein.</span><span class="sxs-lookup"><span data-stu-id="fc367-167">Circles invalid entries on the worksheet.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CircularReference">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range CircularReference { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range CircularReference" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.CircularReference" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CircularReference As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ CircularReference { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1069)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1069)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-168">Gibt ein Objekt zurück, das den Bereich darstellt, der den ersten Zirkelbezug auf dem Blatt enthält, oder nothing, wenn kein Zirkelbezug auf dem <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Blatt vorkommt. <b></b></span><span class="sxs-lookup"><span data-stu-id="fc367-168">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing the first circular reference on the sheet, or returns <b>Nothing</b> if there's no circular reference on the sheet.</span></span> <span data-ttu-id="fc367-169">Der Zirkelbezug muss entfernt werden, bevor die Berechnung fortgesetzt werden kann.</span><span class="sxs-lookup"><span data-stu-id="fc367-169">The circular reference must be removed before calculation can proceed.</span></span> <span data-ttu-id="fc367-170">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fc367-170">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearArrows">
      <MemberSignature Language="C#" Value="public void ClearArrows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearArrows() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ClearArrows" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearArrows ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearArrows();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(970)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc367-171">Entfernt die Spurpfeile aus dem Arbeitsblatt.</span><span class="sxs-lookup"><span data-stu-id="fc367-171">Clears the tracer arrows from the worksheet.</span></span> <span data-ttu-id="fc367-172">Spurpfeile werden mithilfe des Überwachungsfeatures hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="fc367-172">Tracer arrows are added by using the auditing feature.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCircles">
      <MemberSignature Language="C#" Value="public void ClearCircles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearCircles() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ClearCircles" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearCircles ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearCircles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1436)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc367-173">Löscht Kreise von ungültigen Einträgen auf dem Arbeitsblatt.</span><span class="sxs-lookup"><span data-stu-id="fc367-173">Clears circles from invalid entries on the worksheet.</span></span></summary>
        <remarks><para><span data-ttu-id="fc367-174">Verwenden Sie die <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.CircleInvalid" /> Methode, um Zellen zu kreisen, die ungültige Daten enthalten.</span><span class="sxs-lookup"><span data-stu-id="fc367-174">Use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.CircleInvalid" /> method to circle cells that contain invalid data.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeName">
      <MemberSignature Language="C#" Value="public string CodeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.CodeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-175">Gibt den Codenamen für das Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="fc367-175">Returns the code name for the object.</span></span> <span data-ttu-id="fc367-176">Schreibgeschützter <b>String</b>-Wert.</span><span class="sxs-lookup"><span data-stu-id="fc367-176">Read-only <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fc367-177">Der Wert, der in der Zelle rechts neben <b>(Name)</b> im Eigenschaftenfenster angezeigt wird, ist der Codename des ausgewählten Objekts.</span><span class="sxs-lookup"><span data-stu-id="fc367-177">The value that you see in the cell to the right of <b>(Name)</b> in the Properties window is the code name of the selected object.</span></span> <span data-ttu-id="fc367-178">Sie können den Codenamen eines Objekts während der Entwurfszeit ändern, indem Sie diesen Wert ändern.</span><span class="sxs-lookup"><span data-stu-id="fc367-178">At design time, you can change the code name of an object by changing this value.</span></span> <span data-ttu-id="fc367-179">Eine programmgesteuerte Änderung dieser Eigenschaft während der Ausführung des Programms ist nicht möglich.</span><span class="sxs-lookup"><span data-stu-id="fc367-179">You cannot programmatically change this property at run time.</span></span></para>
          <para><span data-ttu-id="fc367-180">Der Codename für ein Objekt kann anstelle eines Ausdrucks verwendet werden, der das Objekt zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="fc367-180">The code name for an object can be used in place of an expression that returns the object.</span></span></para>
          <para><span data-ttu-id="fc367-181">Der Blattname kann sich vom Codenamen unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="fc367-181">It’s possible for the sheet name to be different from the code name.</span></span> <span data-ttu-id="fc367-182">Wenn Sie ein Blatt erstellen, sind der Blattname und der Codename identisch, aber durch ändern des Blattnamens wird der Codename nicht geändert, und das Ändern des Codenamens (mithilfe des Eigenschaftenfensters im Visual Basic-Editor) ändert den Blattnamen nicht.</span><span class="sxs-lookup"><span data-stu-id="fc367-182">When you create a sheet, the sheet name and code name are the same, but changing the sheet name doesn’t change the code name, and changing the code name (using the Properties window in the Visual Basic Editor) doesn’t change the sheet name.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Columns { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-183">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das alle Spalten im angegebenen Arbeitsblatt darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc367-183">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the columns on the specified worksheet.</span></span> <span data-ttu-id="fc367-184">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fc367-184">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Comments Comments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Comments Comments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Comments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comments As Comments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Comments ^ Comments { Microsoft::Office::Interop::Excel::Comments ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Comments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-185">Gibt eine <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> Auflistung zurück, die alle Kommentare für das angegebene Arbeitsblatt darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc367-185">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> collection that represents all the comments for the specified worksheet.</span></span> <span data-ttu-id="fc367-186">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fc367-186">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationFunction">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlConsolidationFunction ConsolidationFunction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlConsolidationFunction ConsolidationFunction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationFunction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsolidationFunction As XlConsolidationFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlConsolidationFunction ConsolidationFunction { Microsoft::Office::Interop::Excel::XlConsolidationFunction get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlConsolidationFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-187">Gibt den für die aktuelle Konsolidierung verwendeten Funktionscode zurück.</span><span class="sxs-lookup"><span data-stu-id="fc367-187">Returns the function code used for the current consolidation.</span></span> <span data-ttu-id="fc367-188">Dies kann eine der <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> Konstanten sein.</span><span class="sxs-lookup"><span data-stu-id="fc367-188">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> constants.</span></span> <span data-ttu-id="fc367-189">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fc367-189">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationOptions">
      <MemberSignature Language="C#" Value="public object ConsolidationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConsolidationOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsolidationOptions As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConsolidationOptions { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(790)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(790)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-190">Gibt eine Matrix mit drei Elementen für die Konsolidierungsoptionen zurück, wie in der folgenden Tabelle dargestellt.</span><span class="sxs-lookup"><span data-stu-id="fc367-190">Returns a three-element array of consolidation options, as shown in the following table.</span></span> <span data-ttu-id="fc367-191">Wenn ein Element den Wert <b>True</b>True hat, wird die entsprechende Option festgelegt.</span><span class="sxs-lookup"><span data-stu-id="fc367-191">If the element is <b>True</b>, that option is set.</span></span> <span data-ttu-id="fc367-192">Read-only- <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-192">Read-only <b>Object</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><list type="table">
            <item>
              <term><span data-ttu-id="fc367-193">1 </span><span class="sxs-lookup"><span data-stu-id="fc367-193">1</span></span></term>
              <description><span data-ttu-id="fc367-194">Verwenden Sie Beschriftungen in der obersten Zeile.</span><span class="sxs-lookup"><span data-stu-id="fc367-194">Use labels in top row.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="fc367-195">2 </span><span class="sxs-lookup"><span data-stu-id="fc367-195">2</span></span></term>
              <description><span data-ttu-id="fc367-196">Verwenden Sie Beschriftungen in der linken Spalte.</span><span class="sxs-lookup"><span data-stu-id="fc367-196">Use labels in left column.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="fc367-197">3</span><span class="sxs-lookup"><span data-stu-id="fc367-197">3</span></span></term>
              <description><span data-ttu-id="fc367-198">Erstellen Sie Links zu Quelldaten.</span><span class="sxs-lookup"><span data-stu-id="fc367-198">Create links to source data.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConsolidationSources">
      <MemberSignature Language="C#" Value="public object ConsolidationSources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConsolidationSources" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ConsolidationSources" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsolidationSources As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConsolidationSources { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(791)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(791)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-199">Gibt eine Matrix mit Zeichenfolgen zurück, die die Quellblätter für die aktuelle Konsolidierung des Arbeitsblatts bezeichnen.</span><span class="sxs-lookup"><span data-stu-id="fc367-199">Returns an array of string values that name the source sheets for the worksheet's current consolidation.</span></span> <span data-ttu-id="fc367-200">Es wird <b>Empty</b>Empty zurückgegeben, falls es keine Konsolidierung für das Blatt gibt.</span><span class="sxs-lookup"><span data-stu-id="fc367-200">Returns <b>Empty</b> if there's no consolidation on the sheet.</span></span> <span data-ttu-id="fc367-201">Read-only- <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-201">Read-only <b>Object</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Copy(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before"><span data-ttu-id="fc367-202">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-202">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-203">Das Blatt, vor dem das kopierte Blatt eingefügt wird.</span><span class="sxs-lookup"><span data-stu-id="fc367-203">The sheet before which the copied sheet will be placed.</span></span> <span data-ttu-id="fc367-204">Sie können nicht <paramref name="Before" /> angeben, ob Sie . <paramref name="After" /></span><span class="sxs-lookup"><span data-stu-id="fc367-204">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span></span></param>
        <param name="After"><span data-ttu-id="fc367-205">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-205">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-206">Das Blatt, nach dem das kopierte Blatt eingefügt wird.</span><span class="sxs-lookup"><span data-stu-id="fc367-206">The sheet after which the copied sheet will be placed.</span></span> <span data-ttu-id="fc367-207">Sie können nicht <paramref name="After" /> angeben, ob Sie . <paramref name="Before" /></span><span class="sxs-lookup"><span data-stu-id="fc367-207">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span></span></param>
        <summary><span data-ttu-id="fc367-208">Kopiert das Blatt an einen anderen Ort in der Arbeitsmappe.</span><span class="sxs-lookup"><span data-stu-id="fc367-208">Copies the sheet to another location in the workbook.</span></span></summary>
        <remarks><para><span data-ttu-id="fc367-209">Wenn Sie keine oder keines angeben, erstellt Microsoft Excel eine <paramref name="Before" /> <paramref name="After" /> neue Arbeitsmappe, die das kopierte Blatt enthält.</span><span class="sxs-lookup"><span data-stu-id="fc367-209">If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the copied sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-210">Gibt eine Konstante in der <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> Aufzählung zurück, die die Anwendung angibt, in der dieses Objekt erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="fc367-210">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created.</span></span> <span data-ttu-id="fc367-211">Wenn das Objekt in Microsoft Excel erstellt wurde, gibt die Eigenschaft die Zeichenfolge XCEL zurück, die der Hexadezimalzahl 5843454C entspricht.</span><span class="sxs-lookup"><span data-stu-id="fc367-211">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="fc367-212">XlCreatorCode -Wert mit <b>Leseschutz.</b></span><span class="sxs-lookup"><span data-stu-id="fc367-212">Read-only <b>xlCreatorCode</b>.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /></value>
        <remarks><para><span data-ttu-id="fc367-213">Die <b>Creator</b>-Eigenschaft wurde speziell für den Einsatz in Microsoft Excel für den Macintosh geschaffen, wo jede Anwendung einen Urhebercode aus vier Zeichen besitzt.</span><span class="sxs-lookup"><span data-stu-id="fc367-213">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="fc367-214">Der Urhebercode für Microsoft Excel lautet "XCEL".</span><span class="sxs-lookup"><span data-stu-id="fc367-214">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CustomProperties CustomProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CustomProperties CustomProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.CustomProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomProperties As CustomProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CustomProperties ^ CustomProperties { Microsoft::Office::Interop::Excel::CustomProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2030)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2030)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CustomProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-215">Gibt ein Objekt <see cref="T:Microsoft.Office.Interop.Excel.CustomProperties" /> zurück, das die einem Arbeitsblatt zugeordneten Bezeichnerinformationen darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc367-215">Returns a <see cref="T:Microsoft.Office.Interop.Excel.CustomProperties" /> object representing the identifier information associated with a worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fc367-216">Für die <b>CustomProperties</b>-Eigenschaft können Bezeichnerinformationen für ein Arbeitsblatt Metadaten für XML darstellen.</span><span class="sxs-lookup"><span data-stu-id="fc367-216">For the <b>CustomProperties</b> property, identifier information for a worksheet can represent metadata for XML.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc367-217">Löscht das Objekt.</span><span class="sxs-lookup"><span data-stu-id="fc367-217">Deletes the object.</span></span></summary>
        <remarks><para><span data-ttu-id="fc367-218">Wenn Sie eine löschen, zeigt diese Methode ein Dialogfeld an, in dem der <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> Benutzer aufgefordert wird, den Löschvorgang zu bestätigen.</span><span class="sxs-lookup"><span data-stu-id="fc367-218">When you delete a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" />, this method displays a dialog box that prompts the user to confirm the deletion.</span></span> <span data-ttu-id="fc367-219">Dieses Dialogfeld wird standardmäßig angezeigt.</span><span class="sxs-lookup"><span data-stu-id="fc367-219">This dialog box is displayed by default.</span></span> <span data-ttu-id="fc367-220">Die <b>Delete -Methode</b> gibt einen <b>booleschen</b> Wert, der <b>False</b> ist, wenn der Benutzer im Dialogfeld auf Abbrechen geklickt hat, oder <b>True,</b> wenn der Benutzer auf "Löschen" geklickt hat.</span><span class="sxs-lookup"><span data-stu-id="fc367-220">The <b>Delete</b> method returns a <b>Boolean</b> value that is <b>False</b> if the user clicked Cancel on the dialog box or <b>True</b> if the user clicked Delete.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAutomaticPageBreaks">
      <MemberSignature Language="C#" Value="public bool DisplayAutomaticPageBreaks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayAutomaticPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayAutomaticPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayAutomaticPageBreaks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayAutomaticPageBreaks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(643)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(643)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(643)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-221">Für die interne Verwendung reserviert.</span><span class="sxs-lookup"><span data-stu-id="fc367-221">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayPageBreaks">
      <MemberSignature Language="C#" Value="public bool DisplayPageBreaks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayPageBreaks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayPageBreaks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-222"><b>True</b>, wenn Seitenumbrüche (automatische und manuelle) auf dem angegebenen Arbeitsblatt angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="fc367-222"><b>True</b> if page breaks (both automatic and manual) on the specified worksheet are displayed.</span></span> <span data-ttu-id="fc367-223"><b>Boolescher</b> Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="fc367-223">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fc367-224">Diese Eigenschaft kann nur festgelegt werden, wenn ein Drucker installiert ist.</span><span class="sxs-lookup"><span data-stu-id="fc367-224">You can't set this property if you don't have a printer installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public bool DisplayRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.DisplayRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayRightToLeft { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-225"><b>True,</b> Wenn das angegebene Fenster, Arbeitsblatt oder <b>ListObject</b> von rechts nach links anstelle von links nach rechts angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="fc367-225"><b>True</b> if the specified window, worksheet, or <b>ListObject</b> is displayed from right to left instead of from left to right.</span></span> <span data-ttu-id="fc367-226"><b>False</b>, wenn das Objekt von links nach rechts angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="fc367-226"><b>False</b> if the object is displayed from left to right.</span></span> <span data-ttu-id="fc367-227">Schreibgeschützter <b>boolescher</b> Wert.</span><span class="sxs-lookup"><span data-stu-id="fc367-227">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawingObjects">
      <MemberSignature Language="C#" Value="public object DrawingObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DrawingObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.DrawingObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DrawingObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(88)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="fc367-228">Für interne Zwecke vorbehalten. </span><span class="sxs-lookup"><span data-stu-id="fc367-228">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Drawings">
      <MemberSignature Language="C#" Value="public object Drawings (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Drawings([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Drawings(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Drawings (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="fc367-229">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="fc367-229">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDowns">
      <MemberSignature Language="C#" Value="public object DropDowns (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DropDowns([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.DropDowns(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DropDowns (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(836)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="fc367-230">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="fc367-230">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoFilter">
      <MemberSignature Language="C#" Value="public bool EnableAutoFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableAutoFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoFilter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1156)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-231"><b>True</b>, falls AutoFilter-Pfeile aktiviert sind, wenn der Schutz „Nur-Benutzerschnittstelle“ eingeschaltet ist.</span><span class="sxs-lookup"><span data-stu-id="fc367-231"><b>True</b> if AutoFilter arrows are enabled when user-interface-only protection is turned on.</span></span> <span data-ttu-id="fc367-232"><b>Boolescher</b> Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="fc367-232">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fc367-233">Diese Eigenschaft gilt für jedes Arbeitsblatt und wird nicht mit dem Arbeitsblatt oder der Sitzung gespeichert.</span><span class="sxs-lookup"><span data-stu-id="fc367-233">This property applies to each worksheet and isn't saved with the worksheet or session.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCalculation">
      <MemberSignature Language="C#" Value="public bool EnableCalculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableCalculation" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCalculation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCalculation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1424)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1424)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1424)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-234"><b>True</b>, falls Microsoft Excel, wenn notwendig, das Arbeitsblatt automatisch neu berechnet.</span><span class="sxs-lookup"><span data-stu-id="fc367-234"><b>True</b> if Microsoft Excel automatically recalculates the worksheet when necessary.</span></span> <span data-ttu-id="fc367-235"><b>False</b>, falls Excel das Arbeitsblatt nicht neu berechnet.</span><span class="sxs-lookup"><span data-stu-id="fc367-235"><b>False</b> if Excel doesn't recalculate the sheet.</span></span> <span data-ttu-id="fc367-236"><b>Boolean</b> -Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="fc367-236">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fc367-p135">Wenn der Wert der Eigenschaft <b>False</b> lautet, können Sie keine Neuberechnung anfordern. Wenn Sie den Wert von <b>False</b> zu <b>True</b> ändern, berechnet Excel das Arbeitsblatt automatisch neu.</span><span class="sxs-lookup"><span data-stu-id="fc367-p135">When the value of this property is <b>False</b>, you cannot request a recalculation. When you change the value from <b>False</b> to <b>True</b>, Excel recalculates the worksheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableFormatConditionsCalculation">
      <MemberSignature Language="C#" Value="public bool EnableFormatConditionsCalculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableFormatConditionsCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableFormatConditionsCalculation" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableFormatConditionsCalculation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableFormatConditionsCalculation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2511)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2511)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2511)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-239">Gibt zurück oder legt fest, ob bedingte Formate bei Bedarf automatisch auftreten.</span><span class="sxs-lookup"><span data-stu-id="fc367-239">Returns or sets if conditional formats will occur automatically as needed.</span></span> <span data-ttu-id="fc367-240"><b>Boolescher</b> Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="fc367-240">Read/write <b>Boolean</b>.</span></span></summary>
        <value><span data-ttu-id="fc367-241"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="fc367-241"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="fc367-242">Bei <b>"True"</b> (Standard) erfolgt die Auswertung bedingter Formate bei Bedarf automatisch.</span><span class="sxs-lookup"><span data-stu-id="fc367-242">When set to <b>True</b> (default), evaluation of conditional formats will occur automatically as needed.</span></span>  <span data-ttu-id="fc367-243">Bei <b>"False"</b>werden bedingte Formate nicht erneut ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="fc367-243">When set to <b>False</b>, conditional formats will not be re-evaluated.</span></span>  <span data-ttu-id="fc367-244">Alle zuvor angewendeten bedingten Formatierungen sind weiterhin sichtbar, werden jedoch nicht aktualisiert, wenn Zellwerte oder <see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.AppliesTo" /> Bereiche geändert werden.</span><span class="sxs-lookup"><span data-stu-id="fc367-244">Any previously applied conditional formatting will still be visible, but it will not update as cell values or <see cref="P:Microsoft.Office.Interop.Excel.FormatCondition.AppliesTo" /> ranges are changed.</span></span>  </para>
          <para><span data-ttu-id="fc367-245">Mit diesem Kennzeichen können Programmierer eine Regel vollständig konfigurieren, bevor sie ausgewertet wird.</span><span class="sxs-lookup"><span data-stu-id="fc367-245">The purpose of this flag is to allow programmers to configure a rule completely before evaluating it.</span></span>  <span data-ttu-id="fc367-246">Dies ist besonders hilfreich, wenn eine Bedingung auf einen großen Bereich angewendet wird, da in einem solchen Fall die Leistung beeinträchtigt werden kann.</span><span class="sxs-lookup"><span data-stu-id="fc367-246">This is particularly useful when condition is applied over a large range as performance can be slow in these cases.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableOutlining">
      <MemberSignature Language="C#" Value="public bool EnableOutlining { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableOutlining" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableOutlining" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableOutlining As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableOutlining { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1157)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1157)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1157)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-247"><b>True</b>, falls die Gliederungssymbole aktiviert sind, wenn der Schutz "Nur-Benutzerschnittstelle" eingeschaltet ist.</span><span class="sxs-lookup"><span data-stu-id="fc367-247"><b>True</b> if outlining symbols are enabled when user-interface-only protection is turned on.</span></span> <span data-ttu-id="fc367-248"><b>Boolean</b> -Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="fc367-248">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fc367-249">Diese Eigenschaft gilt für jedes Arbeitsblatt und wird nicht mit dem Arbeitsblatt oder der Sitzung gespeichert.</span><span class="sxs-lookup"><span data-stu-id="fc367-249">This property applies to each worksheet and isn't saved with the worksheet or session.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePivotTable">
      <MemberSignature Language="C#" Value="public bool EnablePivotTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePivotTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnablePivotTable" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePivotTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePivotTable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-250"><b>True,</b> Wenn PivotTable-Steuerelemente und -Aktionen aktiviert sind, wenn der Schutz nur der Benutzeroberfläche aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="fc367-250"><b>True</b> if PivotTable controls and actions are enabled when user-interface-only protection is turned on.</span></span> <span data-ttu-id="fc367-251"><b>Boolescher</b> Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="fc367-251">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fc367-252">Diese Eigenschaft gilt für jedes Arbeitsblatt und wird nicht mit dem Arbeitsblatt oder der Sitzung gespeichert.</span><span class="sxs-lookup"><span data-stu-id="fc367-252">This property applies to each worksheet and isn't saved with the worksheet or session.</span></span></para>
          <para><span data-ttu-id="fc367-253">Es muss eine ausreichende Anzahl an ungesperrten Zellen unter und rechts dem PivotTable-Bericht vorliegen, damit Microsoft Excel den PivotTable-Bericht neu berechnen und anzeigen kann.</span><span class="sxs-lookup"><span data-stu-id="fc367-253">There must be a sufficient number of unlocked cells below and to the right of the PivotTable report for Microsoft Excel to recalculate and display the PivotTable report.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSelection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlEnableSelection EnableSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlEnableSelection EnableSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.EnableSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSelection As XlEnableSelection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlEnableSelection EnableSelection { Microsoft::Office::Interop::Excel::XlEnableSelection get(); void set(Microsoft::Office::Interop::Excel::XlEnableSelection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1425)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1425)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1425)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlEnableSelection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-254">Gibt die Elemente zurück, die auf dem Blatt ausgewählt werden können, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="fc367-254">Returns or sets what can be selected on the sheet.</span></span> <span data-ttu-id="fc367-255">Lese-/Schreibzugriff. <see cref="T:Microsoft.Office.Interop.Excel.XlEnableSelection" /></span><span class="sxs-lookup"><span data-stu-id="fc367-255">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlEnableSelection" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fc367-256">Diese Eigenschaft ist nur wirksam, wenn das Arbeitsblatt geschützt ist: <b>xlNoSelection</b>xlNoSelection verhindert jegliche Markierung auf dem Blatt, <b>xlUnlockedCells</b>xlUnlockedCells gestattet nur die Markierung der Zellen, deren <b>Locked</b>-Eigenschaft <b>False</b>False ist, und <b>xlNoRestrictions</b>xlNoRestrictions erlaubt die Markierung einer beliebigen Zelle.</span><span class="sxs-lookup"><span data-stu-id="fc367-256">This property takes effect only when the worksheet is protected: <b>xlNoSelection</b> prevents any selection on the sheet, <b>xlUnlockedCells</b> allows only those cells whose <b>Locked</b> property is <b>False</b> to be selected, and <b>xlNoRestrictions</b> allows any cell to be selected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><span data-ttu-id="fc367-257"><b>String</b> erforderlich.</span><span class="sxs-lookup"><span data-stu-id="fc367-257">Required <b>String</b>.</span></span> <span data-ttu-id="fc367-258">Der Name des Objekts, wobei die für Microsoft Excel gültigen Benennungskonventionen zu berücksichtigen sind.</span><span class="sxs-lookup"><span data-stu-id="fc367-258">The name of the object, using the naming convention of Microsoft Excel.</span></span></param>
        <summary><span data-ttu-id="fc367-259">Diese Methode konvertiert einen Microsoft Excel-Namen in ein Objekt oder in einen Wert.</span><span class="sxs-lookup"><span data-stu-id="fc367-259">Converts a Microsoft Excel name to an object or a value.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="fc367-260">Die folgenden Namenstypen sind in Microsoft Excel im Zusammenhang mit dieser Methode zulässig:</span><span class="sxs-lookup"><span data-stu-id="fc367-260">The following types of names in Microsoft Excel can be used with this method:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="fc367-261">Definierte Namen.</span><span class="sxs-lookup"><span data-stu-id="fc367-261">Defined names.</span></span> <span data-ttu-id="fc367-262">Sie können einen beliebigen Namen angeben.</span><span class="sxs-lookup"><span data-stu-id="fc367-262">You can specify any name.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="fc367-263">Externe Bezüge.</span><span class="sxs-lookup"><span data-stu-id="fc367-263">External references.</span></span> <span data-ttu-id="fc367-264">Mithilfe des Operators "!" lassen sich Bezüge auf Zellen oder Namen in anderen Arbeitsmappen angeben (z.</span><span class="sxs-lookup"><span data-stu-id="fc367-264">You can use the !</span></span> <span data-ttu-id="fc367-265">verwendet, um auf ein Arbeitsblatt zu verweisen, das in einer anderen Arbeitsmappe definiert ist.</span><span class="sxs-lookup"><span data-stu-id="fc367-265">operator to refer to a worksheet defined in another workbook.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, [in]object Filename, [in]object Quality, [in]object IncludeDocProperties, [in]object IgnorePrintAreas, [in]object From, [in]object To, [in]object OpenAfterPublish, [in]object FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (Type As XlFixedFormatType, Optional Filename As Object, Optional Quality As Object, Optional IncludeDocProperties As Object, Optional IgnorePrintAreas As Object, Optional From As Object, Optional To As Object, Optional OpenAfterPublish As Object, Optional FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="fc367-266">Der Typ des Dateiformats, in das exportiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc367-266">The type of file format to export to.</span></span></param>
        <param name="Filename"><span data-ttu-id="fc367-267">Der Dateiname der zu speichernden Datei.</span><span class="sxs-lookup"><span data-stu-id="fc367-267">The file name of the file to be saved.</span></span> <span data-ttu-id="fc367-268">Sie können einen vollständigen Pfad hinzufügen oder short_Excel2007 datei im aktuellen Ordner speichern.</span><span class="sxs-lookup"><span data-stu-id="fc367-268">You can include a full path, or short_Excel2007 saves the file in the current folder.</span></span></param>
        <param name="Quality"><span data-ttu-id="fc367-269">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" /> .</span><span class="sxs-lookup"><span data-stu-id="fc367-269">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />.</span></span> <span data-ttu-id="fc367-270">Gibt die Qualität der veröffentlichten Datei an.</span><span class="sxs-lookup"><span data-stu-id="fc367-270">Specifies the quality of the published file.</span></span></param>
        <param name="IncludeDocProperties"><span data-ttu-id="fc367-271"><b>True</b>, um die Dokumenteigenschaften einzuschließen, andernfalls <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-271"><b>True</b> to include the document properties; otherwise <b>False</b>.</span></span></param>
        <param name="IgnorePrintAreas"><span data-ttu-id="fc367-272"><b>True</b>, um alle festgelegten Druckbereiche beim Veröffentlichen zu ignorieren, andernfalls <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-272"><b>True</b> to ignore any print areas set when publishing; otherwise <b>False</b>.</span></span></param>
        <param name="From"><span data-ttu-id="fc367-273">Die Seitenzahl, bei der die Veröffentlichung begonnen werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc367-273">The number of the page at which to start publishing.</span></span> <span data-ttu-id="fc367-274">Wenn dieses Argument nicht angegeben wird, beginnt die Veröffentlichung am Anfang.</span><span class="sxs-lookup"><span data-stu-id="fc367-274">If this argument is omitted, publishing starts at the beginning.</span></span></param>
        <param name="To"><span data-ttu-id="fc367-275">Die Seitenzahl der letzten Seite, die veröffentlicht werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc367-275">The number of the last page to publish.</span></span> <span data-ttu-id="fc367-276">Wenn Sie dieses Argument nicht angeben, wird bis zur letzten Seite veröffentlicht.</span><span class="sxs-lookup"><span data-stu-id="fc367-276">If this argument is omitted, publishing ends with the last page.</span></span></param>
        <param name="OpenAfterPublish"><span data-ttu-id="fc367-277"><b>True</b>, um die Datei nach dem Veröffentlichen im Viewer anzuzeigen, andernfalls <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-277"><b>True</b> to display the file in the viewer after it is published; otherwise <b>False</b>.</span></span></param>
        <param name="FixedFormatExtClassPtr"><span data-ttu-id="fc367-278">Zeiger auf die <b>FixedFormatExt</b>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="fc367-278">Pointer to the <b>FixedFormatExt</b> class.</span></span></param>
        <summary><span data-ttu-id="fc367-279">Exportiert in eine Datei mit dem angegebenen Format.</span><span class="sxs-lookup"><span data-stu-id="fc367-279">Exports to a file of the specified format.</span></span></summary>
        <remarks><para><span data-ttu-id="fc367-p149">Diese Methode unterstützt außerdem das Initialisieren eines Add-Ins, um eine Datei in eine Datei mit einem festen Format zu exportieren. In Excel wird beispielsweise eine Dateiformatkonvertierung ausgeführt, wenn Konverter vorhanden sind. Die Konvertierung wird normalerweise vom Benutzer initiiert.</span><span class="sxs-lookup"><span data-stu-id="fc367-p149">This method also supports initializing an add-in to export a file to a fixed-format file. For example, Excel will perform file format conversion if the converters are  present. The conversion is usually initiated by the user.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterMode">
      <MemberSignature Language="C#" Value="public bool FilterMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.FilterMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FilterMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-283"><b>True,</b> Wenn sich das Arbeitsblatt im Filtermodus befindet.</span><span class="sxs-lookup"><span data-stu-id="fc367-283"><b>True</b> if the worksheet is in filter mode.</span></span> <span data-ttu-id="fc367-284">Schreibgeschützter <b>boolescher</b> Wert.</span><span class="sxs-lookup"><span data-stu-id="fc367-284">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fc367-285">Diese Eigenschaft ist <b>True,</b> wenn das Arbeitsblatt eine gefilterte Liste enthält, in der ausgeblendete Zeilen vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="fc367-285">This property is <b>True</b> if the worksheet contains a filtered list in which there are hidden rows.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBoxes">
      <MemberSignature Language="C#" Value="public object GroupBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.GroupBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(834)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="fc367-286">Für interne Zwecke vorbehalten. </span><span class="sxs-lookup"><span data-stu-id="fc367-286">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupObjects">
      <MemberSignature Language="C#" Value="public object GroupObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GroupObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.GroupObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1113)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="fc367-287">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="fc367-287">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.HPageBreaks HPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.HPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HPageBreaks As HPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::HPageBreaks ^ HPageBreaks { Microsoft::Office::Interop::Excel::HPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1418)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.HPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-288">Gibt eine <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> Auflistung zurück, die die horizontalen Seitenumbrüche auf dem Blatt darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc367-288">Returns an <see cref="T:Microsoft.Office.Interop.Excel.HPageBreaks" /> collection that represents the horizontal page breaks on the sheet.</span></span> <span data-ttu-id="fc367-289">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fc367-289">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fc367-290">Die horizontalen Seitenumbrüche sind pro Arbeitsblatt auf 1,026 begrenzt.</span><span class="sxs-lookup"><span data-stu-id="fc367-290">There is a limit of 1,026 horizontal page breaks per sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Hyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hyperlinks As Hyperlinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Hyperlinks ^ Hyperlinks { Microsoft::Office::Interop::Excel::Hyperlinks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-291">Gibt eine <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> Auflistung zurück, die die Hyperlinks für den Bereich oder das Arbeitsblatt darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc367-291">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range or worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-292">Gibt die Indexnummer des Objekts in einer Auflistung ähnlicher Objekte zurück.</span><span class="sxs-lookup"><span data-stu-id="fc367-292">Returns the index number of the object within the collection of similar objects.</span></span> <span data-ttu-id="fc367-293">Schreibgeschützte <b>ganze Zahl</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-293">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Labels">
      <MemberSignature Language="C#" Value="public object Labels (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Labels([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Labels(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Labels (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(841)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="fc367-294">Für interne Zwecke vorbehalten. </span><span class="sxs-lookup"><span data-stu-id="fc367-294">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public object Lines (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Lines([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Lines(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Lines (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(767)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="fc367-295">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="fc367-295">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListBoxes">
      <MemberSignature Language="C#" Value="public object ListBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ListBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ListBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ListBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(832)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="fc367-296">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="fc367-296">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObjects ListObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObjects ListObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ListObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListObjects As ListObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ListObjects ^ ListObjects { Microsoft::Office::Interop::Excel::ListObjects ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2259)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2259)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-297">Gibt eine Auflistung von <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> Objekten im Arbeitsblatt zurück.</span><span class="sxs-lookup"><span data-stu-id="fc367-297">Returns a collection of <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> objects in the worksheet.</span></span> <span data-ttu-id="fc367-298">Schreibgeschützte <b>ListObjects</b> -Auflistung.</span><span class="sxs-lookup"><span data-stu-id="fc367-298">Read-only <b>ListObjects</b> collection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailEnvelope">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoEnvelope MailEnvelope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.MsoEnvelope MailEnvelope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.MailEnvelope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailEnvelope As MsoEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoEnvelope ^ MailEnvelope { Microsoft::Office::Core::MsoEnvelope ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2021)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2021)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoEnvelope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-299">Stellt eine E-Mail-Kopfzeile für ein Dokument dar.</span><span class="sxs-lookup"><span data-stu-id="fc367-299">Represents an e-mail header for a document.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (object Before, object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move([in]object Before, [in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Move(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (Optional Before As Object, Optional After As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(637)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Before"><span data-ttu-id="fc367-300">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-300">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-301">Das Blatt, vor dem das verschobene Blatt eingefügt wird.</span><span class="sxs-lookup"><span data-stu-id="fc367-301">The sheet before which the moved sheet will be placed.</span></span> <span data-ttu-id="fc367-302">Sie können nicht <paramref name="Before" /> angeben, ob Sie . <paramref name="After" /></span><span class="sxs-lookup"><span data-stu-id="fc367-302">You cannot specify <paramref name="Before" /> if you specify <paramref name="After" />.</span></span></param>
        <param name="After"><span data-ttu-id="fc367-303">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-303">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-304">Das Blatt, hinter dem das verschobene Blatt eingefügt wird.</span><span class="sxs-lookup"><span data-stu-id="fc367-304">The sheet after which the moved sheet will be placed.</span></span> <span data-ttu-id="fc367-305">Sie können nicht <paramref name="After" /> angeben, ob Sie . <paramref name="Before" /></span><span class="sxs-lookup"><span data-stu-id="fc367-305">You cannot specify <paramref name="After" /> if you specify <paramref name="Before" />.</span></span></param>
        <summary><span data-ttu-id="fc367-306">Verschiebt das Blatt an eine andere Position in der Arbeitsmappe</span><span class="sxs-lookup"><span data-stu-id="fc367-306">Moves the sheet to another location in the workbook</span></span></summary>
        <remarks><para><span data-ttu-id="fc367-307">Wenn Sie keine oder keines angeben, erstellt Microsoft Excel eine <paramref name="Before" /> <paramref name="After" /> neue Arbeitsmappe, die das verschobene Blatt enthält.</span><span class="sxs-lookup"><span data-stu-id="fc367-307">If you don't specify either <paramref name="Before" /> or <paramref name="After" />, Microsoft Excel creates a new workbook that contains the moved sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-308">Gibt den Namen des Objekts zurück oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="fc367-308">Returns or sets the name of the object.</span></span> <span data-ttu-id="fc367-309"><b>String</b> -Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="fc367-309">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Names Names { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Names Names" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Names" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Names As Names" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Names ^ Names { Microsoft::Office::Interop::Excel::Names ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Names</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-310">Gibt eine <see cref="T:Microsoft.Office.Interop.Excel.Names" /> Auflistung zurück, die alle arbeitsblattspezifischen Namen (mit "WorksheetName!" definierte Namen) darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc367-310">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the worksheet-specific names (names defined with the "WorksheetName!"</span></span> <span data-ttu-id="fc367-311">präfix).</span><span class="sxs-lookup"><span data-stu-id="fc367-311">prefix).</span></span> <span data-ttu-id="fc367-312">Schreibgeschütztes <b>Names</b> -Objekt.</span><span class="sxs-lookup"><span data-stu-id="fc367-312">Read-only <b>Names</b> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public object Next { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Next" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Next" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Next As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Next { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-313">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> , <see cref="T:Microsoft.Office.Interop.Excel.Range" /> oder <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> -Objekt, das das nächste Blatt oder die nächste Zelle darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc367-313">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" />, <see cref="T:Microsoft.Office.Interop.Excel.Range" />, or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the next sheet or cell.</span></span> <span data-ttu-id="fc367-314">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fc367-314">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fc367-315">Wenn das Objekt einen Bereich darstellt, emuliert diese Eigenschaft die TAB-TASTE. Allerdings gibt die Eigenschaft die nächste Zelle zurück, ohne sie zu markieren.</span><span class="sxs-lookup"><span data-stu-id="fc367-315">If the object is a range, this property emulates the TAB key, although the property returns the next cell without selecting it.</span></span></para>
          <para><span data-ttu-id="fc367-p159">In einem geschützten Blatt gibt diese Eigenschaft die nächste nicht gesperrte Zelle zurück. In einem ungeschützten Blatt wird immer die Zelle unmittelbar rechts von der angegebenen Zelle zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="fc367-p159">On a protected sheet, this property returns the next unlocked cell. On an unprotected sheet, this property always returns the cell immediately to the right of the specified cell.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEObjects">
      <MemberSignature Language="C#" Value="public object OLEObjects (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OLEObjects([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.OLEObjects(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OLEObjects (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(799)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="fc367-318">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-318">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-319">Der Name oder die Nummer des OLE-Objekts.</span><span class="sxs-lookup"><span data-stu-id="fc367-319">The name or number of the OLE object.</span></span></param>
        <summary><span data-ttu-id="fc367-320">Gibt ein Objekt zurück, das ein einzelnes OLE-Objekt (ein ) oder eine Auflistung aller OLE-Objekte (eine Auflistung) im Diagramm oder <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" /> <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> Blatt darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc367-320">Returns an object that represents either a single OLE object (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObject" />) or a collection of all OLE objects (an <see cref="T:Microsoft.Office.Interop.Excel.OLEObjects" /> collection) on the chart or sheet.</span></span> <span data-ttu-id="fc367-321">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fc367-321">Read-only.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCalculate">
      <MemberSignature Language="C#" Value="public string OnCalculate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnCalculate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnCalculate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnCalculate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnCalculate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-322">Für interne Zwecke vorbehalten. </span><span class="sxs-lookup"><span data-stu-id="fc367-322">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnData">
      <MemberSignature Language="C#" Value="public string OnData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnData" />
      <MemberSignature Language="VB.NET" Value="Public Property OnData As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnData { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-323">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="fc367-323">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="public string OnDoubleClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnDoubleClick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Property OnDoubleClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnDoubleClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-324">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="fc367-324">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntry">
      <MemberSignature Language="C#" Value="public string OnEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property OnEntry As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnEntry { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-325">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="fc367-325">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-326">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="fc367-326">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-327">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="fc367-327">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OptionButtons">
      <MemberSignature Language="C#" Value="public object OptionButtons (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object OptionButtons([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.OptionButtons(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OptionButtons (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(826)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="fc367-328">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="fc367-328">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Outline">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Outline Outline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Outline Outline" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Outline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Outline As Outline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Outline ^ Outline { Microsoft::Office::Interop::Excel::Outline ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Outline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-329">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Outline" /> Objekt zurück, das die Gliederung für das angegebene Arbeitsblatt darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc367-329">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Outline" /> object that represents the outline for the specified worksheet.</span></span> <span data-ttu-id="fc367-330">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fc367-330">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ovals">
      <MemberSignature Language="C#" Value="public object Ovals (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Ovals([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Ovals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ovals (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(801)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="fc367-331">Für die interne Verwendung reserviert.</span><span class="sxs-lookup"><span data-stu-id="fc367-331">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSetup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PageSetup PageSetup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PageSetup PageSetup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.PageSetup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageSetup As PageSetup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PageSetup ^ PageSetup { Microsoft::Office::Interop::Excel::PageSetup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PageSetup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-332">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> Objekt zurück, das alle Seiteneinrichtungseinstellungen für das angegebene Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="fc367-332">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PageSetup" /> object that contains all the page setup settings for the specified object.</span></span> <span data-ttu-id="fc367-333">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fc367-333">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-334">Gibt das übergeordnete Objekt für das angegebene Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="fc367-334">Returns the parent object for the specified object.</span></span> <span data-ttu-id="fc367-335">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fc367-335">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (object Destination, object Link);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Paste([in]object Destination, [in]object Link) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Paste(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste (Optional Destination As Object, Optional Link As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(211)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination"><span data-ttu-id="fc367-336">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-336">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-337">Ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, das angibt, wo der Inhalt der Zwischenablage eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc367-337">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that specifies where the Clipboard contents should be pasted.</span></span> <span data-ttu-id="fc367-338">Ohne Angabe dieses Arguments wird die aktuelle Auswahl verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc367-338">If this argument is omitted, the current selection is used.</span></span> <span data-ttu-id="fc367-339">Dieses Argument kann nur angegeben werden, wenn der Inhalt der Zwischenablage in einem Bereich eingefügt werden kann.</span><span class="sxs-lookup"><span data-stu-id="fc367-339">This argument can be specified only if the contents of the Clipboard can be pasted into a range.</span></span> <span data-ttu-id="fc367-340">Wenn dieses Argument angegeben wird, kann das <paramref name="Link" /> Argument nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="fc367-340">If this argument is specified, the <paramref name="Link" /> argument cannot be used.</span></span></param>
        <param name="Link"><span data-ttu-id="fc367-341">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-341">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-342"><b>True</b>, wenn eine Verknüpfung zur Quelle der eingefügten Daten hergestellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc367-342"><b>True</b> to establish a link to the source of the pasted data.</span></span> <span data-ttu-id="fc367-343">Wenn dieses Argument angegeben wird, kann das <paramref name="Destination" /> Argument nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="fc367-343">If this argument is specified, the <paramref name="Destination" /> argument cannot be used.</span></span> <span data-ttu-id="fc367-344">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-344">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="fc367-345">Fügt den Inhalt der Zwischenablage auf dem Blatt ein.</span><span class="sxs-lookup"><span data-stu-id="fc367-345">Pastes the contents of the Clipboard onto the sheet.</span></span></summary>
        <remarks><para><span data-ttu-id="fc367-346">Wenn Sie das Argument nicht angeben, müssen Sie den Zielbereich auswählen, <paramref name="Destination" /> bevor Sie diese Methode verwenden.</span><span class="sxs-lookup"><span data-stu-id="fc367-346">If you don’t specify the <paramref name="Destination" /> argument, you must select the destination range before you use this method.</span></span></para>
          <para><span data-ttu-id="fc367-347">Diese Methode ändert gegebenenfalls in Abhängigkeit vom Inhalt der Zwischenablage die Markierung des Blatts.</span><span class="sxs-lookup"><span data-stu-id="fc367-347">This method may modify the sheet selection, depending on the contents of the Clipboard.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteSpecial">
      <MemberSignature Language="C#" Value="public void PasteSpecial (object Format, object Link, object DisplayAsIcon, object IconFileName, object IconIndex, object IconLabel, object NoHTMLFormatting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PasteSpecial([in]object Format, [in]object Link, [in]object DisplayAsIcon, [in]object IconFileName, [in]object IconIndex, [in]object IconLabel, [in]object NoHTMLFormatting) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PasteSpecial(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PasteSpecial (Optional Format As Object, Optional Link As Object, Optional DisplayAsIcon As Object, Optional IconFileName As Object, Optional IconIndex As Object, Optional IconLabel As Object, Optional NoHTMLFormatting As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1928)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Link" Type="System.Object" />
        <Parameter Name="DisplayAsIcon" Type="System.Object" />
        <Parameter Name="IconFileName" Type="System.Object" />
        <Parameter Name="IconIndex" Type="System.Object" />
        <Parameter Name="IconLabel" Type="System.Object" />
        <Parameter Name="NoHTMLFormatting" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Format"><span data-ttu-id="fc367-348">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-348">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-349">Eine Zeichenfolge, die das Zwischenablageformat für die Daten angibt.</span><span class="sxs-lookup"><span data-stu-id="fc367-349">A string that specifies the Clipboard format of the data.</span></span></param>
        <param name="Link"><span data-ttu-id="fc367-350">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-350">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-351"><b>True</b>, wenn eine Verknüpfung zur Quelle der eingefügten Daten hergestellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc367-351"><b>True</b> to establish a link to the source of the pasted data.</span></span> <span data-ttu-id="fc367-352">Wenn die Quelldaten nicht zum Verknüpfen geeignet sind oder die Quellanwendung die Verknüpfung nicht unterstützt, wird dieser Parameter ignoriert.</span><span class="sxs-lookup"><span data-stu-id="fc367-352">If the source data isn’t suitable for linking or the source application doesn't support linking, this parameter is ignored.</span></span> <span data-ttu-id="fc367-353">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-353">The default value is <b>False</b>.</span></span></param>
        <param name="DisplayAsIcon"><span data-ttu-id="fc367-354">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-354">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-355"><b>True</b> , um die ein- und ausf?ierten Daten als Symbol zu sehen.</span><span class="sxs-lookup"><span data-stu-id="fc367-355"><b>True</b> to display the pasted data as an icon.</span></span> <span data-ttu-id="fc367-356">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-356">The default value is <b>False</b>.</span></span></param>
        <param name="IconFileName"><span data-ttu-id="fc367-357">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-357">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-358">Der Name der Datei, die das zu verwendende Symbol enthält, wenn <paramref name="DisplayAsIcon" /> <b>"True" ist.</b></span><span class="sxs-lookup"><span data-stu-id="fc367-358">The name of the file that contains the icon to use if <paramref name="DisplayAsIcon" /> is <b>True</b>.</span></span></param>
        <param name="IconIndex"><span data-ttu-id="fc367-359">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-359">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-360">Die Indexnummer des Symbols in der Symboldatei.</span><span class="sxs-lookup"><span data-stu-id="fc367-360">The index number of the icon within the icon file.</span></span></param>
        <param name="IconLabel"><span data-ttu-id="fc367-361">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-361">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-362">Die Beschriftung für das Symbol.</span><span class="sxs-lookup"><span data-stu-id="fc367-362">The text label of the icon.</span></span></param>
        <param name="NoHTMLFormatting"><span data-ttu-id="fc367-363">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-363">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-364"><b>True</b>, um alle Formatierungen, Links und Bilder aus HTML zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="fc367-364"><b>True</b> to remove all formatting, hyperlinks, and images from HTML.</span></span> <span data-ttu-id="fc367-365"><b>Falsch</b>, um HTML unverändert einzufügen.</span><span class="sxs-lookup"><span data-stu-id="fc367-365"><b>False</b> to paste HTML as is.</span></span> <span data-ttu-id="fc367-366">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-366">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="fc367-367">Fügt den Inhalt der Zwischenablage in einem angegebenen Format in das Blatt ein.</span><span class="sxs-lookup"><span data-stu-id="fc367-367">Pastes the contents of the Clipboard onto the sheet using a specified format.</span></span> <span data-ttu-id="fc367-368">Verwenden Sie diese Methode zum Einfügen von Daten aus anderen Anwendungen oder Daten in einem bestimmten Format.</span><span class="sxs-lookup"><span data-stu-id="fc367-368">Use this method to paste data from other applications or to paste data in a specific format.</span></span></summary>
        <remarks><para><span data-ttu-id="fc367-369">
            <paramref name="NoHTMLFormatting" /> ist nur wichtig, <paramref name="Format" /> wenn = "HTML" ist.</span><span class="sxs-lookup"><span data-stu-id="fc367-369">
            <paramref name="NoHTMLFormatting" /> will only matter when <paramref name="Format" /> = “HTML”.</span></span> <span data-ttu-id="fc367-370">In allen anderen Fällen <paramref name="NoHTMLFormatting" /> wird dies ignoriert.</span><span class="sxs-lookup"><span data-stu-id="fc367-370">In all other cases, <paramref name="NoHTMLFormatting" /> will be ignored.</span></span></para>
          <para><span data-ttu-id="fc367-371">Sie müssen den Zielbereich markieren, bevor Sie diese Methode verwenden.</span><span class="sxs-lookup"><span data-stu-id="fc367-371">You must select the destination range before you use this method.</span></span></para>
          <para><span data-ttu-id="fc367-372">Diese Methode ändert gegebenenfalls in Abhängigkeit vom Inhalt der Zwischenablage die Markierung des Blatts.</span><span class="sxs-lookup"><span data-stu-id="fc367-372">This method may modify the sheet selection, depending on the contents of the Clipboard.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Pictures">
      <MemberSignature Language="C#" Value="public object Pictures (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Pictures([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Pictures(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pictures (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(771)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="fc367-373">Für die interne Verwendung reserviert.</span><span class="sxs-lookup"><span data-stu-id="fc367-373">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTables">
      <MemberSignature Language="C#" Value="public object PivotTables (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PivotTables([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PivotTables(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotTables (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(690)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="fc367-374">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-374">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-375">Der Name oder die Nummer des Berichts.</span><span class="sxs-lookup"><span data-stu-id="fc367-375">The name or number of the report.</span></span></param>
        <summary><span data-ttu-id="fc367-376">Gibt ein Objekt zurück, das einen einzelnen PivotTable-Bericht (ein Objekt) oder eine Auflistung aller <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> PivotTable-Berichte (ein Objekt) in einem <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> Arbeitsblatt darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc367-376">Returns an object that represents either a single PivotTable report (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object) or a collection of all the PivotTable reports (a <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> object) on a worksheet.</span></span> <span data-ttu-id="fc367-377">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fc367-377">Read-only.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableWizard">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotTable PivotTableWizard (object SourceType, object SourceData, object TableDestination, object TableName, object RowGrand, object ColumnGrand, object SaveData, object HasAutoFormat, object AutoPage, object Reserved, object BackgroundQuery, object OptimizeCache, object PageFieldOrder, object PageFieldWrapCount, object ReadData, object Connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.PivotTable PivotTableWizard([in]object SourceType, [in]object SourceData, [in]object TableDestination, [in]object TableName, [in]object RowGrand, [in]object ColumnGrand, [in]object SaveData, [in]object HasAutoFormat, [in]object AutoPage, [in]object Reserved, [in]object BackgroundQuery, [in]object OptimizeCache, [in]object PageFieldOrder, [in]object PageFieldWrapCount, [in]object ReadData, [in]object Connection) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotTableWizard (Optional SourceType As Object, Optional SourceData As Object, Optional TableDestination As Object, Optional TableName As Object, Optional RowGrand As Object, Optional ColumnGrand As Object, Optional SaveData As Object, Optional HasAutoFormat As Object, Optional AutoPage As Object, Optional Reserved As Object, Optional BackgroundQuery As Object, Optional OptimizeCache As Object, Optional PageFieldOrder As Object, Optional PageFieldWrapCount As Object, Optional ReadData As Object, Optional Connection As Object) As PivotTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(684)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceType" Type="System.Object" />
        <Parameter Name="SourceData" Type="System.Object" />
        <Parameter Name="TableDestination" Type="System.Object" />
        <Parameter Name="TableName" Type="System.Object" />
        <Parameter Name="RowGrand" Type="System.Object" />
        <Parameter Name="ColumnGrand" Type="System.Object" />
        <Parameter Name="SaveData" Type="System.Object" />
        <Parameter Name="HasAutoFormat" Type="System.Object" />
        <Parameter Name="AutoPage" Type="System.Object" />
        <Parameter Name="Reserved" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="OptimizeCache" Type="System.Object" />
        <Parameter Name="PageFieldOrder" Type="System.Object" />
        <Parameter Name="PageFieldWrapCount" Type="System.Object" />
        <Parameter Name="ReadData" Type="System.Object" />
        <Parameter Name="Connection" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SourceType"><span data-ttu-id="fc367-378">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-378">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-379">Die Quelle der Berichtsdaten.</span><span class="sxs-lookup"><span data-stu-id="fc367-379">The source of the report data.</span></span> <span data-ttu-id="fc367-380">Dies kann eine der <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType" /> .constants sein.</span><span class="sxs-lookup"><span data-stu-id="fc367-380">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType" />.constants.</span></span></param>
        <param name="SourceData"><span data-ttu-id="fc367-381">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-381">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-382">Die Daten für den neuen Bericht.</span><span class="sxs-lookup"><span data-stu-id="fc367-382">The data for the new report.</span></span> <span data-ttu-id="fc367-383">Dies kann ein Objekt, ein Array von Bereichen oder eine Textkonstante sein, die <see cref="T:Microsoft.Office.Interop.Excel.Range" /> den Namen eines anderen Berichts darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc367-383">Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object, an array of ranges, or a text constant that represents the name of another report.</span></span> <span data-ttu-id="fc367-384">Bei einer externen Datenbank handelt es sich um ein Array von Zeichenfolgen mit SQL Abfragezeichenfolge, wobei jedes Element bis zu <paramref name="SourceData" /> 255 Zeichen lang ist.</span><span class="sxs-lookup"><span data-stu-id="fc367-384">For an external database, <paramref name="SourceData" /> is an array of strings containing the SQL query string, where each element is up to 255 characters in length.</span></span> <span data-ttu-id="fc367-385">Sie sollten das Argument <paramref name="Connection" /> verwenden, um die OdBC-Verbindungszeichenfolge anzugeben.</span><span class="sxs-lookup"><span data-stu-id="fc367-385">You should use the <paramref name="Connection" /> argument to specify the ODBC connection string.</span></span> <span data-ttu-id="fc367-386">Aus Kompatibilitätsgründen mit früheren Versionen von Excel kann dies ein Array <paramref name="SourceData" /> mit zwei Elementen sein.</span><span class="sxs-lookup"><span data-stu-id="fc367-386">For compatibility with earlier versions of Excel, <paramref name="SourceData" /> can be a two-element array.</span></span> <span data-ttu-id="fc367-387">Das erste Element ist die Verbindungszeichenfolge zur Angabe der ODBC-Quelle der Daten.</span><span class="sxs-lookup"><span data-stu-id="fc367-387">The first element is the connection string specifying the ODBC source for the data.</span></span> <span data-ttu-id="fc367-388">Das zweite Element ist die SQL-Abfragezeichenfolge, die zum Abrufen der Daten verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="fc367-388">The second element is the SQL query string used to get the data.</span></span> <span data-ttu-id="fc367-389">Wenn Sie <paramref name="SourceData" /> angeben, müssen Sie auch <paramref name="SourceType" /> angeben.</span><span class="sxs-lookup"><span data-stu-id="fc367-389">If you specify <paramref name="SourceData" />, you must also specify <paramref name="SourceType" />.</span></span> <span data-ttu-id="fc367-390">Wenn sich die aktive Zelle innerhalb des Bereichs <paramref name="SourceData" /> befindet, müssen Sie <paramref name="TableDestination" /> auch angeben.</span><span class="sxs-lookup"><span data-stu-id="fc367-390">If the active cell is inside the <paramref name="SourceData" /> range, you must specify <paramref name="TableDestination" /> as well.</span></span></param>
        <param name="TableDestination"><span data-ttu-id="fc367-391">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-391">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-392">Ein <b>Range</b>-Objekt, das die Position angibt, an der der Bericht auf dem Arbeitsblatt platziert werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc367-392">A <b>Range</b> object specifying where the report should be placed on the worksheet.</span></span> <span data-ttu-id="fc367-393">Wenn Sie dieses Argument nicht angeben, wird der Bericht an der Stelle der aktiven Zelle platziert.</span><span class="sxs-lookup"><span data-stu-id="fc367-393">If this argument is omitted, the report is placed at the active cell.</span></span></param>
        <param name="TableName"><span data-ttu-id="fc367-394">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-394">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-395">Eine Zeichenfolge, die den Namen des neuen Berichts angibt.</span><span class="sxs-lookup"><span data-stu-id="fc367-395">A string that specifies the name of the new report.</span></span></param>
        <param name="RowGrand"><span data-ttu-id="fc367-396">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-396">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-397"><b>True</b>, wenn der Bericht Gesamtergebnisse für Zeilen enthalten soll.</span><span class="sxs-lookup"><span data-stu-id="fc367-397"><b>True</b> to show grand totals for rows in the report.</span></span></param>
        <param name="ColumnGrand"><span data-ttu-id="fc367-398">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-398">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-399"><b>True</b>, wenn der Bericht Gesamtergebnisse für Spalten enthalten soll.</span><span class="sxs-lookup"><span data-stu-id="fc367-399"><b>True</b> to show grand totals for columns in the report.</span></span></param>
        <param name="SaveData"><span data-ttu-id="fc367-400">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-400">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-401"><b>True</b>, wenn die Daten zusammen mit dem Bericht gespeichert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="fc367-401"><b>True</b> to save data with the report.</span></span> <span data-ttu-id="fc367-402"><b>False</b>, wenn nur die Definition des Berichts gespeichert werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc367-402"><b>False</b> to save only the report definition.</span></span></param>
        <param name="HasAutoFormat"><span data-ttu-id="fc367-403">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-403">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-404"><b>True</b>, wenn der Bericht nach einer Aktualisierung oder nach dem Verschieben von Feldern in Microsoft Excel automatisch formatiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc367-404"><b>True</b> to have Microsoft Excel automatically format the report when it’s refreshed or when fields are moved.</span></span></param>
        <param name="AutoPage"><span data-ttu-id="fc367-405">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-405">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-406">Nur gültig, <paramref name="SourceType" /> wenn <b>xlConsolidation ist.</b></span><span class="sxs-lookup"><span data-stu-id="fc367-406">Valid only if <paramref name="SourceType" /> is <b>xlConsolidation</b>.</span></span> <span data-ttu-id="fc367-407"><b>True</b>, wenn von Microsoft Excel für die Konsolidierung ein Seitenfeld erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="fc367-407"><b>True</b> to have Microsoft Excel create a page field for the consolidation.</span></span> <span data-ttu-id="fc367-408">Wenn <paramref name="AutoPage" /> <b>"False"</b>ist, müssen Sie das Seitenfeld oder die Felder erstellen.</span><span class="sxs-lookup"><span data-stu-id="fc367-408">If <paramref name="AutoPage" /> is <b>False</b>, you must create the page field or fields.</span></span></param>
        <param name="Reserved"><span data-ttu-id="fc367-409">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-409">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-410">Von Microsoft Excel nicht verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc367-410">Not used by Microsoft Excel.</span></span></param>
        <param name="BackgroundQuery"><span data-ttu-id="fc367-411">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-411">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-412"><b>True</b>, wenn Abfragen für den Bericht in Excel asynchron (im Hintergrund) ausgeführt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="fc367-412"><b>True</b> to have Excel perform queries for the report asynchronously (in the background).</span></span> <span data-ttu-id="fc367-413">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-413">The default value is <b>False</b>.</span></span></param>
        <param name="OptimizeCache"><span data-ttu-id="fc367-414">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-414">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-415"><b>True</b>, wenn der PivotTable-Cache beim Erstellen optimiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc367-415"><b>True</b> to optimize the PivotTable cache when it's constructed.</span></span> <span data-ttu-id="fc367-416">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-416">The default value is <b>False</b>.</span></span></param>
        <param name="PageFieldOrder"><span data-ttu-id="fc367-417">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-417">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-418">Die Reihenfolge, in der Seitenfelder dem Layout des PivotTable-Berichts hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="fc367-418">The order in which page fields are added to the PivotTable report’s layout.</span></span> <span data-ttu-id="fc367-419">Dabei kann es sich um eine der folgenden <b>XlOrder</b>-Konstanten handeln: <b>xlDownThenOver</b> oder <b>xlOverThenDown</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-419">Can be one of the following <b>XlOrder</b> constants: <b>xlDownThenOver</b> or <b>xlOverThenDown</b>.</span></span> <span data-ttu-id="fc367-420">Der Standardwert lautet <b>xlDownThenOver</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-420">The default value is <b>xlDownThenOver</b>.</span></span></param>
        <param name="PageFieldWrapCount"><span data-ttu-id="fc367-421">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-421">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-422">Die Anzahl von Seitenfeldern in jeder Spalte oder Zeile des PivotTable-Berichts.</span><span class="sxs-lookup"><span data-stu-id="fc367-422">The number of page fields in each column or row in the PivotTable report.</span></span> <span data-ttu-id="fc367-423">Der Standardwert ist 0 (Null).</span><span class="sxs-lookup"><span data-stu-id="fc367-423">The default value is 0 (zero).</span></span></param>
        <param name="ReadData"><span data-ttu-id="fc367-424">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-424">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-425">Mit <b>True</b> wird ein PivotTable-Cache erstellt, der alle Datensätze aus einer externen Datenbank enthält; dieser Cache kann sehr groß sein.</span><span class="sxs-lookup"><span data-stu-id="fc367-425"><b>True</b> to create a PivotTable cache that contains all records from the external database; this cache can be very large.</span></span> <span data-ttu-id="fc367-426">Wenn <paramref name="ReadData" /> <b>"False"</b>festgelegt ist, können Sie einige der Felder als serverbasierte Seitenfelder festlegen, bevor die Daten tatsächlich gelesen werden.</span><span class="sxs-lookup"><span data-stu-id="fc367-426">If <paramref name="ReadData" /> is <b>False</b>, you can set some of the fields as server-based page fields before the data is actually read.</span></span></param>
        <param name="Connection"><span data-ttu-id="fc367-427">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-427">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-428">Eine Zeichenfolge mit ODBC-Einstellungen, die eine Verbindung von Excel zu einer ODBC-Datenquelle ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="fc367-428">A string that contains ODBC settings that allow Excel to connect to an ODBC data source.</span></span> <span data-ttu-id="fc367-429">Die Verbindungszeichenfolge hat das Format "ODBC; &lt; Verbindungszeichenfolge &gt; ".</span><span class="sxs-lookup"><span data-stu-id="fc367-429">The connection string has the form "ODBC;&lt;connection string&gt;".</span></span> <span data-ttu-id="fc367-430">Dieses Argument überschreibt alle vorherigen Einstellungen für <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> die Eigenschaft des <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection" /> Objekts.</span><span class="sxs-lookup"><span data-stu-id="fc367-430">This argument overrides any previous setting for the <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> object’s <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection" /> property.</span></span></param>
        <summary><span data-ttu-id="fc367-431">Erstellt ein <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> Objekt.</span><span class="sxs-lookup"><span data-stu-id="fc367-431">Creates a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object.</span></span> <span data-ttu-id="fc367-432">Bei dieser Methode wird der PivotTable-Assistent nicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="fc367-432">This method doesn’t display the PivotTable Wizard.</span></span> <span data-ttu-id="fc367-433">Diese Methode steht für OLE DB-Datenquellen nicht zur Verfügung.</span><span class="sxs-lookup"><span data-stu-id="fc367-433">This method isn’t available for OLE DB data sources.</span></span> <span data-ttu-id="fc367-434">Verwenden Sie die Methode, um einen PivotTable-Cache hinzuzufügen, und erstellen Sie dann basierend auf dem Cache einen <see cref="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" /> PivotTable-Bericht.</span><span class="sxs-lookup"><span data-stu-id="fc367-434">Use the <see cref="M:Microsoft.Office.Interop.Excel.Worksheets.Add(System.Object,System.Object,System.Object,System.Object)" /> method to add a PivotTable cache, and then create a PivotTable report based on the cache.</span></span> <span data-ttu-id="fc367-435"><b>PivotTable-Objekt.</b></span><span class="sxs-lookup"><span data-stu-id="fc367-435"><b>PivotTable</b> object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public object Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Previous" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Previous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Previous As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Previous { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-436">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> , <see cref="T:Microsoft.Office.Interop.Excel.Range" /> oder <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> -Objekt, das das vorherige Blatt oder die vorherige Zelle darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc367-436">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" />, <see cref="T:Microsoft.Office.Interop.Excel.Range" />, or <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the previous sheet or cell.</span></span> <span data-ttu-id="fc367-437">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fc367-437">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fc367-438">Ist das Objekt ein Bereich, so emuliert diese Eigenschaft die Tastenkombination UMSCHALT+TAB. Im Gegensatz zur Tastenkombination wird jedoch die vorhergehende Zelle zurückgegeben, ohne sie zu markieren.</span><span class="sxs-lookup"><span data-stu-id="fc367-438">If the object is a range, this property emulates pressing SHIFT+TAB; unlike the key combination, however, the property returns the previous cell without selecting it.</span></span></para>
          <para><span data-ttu-id="fc367-p196">In einem geschützten Blatt gibt diese Eigenschaft die vorhergehende nicht gesperrte Zelle zurück. In einem ungeschützten Blatt wird immer die Zelle links von der angegebenen Zelle zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="fc367-p196">On a protected sheet, this property returns the previous unlocked cell. On an unprotected sheet, this property always returns the cell immediately to the left of the specified cell.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintedCommentPages">
      <MemberSignature Language="C#" Value="public int PrintedCommentPages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PrintedCommentPages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.PrintedCommentPages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintedCommentPages As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PrintedCommentPages { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2857)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2857)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-441">Ruft die Anzahl der Kommentarseiten ab, die für das aktuelle Arbeitsblatt gedruckt werden.</span><span class="sxs-lookup"><span data-stu-id="fc367-441">Gets the number of comment pages that will be printed for the current worksheet.</span></span></summary>
        <value><span data-ttu-id="fc367-442">Die Anzahl der Kommentarseiten, die für das aktuelle Arbeitsblatt gedruckt werden.</span><span class="sxs-lookup"><span data-stu-id="fc367-442">The number of comment pages that will be printed for the current worksheet.</span></span></value>
        <remarks><para><span data-ttu-id="fc367-443">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fc367-443">Read-only.</span></span></para>
          <para><span data-ttu-id="fc367-444">Die Eigenschaft gibt nur dann eine Zahl größer 0 zurück, wenn die Einstellung "Kommentare" auf der Registerkarte "Blatt" des Dialogfelds "Seite einrichten" auf "Am Ende <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.PrintedCommentPages" /> des Blatts" festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="fc367-444">The <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.PrintedCommentPages" /> property will only return a number greater than zero if the Comments setting on the Sheet tab of the Page Setup dialog box is set to At end of sheet.</span></span> <span data-ttu-id="fc367-445">Diese Eigenschaft gibt Null zurück, wenn das Blatt ein Diagrammblatt oder ein MS Excel 5.0 Dialog-Blatt ist.</span><span class="sxs-lookup"><span data-stu-id="fc367-445">This property will return zero if the sheet is a Chart sheet or a MS Excel 5.0 Dialog sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From"><span data-ttu-id="fc367-446">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-446">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-447">Die Nummer der ersten Seite, die gedruckt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc367-447">The number of the page at which to start printing.</span></span> <span data-ttu-id="fc367-448">Wenn Sie dieses Argument nicht angeben, wird von der ersten Seite an gedruckt.</span><span class="sxs-lookup"><span data-stu-id="fc367-448">If this argument is omitted, printing starts at the beginning.</span></span></param>
        <param name="To"><span data-ttu-id="fc367-449">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-449">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-450">Die Nummer der letzten Seite, die gedruckt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc367-450">The number of the last page to print.</span></span> <span data-ttu-id="fc367-451">Wenn Sie dieses Argument nicht angeben, wird bis zur letzten Seite gedruckt.</span><span class="sxs-lookup"><span data-stu-id="fc367-451">If this argument is omitted, printing ends with the last page.</span></span></param>
        <param name="Copies"><span data-ttu-id="fc367-452">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-452">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-453">Die Anzahl der zu druckenden Kopien.</span><span class="sxs-lookup"><span data-stu-id="fc367-453">The number of copies to print.</span></span> <span data-ttu-id="fc367-454">Wenn Sie dieses Argument nicht angeben, wird eine einzelne Kopie gedruckt.</span><span class="sxs-lookup"><span data-stu-id="fc367-454">If this argument is omitted, one copy is printed.</span></span></param>
        <param name="Preview"><span data-ttu-id="fc367-455">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-455">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-456"><b>True</b>, damit Microsoft Excel die Druckvorschau aufruft, bevor das Objekt gedruckt wird.</span><span class="sxs-lookup"><span data-stu-id="fc367-456"><b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span></span> <span data-ttu-id="fc367-457"><b>False</b> (oder ausgelassen) zum unmittelbaren Drucken des Objekts.</span><span class="sxs-lookup"><span data-stu-id="fc367-457"><b>False</b> (or omitted) to print the object immediately.</span></span></param>
        <param name="ActivePrinter"><span data-ttu-id="fc367-458">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-458">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-459">Legt den Namen des aktiven Druckers fest.</span><span class="sxs-lookup"><span data-stu-id="fc367-459">Sets the name of the active printer.</span></span></param>
        <param name="PrintToFile"><span data-ttu-id="fc367-460">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-460">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-461"><b>True</b> zum Drucken einer Datei.</span><span class="sxs-lookup"><span data-stu-id="fc367-461"><b>True</b> to print to a file.</span></span> <span data-ttu-id="fc367-462">Wenn dieser Parameter nicht angegeben ist, fordert Microsoft Excel den Benutzer auf, den Namen der <paramref name="PrToFileName" /> Ausgabedatei eingibt.</span><span class="sxs-lookup"><span data-stu-id="fc367-462">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span></span></param>
        <param name="Collate"><span data-ttu-id="fc367-463">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-463">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-464"><b>True</b> zum Sortieren mehrerer Kopien.</span><span class="sxs-lookup"><span data-stu-id="fc367-464"><b>True</b> to collate multiple copies.</span></span></param>
        <param name="PrToFileName"><span data-ttu-id="fc367-465">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-465">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-466">Wenn <paramref name="PrintToFile" /> dieser Wert auf <b>"True"</b>festgelegt ist, gibt dieses Argument den Namen der Datei an, in die gedruckt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fc367-466">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span></span></param>
        <summary><span data-ttu-id="fc367-467">Druckt das Objekt.</span><span class="sxs-lookup"><span data-stu-id="fc367-467">Prints the object.</span></span></summary>
        <remarks><para><span data-ttu-id="fc367-468">"Seiten" in den Beschreibungen von gedruckten Seiten und bezieht sich auf gedruckte Seiten, nicht auf allgemeine Seiten <paramref name="From" /> <paramref name="To" /> des Blatts oder der Arbeitsmappe.</span><span class="sxs-lookup"><span data-stu-id="fc367-468">"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages, not overall pages in the sheet or workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName, object IgnorePrintAreas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName, [in]object IgnorePrintAreas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object, Optional IgnorePrintAreas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <param name="IgnorePrintAreas">To be added.</param>
        <summary><span data-ttu-id="fc367-469">Für die interne Verwendung reserviert.</span><span class="sxs-lookup"><span data-stu-id="fc367-469">Reserved for internal use.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges"><span data-ttu-id="fc367-470">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-470">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-471"><b>True,</b> um Änderungen am angegebenen Arbeitsblatt zu aktivieren.</span><span class="sxs-lookup"><span data-stu-id="fc367-471"><b>True</b> to enable changes to the specified worksheet.</span></span></param>
        <summary><span data-ttu-id="fc367-472">Zeigt ein Objekt so an, wie es gedruckt wird.</span><span class="sxs-lookup"><span data-stu-id="fc367-472">Shows a preview of the object as it would look when printed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public void Protect (object Password, object DrawingObjects, object Contents, object Scenarios, object UserInterfaceOnly, object AllowFormattingCells, object AllowFormattingColumns, object AllowFormattingRows, object AllowInsertingColumns, object AllowInsertingRows, object AllowInsertingHyperlinks, object AllowDeletingColumns, object AllowDeletingRows, object AllowSorting, object AllowFiltering, object AllowUsingPivotTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Protect([in]object Password, [in]object DrawingObjects, [in]object Contents, [in]object Scenarios, [in]object UserInterfaceOnly, [in]object AllowFormattingCells, [in]object AllowFormattingColumns, [in]object AllowFormattingRows, [in]object AllowInsertingColumns, [in]object AllowInsertingRows, [in]object AllowInsertingHyperlinks, [in]object AllowDeletingColumns, [in]object AllowDeletingRows, [in]object AllowSorting, [in]object AllowFiltering, [in]object AllowUsingPivotTables) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Protect (Optional Password As Object, Optional DrawingObjects As Object, Optional Contents As Object, Optional Scenarios As Object, Optional UserInterfaceOnly As Object, Optional AllowFormattingCells As Object, Optional AllowFormattingColumns As Object, Optional AllowFormattingRows As Object, Optional AllowInsertingColumns As Object, Optional AllowInsertingRows As Object, Optional AllowInsertingHyperlinks As Object, Optional AllowDeletingColumns As Object, Optional AllowDeletingRows As Object, Optional AllowSorting As Object, Optional AllowFiltering As Object, Optional AllowUsingPivotTables As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2029)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DrawingObjects" Type="System.Object" />
        <Parameter Name="Contents" Type="System.Object" />
        <Parameter Name="Scenarios" Type="System.Object" />
        <Parameter Name="UserInterfaceOnly" Type="System.Object" />
        <Parameter Name="AllowFormattingCells" Type="System.Object" />
        <Parameter Name="AllowFormattingColumns" Type="System.Object" />
        <Parameter Name="AllowFormattingRows" Type="System.Object" />
        <Parameter Name="AllowInsertingColumns" Type="System.Object" />
        <Parameter Name="AllowInsertingRows" Type="System.Object" />
        <Parameter Name="AllowInsertingHyperlinks" Type="System.Object" />
        <Parameter Name="AllowDeletingColumns" Type="System.Object" />
        <Parameter Name="AllowDeletingRows" Type="System.Object" />
        <Parameter Name="AllowSorting" Type="System.Object" />
        <Parameter Name="AllowFiltering" Type="System.Object" />
        <Parameter Name="AllowUsingPivotTables" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password"><span data-ttu-id="fc367-473">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-473">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-474">Eine Zeichenfolge, mit der für das Arbeitsblatt oder die Arbeitsmappe ein Kennwort mit Unterscheidung der Groß-/Kleinschreibung festlegt wird.</span><span class="sxs-lookup"><span data-stu-id="fc367-474">A string that specifies a case-sensitive password for the worksheet or workbook.</span></span> <span data-ttu-id="fc367-475">Wenn Sie dieses Argument weglassen, kann der Schutz des Arbeitsblatts oder der Arbeitsmappe ohne Angabe eines Kennworts aufgehoben werden.</span><span class="sxs-lookup"><span data-stu-id="fc367-475">If this argument is omitted, you can unprotect the worksheet or workbook without using a password.</span></span> <span data-ttu-id="fc367-476">Wenn dies nicht möglich sein soll, müssen Sie ein Kennwort festlegen.</span><span class="sxs-lookup"><span data-stu-id="fc367-476">Otherwise, you must specify the password to unprotect the worksheet or workbook.</span></span> <span data-ttu-id="fc367-477">Wenn Sie das Kennwort vergessen, können Sie den Schutz des Arbeitsblatts oder der Arbeitsmappe nicht wieder aufheben.</span><span class="sxs-lookup"><span data-stu-id="fc367-477">If you forget the password, you cannot unprotect the worksheet or workbook.</span></span> <span data-ttu-id="fc367-478">Sie sollten daher eine Liste Ihrer Kennwörter und der zugehörigen Dateinamen an einem sicheren Ort aufbewahren.</span><span class="sxs-lookup"><span data-stu-id="fc367-478">It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span></span></param>
        <param name="DrawingObjects"><span data-ttu-id="fc367-479">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-479">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-480"><b>True</b>, um Formen zu schützen.</span><span class="sxs-lookup"><span data-stu-id="fc367-480"><b>True</b> to protect shapes.</span></span> <span data-ttu-id="fc367-481">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-481">The default value is <b>False</b>.</span></span></param>
        <param name="Contents"><span data-ttu-id="fc367-482">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-482">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-483"><b>True</b>, um den Inhalt zu schützen.</span><span class="sxs-lookup"><span data-stu-id="fc367-483"><b>True</b> to protect contents.</span></span> <span data-ttu-id="fc367-484">Bei einem Diagramm wird das gesamte Diagramm geschützt.</span><span class="sxs-lookup"><span data-stu-id="fc367-484">For a chart, this protects the entire chart.</span></span> <span data-ttu-id="fc367-485">Bei einem Arbeitsblatt werden die gesperrten Zellen geschützt.</span><span class="sxs-lookup"><span data-stu-id="fc367-485">For a worksheet, this protects the locked cells.</span></span> <span data-ttu-id="fc367-486">Der Standardwert ist <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-486">The default value is <b>True</b>.</span></span></param>
        <param name="Scenarios"><span data-ttu-id="fc367-487">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-487">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-488"><b>True</b>, um Szenarios zu schützen.</span><span class="sxs-lookup"><span data-stu-id="fc367-488"><b>True</b> to protect scenarios.</span></span> <span data-ttu-id="fc367-489">Das Argument ist nur für Arbeitsblätter gültig.</span><span class="sxs-lookup"><span data-stu-id="fc367-489">This argument is valid only for worksheets.</span></span> <span data-ttu-id="fc367-490">Der Standardwert ist <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-490">The default value is <b>True</b>.</span></span></param>
        <param name="UserInterfaceOnly"><span data-ttu-id="fc367-491">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-491">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-492"><b>True,</b> um die Benutzeroberfläche zu schützen, jedoch keine Makros.</span><span class="sxs-lookup"><span data-stu-id="fc367-492"><b>True</b> to protect the user interface but not macros.</span></span> <span data-ttu-id="fc367-493">Ohne Angabe dieses Arguments wird der Schutz auf Makros und die Benutzeroberfläche angewendet.</span><span class="sxs-lookup"><span data-stu-id="fc367-493">If this argument is omitted, protection applies both to macros and to the user interface.</span></span></param>
        <param name="AllowFormattingCells"><span data-ttu-id="fc367-494">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-494">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-495">Mit <b>True</b> können Benutzer jede Zelle eines geschützten Arbeitsblatts formatieren.</span><span class="sxs-lookup"><span data-stu-id="fc367-495"><b>True</b> allows the user to format any cell on a protected worksheet.</span></span> <span data-ttu-id="fc367-496">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-496">The default value is <b>False</b>.</span></span></param>
        <param name="AllowFormattingColumns"><span data-ttu-id="fc367-497">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-497">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-498">Mit <b>True</b>können Benutzer jede Spalte eines geschützten Arbeitsblatts formatieren.</span><span class="sxs-lookup"><span data-stu-id="fc367-498"><b>True</b> allows the user to format any column on a protected worksheet.</span></span> <span data-ttu-id="fc367-499">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-499">The default value is <b>False</b>.</span></span></param>
        <param name="AllowFormattingRows"><span data-ttu-id="fc367-500">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-500">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-501"><b>Mit "True"</b> kann der Benutzer jede Zeile in einem geschützten Arbeitsblatt formatieren.</span><span class="sxs-lookup"><span data-stu-id="fc367-501"><b>True</b> allows the user to format any row on a protected worksheet.</span></span> <span data-ttu-id="fc367-502">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-502">The default value is <b>False</b>.</span></span></param>
        <param name="AllowInsertingColumns"><span data-ttu-id="fc367-503">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-503">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-504">Mit <b>True</b> können Benutzer Spalten in ein geschütztes Arbeitsblatt einfügen.</span><span class="sxs-lookup"><span data-stu-id="fc367-504"><b>True</b> allows the user to insert columns on the protected worksheet.</span></span> <span data-ttu-id="fc367-505">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-505">The default value is <b>False</b>.</span></span></param>
        <param name="AllowInsertingRows"><span data-ttu-id="fc367-506">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-506">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-507">Mit <b>True</b> können Benutzer Zeilen in ein geschütztes Arbeitsblatt einfügen.</span><span class="sxs-lookup"><span data-stu-id="fc367-507"><b>True</b> allows the user to insert rows on the protected worksheet.</span></span> <span data-ttu-id="fc367-508">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-508">The default value is <b>False</b>.</span></span></param>
        <param name="AllowInsertingHyperlinks"><span data-ttu-id="fc367-509">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-509">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-510">Mit <b>True</b> können Benutzer Hyperlinks auf dem Arbeitsblatt einfügen.</span><span class="sxs-lookup"><span data-stu-id="fc367-510"><b>True</b> allows the user to insert hyperlinks on the worksheet.</span></span> <span data-ttu-id="fc367-511">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-511">The default value is <b>False</b>.</span></span></param>
        <param name="AllowDeletingColumns"><span data-ttu-id="fc367-512">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-512">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-513">Mit <b>True</b> können Benutzer Spalten im geschützten Arbeitsblatt löschen, wobei keine Zelle in der zu löschenden Spalte gesperrt ist.</span><span class="sxs-lookup"><span data-stu-id="fc367-513"><b>True</b> allows the user to delete columns on the protected worksheet, where every cell in the column to be deleted is unlocked.</span></span> <span data-ttu-id="fc367-514">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-514">The default value is <b>False</b>.</span></span></param>
        <param name="AllowDeletingRows"><span data-ttu-id="fc367-515">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-515">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-516"><b>"True"</b> ermöglicht es dem Benutzer, Zeilen im geschützten Arbeitsblatt zu löschen, in denen jede Zelle in der zu löschende Zeile entsperrt ist.</span><span class="sxs-lookup"><span data-stu-id="fc367-516"><b>True</b> allows the user to delete rows on the protected worksheet where every cell in the row to be deleted is unlocked.</span></span> <span data-ttu-id="fc367-517">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-517">The default value is <b>False</b>.</span></span></param>
        <param name="AllowSorting"><span data-ttu-id="fc367-518">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-518">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-519">Mit <b>True</b> können Benutzer für das geschützte Arbeitsblatt eine Sortierung vornehmen.</span><span class="sxs-lookup"><span data-stu-id="fc367-519"><b>True</b> allows the user to sort on the protected worksheet.</span></span> <span data-ttu-id="fc367-520">Für jede Zelle im Sortierbereich muss die Sperre oder der Schutz aufgehoben werden.</span><span class="sxs-lookup"><span data-stu-id="fc367-520">Every cell in the sort range must be unlocked or unprotected.</span></span> <span data-ttu-id="fc367-521">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-521">The default value is <b>False</b>.</span></span></param>
        <param name="AllowFiltering"><span data-ttu-id="fc367-522">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-522">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-523">Mit <b>True</b> Benutzer Filter für das geschützte Arbeitsblatt festlegen.</span><span class="sxs-lookup"><span data-stu-id="fc367-523"><b>True</b> allows the user to set filters on the protected worksheet.</span></span> <span data-ttu-id="fc367-524">Die Benutzer können Filterkriterien ändern, jedoch keinen AutoFilter aktivieren oder deaktivieren.</span><span class="sxs-lookup"><span data-stu-id="fc367-524">Users can change filter criteria but can not enable or disable an auto filter.</span></span> <span data-ttu-id="fc367-525">Die Benutzer können Filter für einen vorhandenen AutoFilter festlegen.</span><span class="sxs-lookup"><span data-stu-id="fc367-525">Users can set filters on an existing auto filter.</span></span> <span data-ttu-id="fc367-526">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-526">The default value is <b>False</b>.</span></span></param>
        <param name="AllowUsingPivotTables"><span data-ttu-id="fc367-527">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-527">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-528">Mit <b>True</b> können Benutzer PivotTable-Berichte für das geschützte Arbeitsblatt verwenden.</span><span class="sxs-lookup"><span data-stu-id="fc367-528"><b>True</b> allows the user to use pivot table reports on the protected worksheet.</span></span> <span data-ttu-id="fc367-529">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-529">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="fc367-530">Schützt ein Arbeitsblatt, damit es nicht geändert werden kann.</span><span class="sxs-lookup"><span data-stu-id="fc367-530">Protects a worksheet so that it cannot be modified.</span></span></summary>
        <remarks><para><span data-ttu-id="fc367-531">Wenn Sie die <b>Protect</b> -Methode mit dem Argument true auf ein Arbeitsblatt anwenden und dann die Arbeitsmappe speichern, wird das gesamte Arbeitsblatt (nicht nur die Schnittstelle) vollständig geschützt, wenn Sie die Arbeitsmappe erneut <paramref name="UserInterfaceOnly" /> öffnen. <b></b></span><span class="sxs-lookup"><span data-stu-id="fc367-531">If you apply the <b>Protect</b> method with the <paramref name="UserInterfaceOnly" /> argument set to <b>True</b> to a worksheet and then save the workbook, the entire worksheet (not just the interface) will be fully protected when you reopen the workbook.</span></span> <span data-ttu-id="fc367-532">Um den Schutz der Benutzeroberfläche nach dem Öffnen der Arbeitsmappe erneut zu aktivieren, müssen Sie erneut die <b>Protect</b> -Methode mit dem Wert <paramref name="UserInterfaceOnly" /> True <b>anwenden.</b></span><span class="sxs-lookup"><span data-stu-id="fc367-532">To re-enable the user interface protection after the workbook is opened, you must again apply the <b>Protect</b> method with <paramref name="UserInterfaceOnly" /> set to <b>True</b>.</span></span></para>
          <para><span data-ttu-id="fc367-533">Wenn Sie eine Änderung an einem geschützten Arbeitsblatt ändern möchten, ist es möglich, die <b>Protect</b> -Methode für ein geschütztes Arbeitsblatt zu verwenden, wenn das Kennwort angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="fc367-533">If you want to make a change to a protected worksheet, it is possible to use the <b>Protect</b> method on a protected worksheet if the password is supplied.</span></span> <span data-ttu-id="fc367-534">Eine weitere Methode besteht im Aufheben des Schutzes des Arbeitsblatts, dem Vornehmen der erforderlichen Änderungen und dem erneuten Schützen des Arbeitsblatts.</span><span class="sxs-lookup"><span data-stu-id="fc367-534">Another method would be to unprotect the worksheet, make the necessary changes, and then protect the worksheet again.</span></span></para>
          <para><span data-ttu-id="fc367-535">
            <b>Hinweis:</b>"Unprotected" bedeutet, dass die Zelle möglicherweise gesperrt (Dialogfeld "Zellen formatieren") ist, aber in einem Bereich enthalten ist, der im Dialogfeld "Benutzern das Bearbeiten von Bereichen erlauben" definiert ist, und der Benutzer hat den Schutz für den Bereich mit einem Kennwort aufheben oder über die Berechtigung NT überprüft.</span><span class="sxs-lookup"><span data-stu-id="fc367-535">
            <b>Note</b>: 'Unprotected' means the cell may be locked (Format Cells dialog) but is included in a range defined in the Allow Users to Edit Ranges dialog, and the user has unprotected the range with a password or been validated via NT permissions.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectContents">
      <MemberSignature Language="C#" Value="public bool ProtectContents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectContents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectContents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectContents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectContents { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(292)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(292)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-536"><b>True</b>, wenn der Inhalt des Blatts geschützt ist.</span><span class="sxs-lookup"><span data-stu-id="fc367-536"><b>True</b> if the contents of the sheet are protected.</span></span> <span data-ttu-id="fc367-537">Bei einem Diagramm wird das gesamte Diagramm geschützt.</span><span class="sxs-lookup"><span data-stu-id="fc367-537">For a chart, this protects the entire chart.</span></span> <span data-ttu-id="fc367-538">Bei einem Arbeitsblatt werden dadurch die einzelnen Zellen geschützt.</span><span class="sxs-lookup"><span data-stu-id="fc367-538">For a worksheet, this protects the individual cells.</span></span> <span data-ttu-id="fc367-539">Schreibgeschützter <b>boolescher</b> Wert.</span><span class="sxs-lookup"><span data-stu-id="fc367-539">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectDrawingObjects">
      <MemberSignature Language="C#" Value="public bool ProtectDrawingObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectDrawingObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectDrawingObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectDrawingObjects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectDrawingObjects { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(293)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(293)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-540"><b>True</b>, wenn Formen geschützt sind.</span><span class="sxs-lookup"><span data-stu-id="fc367-540"><b>True</b> if shapes are protected.</span></span> <span data-ttu-id="fc367-541">Schreibgeschützter <b>boolescher</b> Wert.</span><span class="sxs-lookup"><span data-stu-id="fc367-541">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Protection Protection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Protection Protection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Protection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Protection As Protection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Protection ^ Protection { Microsoft::Office::Interop::Excel::Protection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(176)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(176)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Protection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-542">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Protection" /> Objekt zurück, das die Schutzoptionen des Arbeitsblatts darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc367-542">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Protection" /> object that represents the protection options of the worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionMode">
      <MemberSignature Language="C#" Value="public bool ProtectionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectionMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectionMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectionMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-543"><b>True</b>, wenn der ausschließliche Schutz für die Benutzeroberfläche aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="fc367-543"><b>True</b> if user-interface-only protection is turned on.</span></span> <span data-ttu-id="fc367-544">Um den Schutz der Benutzeroberfläche zu aktivieren, verwenden Sie die <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> Methode, bei der <paramref name="UserInterfaceOnly" /> das Argument auf <b>"True" festgelegt ist.</b></span><span class="sxs-lookup"><span data-stu-id="fc367-544">To turn on user interface protection, use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Protect(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method with the <paramref name="UserInterfaceOnly" /> argument set to <b>True</b>.</span></span> <span data-ttu-id="fc367-545">Schreibgeschützter <b>boolescher</b> Wert.</span><span class="sxs-lookup"><span data-stu-id="fc367-545">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectScenarios">
      <MemberSignature Language="C#" Value="public bool ProtectScenarios { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectScenarios" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ProtectScenarios" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectScenarios As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectScenarios { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(294)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(294)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-546"><b>True</b>, wenn die Arbeitsblatt-Szenarios geschützt sind.</span><span class="sxs-lookup"><span data-stu-id="fc367-546"><b>True</b> if the worksheet scenarios are protected.</span></span> <span data-ttu-id="fc367-547">Schreibgeschützter <b>boolescher</b> Wert.</span><span class="sxs-lookup"><span data-stu-id="fc367-547">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryTables">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.QueryTables QueryTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.QueryTables QueryTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.QueryTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryTables As QueryTables" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::QueryTables ^ QueryTables { Microsoft::Office::Interop::Excel::QueryTables ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1434)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1434)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.QueryTables</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-548">Gibt die <see cref="T:Microsoft.Office.Interop.Excel.QueryTables" /> Auflistung zurück, die alle Abfragetabellen im angegebenen Arbeitsblatt darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc367-548">Returns the <see cref="T:Microsoft.Office.Interop.Excel.QueryTables" /> collection that represents all the query tables on the specified worksheet.</span></span> <span data-ttu-id="fc367-549">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fc367-549">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range[object Cell1, object Cell2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Range(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Range(Cell1 As Object, Optional Cell2 As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Range[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ Cell1, System::Object ^ Cell2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cell1" Type="System.Object" />
        <Parameter Name="Cell2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Cell1"><span data-ttu-id="fc367-550">Required <b>-Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-550">Required <b>Object</b>.</span></span> <span data-ttu-id="fc367-551">Der Name des Bereichs.</span><span class="sxs-lookup"><span data-stu-id="fc367-551">The name of the range.</span></span> <span data-ttu-id="fc367-552">Dieser muss ein A1-Bezug in der Sprache des Makros sein.</span><span class="sxs-lookup"><span data-stu-id="fc367-552">This must be an A1-style reference in the language of the macro.</span></span> <span data-ttu-id="fc367-553">Es kann einen Bereichsoperator (ein Doppelpunkt), den Überschneidungsoperator (ein Leerzeichen) oder den Vereinigungsoperator (ein Komma) einschließen.</span><span class="sxs-lookup"><span data-stu-id="fc367-553">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span></span> <span data-ttu-id="fc367-554">Es kann auch Dollarzeichen einschließen, diese werden jedoch ignoriert.</span><span class="sxs-lookup"><span data-stu-id="fc367-554">It can also include dollar signs, but they’re ignored.</span></span> <span data-ttu-id="fc367-555">Sie können einen lokal definierten Namen in jedem Teil des Bereichs verwenden.</span><span class="sxs-lookup"><span data-stu-id="fc367-555">You can use a local defined name in any part of the range.</span></span> <span data-ttu-id="fc367-556">Bei diesem Namen wird davon ausgegangen, dass er in der Sprache des Makros vorliegt.</span><span class="sxs-lookup"><span data-stu-id="fc367-556">If you use a name, the name is assumed to be in the language of the macro.</span></span></param>
        <param name="Cell2"><span data-ttu-id="fc367-557">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-557">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-558">Die Zellen in der linken oberen und rechten unteren Ecke des Bereichs.</span><span class="sxs-lookup"><span data-stu-id="fc367-558">The cell in the upper-left and lower-right corner of the range.</span></span> <span data-ttu-id="fc367-559">Kann ein <b>Range</b>-Objekt sein, das eine einzelne Zelle (oder eine gesamte Spalte oder eine gesamte Zeile) enthält, oder kann eine Zeichenfolge sein, die eine einzelne Zelle in der Sprache des Makros bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="fc367-559">Can be a <b>Range</b> object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</span></span></param>
        <summary><span data-ttu-id="fc367-560">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das eine Zelle oder einen Zellbereich darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc367-560">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rectangles">
      <MemberSignature Language="C#" Value="public object Rectangles (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Rectangles([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Rectangles(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rectangles (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="fc367-561">Für die interne Verwendung reserviert.</span><span class="sxs-lookup"><span data-stu-id="fc367-561">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetAllPageBreaks">
      <MemberSignature Language="C#" Value="public void ResetAllPageBreaks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetAllPageBreaks() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ResetAllPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAllPageBreaks ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAllPageBreaks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1426)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc367-562">Setzt alle Seitenumbrüche im angegebenen Arbeitsblatt zurück.</span><span class="sxs-lookup"><span data-stu-id="fc367-562">Resets all page breaks on the specified worksheet.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Rows { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-563">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das alle Zeilen im angegebenen Arbeitsblatt darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc367-563">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the rows on the specified worksheet.</span></span> <span data-ttu-id="fc367-564">Schreibgeschütztes <b>Range</b>-Objekt.</span><span class="sxs-lookup"><span data-stu-id="fc367-564">Read-only <b>Range</b> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object AddToMru, object TextCodepage, object TextVisualLayout, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAs([in]string Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.SaveAs(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (Filename As String, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1925)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="fc367-565">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-565">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-566">Eine Zeichenfolge, die den Namen der zu speichernden Datei angibt.</span><span class="sxs-lookup"><span data-stu-id="fc367-566">A string that indicates the name of the file to be saved.</span></span> <span data-ttu-id="fc367-567">Sie können einen vollständigen Pfad angeben; andernfalls wird die Datei von Microsoft Excel im aktuellen Ordner gespeichert.</span><span class="sxs-lookup"><span data-stu-id="fc367-567">You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</span></span></param>
        <param name="FileFormat"><span data-ttu-id="fc367-568">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-568">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-569">Das beim Speichern der Datei zu verwendende Dateiformat.</span><span class="sxs-lookup"><span data-stu-id="fc367-569">The file format to use when you save the file.</span></span> <span data-ttu-id="fc367-570">Eine Liste der gültigen Auswahlmöglichkeiten finden Sie in der <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fc367-570">For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> property.</span></span> <span data-ttu-id="fc367-571">Bei einer vorhandenen Datei ist das Standardformat das zuletzt angegebene Dateiformat, bei einer neuen Datei wird standardmäßig das Format der verwendeten Excel-Version verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc367-571">For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</span></span></param>
        <param name="Password"><span data-ttu-id="fc367-572">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-572">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-573">Eine Zeichenfolge unter Berücksichtigung der Groß-/Kleinschreibung (maximal 15 Zeichen), mit der das Schutzkennwort für die Datei angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="fc367-573">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</span></span></param>
        <param name="WriteResPassword"><span data-ttu-id="fc367-574">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-574">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-575">Eine Zeichenfolge, mit der das Schreibschutzkennwort für die Datei angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="fc367-575">A string that indicates the write-reservation password for this file.</span></span> <span data-ttu-id="fc367-576">Wenn eine Datei mit einem Kennwort gespeichert wurde und das Kennwort beim Öffnen nicht angegeben wird, wird die Datei schreibgeschützt geöffnet.</span><span class="sxs-lookup"><span data-stu-id="fc367-576">If a file is saved with the password and the password isn't supplied when the file is opened, the file is opened as read-only.</span></span></param>
        <param name="ReadOnlyRecommended"><span data-ttu-id="fc367-577">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-577">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-578"><b>True,</b> wenn beim Öffnen der Datei eine Meldung mit der Empfehlung angezeigt wird, die Datei schreibgeschützt zu öffnen.</span><span class="sxs-lookup"><span data-stu-id="fc367-578"><b>True</b> to display a message when the file is opened recommending that the file be opened as read-only.</span></span></param>
        <param name="CreateBackup"><span data-ttu-id="fc367-579">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-579">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-580">Mit dem Wert  <b>True</b> wird eine Sicherungsdatei erstellt.</span><span class="sxs-lookup"><span data-stu-id="fc367-580"><b>True</b> to create a backup file.</span></span></param>
        <param name="AddToMru"><span data-ttu-id="fc367-581">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-581">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-582">Mit  <b>True</b> wird diese Arbeitsmappe der Liste der zuletzt geöffneten Dateien hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="fc367-582"><b>True</b> to add this workbook to the list of recently used files.</span></span> <span data-ttu-id="fc367-583">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-583">The default value is <b>False</b>.</span></span></param>
        <param name="TextCodepage"><span data-ttu-id="fc367-584">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-584">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-585">Wird in Microsoft Excel mit US-Englisch nicht verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc367-585">Not used in U.S. English Microsoft Excel.</span></span></param>
        <param name="TextVisualLayout"><span data-ttu-id="fc367-586">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-586">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-587">Wird in Microsoft Excel mit US-Englisch nicht verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc367-587">Not used in U.S. English Microsoft Excel.</span></span></param>
        <param name="Local"><span data-ttu-id="fc367-588">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-588">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-589">Mit  <b>True</b> werden Dateien in der Sprache von Microsoft Excel (einschließlich der Einstellungen der Systemsteuerung) gespeichert.</span><span class="sxs-lookup"><span data-stu-id="fc367-589"><b>True</b> saves files against the language of Microsoft Excel (including control panel settings).</span></span> <span data-ttu-id="fc367-590"><b>False</b> (Standard) speichert Dateien in der Sprache von Visual Basic for Applications (VBA) (in der Regel US-Englisch, es sei denn, das VBA-Projekt, in dem Workbooks.Open ausgeführt wird, ist ein altes internationalisiertes XL5/95 VBA-Projekt).</span><span class="sxs-lookup"><span data-stu-id="fc367-590"><b>False</b> (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</span></span></param>
        <summary><span data-ttu-id="fc367-591">Speichert Änderungen am Diagramm oder Arbeitsblatt in einer anderen Datei.</span><span class="sxs-lookup"><span data-stu-id="fc367-591">Saves changes to the chart or worksheet in a different file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scenarios">
      <MemberSignature Language="C#" Value="public object Scenarios (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Scenarios([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Scenarios(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Scenarios (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(908)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="fc367-592">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-592">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-593">Der Name oder die Nummer des Szenarios.</span><span class="sxs-lookup"><span data-stu-id="fc367-593">The name or number of the scenario.</span></span> <span data-ttu-id="fc367-594">Verwenden Sie eine Matrix, um mehr als ein Szenario anzugeben.</span><span class="sxs-lookup"><span data-stu-id="fc367-594">Use an array to specify more than one scenario.</span></span></param>
        <summary><span data-ttu-id="fc367-595">Gibt ein Objekt zurück, das ein einzelnes Szenario (ein Objekt) oder eine Auflistung von Szenarien <see cref="T:Microsoft.Office.Interop.Excel.Scenario" /> (ein Objekt) auf dem <see cref="T:Microsoft.Office.Interop.Excel.Scenarios" /> Arbeitsblatt darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc367-595">Returns an object that represents either a single scenario (a <see cref="T:Microsoft.Office.Interop.Excel.Scenario" /> object) or a collection of scenarios (a <see cref="T:Microsoft.Office.Interop.Excel.Scenarios" /> object) on the worksheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Scripts Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Scripts Scripts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Scripts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scripts As Scripts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Scripts ^ Scripts { Microsoft::Office::Core::Scripts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1816)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1816)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Scripts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-596">Gibt die Auflistung zurück, die Objekte enthält, die Skript- oder Codeblöcke im angegebenen Dokument darstellen, wenn es als Webseite <see cref="T:Microsoft.Office.Core.Scripts" /> <see cref="T:Microsoft.Office.Core.Script" /> gespeichert wird.</span><span class="sxs-lookup"><span data-stu-id="fc367-596">Returns the <see cref="T:Microsoft.Office.Core.Scripts" /> collection, which contains <see cref="T:Microsoft.Office.Core.Script" /> objects representing blocks of script or code in the specified document when it’s saved as a Web page.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollArea">
      <MemberSignature Language="C#" Value="public string ScrollArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.ScrollArea" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollArea As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollArea { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1433)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1433)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1433)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-597">Gibt den Bereich zurück, in dem der Bildlauf als Bereichsverweis im A1-Format zulässig ist, oder legt den Bereich fest.</span><span class="sxs-lookup"><span data-stu-id="fc367-597">Returns or sets the range where scrolling is allowed as an A1-style range reference.</span></span> <span data-ttu-id="fc367-598">Zellen außerhalb des Bildlaufbereichs können nicht markiert werden.</span><span class="sxs-lookup"><span data-stu-id="fc367-598">Cells outside the scroll area cannot be selected.</span></span> <span data-ttu-id="fc367-599"><b>String</b>-Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="fc367-599">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fc367-600">Setzen Sie diese Eigenschaft auf eine leere Zeichenfolge (""), um die Zellmarkierung für das gesamte Blatt zu aktivieren.</span><span class="sxs-lookup"><span data-stu-id="fc367-600">Set this property to the empty string ("") to enable cell selection for the entire sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollBars">
      <MemberSignature Language="C#" Value="public object ScrollBars (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ScrollBars([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ScrollBars(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScrollBars (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(830)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="fc367-601">Für die interne Verwendung reserviert.</span><span class="sxs-lookup"><span data-stu-id="fc367-601">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (object Replace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select([in]object Replace) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Select(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (Optional Replace As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Replace" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Replace"><span data-ttu-id="fc367-602">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-602">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-603">Das zu ersetzende Objekt.</span><span class="sxs-lookup"><span data-stu-id="fc367-603">The object to replace.</span></span></param>
        <summary><span data-ttu-id="fc367-604">Markiert das Objekt.</span><span class="sxs-lookup"><span data-stu-id="fc367-604">Selects the object.</span></span></summary>
        <remarks><para><span data-ttu-id="fc367-605">Mithilfe der <b>Select</b>-Methode können Sie eine Zelle oder einen Zellbereich markieren.</span><span class="sxs-lookup"><span data-stu-id="fc367-605">To select a cell or a range of cells, use the <b>Select</b> method.</span></span> <span data-ttu-id="fc367-606">Verwenden Sie die Methode, um eine einzelne Zelle zur aktiven Zelle <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> zu machen.</span><span class="sxs-lookup"><span data-stu-id="fc367-606">To make a single cell the active cell, use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundPicture">
      <MemberSignature Language="C#" Value="public void SetBackgroundPicture (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundPicture([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.SetBackgroundPicture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackgroundPicture (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackgroundPicture(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1188)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename"><span data-ttu-id="fc367-607"><b>String</b> erforderlich.</span><span class="sxs-lookup"><span data-stu-id="fc367-607">Required <b>String</b>.</span></span> <span data-ttu-id="fc367-608">Der Name der Grafikdatei.</span><span class="sxs-lookup"><span data-stu-id="fc367-608">The name of the graphic file.</span></span></param>
        <summary><span data-ttu-id="fc367-609">Legt die Hintergrundgrafik für ein Arbeitsblatt oder Diagramm fest.</span><span class="sxs-lookup"><span data-stu-id="fc367-609">Sets the background graphic for a worksheet or chart.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shapes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shapes Shapes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shapes Shapes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Shapes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Shapes As Shapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shapes ^ Shapes { Microsoft::Office::Interop::Excel::Shapes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1377)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-610">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> Objekt zurück, das alle Formen des Arbeitsblatts oder Diagrammblatts darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc367-610">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> object that represents all the shapes on the worksheet or chart sheet.</span></span> <span data-ttu-id="fc367-611">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fc367-611">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowAllData">
      <MemberSignature Language="C#" Value="public void ShowAllData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowAllData() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ShowAllData" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowAllData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowAllData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(794)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc367-612">Makes all rows of the currently filtered list visible.</span><span class="sxs-lookup"><span data-stu-id="fc367-612">Makes all rows of the currently filtered list visible.</span></span> <span data-ttu-id="fc367-613">If AutoFilter is in use, this method changes the arrows to "All."</span><span class="sxs-lookup"><span data-stu-id="fc367-613">If AutoFilter is in use, this method changes the arrows to "All."</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDataForm">
      <MemberSignature Language="C#" Value="public void ShowDataForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowDataForm() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.ShowDataForm" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowDataForm ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowDataForm();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(409)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc367-614">Zeigt das mit dem Arbeitsblatt verknüpfte Datenformular an.</span><span class="sxs-lookup"><span data-stu-id="fc367-614">Displays the data form associated with the worksheet.</span></span></summary>
        <remarks><para><span data-ttu-id="fc367-615">Die Ausführung wird angehalten, während Sie das Datenformular verwenden.</span><span class="sxs-lookup"><span data-stu-id="fc367-615">Execution pauses while you’re using the data form.</span></span> <span data-ttu-id="fc367-616">Wenn Sie das Datenformular schließen, wird die Ausführung in der Zeile nach der <b>ShowDataForm -Methode</b> fortgesetzt.</span><span class="sxs-lookup"><span data-stu-id="fc367-616">When you close the data form, execution resumes at the line following the <b>ShowDataForm</b> method.</span></span></para>
          <para><span data-ttu-id="fc367-617">Diese Methode führt das benutzerdefinierte Datenformular aus, falls eines vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="fc367-617">This method runs the custom data form, if one exists.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTags">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTags SmartTags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTags SmartTags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.SmartTags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTags As SmartTags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTags ^ SmartTags { Microsoft::Office::Interop::Excel::SmartTags ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-618">Gibt ein Objekt <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> zurück, das den Bezeichner für die angegebene Zelle darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc367-618">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> object representing the identifier for the specified cell.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sort Sort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sort Sort" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Sort" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sort As Sort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sort ^ Sort { Microsoft::Office::Interop::Excel::Sort ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(880)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(880)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sort</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-619">Gibt die sortierten Werte im aktuellen Arbeitsblatt zurück.</span><span class="sxs-lookup"><span data-stu-id="fc367-619">Returns the sorted values in the current worksheet.</span></span> <span data-ttu-id="fc367-620">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fc367-620">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.Sort" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Spinners">
      <MemberSignature Language="C#" Value="public object Spinners (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Spinners([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Spinners(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Spinners (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(838)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="fc367-621">Für die interne Verwendung reserviert.</span><span class="sxs-lookup"><span data-stu-id="fc367-621">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardHeight">
      <MemberSignature Language="C#" Value="public double StandardHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.StandardHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StandardHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StandardHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(407)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-622">Gibt die Standardhöhe (Standard) aller Zeilen im Arbeitsblatt in Punkt zurück.</span><span class="sxs-lookup"><span data-stu-id="fc367-622">Returns the standard (default) height of all the rows in the worksheet in points.</span></span> <span data-ttu-id="fc367-623">Schreibgeschützter <b>doppelter Wert</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-623">Read-only <b>Double</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardWidth">
      <MemberSignature Language="C#" Value="public double StandardWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.StandardWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StandardWidth { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(408)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-624">Gibt die Standardbreite (Standard) aller Spalten in der Arbeitsmappe zurück oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="fc367-624">Returns or sets the standard (default) width of all the columns in the worksheet.</span></span> <span data-ttu-id="fc367-625"><b>Doppelter</b> Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="fc367-625">Read/write <b>Double</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fc367-p254">Eine Einheit der Spaltenbreite entspricht der Breite eines Zeichens im Format Normal. Für proportionale Schriftarten wird die Breite des Zeichens 0 (Null) verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc367-p254">One unit of column width is equal to the width of one character in the Normal style. For proportional fonts, the width of the character 0 (zero) is used.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Tab">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Tab Tab { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Tab Tab" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Tab" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tab As Tab" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Tab ^ Tab { Microsoft::Office::Interop::Excel::Tab ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1041)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1041)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Tab</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-628">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> Objekt für ein Diagramm oder ein Arbeitsblatt zurück.</span><span class="sxs-lookup"><span data-stu-id="fc367-628">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Tab" /> object for a chart or a worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBoxes">
      <MemberSignature Language="C#" Value="public object TextBoxes (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object TextBoxes([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.TextBoxes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextBoxes (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(777)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="fc367-629">Für die interne Verwendung reserviert.</span><span class="sxs-lookup"><span data-stu-id="fc367-629">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionExpEval">
      <MemberSignature Language="C#" Value="public bool TransitionExpEval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionExpEval" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.TransitionExpEval" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionExpEval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransitionExpEval { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-630"><b>True</b>, wenn Microsoft Excel für dieses Arbeitsblatt die Lotus 1-2-3-Regeln zur Formelberechnung verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc367-630"><b>True</b> if Microsoft Excel uses Lotus 1-2-3 expression evaluation rules for the worksheet.</span></span> <span data-ttu-id="fc367-631"><b>Boolescher</b> Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="fc367-631">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionFormEntry">
      <MemberSignature Language="C#" Value="public bool TransitionFormEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionFormEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.TransitionFormEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionFormEntry As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransitionFormEntry { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(402)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-632"><b>True</b>, wenn Microsoft Excel in diesem Arbeitsblatt die Lotus 1-2-3-Regeln zur Formeleingabe verwendet.</span><span class="sxs-lookup"><span data-stu-id="fc367-632"><b>True</b> if Microsoft Excel uses Lotus 1-2-3 formula entry rules for the worksheet.</span></span> <span data-ttu-id="fc367-633"><b>Boolescher</b> Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="fc367-633">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSheetType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSheetType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XlSheetType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSheetType Type { Microsoft::Office::Interop::Excel::XlSheetType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSheetType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-634">Gibt den Arbeitsblatttyp zurück oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="fc367-634">Returns or sets the worksheet type.</span></span> <span data-ttu-id="fc367-635"><see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" />Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fc367-635">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlSheetType" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public void Unprotect (object Password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unprotect([in]object Password) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.Unprotect(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unprotect (Optional Password As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(285)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password"><span data-ttu-id="fc367-636">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-636">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-637">Eine Zeichenfolge, die das Kennwort unter Berücksichtigung der Groß-/Kleinschreibung angibt, um den Schutz des Blatts oder der Arbeitsmappe aufzuheben.</span><span class="sxs-lookup"><span data-stu-id="fc367-637">A string that denotes the case-sensitive password to use to unprotect the sheet or workbook.</span></span> <span data-ttu-id="fc367-638">Wenn das Blatt oder die Arbeitsmappe nicht durch ein Kennwort geschützt ist, wird dieses Argument ignoriert.</span><span class="sxs-lookup"><span data-stu-id="fc367-638">If the sheet or workbook isn't protected with a password, this argument is ignored.</span></span> <span data-ttu-id="fc367-639">Wenn Sie dieses Argument bei einem durch ein Kennwort geschütztes Blatt auslassen, werden Sie zur Eingabe des Kennworts aufgefordert.</span><span class="sxs-lookup"><span data-stu-id="fc367-639">If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password.</span></span> <span data-ttu-id="fc367-640">Wenn Sie dieses Argument bei einer durch ein Kennwort geschützten Arbeitsmappe auslassen, löst die Methode einen Fehler aus.</span><span class="sxs-lookup"><span data-stu-id="fc367-640">If you omit this argument for a workbook that's protected with a password, the method fails.</span></span></param>
        <summary><span data-ttu-id="fc367-641">Hebt den Schutz eines Blatts oder einer Arbeitsmappe auf.</span><span class="sxs-lookup"><span data-stu-id="fc367-641">Removes protection from a sheet or workbook.</span></span> <span data-ttu-id="fc367-642">Diese Methode hat keine Wirkung, wenn das Blatt oder die Arbeitsmappe nicht geschützt ist.</span><span class="sxs-lookup"><span data-stu-id="fc367-642">This method has no effect if the sheet or workbook isn't protected.</span></span></summary>
        <remarks><para><span data-ttu-id="fc367-p260">Wenn Sie das Kennwort vergessen, können Sie den Schutz des Blatts oder der Arbeitsmappe nicht wieder aufheben. Sie sollten daher eine Liste Ihrer Kennwörter und der zugehörigen Dateinamen an einem sicheren Ort aufbewahren.</span><span class="sxs-lookup"><span data-stu-id="fc367-p260">If you forget the password, you cannot unprotect the sheet or workbook. It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UsedRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range UsedRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range UsedRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.UsedRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsedRange As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ UsedRange { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(412)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(412)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-645">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das den verwendeten Bereich im angegebenen Arbeitsblatt darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc367-645">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the used range on the specified worksheet.</span></span> <span data-ttu-id="fc367-646">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fc367-646">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSheetVisibility Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSheetVisibility Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As XlSheetVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSheetVisibility Visible { Microsoft::Office::Interop::Excel::XlSheetVisibility get(); void set(Microsoft::Office::Interop::Excel::XlSheetVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSheetVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-647">Bestimmt, ob das Objekt sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="fc367-647">Determines whether the object is visible.</span></span> <span data-ttu-id="fc367-648">Lese-/Schreibzugriff. <see cref="T:Microsoft.Office.Interop.Excel.XlSheetVisibility" /></span><span class="sxs-lookup"><span data-stu-id="fc367-648">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlSheetVisibility" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="fc367-649">Die <b>Visible</b>-Eigenschaft für ein PivotTable-Element ist <b>True</b>, wenn das Element zum betreffenden Zeitpunkt in der Tabelle angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="fc367-649">The <b>Visible</b> property for a PivotTable item is <b>True</b> if the item is currently visible in the table.</span></span></para>
          <para><span data-ttu-id="fc367-650">Wenn Sie die <b>Eigenschaft Visible</b> für einen Namen auf <b>"False"</b>festlegen, wird der Name nicht im Dialogfeld "Name definieren" angezeigt.</span><span class="sxs-lookup"><span data-stu-id="fc367-650">If you set the <b>Visible</b> property for a name to <b>False</b>, the name won't appear in the Define Name dialog box.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="VPageBreaks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.VPageBreaks VPageBreaks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Worksheet.VPageBreaks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VPageBreaks As VPageBreaks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::VPageBreaks ^ VPageBreaks { Microsoft::Office::Interop::Excel::VPageBreaks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1419)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.VPageBreaks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc367-651">Gibt eine <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> Auflistung zurück, die die vertikalen Seitenumbrüche auf dem Blatt darstellt.</span><span class="sxs-lookup"><span data-stu-id="fc367-651">Returns a <see cref="T:Microsoft.Office.Interop.Excel.VPageBreaks" /> collection that represents the vertical page breaks on the sheet.</span></span> <span data-ttu-id="fc367-652">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fc367-652">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDataQuery">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range XmlDataQuery (string XPath, object SelectionNamespaces, object Map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range XmlDataQuery([in]string XPath, [in]object SelectionNamespaces, [in]object Map) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.XmlDataQuery(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlDataQuery (XPath As String, Optional SelectionNamespaces As Object, Optional Map As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2260)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XPath" Type="System.String" />
        <Parameter Name="SelectionNamespaces" Type="System.Object" />
        <Parameter Name="Map" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XPath"><span data-ttu-id="fc367-653">Required <b>-Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-653">Required <b>Object</b>.</span></span> <span data-ttu-id="fc367-654">Der abzufragende XPath.</span><span class="sxs-lookup"><span data-stu-id="fc367-654">The XPath to query for.</span></span></param>
        <param name="SelectionNamespaces"><span data-ttu-id="fc367-655">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-655">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-656">Ein durch Leerzeichen getrennter <b>String</b>-Wert, der die Namespaces enthält, auf die im XPath-Parameter verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="fc367-656">A space-delimited <b>String</b> that contains the namespaces referenced in the XPath parameter.</span></span> <span data-ttu-id="fc367-657">Wenn einer der angegebenen Namespaces nicht aufgelöst werden kann, wird ein Laufzeitfehler generiert.</span><span class="sxs-lookup"><span data-stu-id="fc367-657">A run-time error will be generated if one of the specified namespaces cannot be resolved.</span></span></param>
        <param name="Map"><span data-ttu-id="fc367-658">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> .</span><span class="sxs-lookup"><span data-stu-id="fc367-658">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span></span> <span data-ttu-id="fc367-659">Geben Sie eine XML-Zuordnung an, wenn Sie innerhalb einer bestimmten Zuordnung den XPath abfragen möchten.</span><span class="sxs-lookup"><span data-stu-id="fc367-659">Specify an XML map if you want to query for the XPath within a specific map.</span></span></param>
        <summary><span data-ttu-id="fc367-660">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das die Zellen darstellt, die einem bestimmten XPath zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="fc367-660">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cells mapped to a particular XPath.</span></span> <span data-ttu-id="fc367-661">Gibt <b>Nothing zurück,</b> wenn der angegebene XPath nicht dem Arbeitsblatt zugeordnet wurde oder wenn der zugeordnete Bereich leer ist.</span><span class="sxs-lookup"><span data-stu-id="fc367-661">Returns <b>Nothing</b> if the specified XPath has not been mapped to the worksheet or if the mapped range is empty.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="fc367-662">XML-Features, mit Ausnahme des Speicherns von Dateien im XML-Tabellenkalkulationsformat, sind nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003 verfügbar.</span><span class="sxs-lookup"><span data-stu-id="fc367-662">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para><span data-ttu-id="fc367-663">Wenn der XPath innerhalb einer Spalte in <b></b> einer XML-Liste vorhanden ist, enthält das zurückgegebene Range -Objekt nicht die Kopfzeile oder die Zeile Einfügen.</span><span class="sxs-lookup"><span data-stu-id="fc367-663">If the XPath exists within a column in an XML list, the <b>Range</b> object returned does not include the header row or the Insert row.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlMapQuery">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range XmlMapQuery (string XPath, object SelectionNamespaces, object Map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range XmlMapQuery([in]string XPath, [in]object SelectionNamespaces, [in]object Map) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Worksheet.XmlMapQuery(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlMapQuery (XPath As String, Optional SelectionNamespaces As Object, Optional Map As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2263)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XPath" Type="System.String" />
        <Parameter Name="SelectionNamespaces" Type="System.Object" />
        <Parameter Name="Map" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XPath"><span data-ttu-id="fc367-664">Required <b>-Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-664">Required <b>Object</b>.</span></span> <span data-ttu-id="fc367-665">Der abzufragende XPath.</span><span class="sxs-lookup"><span data-stu-id="fc367-665">The XPath to query for.</span></span></param>
        <param name="SelectionNamespaces"><span data-ttu-id="fc367-666">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="fc367-666">Optional <b>Object</b>.</span></span> <span data-ttu-id="fc367-667">Ein durch Leerzeichen getrennter <b>String</b>-Wert, der die Namespaces enthält, auf die im XPath-Parameter verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="fc367-667">A space-delimited <b>String</b> that contains the namespaces referenced in the XPath parameter.</span></span> <span data-ttu-id="fc367-668">Wenn einer der angegebenen Namespaces nicht aufgelöst werden kann, wird ein Laufzeitfehler generiert.</span><span class="sxs-lookup"><span data-stu-id="fc367-668">A run-time error will be generated if one of the specified namespaces cannot be resolved.</span></span></param>
        <param name="Map"><span data-ttu-id="fc367-669">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> .</span><span class="sxs-lookup"><span data-stu-id="fc367-669">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span></span> <span data-ttu-id="fc367-670">Geben Sie eine XML-Zuordnung an, wenn Sie innerhalb einer bestimmten Zuordnung den XPath abfragen möchten.</span><span class="sxs-lookup"><span data-stu-id="fc367-670">Specify an XML map if you want to query for the XPath within a specific map.</span></span></param>
        <summary><span data-ttu-id="fc367-671">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das die Zellen darstellt, die einem bestimmten XPath zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="fc367-671">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cells mapped to a particular XPath.</span></span> <span data-ttu-id="fc367-672">Gibt <b>Nothing</b> zurück, wenn der angegebene XPath dem Arbeitsblatt nicht zugeordnet wurde.</span><span class="sxs-lookup"><span data-stu-id="fc367-672">Returns <b>Nothing</b> if the specified XPath has not been mapped to the worksheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="fc367-673">XML-Features, mit Ausnahme des Speicherns von Dateien im XML-Tabellenkalkulationsformat, sind nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003 verfügbar.</span><span class="sxs-lookup"><span data-stu-id="fc367-673">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para><span data-ttu-id="fc367-674">Im Gegensatz <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.XmlDataQuery(System.String,System.Object,System.Object)" /> zur Methode gibt die <b>XmlMapQuery -Methode</b> die gesamte Spalte einer XML-Liste zurück, einschließlich der Kopfzeile und der Insert-Zeile.</span><span class="sxs-lookup"><span data-stu-id="fc367-674">Unlike the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.XmlDataQuery(System.String,System.Object,System.Object)" /> method, the <b>XmlMapQuery</b> method returns the entire column of an XML list, including the header row and the Insert row.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
