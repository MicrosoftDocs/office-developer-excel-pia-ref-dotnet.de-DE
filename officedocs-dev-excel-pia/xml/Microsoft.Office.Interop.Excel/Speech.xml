<Type Name="Speech" FullName="Microsoft.Office.Interop.Excel.Speech">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1a463e61ce556cdcc28ee34539e04ed33852d6ca" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50009877" /></Metadata><TypeSignature Language="C#" Value="public interface Speech" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Speech" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Speech" />
  <TypeSignature Language="VB.NET" Value="Public Interface Speech" />
  <TypeSignature Language="C++ CLI" Value="public interface class Speech" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024466-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enthält Methoden und Eigenschaften, die auf die Sprache bezogen sind.</summary>
    <remarks><para>Verwenden Sie <see cref="P:Microsoft.Office.Interop.Excel._Application.Speech" /> die Eigenschaft des <see cref="T:Microsoft.Office.Interop.Excel.Application" /> Objekts, um ein Speech <b>-Objekt zurückzukehren.</b></para>
      <para>Nachdem ein <b>Speech</b> -Objekt zurückgegeben wurde, können Sie die Methode des Speech -Objekts verwenden, um den Inhalt <see cref="M:Microsoft.Office.Interop.Excel.Speech.Speak(System.String,System.Object,System.Object,System.Object)" /> einer Zeichenfolge wieder zu spielen. <b></b></para>
      <para>
        <b>Hinweis:</b>In der Setupstruktur ist eine Sprachfunktion für Diktier- und Befehlssteuerelemente eingerichtet, die &amp; nicht installiert werden müssen.</para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSpeakDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSpeakDirection Direction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Speech.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As XlSpeakDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSpeakDirection Direction { Microsoft::Office::Interop::Excel::XlSpeakDirection get(); void set(Microsoft::Office::Interop::Excel::XlSpeakDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSpeakDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Reihenfolge zurück, in der die Zellen ausgegeben werden, oder legt diese fest.</summary>
        <value>To be added.</value>
        <remarks><para>Der Wert der <b>Direction -Eigenschaft</b> ist eine <see cref="T:Microsoft.Office.Interop.Excel.XlSpeakDirection" /> Konstante.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (string Text, object SpeakAsync, object SpeakXML, object Purge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Speak([in]string Text, [in]object SpeakAsync, [in]object SpeakXML, [in]object Purge) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Speech.Speak(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (Text As String, Optional SpeakAsync As Object, Optional SpeakXML As Object, Optional Purge As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2017)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="SpeakAsync" Type="System.Object" />
        <Parameter Name="SpeakXML" Type="System.Object" />
        <Parameter Name="Purge" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text"><b>String</b> erforderlich. Der wiederzugebende Text.</param>
        <param name="SpeakAsync">Optionales <b>Objekt</b>. <b>"True"</b> verursacht das asynchrone Sprechen (die Methode wartet nicht auf <paramref name="Text" /> das <paramref name="Text" /> Gesprochene). <b>"False"</b> verursacht, dass das Wort synchron gesprochen wird (die Methode wartet, bis das Gesprochene erfolgt, <paramref name="Text" /> bevor es fortgesetzt <paramref name="Text" /> wird). Der Standardwert ist <b>False</b>.</param>
        <param name="SpeakXML">Optionaler <b>Boolean</b>-Wert. <b>"True"</b> wird <paramref name="Text" /> als XML interpretiert. <b>"False"</b> wird nicht als XML interpretiert, sodass alle XML-Tags <paramref name="Text" /> gelesen und nicht interpretiert werden. Der Standardwert ist <b>False</b>.</param>
        <param name="Purge">Optionales <b>Objekt</b>. <b>"True"</b> beendet die aktuelle Sprache, und der gepufferte Text wird gelöscht, bevor <paramref name="Text" /> er gesprochen wird. <b>"False"</b> wird nicht dazu führen, dass die aktuelle Sprache beendet wird, und der gepufferte Text wird nicht gelöscht, bevor <paramref name="Text" /> er gesprochen wird. Der Standardwert ist <b>False</b>.</param>
        <summary>Microsoft Excel gibt die angegebene Textzeichenfolge wieder.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakCellOnEnter">
      <MemberSignature Language="C#" Value="public bool SpeakCellOnEnter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SpeakCellOnEnter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Speech.SpeakCellOnEnter" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeakCellOnEnter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SpeakCellOnEnter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Microsoft Excel unterstützt einen Modus, bei dem der Inhalt der aktiven Zelle sprachlich ausgegeben wird, wenn die EINGABETASTE gedrückt wird oder die Bearbeitung der aktiven Zelle abgeschlossen ist. Wenn Sie für die <b>SpeakCellOnEnter</b>-Eigenschaft den Wert <b>True</b> festlegen, wird dieser Modus aktiviert. Bei <b>False</b> wird der Modus deaktiviert.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>