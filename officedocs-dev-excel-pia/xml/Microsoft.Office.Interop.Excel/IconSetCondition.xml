<Type Name="IconSetCondition" FullName="Microsoft.Office.Interop.Excel.IconSetCondition">
  <Metadata><Meta Name="ms.openlocfilehash" Value="60529c90129fadd3409df7f77d68bfab6f56e963" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50000211" /></Metadata><TypeSignature Language="C#" Value="public interface IconSetCondition" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IconSetCondition" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.IconSetCondition" />
  <TypeSignature Language="VB.NET" Value="Public Interface IconSetCondition" />
  <TypeSignature Language="C++ CLI" Value="public interface class IconSetCondition" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024497-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="38590-101">Stellt eine Regel zur bedingten Formatierung von Symbolsätzen dar.</span><span class="sxs-lookup"><span data-stu-id="38590-101">Represents an icon set conditional formatting rule.</span></span></summary>
    <remarks><para><span data-ttu-id="38590-102">Alle Bedingten Formatierungsobjekte sind in einem <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> Auflistungsobjekt enthalten, das ein untergeordnetes Objekt einer Auflistung <see cref="T:Microsoft.Office.Interop.Excel.Range" /> ist.</span><span class="sxs-lookup"><span data-stu-id="38590-102">All conditional formatting objects are contained within a <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection object, which is a child of a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> collection.</span></span> <span data-ttu-id="38590-103">Sie können eine Formatierungsregel für Symbolsatz erstellen, indem Sie entweder die Methode oder methode <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.AddIconSetCondition" /> der <b>FormatConditions -Auflistung</b> verwenden.</span><span class="sxs-lookup"><span data-stu-id="38590-103">You can create an icon set formatting rule by using either the <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method or <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.AddIconSetCondition" /> method of the <b>FormatConditions</b> collection.</span></span></para>
      <para><span data-ttu-id="38590-104">Jeder Symbolsatz enthält drei, vier oder fünf Symbole.</span><span class="sxs-lookup"><span data-stu-id="38590-104">Each icon set contains three, four, or five icons.</span></span> <span data-ttu-id="38590-105">Mit der Eigenschaft des Objekts geben Sie ein Objekt zurück, um einen der integrierten <see cref="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" /> <see cref="T:Microsoft.Office.Interop.Excel._Workbook" /> <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> Symbolsätze anzugeben.</span><span class="sxs-lookup"><span data-stu-id="38590-105">You use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" /> property of the <see cref="T:Microsoft.Office.Interop.Excel._Workbook" /> object to return an <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> object to specify one of the built-in icon sets.</span></span> <span data-ttu-id="38590-106">Jedes einzelne Symbol in der Symbolgruppe wird dann von den Mitgliedern der Obect einer Teilmenge der Werte des Bereichs <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" /> zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="38590-106">Each individual icon in the icon set is then assigned to a subset of the values of the range by the members of the <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" /> obect.</span></span> <span data-ttu-id="38590-107">Der Typ des Schwellenwerts wird ebenfalls von diesem Objekt angegeben.</span><span class="sxs-lookup"><span data-stu-id="38590-107">The type of threshold is also specified by this object.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38590-108">Wenn diese Eigenschaft ohne einen Objektbezeichner verwendet wird, gibt sie ein Objekt zurück, das die Microsoft Office  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> Excel-Anwendung darstellt.</span><span class="sxs-lookup"><span data-stu-id="38590-108">When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application.</span></span> <span data-ttu-id="38590-109">Wenn ohne einen Objektbezeichner verwendet wird, gibt diese Eigenschaft ein <b>Application</b> -Objekt, das den Ersteller des angegebenen Objekts darstellt.</span><span class="sxs-lookup"><span data-stu-id="38590-109">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object.</span></span> <span data-ttu-id="38590-110">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="38590-110">Read-only.</span></span></summary>
        <value><span data-ttu-id="38590-111"><b>Anwendung</b> (siehe oben)</span><span class="sxs-lookup"><span data-stu-id="38590-111"><b>Application</b> (see above)</span></span></value>
        <remarks><para><span data-ttu-id="38590-112">Sie können diese Eigenschaft mit einem OLE-Automatisierungsobjekt verwenden, um die Anwendung dieses Objekts zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="38590-112">You can use this property with an OLE Automation object to return the application of that object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AppliesTo">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range AppliesTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range AppliesTo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.AppliesTo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppliesTo As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ AppliesTo { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2626)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2626)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38590-113">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das den Zellbereich angibt, auf den die Formatierungsregel angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="38590-113">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object specifying the cell range to which the formatting rule is applied.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.Range" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38590-114">Gibt einen ganzzahligen 32-Bitwert zurück, der einem Wert entspricht, der die Anwendung angibt, in der <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> dieses Objekt erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="38590-114">Returns a 32-bit integer equivalent to an <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> value that indicates the application in which this object was created.</span></span> <span data-ttu-id="38590-115">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="38590-115">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /></value>
        <remarks><para><span data-ttu-id="38590-116">Wenn das Objekt in Microsoft Excel erstellt wurde, gibt die Eigenschaft die Zeichenfolge XCEL zurück, die der Hexadezimalzahl 5843454C entspricht.</span><span class="sxs-lookup"><span data-stu-id="38590-116">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span>  <span data-ttu-id="38590-117">Die <b>Creator</b> -Eigenschaft ist für die Verwendung in Microsoft Excel für Macintosh konzipiert, wobei jede Anwendung einen vier Zeichen großen Erstellercode hat.</span><span class="sxs-lookup"><span data-stu-id="38590-117">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="38590-118">Der Urhebercode für Microsoft Excel lautet "XCEL".</span><span class="sxs-lookup"><span data-stu-id="38590-118">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IconSetCondition.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38590-119">Löscht das angegebene Regelobjekt für die bedingte Formatierung.</span><span class="sxs-lookup"><span data-stu-id="38590-119">Deletes the specified conditional formatting rule object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula">
      <MemberSignature Language="C#" Value="public string Formula { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.Formula" />
      <MemberSignature Language="VB.NET" Value="Public Property Formula As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38590-120">Gibt einen Wert vom Typ <b>String</b> zurück, der eine Formel zum Bestimmen der Werte darstellt, auf die der Symbolsatz angewendet wird, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="38590-120">Returns or sets a <b>String</b> representing a formula, which determines the values to which the icon set will be applied.</span></span></summary>
        <value><span data-ttu-id="38590-121"><b>String</b></span><span class="sxs-lookup"><span data-stu-id="38590-121"><b>String</b></span></span></value>
        <remarks><para><span data-ttu-id="38590-p106">Diese Eigenschaft ist hilfreich, um den Wertebereich einzuschränken, in dem die bedingte Formatierung angezeigt wird. Ein typisches Szenario ist ein Bereich mit negativen und positiven Zahlen. Hier könnten Sie mehrere bedingte Formatierungen für diesen Zahlenbereich erstellen, eine für positive und eine für negative Werte.</span><span class="sxs-lookup"><span data-stu-id="38590-p106">This property is useful to limit the range of values that will display the conditional format. A typical scenario is when you have a range of numbers containing both positive and negative values. You may want to create more than one conditional format for this range of numbers—one for positive values and another for negative values.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IconCriteria">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.IconCriteria IconCriteria { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.IconCriteria IconCriteria" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.IconCriteria" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IconCriteria As IconCriteria" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::IconCriteria ^ IconCriteria { Microsoft::Office::Interop::Excel::IconCriteria ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2727)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2727)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.IconCriteria</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38590-125">Gibt eine Auflistung zurück, die den Kriteriensatz für eine Regel zur bedingten <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" /> Formatierung von Symbolen darstellt.</span><span class="sxs-lookup"><span data-stu-id="38590-125">Returns an <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" /> collection, which represents the set of criteria for an icon set conditional formatting rule.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" /></value>
        <remarks><para><span data-ttu-id="38590-126">Nachdem Sie die Auflistung erstellt haben, können Sie die Eigenschaft der Auflistung verwenden, <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" /> <see cref="P:Microsoft.Office.Interop.Excel.IconCriteria.Item(System.Object)" /> um ein Objekt <see cref="T:Microsoft.Office.Interop.Excel.IconCriterion" /> zurückzukehren.</span><span class="sxs-lookup"><span data-stu-id="38590-126">After you have the <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" />collection, you can use the <see cref="P:Microsoft.Office.Interop.Excel.IconCriteria.Item(System.Object)" /> property of the collection to return an <see cref="T:Microsoft.Office.Interop.Excel.IconCriterion" /> object.</span></span> <span data-ttu-id="38590-127">Das <see cref="T:Microsoft.Office.Interop.Excel.IconCriterion" /> Objekt stellt ein einzelnes Kriterium einer Symbolsatz dar.</span><span class="sxs-lookup"><span data-stu-id="38590-127">The <see cref="T:Microsoft.Office.Interop.Excel.IconCriterion" /> object represents a single criterion of an icon set.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IconSet">
      <MemberSignature Language="C#" Value="public object IconSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object IconSet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.IconSet" />
      <MemberSignature Language="VB.NET" Value="Public Property IconSet As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ IconSet { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2726)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2726)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2726)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38590-128">Gibt eine Auflistung zurück oder legt sie fest, die <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> den im bedingten Format verwendeten Symbolsatz angibt.</span><span class="sxs-lookup"><span data-stu-id="38590-128">Returns or sets an <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> collection, which specifies the icon set used in the conditional format.</span></span></summary>
        <value><span data-ttu-id="38590-129"><b>Objekt</b></span><span class="sxs-lookup"><span data-stu-id="38590-129"><b>Object</b></span></span></value>
        <remarks><para><span data-ttu-id="38590-130">Sie können den Symbolsatz mithilfe der Eigenschaft <see cref="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" /> des Objekts <see cref="T:Microsoft.Office.Interop.Excel._Workbook" /> zuweisen.</span><span class="sxs-lookup"><span data-stu-id="38590-130">You can assign the icon set by using the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" /> property of the <see cref="T:Microsoft.Office.Interop.Excel._Workbook" /> object.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAppliesToRange">
      <MemberSignature Language="C#" Value="public void ModifyAppliesToRange (Microsoft.Office.Interop.Excel.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ModifyAppliesToRange([in]class Microsoft.Office.Interop.Excel.Range Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IconSetCondition.ModifyAppliesToRange(Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ModifyAppliesToRange(Microsoft::Office::Interop::Excel::Range ^ Range);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2627)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Range"><span data-ttu-id="38590-131">Der Bereich, für den diese Formatierungsregel gilt.</span><span class="sxs-lookup"><span data-stu-id="38590-131">The range to which this formatting rule will be applied.</span></span></param>
        <summary><span data-ttu-id="38590-132">Legt den Zellbereich fest, für den diese Formatierungsregel gilt.</span><span class="sxs-lookup"><span data-stu-id="38590-132">Sets the cell range to which this formatting rule applies.</span></span></summary>
        <remarks><para><span data-ttu-id="38590-133">Der Bereich muss im Bezugsformat A1 enthalten sein und vollständig in dem Blatt enthalten sein, das das übergeordnete Element der Auflistung <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> ist.</span><span class="sxs-lookup"><span data-stu-id="38590-133">The range must be in the A1 reference style and be entirely contained within the sheet that is the parent of the <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection.</span></span> <span data-ttu-id="38590-134">Er kann den Bereichsoperator (Doppelpunkt), den Schnittmengenoperator (Leerzeichen) oder den Vereinigungsoperator (Komma) enthalten.</span><span class="sxs-lookup"><span data-stu-id="38590-134">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span></span> <span data-ttu-id="38590-135">Dollarzeichen können auch verwendet werden, sie werden aber ignoriert.</span><span class="sxs-lookup"><span data-stu-id="38590-135">Dollar signs can also be used but they are ignored.</span></span></para>
          <para><span data-ttu-id="38590-136">Sie können auch einen lokalen, definierten Namen in einem Teil des Bereichs verwenden, der Name muss aber in der Sprache des Makros angegeben sein.</span><span class="sxs-lookup"><span data-stu-id="38590-136">You can also use a local defined name in any part of the range, but the name must be in the language of the macro.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38590-137">Gibt das übergeordnete Objekt für das angegebene Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="38590-137">Returns the parent object for the specified object.</span></span> <span data-ttu-id="38590-138">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="38590-138">Read-only.</span></span></summary>
        <value><span data-ttu-id="38590-139"><b>Objekt</b></span><span class="sxs-lookup"><span data-stu-id="38590-139"><b>Object</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PercentileValues">
      <MemberSignature Language="C#" Value="public bool PercentileValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PercentileValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.PercentileValues" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentileValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PercentileValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2724)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2724)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2724)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38590-140">Gibt einen <b>Boolean</b>-Wert zurück, der angibt, ob die Schwellenwerte für eine bedingte Symbolsatzformatierung mithilfe von Perzentilen bestimmt werden, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="38590-140">Returns or sets a <b>Boolean</b> value indicating if the thresholds for an icon set conditional format are determined by using percentiles.</span></span></summary>
        <value><span data-ttu-id="38590-141"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="38590-141"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="38590-142">Diese Eigenschaft gibt <b>False</b> zurück, wenn nicht alle Schwellenwerttypen auf Perzentil festgelegt sind.</span><span class="sxs-lookup"><span data-stu-id="38590-142">This property will return <b>False</b> if not every threshold is set to percentile.</span></span> <span data-ttu-id="38590-143">Durch das Festlegen dieser Eigenschaft auf <b>True</b> werden alle Schwellenwerttypen auf Perzentil festgelegt.</span><span class="sxs-lookup"><span data-stu-id="38590-143">Setting this property to <b>True</b> will set every threshold type to percentile.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public int Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Priority { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38590-p112">Gibt den Prioritätswert der Regel zur bedingten Formatierung zurück oder legt ihn fest. Durch die Priorität wird die Reihenfolge der Auswertung bestimmt, wenn für ein Arbeitsblatt mehrere Regeln zur bedingten Formatierung vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="38590-p112">Returns or sets the priority value of the conditional formatting rule. The priority determines the order of evaluation when multiple conditional formatting rules exist in a worksheet.</span></span></summary>
        <value><span data-ttu-id="38590-146"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="38590-146"><b>Integer</b></span></span></value>
        <remarks><para><span data-ttu-id="38590-p113">Beim Festlegen der Priorität muss der Wert eine positive ganze Zahl zwischen 1 und der Gesamtanzahl von Regeln zur bedingten Formatierung auf dem Arbeitsblatt sein. Die Priorität muss ein eindeutiger Wert für alle Regeln des Arbeitsblatts sein. Das Ändern der Priorität für eine Regel zur bedingten Formatierung kann also dazu führen, dass sich die Prioritätswerte anderer Regeln des Arbeitsblatts ebenfalls ändern.</span><span class="sxs-lookup"><span data-stu-id="38590-p113">When setting the priority, the value must be a positive integer between 1 and the total number of conditional formatting rules on the worksheet. The priority must be a unique value for all rules on the worksheet, so changing the priority for the specified conditional formatting rule may cause the priority value of the other rules on the worksheet to be shifted.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PTCondition">
      <MemberSignature Language="C#" Value="public bool PTCondition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PTCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.PTCondition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PTCondition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PTCondition { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2631)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2631)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38590-149">Gibt einen <b>Boolean</b>-Wert zurück, der angibt, ob ein bedingtes Format auf ein PivotTable-Diagramm angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="38590-149">Returns a <b>Boolean</b> value indicating if the conditional format is being applied to a PivotTable chart.</span></span> <span data-ttu-id="38590-150">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="38590-150">Read-only.</span></span></summary>
        <value><span data-ttu-id="38590-151"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="38590-151"><b>Boolean</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseOrder">
      <MemberSignature Language="C#" Value="public bool ReverseOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReverseOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.ReverseOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property ReverseOrder As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReverseOrder { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2723)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2723)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2723)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38590-152">Gibt einen <b>Boolean</b>-Wert zurück, der angibt, ob die Reihenfolge der Symbole für einen Symbolsatz umgekehrt wurde, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="38590-152">Returns or sets a <b>Boolean</b> value indicating if the order of icons is reversed for an icon set.</span></span></summary>
        <value><span data-ttu-id="38590-153"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="38590-153"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="38590-p115">Die meisten Symbolsätze, die Sie verwenden können, verknüpfen standardmäßig positive Bilder mit höheren Werten. Beispielsweise verbindet der Symbolsatz "3 Ampel" einen grünen Kreis mit der oberen Wertschwelle und einen roten Kreis mit den niedrigsten Werten im Bereich. Wenn bei Ihren Daten jedoch niedrige Werte wünschenswert sind, z. B. bei den Laufzeiten eines Marathons, empfiehlt es sich, die Reihenfolge der Symbole, die dem Bereich zugewiesen sind, umzukehren, um den grünen Kreis mit den niedrigsten Werten zu verknüpfen.</span><span class="sxs-lookup"><span data-stu-id="38590-p115">By default, most of the icon sets you can use associate positive images with higher values. For example, the "3 Traffic Lights" icon set applies a green circle to the upper value threshold and a red circle to the lowest values in the range. If your data is such that lower values are more desirable, such as marathon time results, you may want to reverse the order that icons are applied to the range to associate the green circle to the lowest values.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ScopeType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPivotConditionScope ScopeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPivotConditionScope ScopeType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.ScopeType" />
      <MemberSignature Language="VB.NET" Value="Public Property ScopeType As XlPivotConditionScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPivotConditionScope ScopeType { Microsoft::Office::Interop::Excel::XlPivotConditionScope get(); void set(Microsoft::Office::Interop::Excel::XlPivotConditionScope value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPivotConditionScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38590-157">Gibt eine der Konstanten der Enumeration zurück oder legt sie fest, die den Bereich des bedingten Formats bestimmt, wenn es auf ein <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /> PivotTable-Diagramm angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="38590-157">Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /> enumeration, which determines the scope of the conditional format when it is applied to a PivotTable chart.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /></value>
        <remarks><para><span data-ttu-id="38590-158">Der Standardwert ist <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlSelectionScope" /> , der den Bereich mithilfe der Eigenschaft <see cref="P:Microsoft.Office.Interop.Excel.IconSetCondition.AppliesTo" /> legt.</span><span class="sxs-lookup"><span data-stu-id="38590-158">The default value is <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlSelectionScope" />, which sets the scope using the <see cref="P:Microsoft.Office.Interop.Excel.IconSetCondition.AppliesTo" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFirstPriority">
      <MemberSignature Language="C#" Value="public void SetFirstPriority ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFirstPriority() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IconSetCondition.SetFirstPriority" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFirstPriority ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFirstPriority();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2629)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38590-159">Legt den Prioritätswert für diese Regel zur bedingten Formatierung auf 1 fest, sodass die Regel vor allen anderen Regeln im Arbeitsblatt ausgewertet wird.</span><span class="sxs-lookup"><span data-stu-id="38590-159">Sets the priority value for this conditional formatting rule to "1" so that it will be evaluated before all other rules on the worksheet.</span></span></summary>
        <remarks><para><span data-ttu-id="38590-160">Wenn in einem Arbeitsblatt mehrere Regeln für die bedingte Formatierung vorhanden sind und die Regel zuvor nicht auf Priorität "1" festgelegt war, erhöht diese Methode die Priorität aller anderen vorhandenen Regeln auf dem Arbeitsblatt um eins.</span><span class="sxs-lookup"><span data-stu-id="38590-160">When you have multiple conditional formatting rules in a worksheet, if the rule was not previously set to priority "1", this method will cause the priority of all other existing rules on the worksheet to be increased by one.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLastPriority">
      <MemberSignature Language="C#" Value="public void SetLastPriority ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLastPriority() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.IconSetCondition.SetLastPriority" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLastPriority ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLastPriority();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2630)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="38590-161">Legt die Auswertungsreihenfolge für diese Regel zur bedingten Formatierung fest, sodass sie nach allen anderen Regeln im Arbeitsblatt ausgewertet wird.</span><span class="sxs-lookup"><span data-stu-id="38590-161">Sets the evaluation order for this conditional formatting rule so it is evaluated after all other rules on the worksheet.</span></span></summary>
        <remarks><para><span data-ttu-id="38590-162">Der tatsächliche Wert der Priorität entspricht der Gesamtanzahl bedingter Formatierungsregeln auf dem Arbeitsblatt.</span><span class="sxs-lookup"><span data-stu-id="38590-162">The actual value of the priority will be equal to the total number of conditional formatting rules on the worksheet.</span></span> <span data-ttu-id="38590-163">Wenn ein Arbeitsblatt mehrere Regeln zur bedingten Formatierung enthält, erhöht diese Methode die Priorität von Regeln, deren Prioritätswert höher als diese Regel war, um eins.</span><span class="sxs-lookup"><span data-stu-id="38590-163">When you have multiple conditional formatting rules in a worksheet, this method will cause the priority of rules that had a priority value greater than this rule to be increased by one.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowIconOnly">
      <MemberSignature Language="C#" Value="public bool ShowIconOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowIconOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.ShowIconOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowIconOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowIconOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2725)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2725)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2725)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38590-164">Gibt einen <b>Boolean</b>-Wert zurück, der angibt, ob für die bedingte Formatierung eines Symbolsatzes nur das Symbol angezeigt wird, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="38590-164">Returns or sets a <b>Boolean</b> value indicating if only the icon is displayed for an icon set conditional format.</span></span></summary>
        <value><span data-ttu-id="38590-165"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="38590-165"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="38590-166">Der Standardwert für diese Eigenschaft ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="38590-166">The default value for this property is <b>False</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="StopIfTrue">
      <MemberSignature Language="C#" Value="public bool StopIfTrue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StopIfTrue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.StopIfTrue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StopIfTrue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StopIfTrue { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2625)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38590-167">Gibt einen <b>Boolean</b>-Wert zurück, der bestimmt, ob zusätzliche Formatierungsregeln für die Zelle ausgewertet werden sollen, wenn die aktuelle Regel zu <b>True</b> ausgewertet wird, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="38590-167">Returns or sets a <b>Boolean</b> value that determines if additional formatting rules on the cell should be evaluated if the current rule evaluates to <b>True</b>.</span></span></summary>
        <value><span data-ttu-id="38590-168"><b>Boolean</b></span><span class="sxs-lookup"><span data-stu-id="38590-168"><b>Boolean</b></span></span></value>
        <remarks><para><span data-ttu-id="38590-169">Zur Unterstützung der Abwärtskompatibilität lautet der Standardwert für diese Eigenschaft <b>True</b>, dies ist das Gegenteil des Verhaltens einer Formatierungsregel, die auf der Benutzeroberfläche erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="38590-169">To support backward compatibility, the default value for this property is <b>True</b>, which is the opposite behavior of a formatting rule created in the user interface.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconSetCondition.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Type { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="38590-170">Gibt eine der Konstanten der Enumeration zurück, die <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" /> den Typ des bedingten Formats angibt.</span><span class="sxs-lookup"><span data-stu-id="38590-170">Returns one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" /> enumeration, which specifies the type of conditional format.</span></span> <span data-ttu-id="38590-171">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="38590-171">Read-only.</span></span></summary>
        <value><span data-ttu-id="38590-172"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="38590-172"><b>Integer</b></span></span></value>
        <remarks><para><span data-ttu-id="38590-173">Diese Eigenschaft gibt immer den Wert 6 zurück, der gleichbedeutend mit <see cref="T:Microsoft.Office.Interop.Excel.XlIconSet" /> .</span><span class="sxs-lookup"><span data-stu-id="38590-173">This property will always return a value of 6, which is equivalent to <see cref="T:Microsoft.Office.Interop.Excel.XlIconSet" />.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>