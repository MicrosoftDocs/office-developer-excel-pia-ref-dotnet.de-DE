<Type Name="Validation" FullName="Microsoft.Office.Interop.Excel.Validation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="64490ccfa07c156fb946aaf6fbcab62bd0310122" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50009352" /></Metadata><TypeSignature Language="C#" Value="public interface Validation" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Validation" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Validation" />
  <TypeSignature Language="VB.NET" Value="Public Interface Validation" />
  <TypeSignature Language="C++ CLI" Value="public interface class Validation" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002442F-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6e677-101">Stellt die Datenüberprüfung eines Arbeitsblattbereichs dar.</span><span class="sxs-lookup"><span data-stu-id="6e677-101">Represents data validation for a worksheet range.</span></span></summary>
    <remarks><para><span data-ttu-id="6e677-102">Verwenden Sie die <see cref="P:Microsoft.Office.Interop.Excel.Range.Validation" /> Eigenschaft, um das <b>Validation -Objekt zurück.</b></span><span class="sxs-lookup"><span data-stu-id="6e677-102">Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Validation" /> property to return the <b>Validation</b> object.</span></span></para>
      <para><span data-ttu-id="6e677-103">Verwenden Sie <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> die Methode, um einem Bereich eine Datenüberprüfung hinzuzufügen und ein neues Validation <b>-Objekt zu</b> erstellen.</span><span class="sxs-lookup"><span data-stu-id="6e677-103">Use the <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> method to add data validation to a range and create a new <b>Validation</b> object.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.Office.Interop.Excel.XlDVType Type, object AlertStyle, object Operator, object Formula1, object Formula2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add([in]valuetype Microsoft.Office.Interop.Excel.XlDVType Type, [in]object AlertStyle, [in]object Operator, [in]object Formula1, [in]object Formula2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (Type As XlDVType, Optional AlertStyle As Object, Optional Operator As Object, Optional Formula1 As Object, Optional Formula2 As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDVType" />
        <Parameter Name="AlertStyle" Type="System.Object" />
        <Parameter Name="Operator" Type="System.Object" />
        <Parameter Name="Formula1" Type="System.Object" />
        <Parameter Name="Formula2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="6e677-104"><see cref="T:Microsoft.Office.Interop.Excel.XlDVType" />Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="6e677-104">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" />.</span></span> <span data-ttu-id="6e677-105">Der Überprüfungstyp.</span><span class="sxs-lookup"><span data-stu-id="6e677-105">The validation type.</span></span></param>
        <param name="AlertStyle"><span data-ttu-id="6e677-106">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="6e677-106">Optional <b>Object</b>.</span></span> <span data-ttu-id="6e677-107">Der Stil der Überprüfungswarnung.</span><span class="sxs-lookup"><span data-stu-id="6e677-107">The validation alert style.</span></span> <span data-ttu-id="6e677-108">Dies kann eine der folgenden Konstanten <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" /> sein: <b>xlValidAlertInformation</b>, <b>xlValidAlertStop</b>oder <b>xlValidAlertWarning</b>.</span><span class="sxs-lookup"><span data-stu-id="6e677-108">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" /> constants: <b>xlValidAlertInformation</b>, <b>xlValidAlertStop</b>, or <b>xlValidAlertWarning</b>.</span></span></param>
        <param name="Operator"><span data-ttu-id="6e677-109">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="6e677-109">Optional <b>Object</b>.</span></span> <span data-ttu-id="6e677-110">Der Operator für die Datenüberprüfung.</span><span class="sxs-lookup"><span data-stu-id="6e677-110">The data validation operator.</span></span> <span data-ttu-id="6e677-111">Kann eine der folgenden Konstanten <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" /> sein: <b>xlBetween</b>, <b>xlEqual</b>, <b>xlGreater</b>, <b>xlGreaterEqual</b>, <b>xlLess</b>, <b>xlLessEqual</b>, <b>xlNotBetween</b>oder <b>xlNotEqual</b>.</span><span class="sxs-lookup"><span data-stu-id="6e677-111">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" /> constants: <b>xlBetween</b>, <b>xlEqual</b>, <b>xlGreater</b>, <b>xlGreaterEqual</b>, <b>xlLess</b>, <b>xlLessEqual</b>, <b>xlNotBetween</b>, or <b>xlNotEqual</b>.</span></span></param>
        <param name="Formula1"><span data-ttu-id="6e677-112">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="6e677-112">Optional <b>Object</b>.</span></span> <span data-ttu-id="6e677-113">Der erste Teil der Datenüberprüfungsgleichung.</span><span class="sxs-lookup"><span data-stu-id="6e677-113">The first part of the data validation equation.</span></span></param>
        <param name="Formula2"><span data-ttu-id="6e677-114">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="6e677-114">Optional <b>Object</b>.</span></span> <span data-ttu-id="6e677-115">Der zweite Teil der Datenüberprüfung, wenn <paramref name="Operator" /> <b>xlBetween</b> oder <b>xlNotBetween</b> ist (andernfalls wird dieses Argument ignoriert).</span><span class="sxs-lookup"><span data-stu-id="6e677-115">The second part of the data validation when <paramref name="Operator" /> is <b>xlBetween</b> or <b>xlNotBetween</b> (otherwise, this argument is ignored).</span></span></param>
        <summary><span data-ttu-id="6e677-116">Fügt dem angegebenen Bereich eine Datenüberprüfung hinzu.</span><span class="sxs-lookup"><span data-stu-id="6e677-116">Adds data validation to the specified range.</span></span></summary>
        <remarks><para><span data-ttu-id="6e677-117">Die Methode "Add" erfordert je nach Überprüfungstyp unterschiedliche Argumente, wie in der folgenden Tabelle dargestellt.</span><span class="sxs-lookup"><span data-stu-id="6e677-117">The Add method requires different arguments, depending on the validation type, as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="6e677-118">
                <b>xlValidateCustom</b>
              </span><span class="sxs-lookup"><span data-stu-id="6e677-118">
                <b>xlValidateCustom</b>
              </span></span></term>
              <description><span data-ttu-id="6e677-119">
                <paramref name="Formula1" /> ist erforderlich; <paramref name="Formula2" /> wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="6e677-119">
                <paramref name="Formula1" /> is required; <paramref name="Formula2" /> is ignored.</span></span> <span data-ttu-id="6e677-120"><paramref name="Formula1" /> muss einen Ausdruck enthalten, der zu <b>"True"</b> ausgewertet wird, wenn die Dateneingabe gültig ist, und <b>"False",</b> wenn die Dateneingabe ungültig ist.</span><span class="sxs-lookup"><span data-stu-id="6e677-120"><paramref name="Formula1" /> must contain an expression that evaluates to <b>True</b> when data entry is valid and <b>False</b> when data entry is invalid.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="6e677-121">
                <b>xlInputOnly</b>
              </span><span class="sxs-lookup"><span data-stu-id="6e677-121">
                <b>xlInputOnly</b>
              </span></span></term>
              <description><span data-ttu-id="6e677-122">
                <paramref name="AlertStyle" /><paramref name="Formula1" />, oder werden <paramref name="Formula2" /> verwendet.</span><span class="sxs-lookup"><span data-stu-id="6e677-122">
                <paramref name="AlertStyle" />, <paramref name="Formula1" />, or <paramref name="Formula2" /> are used.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="6e677-123">
                <b>xlValidateList</b>
              </span><span class="sxs-lookup"><span data-stu-id="6e677-123">
                <b>xlValidateList</b>
              </span></span></term>
              <description><span data-ttu-id="6e677-124">
                <paramref name="Formula1" /> ist erforderlich; <paramref name="Formula2" /> wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="6e677-124">
                <paramref name="Formula1" /> is required; <paramref name="Formula2" /> is ignored.</span></span> <span data-ttu-id="6e677-125"><paramref name="Formula1" /> muss entweder eine durch Trennzeichen getrennte Liste von Werten oder einen Arbeitsblattverweis auf diese Liste enthalten.</span><span class="sxs-lookup"><span data-stu-id="6e677-125"><paramref name="Formula1" /> must contain either a comma-delimited list of values or a worksheet reference to this list.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="6e677-126">
                <b>xlValidateWholeNumber</b>, <b>xlValidateDate</b>, <b>xlValidateDecimal</b>, <b>xlValidateTextLength</b> oder <b>xlValidateTime</b></span><span class="sxs-lookup"><span data-stu-id="6e677-126">
                <b>xlValidateWholeNumber</b>, <b>xlValidateDate</b>, <b>xlValidateDecimal</b>, <b>xlValidateTextLength</b>, or <b>xlValidateTime</b></span></span></term>
              <description><span data-ttu-id="6e677-127">Einer von <paramref name="Formula1" /> beiden oder muss angegeben <paramref name="Formula2" /> werden, oder beides kann angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="6e677-127">One of either <paramref name="Formula1" /> or <paramref name="Formula2" /> must be specified, or both may be specified.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AlertStyle">
      <MemberSignature Language="C#" Value="public int AlertStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AlertStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.AlertStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlertStyle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AlertStyle { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1605)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1605)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e677-128">Gibt den Stil der Gültigkeitswarnung zurück.</span><span class="sxs-lookup"><span data-stu-id="6e677-128">Returns the validation alert style.</span></span> <span data-ttu-id="6e677-129"><see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" />Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="6e677-129">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="6e677-130">Verwenden Sie <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> die Methode, um den Warnungsstil für einen Bereich festlegen.</span><span class="sxs-lookup"><span data-stu-id="6e677-130">Use the <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> method to set the alert style for a range.</span></span> <span data-ttu-id="6e677-131">Wenn der Bereich bereits über eine Datenüberprüfung verfügt, verwenden Sie die <see cref="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)" /> Methode, um den Warnungsstil zu ändern.</span><span class="sxs-lookup"><span data-stu-id="6e677-131">If the range already has data validation, use the <see cref="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to change the alert style.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e677-132">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> Objekt zurück, das die Microsoft Excel-Anwendung darstellt.</span><span class="sxs-lookup"><span data-stu-id="6e677-132">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e677-133">Gibt einen ganzzahligen 32-Bit-Wert zurück, der die Anwendung angibt, in der dieses Objekt erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="6e677-133">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="6e677-134">Wenn das Objekt in Microsoft Excel erstellt wurde, gibt die Eigenschaft die Zeichenfolge XCEL zurück, die der Hexadezimalzahl 5843454C entspricht.</span><span class="sxs-lookup"><span data-stu-id="6e677-134">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="6e677-135"><see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="6e677-135">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="6e677-136">Die <b>Creator</b>-Eigenschaft wurde speziell für den Einsatz in Microsoft Excel für den Macintosh geschaffen, wo jede Anwendung einen Urhebercode aus vier Zeichen besitzt.</span><span class="sxs-lookup"><span data-stu-id="6e677-136">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="6e677-137">Der Urhebercode für Microsoft Excel lautet "XCEL".</span><span class="sxs-lookup"><span data-stu-id="6e677-137">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Validation.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e677-138">Löscht das Objekt.</span><span class="sxs-lookup"><span data-stu-id="6e677-138">Deletes the object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorMessage">
      <MemberSignature Language="C#" Value="public string ErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorMessage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.ErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1609)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1609)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1609)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e677-139">Gibt die Fehlermeldung zur Validierung zurück oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="6e677-139">Returns or sets the data validation error message.</span></span> <span data-ttu-id="6e677-140"><b>Zeichenfolge</b> mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="6e677-140">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorTitle">
      <MemberSignature Language="C#" Value="public string ErrorTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.ErrorTitle" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1610)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e677-141">Gibt den Titel des Dialogfelds zu Fehlern bei der Datenüberprüfung zurück oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="6e677-141">Returns or sets the title of the data-validation error dialog box.</span></span> <span data-ttu-id="6e677-142"><b>Zeichenfolge</b> mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="6e677-142">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula1">
      <MemberSignature Language="C#" Value="public string Formula1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Formula1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Formula1 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula1 { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1579)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1579)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e677-p114">Gibt den Wert oder Ausdruck zurück, der mit dem bedingten Format oder der Datenüberprüfung verknüpft ist. Kann ein konstanter Wert, ein Zeichenfolgenwert, ein Zellenbezug oder eine Formel sein. Schreibgeschützter <b>String</b>-Wert.</span><span class="sxs-lookup"><span data-stu-id="6e677-p114">Returns the value or expression associated with the conditional format or data validation. Can be a constant value, a string value, a cell reference, or a formula. Read-only <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula2">
      <MemberSignature Language="C#" Value="public string Formula2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Formula2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Formula2 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula2 { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1580)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1580)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e677-146">Gibt den Wert oder Ausdruck zurück, der mit dem zweiten Teil eines bedingten Formats oder der Datenüberprüfung verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="6e677-146">Returns the value or expression associated with the second part of a conditional format or data validation.</span></span> <span data-ttu-id="6e677-147">Schreibgeschützte <b>Zeichenfolge</b>.</span><span class="sxs-lookup"><span data-stu-id="6e677-147">Read-only <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="6e677-148">Diese Eigenschaft wird nur verwendet, wenn die bedingte Formateigenschaft der Datenüberprüfung <see cref="P:Microsoft.Office.Interop.Excel.Validation.Operator" /> <b>xlBetween</b> oder <b>xlNotBetween ist.</b></span><span class="sxs-lookup"><span data-stu-id="6e677-148">This property is used only when the data validation conditional format <see cref="P:Microsoft.Office.Interop.Excel.Validation.Operator" /> property is <b>xlBetween</b> or <b>xlNotBetween</b>.</span></span> <span data-ttu-id="6e677-149">Dabei kann es sich um einen konstanten Wert, einen Zeichenfolgenwert, einen Zellbezug oder eine Formel sein.</span><span class="sxs-lookup"><span data-stu-id="6e677-149">It can be a constant value, a string value, a cell reference, or a formula.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreBlank">
      <MemberSignature Language="C#" Value="public bool IgnoreBlank { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreBlank" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.IgnoreBlank" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreBlank As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreBlank { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1606)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1606)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1606)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e677-150"><b>True</b>, wenn leere Werte durch die Validierung des Bereichs erlaubt sind.</span><span class="sxs-lookup"><span data-stu-id="6e677-150"><b>True</b> if blank values are permitted by the range data validation.</span></span> <span data-ttu-id="6e677-151"><b>Boolescher</b> Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="6e677-151">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="6e677-152">Wenn die <b>IgnoreBlank -Eigenschaft</b> <b>True</b>ist, werden Zelldaten als gültig betrachtet, wenn die Zelle leer ist oder wenn eine Zelle, auf die durch die oder -Eigenschaft verwiesen <see cref="P:Microsoft.Office.Interop.Excel.ListDataFormat.MinNumber" /> <see cref="P:Microsoft.Office.Interop.Excel.ListDataFormat.MaxNumber" /> wird, leer ist.</span><span class="sxs-lookup"><span data-stu-id="6e677-152">If the <b>IgnoreBlank</b> property is <b>True</b>, cell data is considered valid if the cell is blank, or if a cell referenced by either the <see cref="P:Microsoft.Office.Interop.Excel.ListDataFormat.MinNumber" /> or <see cref="P:Microsoft.Office.Interop.Excel.ListDataFormat.MaxNumber" /> property is blank.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IMEMode">
      <MemberSignature Language="C#" Value="public int IMEMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IMEMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.IMEMode" />
      <MemberSignature Language="VB.NET" Value="Public Property IMEMode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IMEMode { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1607)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1607)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1607)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e677-153">Gibt die Beschreibung der japanischen Eingaberegeln zurück oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="6e677-153">Returns or sets the description of the Japanese input rules.</span></span> <span data-ttu-id="6e677-154">Dies kann eine der <see cref="T:Microsoft.Office.Interop.Excel.XlIMEMode" /> Konstanten sein.</span><span class="sxs-lookup"><span data-stu-id="6e677-154">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlIMEMode" /> constants.</span></span> <span data-ttu-id="6e677-155"><b>Ganze Zahl</b> mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="6e677-155">Read/write <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="6e677-156">Beachten Sie, dass diese Eigenschaft nur festgelegt werden kann, wenn die japanische Sprachunterstützung installiert und aktiviert wurde.</span><span class="sxs-lookup"><span data-stu-id="6e677-156">Note that this property can be set only when Japanese language support has been installed and selected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InCellDropdown">
      <MemberSignature Language="C#" Value="public bool InCellDropdown { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InCellDropdown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.InCellDropdown" />
      <MemberSignature Language="VB.NET" Value="Public Property InCellDropdown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InCellDropdown { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1608)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1608)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1608)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e677-157"><b>True</b>, wenn die Validierung ein Dropdown-Listenfeld mit gültigen Werten anzeigt.</span><span class="sxs-lookup"><span data-stu-id="6e677-157"><b>True</b> if data validation displays a drop-down list that contains acceptable values.</span></span> <span data-ttu-id="6e677-158"><b>Boolescher</b> Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="6e677-158">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="6e677-159">Diese Eigenschaft wird ignoriert, wenn es sich beim Gültigkeitstyp nicht um eine <b>xlValidateList</b>-Konstante handelt.</span><span class="sxs-lookup"><span data-stu-id="6e677-159">This property is ignored if the validation type isn’t <b>xlValidateList</b>.</span></span></para>
          <para><span data-ttu-id="6e677-160">Verwenden Sie das Argument oder die Methode des Objekts, um den Bereich <paramref name="Minimum" /> <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> <see cref="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)" /> <see cref="T:Microsoft.Office.Interop.Excel.Validation" /> anzugeben, der gültige Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="6e677-160">Use the <paramref name="Minimum" /> argument of the <see cref="M:Microsoft.Office.Interop.Excel.Validation.Add(Microsoft.Office.Interop.Excel.XlDVType,System.Object,System.Object,System.Object,System.Object)" /> or <see cref="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Validation" /> object to specify the range that contains valid data.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InputMessage">
      <MemberSignature Language="C#" Value="public string InputMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputMessage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.InputMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property InputMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InputMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1611)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1611)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1611)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e677-161">Gibt die Eingabemeldung der Validierung zurück oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="6e677-161">Returns or sets the data validation input message.</span></span> <span data-ttu-id="6e677-162"><b>Zeichenfolge</b> mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="6e677-162">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputTitle">
      <MemberSignature Language="C#" Value="public string InputTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputTitle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.InputTitle" />
      <MemberSignature Language="VB.NET" Value="Public Property InputTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InputTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1612)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1612)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1612)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e677-163">Gibt den Titel des Dialogfelds zur Eingabe der Gültigkeitsprüfung zurück oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="6e677-163">Returns or sets the title of the data-validation input dialog box.</span></span> <span data-ttu-id="6e677-164"><b>Zeichenfolge</b> mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="6e677-164">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modify">
      <MemberSignature Language="C#" Value="public void Modify (object Type, object AlertStyle, object Operator, object Formula1, object Formula2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Modify([in]object Type, [in]object AlertStyle, [in]object Operator, [in]object Formula1, [in]object Formula2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Validation.Modify(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Modify (Optional Type As Object, Optional AlertStyle As Object, Optional Operator As Object, Optional Formula1 As Object, Optional Formula2 As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1581)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="AlertStyle" Type="System.Object" />
        <Parameter Name="Operator" Type="System.Object" />
        <Parameter Name="Formula1" Type="System.Object" />
        <Parameter Name="Formula2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="6e677-165"><see cref="T:Microsoft.Office.Interop.Excel.XlDVType" />Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="6e677-165">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" />.</span></span> <span data-ttu-id="6e677-166">Der Überprüfungstyp.</span><span class="sxs-lookup"><span data-stu-id="6e677-166">The validation type.</span></span></param>
        <param name="AlertStyle"><span data-ttu-id="6e677-167">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" /> .</span><span class="sxs-lookup"><span data-stu-id="6e677-167">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDVAlertStyle" />.</span></span> <span data-ttu-id="6e677-168">Der Stil der Überprüfungswarnung.</span><span class="sxs-lookup"><span data-stu-id="6e677-168">The validation alert style.</span></span></param>
        <param name="Operator"><span data-ttu-id="6e677-169">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" /> .</span><span class="sxs-lookup"><span data-stu-id="6e677-169">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" />.</span></span> <span data-ttu-id="6e677-170">Der Operator für die Datenüberprüfung.</span><span class="sxs-lookup"><span data-stu-id="6e677-170">The data validation operator.</span></span></param>
        <param name="Formula1"><span data-ttu-id="6e677-171">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="6e677-171">Optional <b>Object</b>.</span></span> <span data-ttu-id="6e677-172">Der erste Teil der Datenüberprüfungsgleichung.</span><span class="sxs-lookup"><span data-stu-id="6e677-172">The first part of the data validation equation.</span></span></param>
        <param name="Formula2"><span data-ttu-id="6e677-173">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="6e677-173">Optional <b>Object</b>.</span></span> <span data-ttu-id="6e677-174">Der zweite Teil der Datenüberprüfung, wenn <paramref name="Operator" /> <b>xlBetween</b> oder <b>xlNotBetween</b> ist (andernfalls wird dieses Argument ignoriert).</span><span class="sxs-lookup"><span data-stu-id="6e677-174">The second part of the data validation when <paramref name="Operator" /> is <b>xlBetween</b> or <b>xlNotBetween</b> (otherwise, this argument is ignored).</span></span></param>
        <summary><span data-ttu-id="6e677-175">Ändert die Datenüberprüfung für einen Bereich.</span><span class="sxs-lookup"><span data-stu-id="6e677-175">Modifies data validation for a range.</span></span></summary>
        <remarks><para><span data-ttu-id="6e677-176">Für die <b>Modify</b>-Methode sind je nach Überprüfungstyp verschiedene Argumente erforderlich, wie in der folgenden Tabelle dargestellt.</span><span class="sxs-lookup"><span data-stu-id="6e677-176">The <b>Modify</b> method requires different arguments, depending on the validation type, as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="6e677-177">
                <b>xlInputOnly</b>
              </span><span class="sxs-lookup"><span data-stu-id="6e677-177">
                <b>xlInputOnly</b>
              </span></span></term>
              <description><span data-ttu-id="6e677-178">
                <paramref name="AlertStyle" />, <paramref name="Formula1" /> und werden nicht <paramref name="Formula2" /> verwendet.</span><span class="sxs-lookup"><span data-stu-id="6e677-178">
                <paramref name="AlertStyle" />, <paramref name="Formula1" />, and <paramref name="Formula2" /> are not used.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="6e677-179">
                <b>xlValidateCustom</b>
              </span><span class="sxs-lookup"><span data-stu-id="6e677-179">
                <b>xlValidateCustom</b>
              </span></span></term>
              <description><span data-ttu-id="6e677-180">
                <paramref name="Formula1" /> ist erforderlich; <paramref name="Formula2" /> wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="6e677-180">
                <paramref name="Formula1" /> is required; <paramref name="Formula2" /> is ignored.</span></span> <span data-ttu-id="6e677-181"><paramref name="Formula1" /> muss einen Ausdruck enthalten, der zu <b>"True"</b> ausgewertet wird, wenn die Dateneingabe gültig ist, und <b>"False",</b> wenn die Dateneingabe ungültig ist.</span><span class="sxs-lookup"><span data-stu-id="6e677-181"><paramref name="Formula1" /> must contain an expression that evaluates to <b>True</b> when data entry is valid and <b>False</b> when data entry is invalid.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="6e677-182">
                <b>xlValidateList</b>
              </span><span class="sxs-lookup"><span data-stu-id="6e677-182">
                <b>xlValidateList</b>
              </span></span></term>
              <description><span data-ttu-id="6e677-183">
                <paramref name="Formula1" /> ist erforderlich; <paramref name="Formula2" /> wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="6e677-183">
                <paramref name="Formula1" /> is required; <paramref name="Formula2" /> is ignored.</span></span> <span data-ttu-id="6e677-184"><paramref name="Formula1" /> muss entweder eine durch Trennzeichen getrennte Liste von Werten oder einen Arbeitsblattverweis auf die Liste enthalten.</span><span class="sxs-lookup"><span data-stu-id="6e677-184"><paramref name="Formula1" /> must contain either a comma-delimited list of values or a worksheet reference to the list.</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="6e677-185">
                <b>xlValidateDate</b>, <b>xlValidateDecimal</b>, <b>xlValidateTextLength</b>, <b>xlValidateTime</b> oder <b>xlValidateWholeNumber</b></span><span class="sxs-lookup"><span data-stu-id="6e677-185">
                <b>xlValidateDate</b>, <b>xlValidateDecimal</b>, <b>xlValidateTextLength</b>, <b>xlValidateTime</b>, or <b>xlValidateWholeNumber</b></span></span></term>
              <description><span data-ttu-id="6e677-186">
                <paramref name="Formula1" /> oder <paramref name="Formula2" /> beides muss angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="6e677-186">
                <paramref name="Formula1" /> or <paramref name="Formula2" />, or both, must be specified.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Operator">
      <MemberSignature Language="C#" Value="public int Operator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Operator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Operator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Operator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Operator { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e677-187">Gibt den Operator für das bedingte Format oder die Datenüberprüfung zurück.</span><span class="sxs-lookup"><span data-stu-id="6e677-187">Returns the operator for the conditional format or data validation.</span></span> <span data-ttu-id="6e677-188">Schreibgeschützte <b>ganze Zahl</b>.</span><span class="sxs-lookup"><span data-stu-id="6e677-188">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e677-189">Gibt das übergeordnete Objekt für das angegebene Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="6e677-189">Returns the parent object for the specified object.</span></span> <span data-ttu-id="6e677-190">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="6e677-190">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowError">
      <MemberSignature Language="C#" Value="public bool ShowError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.ShowError" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowError { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1613)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1613)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1613)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e677-191"><b>True</b>, falls die Fehlermeldung der Datenüberprüfung immer angezeigt wird, wenn der Benutzer ungültige Daten eingibt.</span><span class="sxs-lookup"><span data-stu-id="6e677-191"><b>True</b> if the data validation error message will be displayed whenever the user enters invalid data.</span></span> <span data-ttu-id="6e677-192"><b>Boolescher</b> Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="6e677-192">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowInput">
      <MemberSignature Language="C#" Value="public bool ShowInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowInput" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.ShowInput" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowInput { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1614)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1614)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1614)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e677-193"><b>True</b>, falls die Eingabemeldung der Datenüberprüfung immer angezeigt wird, wenn der Benutzer eine Zelle im Datenüberprüfungsbereich markiert.</span><span class="sxs-lookup"><span data-stu-id="6e677-193"><b>True</b> if the data validation input message will be displayed whenever the user selects a cell in the data validation range.</span></span> <span data-ttu-id="6e677-194"><b>Boolescher</b> Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="6e677-194">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Type { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e677-195">Gibt die Datentypüberprüfung für einen Bereich zurück.</span><span class="sxs-lookup"><span data-stu-id="6e677-195">Returns data type validation for a range.</span></span> <span data-ttu-id="6e677-196">Read-only <b>Ganze</b> Zahl, die eine der Konstanten von <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" /> sein kann.</span><span class="sxs-lookup"><span data-stu-id="6e677-196">Read-only <b>Integer</b> that can be one of the constants of <see cref="T:Microsoft.Office.Interop.Excel.XlDVType" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public bool Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Validation.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Value { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e677-197"><b>True,</b> Wenn alle Überprüfungskriterien erfüllt sind (d. h., wenn der Bereich gültige Daten enthält).</span><span class="sxs-lookup"><span data-stu-id="6e677-197"><b>True</b> if all the validation criteria are met (that is, if the range contains valid data).</span></span> <span data-ttu-id="6e677-198">Schreibgeschützter <b>boolescher</b> Wert.</span><span class="sxs-lookup"><span data-stu-id="6e677-198">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>