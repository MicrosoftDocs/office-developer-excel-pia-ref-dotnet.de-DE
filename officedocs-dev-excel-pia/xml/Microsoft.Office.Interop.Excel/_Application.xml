<Type Name="_Application" FullName="Microsoft.Office.Interop.Excel._Application">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7e1779c82659528041c775925bebd417907f8643" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20587787" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _Application" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Application" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Application" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Application" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Application" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208D5-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="76817-101">Dies ist eine primäre Schnittstelle in einem COM-Co-Klasse, die von verwaltetem Code für die Interoperabilität mit den entsprechenden COM-Objekt erforderlich ist.</span>
      <span class="sxs-lookup">
        <span data-stu-id="76817-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span>
      </span>
      <span data-ttu-id="76817-102">Verwenden Sie diese primäre Schnittstelle nur, wenn die Methode, den, die Sie verwenden möchten, den gleichen Namen wie die COM-Objekt gemeinsam verwendet. In diesem Fall dieser Schnittstelle zum Aufrufen der Methode umgewandelt, und in die neuesten Ereignisschnittstelle für die Verbindung an das Ereignis umgewandelt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="76817-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span>
      </span>
      <span data-ttu-id="76817-103">Verwenden Sie andernfalls die .NET-Schnittstelle, die von der COM-Co-Klasse Zugriff auf Methoden, Eigenschaften und Ereignisse das COM-Objekt abgeleitet ist.</span>
      <span class="sxs-lookup">
        <span data-stu-id="76817-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span>
      </span>
      <span data-ttu-id="76817-104">Weitere Informationen über das COM-Objekt finden Sie unter <see cref="T:Microsoft.Office.Interop.Excel.Application" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="76817-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.Application" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-105">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-105">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Evaluate">
      <MemberSignature Language="C#" Value="public object _Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ _Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <summary>
          <span data-ttu-id="76817-106">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-106">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_FindFile">
      <MemberSignature Language="C#" Value="public void _FindFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _FindFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._FindFile" />
      <MemberSignature Language="VB.NET" Value="Public Sub _FindFile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _FindFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1068)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76817-107">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-107">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Run2">
      <MemberSignature Language="C#" Value="public object _Run2 (object Macro, object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _Run2([in]object Macro, [in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Run2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Run2 (Optional Macro As Object, Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(806)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(31)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">To be added.</param>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>
          <span data-ttu-id="76817-108">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-108">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Wait">
      <MemberSignature Language="C#" Value="public void _Wait (object Time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Wait([in]object Time) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._Wait(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Wait (Time As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void _Wait(System::Object ^ Time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Time" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Time">To be added.</param>
        <summary>
          <span data-ttu-id="76817-109">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-109">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_WSFunction">
      <MemberSignature Language="C#" Value="public object _WSFunction (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _WSFunction([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application._WSFunction(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _WSFunction (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>
          <span data-ttu-id="76817-110">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-110">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateMicrosoftApp">
      <MemberSignature Language="C#" Value="public void ActivateMicrosoftApp (Microsoft.Office.Interop.Excel.XlMSApplication Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ActivateMicrosoftApp([in]valuetype Microsoft.Office.Interop.Excel.XlMSApplication Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ActivateMicrosoftApp(Microsoft.Office.Interop.Excel.XlMSApplication)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ActivateMicrosoftApp (Index As XlMSApplication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ActivateMicrosoftApp(Microsoft::Office::Interop::Excel::XlMSApplication Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1095)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="Microsoft.Office.Interop.Excel.XlMSApplication" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="76817-111">Erforderliche <see cref="T:Microsoft.Office.Interop.Excel.XlMSApplication" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-111">Required <see cref="T:Microsoft.Office.Interop.Excel.XlMSApplication" />.</span>
          </span>
          <span data-ttu-id="76817-112">Gibt die zu aktivierende Microsoft-Anwendung an. <b>XlMSApplication</b> kann eine der folgenden <b>XlMSApplication</b> -Konstanten sein:<b>XlMicrosoftWord</b><b>XlMicrosoftPowerPoint</b><b>XlMicrosoftMail</b><b>XlMicrosoftAccess</b><b>XlMicrosoftFoxPro</b><b>XlMicrosoftProject </b><b>XlMicrosoftSchedulePlus</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-112">Specifies the Microsoft application to activate.<b>XlMSApplication</b> can be one of these <b>XlMSApplication</b> constants:<b>xlMicrosoftWord</b><b>xlMicrosoftPowerPoint</b><b>xlMicrosoftMail</b><b>xlMicrosoftAccess</b><b>xlMicrosoftFoxPro</b><b>xlMicrosoftProject</b><b>xlMicrosoftSchedulePlus</b></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-p103">Aktiviert eine Microsoft-Anwendung. Falls die Anwendung bereits ausgeführt wird, aktiviert diese Methode das betreffende Anwendungsfenster. Wird die Anwendung noch nicht ausgeführt, startet die Methode eine neue Instanz der Anwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-p103">Activates a Microsoft application. If the application is already running, this method activates the running application. If the application isn't running, this method starts a new instance of the application.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ActiveCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range ActiveCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ ActiveCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-116">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> -Objekt, das die aktive Zelle im aktiven Fenster (das Fenster im Vordergrund) darstellt oder im angegebenen Fenster.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-116">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the active cell in the active window (the window on top) or in the specified window.</span>
          </span>
          <span data-ttu-id="76817-117">Das Fenster kein Arbeitsblatt angezeigt, schlägt diese Eigenschaft fehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-117">If the window isn't displaying a worksheet, this property fails.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-118">
            <para>Achten Sie darauf, dass der aktiven Zelle und der Markierung unterscheiden. Die aktive Zelle ist eine einzelne Zelle innerhalb der aktuellen Markierung. Die Markierung kann mehrere Zellen enthalten, aber nur eine wird die aktive Zelle.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-118">
              <para>Be careful to distinguish between the active cell and the selection. The active cell is a single cell inside the current selection. The selection may contain more than one cell, but only one is the active cell.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart ActiveChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart ActiveChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveChart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ ActiveChart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-119">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> -Objekt, das das aktive Diagramm (entweder ein eingebettetes Diagramm oder ein Diagrammblatt) darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-119">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the active chart (either an embedded chart or a chart sheet).</span>
          </span>
          <span data-ttu-id="76817-120">Ein eingebettetes Diagramm wird als aktiv betrachtet, wenn es entweder markiert oder aktiviert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-120">An embedded chart is considered active when it's either selected or activated.</span>
          </span>
          <span data-ttu-id="76817-121">Wenn kein Diagramm aktiv ist, gibt diese Eigenschaft <b>Nothing zurück</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-121">When no chart is active, this property returns <b>Nothing</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveDialog">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DialogSheet ActiveDialog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DialogSheet ActiveDialog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveDialog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveDialog As DialogSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DialogSheet ^ ActiveDialog { Microsoft::Office::Interop::Excel::DialogSheet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(815)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DialogSheet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-122">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-122">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEncryptionSession">
      <MemberSignature Language="C#" Value="public int ActiveEncryptionSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ActiveEncryptionSession" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveEncryptionSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveEncryptionSession As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ActiveEncryptionSession { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2394)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2394)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-123">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-123">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-124">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-124">
              <b>Integer</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveMenuBar">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MenuBar ActiveMenuBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MenuBar ActiveMenuBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveMenuBar" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveMenuBar As MenuBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MenuBar ^ ActiveMenuBar { Microsoft::Office::Interop::Excel::MenuBar ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(758)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(758)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MenuBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-125">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-125">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivePrinter">
      <MemberSignature Language="C#" Value="public string ActivePrinter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ActivePrinter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActivePrinter" />
      <MemberSignature Language="VB.NET" Value="Public Property ActivePrinter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ActivePrinter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(306)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-126">Gibt zurück oder legt den Namen des aktiven Druckers fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-126">Returns or sets the name of the active printer.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveProtectedViewWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ProtectedViewWindow ActiveProtectedViewWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ProtectedViewWindow ActiveProtectedViewWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveProtectedViewWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveProtectedViewWindow As ProtectedViewWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ProtectedViewWindow ^ ActiveProtectedViewWindow { Microsoft::Office::Interop::Excel::ProtectedViewWindow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2784)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2784)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ProtectedViewWindow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-127">Ruft ein <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> -Objekt, das aktive Fenster geschützte Ansicht (das Fenster im Vordergrund) darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-127">Gets a <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> object that represents the active Protected View window (the window on top).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-128">Ein <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> -Objekt, das aktive Fenster geschützte Ansicht (das Fenster im Vordergrund) darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-128">A <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindow" /> object that represents the active Protected View window (the window on top).</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="76817-129">
            <para>Gibt ein Nullverweis (Nothing in Visual Basic) zurück, wenn keine geschützte Ansicht-Fenster geöffnet sind. Schreibgeschützt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-129">
              <para>Returns a null reference (Nothing in Visual Basic) if there are no Protected View windows open. Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSheet">
      <MemberSignature Language="C#" Value="public object ActiveSheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActiveSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveSheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSheet As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ActiveSheet { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-130">Gibt ein Objekt, das aktive Blatt (das Blatt im Vordergrund) darstellt, in der aktiven Arbeitsmappe oder im angegebenen Fenster oder Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-130">Returns an object that represents the active sheet (the sheet on top) in the active workbook or in the specified window or workbook.</span>
          </span>
          <span data-ttu-id="76817-131">Gibt <b>Nothing</b> zurück, wenn kein Blatt aktiv ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-131">Returns <b>Nothing</b> if no sheet is active.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-132">
            <para>Wenn eine Arbeitsmappe in mehreren Fenstern angezeigt wird, kann die <b>ActiveSheet</b> -Eigenschaft in verschiedenen Fenstern anders lauten.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-132">
              <para>If a workbook appears in more than one window, the <b>ActiveSheet</b> property may be different in different windows.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Window ActiveWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Window ActiveWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveWindow As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Window ^ ActiveWindow { Microsoft::Office::Interop::Excel::Window ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(759)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(759)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Window</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-133">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Window" /> -Objekt, das aktive Fenster (das Fenster im Vordergrund) darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-133">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Window" /> object that represents the active window (the window on top).</span>
          </span>
          <span data-ttu-id="76817-134">Gibt <b>Nothing</b> zurück, wenn keine Fenster geöffnet sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-134">Returns <b>Nothing</b> if there are no windows open.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook ActiveWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook ActiveWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ActiveWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveWorkbook As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ ActiveWorkbook { Microsoft::Office::Interop::Excel::Workbook ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(308)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-135">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> -Objekt, das die Arbeitsmappe im aktiven Fenster (das Fenster im Vordergrund) darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-135">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object that represents the workbook in the active window (the window on top).</span>
          </span>
          <span data-ttu-id="76817-136">Gibt <b>Nothing zurück</b> , wenn keine Fenster sind geöffnet oder wenn Informationsfenster oder die Zwischenablagefenster das aktive Fenster ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-136">Returns <b>Nothing</b> if there are no windows open or if either the Info window or the Clipboard window is the active window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChartAutoFormat">
      <MemberSignature Language="C#" Value="public void AddChartAutoFormat (object Chart, string Name, object Description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddChartAutoFormat([in]object Chart, [in]string Name, [in]object Description) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.AddChartAutoFormat(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChartAutoFormat (Chart As Object, Name As String, Optional Description As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(216)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Chart" Type="System.Object" />
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Description" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Chart">
          <span data-ttu-id="76817-137">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-137">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-138">Ein Diagramm, das das Format enthält, das angewendet werden, wenn das neue Diagramm-Autoformat angewendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-138">A chart that contains the format that will be applied when the new chart autoformat is applied.</span>
          </span>
        </param>
        <param name="Name">
          <span data-ttu-id="76817-139">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-139">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="76817-140">Der Name des AutoFormats.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-140">The name of the autoformat.</span>
          </span>
        </param>
        <param name="Description">
          <span data-ttu-id="76817-141">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-141">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-142">Eine Beschreibung des benutzerdefinierten AutoFormats.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-142">A description of the custom autoformat.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-143">Fügt der Liste verfügbarer Diagramm-AutoFormate ein benutzerdefiniertes Diagramm-AutoFormat hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-143">Adds a custom chart autoformat to the list of available chart autoformats.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCustomList">
      <MemberSignature Language="C#" Value="public void AddCustomList (object ListArray, object ByRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCustomList([in]object ListArray, [in]object ByRow) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.AddCustomList(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCustomList (ListArray As Object, Optional ByRow As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListArray" Type="System.Object" />
        <Parameter Name="ByRow" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ListArray">
          <span data-ttu-id="76817-144">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-144">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-145">Gibt an, der die Quelldaten als entweder ein Array von Zeichenfolgen oder eine <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-145">Specifies the source data, as either an array of strings or a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
        </param>
        <param name="ByRow">
          <span data-ttu-id="76817-146">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-146">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-147">Nur verwendet, wenn <paramref name="ListArray" /> wird ein <b>Range</b> -Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-147">Only used if <paramref name="ListArray" /> is a <b>Range</b> object.</span>
          </span>
          <span data-ttu-id="76817-148">
            <b>True</b> , wenn eine benutzerdefinierte Liste aus jeder Zeile im Bereich zu erstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-148">
              <b>True</b> to create a custom list from each row in the range.</span>
          </span>
          <span data-ttu-id="76817-149">
            <b>False</b> , wenn eine benutzerdefinierte Liste aus jeder Spalte im Bereich zu erstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-149">
              <b>False</b> to create a custom list from each column in the range.</span>
          </span>
          <span data-ttu-id="76817-150">Wenn dieses Argument ausgelassen wird und mehr Zeilen als Spalten (oder eine gleiche Anzahl von Zeilen und Spalten) im Bereich vorhanden sind, erstellt Microsoft Excel eine benutzerdefinierte Liste aus jeder Spalte im Bereich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-150">If this argument is omitted and there are more rows than columns (or an equal number of rows and columns) in the range, Microsoft Excel creates a custom list from each column in the range.</span>
          </span>
          <span data-ttu-id="76817-151">Wenn dieses Argument nicht angegeben ist, und es mehr Spalten als Zeilen im Bereich sind, erstellt Microsoft Excel eine benutzerdefinierte Liste aus jeder Zeile im Bereich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-151">If this argument is omitted and there are more columns than rows in the range, Microsoft Excel creates a custom list from each row in the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-152">Fügt eine benutzerdefinierte Liste für benutzerdefiniertes AutoAusfüllen bzw. benutzerdefiniertes Sortieren hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-152">Adds a custom list for custom autofill and/or custom sort.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="76817-153">
            <para>Wenn die Liste, den, die Sie versuchen, bereits, vorhanden ist, hat diese Methode Nothing zurück.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-153">
              <para>If the list you're trying to add already exists, this method does nothing.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AddIns AddIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AddIns AddIns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AddIns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddIns As AddIns" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AddIns ^ AddIns { Microsoft::Office::Interop::Excel::AddIns ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(549)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(549)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AddIns</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-154">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.AddIns" /> Auflistung, die alle Add-Ins darstellt, die in das Dialogfeld Add-Ins (Menü Extras) aufgelistet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-154">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AddIns" /> collection that represents all the add-ins listed in the Add-Ins dialog box (Tools menu).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIns2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AddIns2 AddIns2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AddIns2 AddIns2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AddIns2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddIns2 As AddIns2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AddIns2 ^ AddIns2 { Microsoft::Office::Interop::Excel::AddIns2 ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2775)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AddIns2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-155">Ruft eine Auflistung von <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> -Objekten, die alle Add-Ins darstellen, die derzeit verfügbar in Excel oder geöffnet, unabhängig davon, ob sie installiert sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-155">Gets a collection of <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> objects that represent all the add-ins that are currently available or open in Excel, regardless of whether they are installed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-156">Eine Auflistung von <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> -Objekten, die alle Add-Ins darstellen, die aktuell in Excel verfügbar oder geöffnet sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-156">A collection of <see cref="T:Microsoft.Office.Interop.Excel.AddIns2" /> objects that represent all the add-ins that are currently available or open in Excel.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="76817-157">
            <para>Schreibgeschützt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-157">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlertBeforeOverwriting">
      <MemberSignature Language="C#" Value="public bool AlertBeforeOverwriting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlertBeforeOverwriting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AlertBeforeOverwriting" />
      <MemberSignature Language="VB.NET" Value="Public Property AlertBeforeOverwriting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AlertBeforeOverwriting { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(930)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-158">
            <b>True,</b> Wenn Microsoft Excel eine Meldung anzeigt, bevor Sie während einer Drag &amp; Drop-Operation nicht leere Zellen überschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-158">
              <b>True</b> if Microsoft Excel displays a message before overwriting nonblank cells during a drag-and-drop editing operation.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AltStartupPath">
      <MemberSignature Language="C#" Value="public string AltStartupPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AltStartupPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AltStartupPath" />
      <MemberSignature Language="VB.NET" Value="Public Property AltStartupPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AltStartupPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(313)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-159">Gibt an, oder der Name des der alternative Startordner festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-159">Returns or sets the name of the alternate startup folder.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlwaysUseClearType">
      <MemberSignature Language="C#" Value="public bool AlwaysUseClearType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlwaysUseClearType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AlwaysUseClearType" />
      <MemberSignature Language="VB.NET" Value="Public Property AlwaysUseClearType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AlwaysUseClearType { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2381)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-160">Gibt ein, oder legt ein <b>Boolean</b> , der angibt, ob ClearType zum Anzeigen von Schriftarten im Menü, Menüband und Dialogfeld des Textfelds verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-160">Returns or sets a <b>Boolean</b> that represents whether to use ClearType to display fonts in the menu, Ribbon, and dialog box text.</span>
          </span>
          <span data-ttu-id="76817-161">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-161">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-162">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-162">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="76817-163">
            <para>Selbst wenn die Microsoft Windows-Einstellung für ClearType deaktiviert ist, durch Festlegen dieser Eigenschaft auf <b>true fest,</b> überschreibt die Einstellung Windows und verwendet ClearType in allen Microsoft Office-Clientanwendungen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-163">
              <para>Even if the Microsoft Windows setting for ClearType is turned off, setting this property to <b>True</b> overrides the Windows setting and uses ClearType in all Microsoft Office applications.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnswerWizard">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.AnswerWizard AnswerWizard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.AnswerWizard AnswerWizard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AnswerWizard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnswerWizard As AnswerWizard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::AnswerWizard ^ AnswerWizard { Microsoft::Office::Core::AnswerWizard ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1804)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1804)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.AnswerWizard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-164">Gibt die <see cref="T:Microsoft.Office.Core.AnswerWizard" /> -Objekt für Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-164">Returns the <see cref="T:Microsoft.Office.Core.AnswerWizard" /> object for Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-165">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> -Objekt, das den Ersteller des angegebenen Objekts darstellt (Sie können diese Eigenschaft mit einem OLE-Automatisierungsobjekt um die Anwendung dieses Objekts zurückzugeben).</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-165">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArbitraryXMLSupportAvailable">
      <MemberSignature Language="C#" Value="public bool ArbitraryXMLSupportAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ArbitraryXMLSupportAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ArbitraryXMLSupportAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArbitraryXMLSupportAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ArbitraryXMLSupportAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2254)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2254)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-166">Gibt einen <b>booleschen</b> Wert, der angibt, ob die XML-Features in Microsoft Excel verfügbar sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-166">Returns a <b>Boolean</b> value that indicates whether the XML features in Microsoft Excel are available.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-167">
            <para>XML-Features, außer das Speichern von Dateien im XML-Tabellenformat stehen nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-167">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AskToUpdateLinks">
      <MemberSignature Language="C#" Value="public bool AskToUpdateLinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AskToUpdateLinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AskToUpdateLinks" />
      <MemberSignature Language="VB.NET" Value="Public Property AskToUpdateLinks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AskToUpdateLinks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(992)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-168">
            <b>True,</b> Wenn Microsoft Excel gefragt werden, den Benutzer Verknüpfungen beim Öffnen von Dateien mit Links zu aktualisieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-168">
              <b>True</b> if Microsoft Excel asks the user to update links when opening files with links.</span>
          </span>
          <span data-ttu-id="76817-169">
            <b>False,</b> Wenn Verknüpfungen mit kein Dialogfeld automatisch aktualisiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-169">
              <b>False</b> if links are automatically updated with no dialog box.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assistance">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.IAssistance Assistance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.IAssistance Assistance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Assistance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assistance As IAssistance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::IAssistance ^ Assistance { Microsoft::Office::Core::IAssistance ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2386)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.IAssistance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-170">Gibt ein <see cref="T:Microsoft.Office.Core.IAssistance" /> -Objekt für short_Excel2007, die das Microsoft Office Help Viewer darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-170">Returns an <see cref="T:Microsoft.Office.Core.IAssistance" /> object for short_Excel2007 that represents the Microsoft Office Help Viewer.</span>
          </span>
          <span data-ttu-id="76817-171">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-171">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-172">
            <b>IAssistance</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-172">
              <b>IAssistance</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="76817-173">
            <para>Das <b>IAssistance</b> -Objekt ermöglicht Entwicklern, eine benutzerdefinierte Hilfe sowie Hilfe, die mit Office in Office Help Viewer installiert wird.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-173">
              <para>The <b>IAssistance</b> object allows developers to show custom help and help that is installed with Office in the Office Help Viewer.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Assistant">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Assistant Assistant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Assistant Assistant" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Assistant" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assistant As Assistant" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Assistant ^ Assistant { Microsoft::Office::Core::Assistant ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1438)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1438)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Assistant</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-174">Gibt ein <see cref="T:Microsoft.Office.Core.Assistant" /> -Objekt für Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-174">Returns an <see cref="T:Microsoft.Office.Core.Assistant" /> object for Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoCorrect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoCorrect AutoCorrect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoCorrect AutoCorrect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoCorrect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutoCorrect As AutoCorrect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AutoCorrect ^ AutoCorrect { Microsoft::Office::Interop::Excel::AutoCorrect ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1145)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1145)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoCorrect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-175">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.AutoCorrect" /> -Objekt, das die Microsoft Excel AutoCorrect-Attribute darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-175">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AutoCorrect" /> object that represents the Microsoft Excel AutoCorrect attributes.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormatAsYouTypeReplaceHyperlinks">
      <MemberSignature Language="C#" Value="public bool AutoFormatAsYouTypeReplaceHyperlinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFormatAsYouTypeReplaceHyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoFormatAsYouTypeReplaceHyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFormatAsYouTypeReplaceHyperlinks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFormatAsYouTypeReplaceHyperlinks { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1955)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-176">
            <b>"True"</b> (Standard), falls Microsoft Excel Hyperlinks automatisch formatiert, während der Eingabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-176">
              <b>True</b> (default) if Microsoft Excel automatically formats hyperlinks as you type.</span>
          </span>
          <span data-ttu-id="76817-177">
            <b>False,</b> Falls Excel Hyperlinks nicht automatisch formatiert, während der Eingabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-177">
              <b>False</b> if Excel does not automatically format hyperlinks as you type.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomationSecurity">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoAutomationSecurity AutomationSecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoAutomationSecurity AutomationSecurity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomationSecurity As MsoAutomationSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoAutomationSecurity AutomationSecurity { Microsoft::Office::Core::MsoAutomationSecurity get(); void set(Microsoft::Office::Core::MsoAutomationSecurity value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1941)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoAutomationSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-178">Zurückgeben oder Festlegen eines <see cref="T:Microsoft.Office.Core.MsoAutomationSecurity" /> -Konstante, die den Sicherheitsmodus Microsoft Excel beim programmgesteuerten Öffnen von Dateien verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-178">Returns or sets an <see cref="T:Microsoft.Office.Core.MsoAutomationSecurity" /> constant that represents the security mode Microsoft Excel uses when programmatically opening files.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-179">
            <para>Diese Eigenschaft wird automatisch auf <b>Msoautomationsecuritylowmsoautomationsecuritylow</b> festgelegt, wenn die Anwendung gestartet wird. Um zu verhindern Lösungen, die die Standardeinstellung verwenden, sollten Sie daher darauf achten, dass diese Eigenschaft <b>Sicherheitsmodus</b> zurückgesetzt, nach dem programmgesteuerten Öffnen einer Datei sein. Darüber hinaus diese Eigenschaft sollte programmgesteuert festgelegt werden unmittelbar vor und nach dem Öffnen einer Datei zu böswilligen Unterversionen zu vermeiden.</para>
            <para>
              <b>MsoAutomationSecurity</b> kann eine der folgenden <b>MsoAutomationSecurity</b> -Konstanten sein:</para>
            <list type="bullet">
              <item>
                <description>
                  <b>MsoAutomationSecurityByUI</b>  wird verwendet, die im Dialogfeld <b>Sicherheit</b> angegebene sicherheitseinstellung.</description>
              </item>
              <item>
                <description>
                  <b>MsoAutomationSecurityForceDisable</b>  deaktiviert alle Makros in allen Dateien programmgesteuert geöffnet, ohne Sicherheitswarnungen.</description>
              </item>
              <item>
                <description>
                  <b>Msoautomationsecuritylowmsoautomationsecuritylow</b>  aktiviert alle Makros. Dies ist der Standardwert, wenn die Anwendung gestartet wird.</description>
              </item>
            </list>
            <para>Einstellung <see cref="P:Microsoft.Office.Interop.Excel._Application.ScreenUpdating" /> auf <b>False</b> nicht Einfluss auf Benachrichtigungen und Sicherheitswarnungen nicht beeinflusst wird. Die <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> Einstellung gilt nicht für Sicherheitswarnungen. Angenommen, wenn der Benutzer <b>DisplayAlerts</b> gleich <b>False</b> und <b>AutomationSecurity</b><b>MsoAutomationSecurityByUI</b>, festlegt während der Benutzer auf Mittel festgelegt ist, wird Klicken Sie dann Sicherheitswarnungen während das Makro ist ausgeführt. Dadurch wird das Makro open Dateifehler, während ein die Warnung, wenn die Öffnen der Datei ist erfolgreich Sicherheit auffangen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-179">
              <para>This property is automatically set to <b>msoAutomationSecurityLow</b> when the application is started. Therefore, to avoid breaking solutions that rely on the default setting, you should be careful to reset this property to <b>msoAutomationSecurityLow</b> after programmatically opening a file. Also, this property should be set immediately before and after opening a file programmatically to avoid malicious subversion.</para>
              <para>
                <b>MsoAutomationSecurity</b> can be one of these <b>MsoAutomationSecurity</b> constants:</para>
              <list type="bullet">
                <item>
                  <description>
                    <b>msoAutomationSecurityByUI</b>  Uses the security setting specified in the <b>Security</b> dialog box.</description>
                </item>
                <item>
                  <description>
                    <b>msoAutomationSecurityForceDisable</b>  Disables all macros in all files opened programmatically without showing any security alerts.</description>
                </item>
                <item>
                  <description>
                    <b>msoAutomationSecurityLow</b>  Enables all macros. This is the default value when the application is started.</description>
                </item>
              </list>
              <para>Setting <see cref="P:Microsoft.Office.Interop.Excel._Application.ScreenUpdating" /> to <b>False</b> does not affect alerts and will not affect security warnings. The <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> setting will not apply to security warnings. For example, if the user sets <b>DisplayAlerts</b> equal to <b>False</b> and <b>AutomationSecurity</b> to <b>msoAutomationSecurityByUI</b>, while the user is on medium security level, then there will be security warnings while the macro is running. This allows the macro to trap file open errors, while still showing the security warning if the file open succeeds.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoPercentEntry">
      <MemberSignature Language="C#" Value="public bool AutoPercentEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoPercentEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoPercentEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoPercentEntry As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoPercentEntry { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1800)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-180">
            <b>True,</b> wenn Einträge in Zellen formatiert wie Prozentwerte nicht automatisch mit 100 multipliziert, sobald sie eingegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-180">
              <b>True</b> if entries in cells formatted as percentages aren’t automatically multiplied by 100 as soon as they are entered.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoRecover">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AutoRecover AutoRecover { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AutoRecover AutoRecover" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.AutoRecover" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutoRecover As AutoRecover" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AutoRecover ^ AutoRecover { Microsoft::Office::Interop::Excel::AutoRecover ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1949)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1949)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AutoRecover</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-181">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.AutoRecover" /> -Objekt, das in festgelegten Intervallen alle Dateiformate sichert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-181">Returns an <see cref="T:Microsoft.Office.Interop.Excel.AutoRecover" /> object, which backs up all file formats on a timed interval.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-182">
            <para>Gültige Zeitintervalle sind ganze Zahlen von 1 bis 120.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-182">
              <para>Valid time intervals are whole numbers from 1 to 120.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public int Build { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Build" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Build" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Build As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Build { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(314)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(314)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-183">Gibt die Buildnummer für Microsoft Excel zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-183">Returns the Microsoft Excel build number.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-184">
            <para>Normalerweise ist es sicherer zum Testen der <see cref="P:Microsoft.Office.Interop.Excel._Application.Version" /> -Eigenschaft, es sei denn, Sie sind sicher, dass Sie die Buildnummer wissen müssen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-184">
              <para>It’s usually safer to test the <see cref="P:Microsoft.Office.Interop.Excel._Application.Version" /> property, unless you’re sure you need to know the build number.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public void Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Calculate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Calculate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(279)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76817-185">Berechnet alle geöffneten Arbeitsmappen</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-185">Calculates all open workbooks</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateBeforeSave">
      <MemberSignature Language="C#" Value="public bool CalculateBeforeSave { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CalculateBeforeSave" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculateBeforeSave" />
      <MemberSignature Language="VB.NET" Value="Public Property CalculateBeforeSave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CalculateBeforeSave { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(315)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-186">
            <b>True,</b> wenn Arbeitsmappen vor dem Speichern berechnet werden auf dem Datenträger (wenn der <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> -Eigenschaft auf <b>XlManual</b>festgelegt ist).</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-186">
              <b>True</b> if workbooks are calculated before they're saved to disk (if the <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> property is set to <b>xlManual</b>).</span>
          </span>
          <span data-ttu-id="76817-187">Diese Eigenschaft wird beibehalten, auch wenn Sie ändern die <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-187">This property is preserved even if you change the <see cref="P:Microsoft.Office.Interop.Excel._Application.Calculation" /> property.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateFull">
      <MemberSignature Language="C#" Value="public void CalculateFull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateFull() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateFull" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateFull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateFull();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1805)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76817-188">Erzwingt eine vollständige Berechnung der Daten in allen geöffneten Arbeitsmappen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-188">Forces a full calculation of the data in all open workbooks.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateFullRebuild">
      <MemberSignature Language="C#" Value="public void CalculateFullRebuild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateFullRebuild() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateFullRebuild" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateFullRebuild ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateFullRebuild();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1945)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76817-189">Erzwingt für alle geöffneten Arbeitsmappen eine vollständige Berechnung der Daten und erstellt die Abhängigkeiten erneut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-189">For all open workbooks, forces a full calculation of the data and rebuilds the dependencies.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="76817-190">
            <para>Abhängigkeiten werden die Formeln, die von anderen Zellen abhängen. Beispielsweise hängt von der Formel "= A1" Zelle A1. <b>CalculateFullRebuild</b> -Methode ähnelt der erneuten Eingabe aller Formeln.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-190">
              <para>Dependencies are the formulas that depend on other cells. For example, the formula "=A1" depends on cell A1. The <b>CalculateFullRebuild</b> method is similar to re-entering all formulas.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateUntilAsyncQueriesDone">
      <MemberSignature Language="C#" Value="public void CalculateUntilAsyncQueriesDone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CalculateUntilAsyncQueriesDone() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CalculateUntilAsyncQueriesDone" />
      <MemberSignature Language="VB.NET" Value="Public Sub CalculateUntilAsyncQueriesDone ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CalculateUntilAsyncQueriesDone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76817-191">Führt alle ausstehenden Abfragen für OLEDB- und OLAP-Datenquellen aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-191">Runs all pending queries to OLEDB and OLAP data sources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculation Calculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculation Calculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Calculation" />
      <MemberSignature Language="VB.NET" Value="Public Property Calculation As XlCalculation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculation Calculation { Microsoft::Office::Interop::Excel::XlCalculation get(); void set(Microsoft::Office::Interop::Excel::XlCalculation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(316)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-192">Zurück oder legt den Berechnungsmodus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-192">Returns or sets the calculation mode.</span>
          </span>
          <span data-ttu-id="76817-193">Lese-/Schreibzugriff <see cref="T:Microsoft.Office.Interop.Excel.XlCalculation" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-193">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlCalculation" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-194">
            <para>Bei OLAP-Datenquellen ist diese Eigenschaft kann nur zurückgegeben oder <b>xlNormal</b>festgelegt werden.</para>
            <para>
              <b>XlCalculation</b> kann eine der folgenden <b>XlCalculation</b> -Konstanten sein:</para>
            <para>
              <b>xlCalculationAutomatic</b>
            </para>
            <para>
              <b>xlCalculationManual</b>
            </para>
            <para>
              <b>xlCalculationSemiautomatic</b>
            </para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-194">
              <para>For OLAP data sources, this property can only return or be set to <b>xlNormal</b>.</para>
              <para>
                <b>XlCalculation</b> can be one of these <b>XlCalculation</b> constants:</para>
              <para>
                <b>xlCalculationAutomatic</b>
              </para>
              <para>
                <b>xlCalculationManual</b>
              </para>
              <para>
                <b>xlCalculationSemiautomatic</b>
              </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationInterruptKey">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculationInterruptKey CalculationInterruptKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculationInterruptKey CalculationInterruptKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationInterruptKey" />
      <MemberSignature Language="VB.NET" Value="Public Property CalculationInterruptKey As XlCalculationInterruptKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculationInterruptKey CalculationInterruptKey { Microsoft::Office::Interop::Excel::XlCalculationInterruptKey get(); void set(Microsoft::Office::Interop::Excel::XlCalculationInterruptKey value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1938)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculationInterruptKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-195">Legt fest oder gibt eine <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationInterruptKey" /> -Konstante, die den Schlüssel gibt an, die Microsoft Excel beim Ausführen einer Berechnungen unterbrechen können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-195">Sets or returns an <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationInterruptKey" /> constant that specifies the key that can interrupt Microsoft Excel when performing calculations.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-196">
            <para>
              <b>XlCalculationInterruptKey</b> kann eine der folgenden <b>XlCalculationInterruptKey</b> -Konstanten sein:</para>
            <para>
              <b>XlAnyKey</b>
            </para>
            <para>
              <b>XlEscKey</b>
            </para>
            <para>
              <b>XlNoKey</b>
            </para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-196">
              <para>
                <b>XlCalculationInterruptKey</b> can be one of these <b>XlCalculationInterruptKey</b> constants:</para>
              <para>
                <b>xlAnyKey</b>
              </para>
              <para>
                <b>xlEscKey</b>
              </para>
              <para>
                <b>xlNoKey</b>
              </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationState">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCalculationState CalculationState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCalculationState CalculationState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculationState As XlCalculationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCalculationState CalculationState { Microsoft::Office::Interop::Excel::XlCalculationState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1937)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1937)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCalculationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-197">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationState" /> -Konstante, die den Berechnungsstatus der Anwendung für alle Berechnungen gibt an, die in Microsoft Excel ausgeführt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-197">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlCalculationState" /> constant that indicates the calculation state of the application for any calculations that are being performed in Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-198">
            <para>
              <b>XlCalculationState</b> kann eine der folgenden <b>XlCalculationState</b> -Konstanten sein:</para>
            <para>
              <b>XlCalculating</b>
            </para>
            <para>
              <b>XlDone</b>
            </para>
            <para>
              <b>XlPending</b>
            </para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-198">
              <para>
                <b>XlCalculationState</b> can be one of these <b>XlCalculationState</b> constants:</para>
              <para>
                <b>xlCalculating</b>
              </para>
              <para>
                <b>xlDone</b>
              </para>
              <para>
                <b>xlPending</b>
              </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationVersion">
      <MemberSignature Language="C#" Value="public int CalculationVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CalculationVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CalculationVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculationVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CalculationVersion { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-199">Gibt eine Zahl, deren vier rechts stehende Ziffern die Nummer der Nebenversion des Berechnungsmoduls und deren andere Ziffern (links) die Hauptversion von Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-199">Returns a number whose rightmost four digits are the minor calculation engine version number, and whose other digits (on the left) are the major version of Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-200">
            <para>Wenn die Arbeitsmappe in einer früheren Version von Excel und wenn die Arbeitsmappe vollständig neu berechnet wurde noch nicht gespeichert wurde, gibt diese Eigenschaft 0 zurück.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-200">
              <para>If the workbook was saved in an earlier version of Excel and if the workbook hasn't been fully recalculated, this property returns 0.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Caller">
      <MemberSignature Language="C#" Value="public object Caller[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Caller(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Caller(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Caller(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Caller[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(317)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(317)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="76817-201">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-201">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-202">Einen Index für das Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-202">An index to the array.</span>
          </span>
          <span data-ttu-id="76817-203">Dieses Argument wird nur verwendet, wenn die Eigenschaft gibt ein Array zurück (Weitere Informationen finden Sie unter "Hinweise").</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-203">This argument is used only when the property returns an array (for more information, see the Remarks section).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-204">Gibt Informationen darüber zurück, wie Visual Basic aufgerufen wurde (weitere Informationen finden Sie unter "Hinweise").</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-204">Returns information about how Visual Basic was called (for more information, see the Remarks section).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-205">
            <para>Diese Eigenschaft gibt Informationen wie Visual Basic aufgerufen wurde, wie in der folgenden Tabelle dargestellt.</para>
            <list type="table">
              <item>
                <term>Eine benutzerdefinierte Funktion in eine einzelne Zelle eingegebene</term>
                <description>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> -Objekt, das diese Zelle</description>
              </item>
              <item>
                <term>eine benutzerdefinierte Funktion, die Teil einer Matrixformel in einem Bereich von Zellen ist,</term>
                <description>ein <b>Range</b> -Objekt, das diesen Zellbereich angibt</description>
              </item>
              <item>
                <term>Ein Auto_öffnen-, Auto_schließen-, Auto_aktivieren,- oder Auto_deaktivieren-Makro</term>
                <description>den Namen des Dokuments als Text</description>
              </item>
              <item>
                <term>ein Makro festlegen, indem entweder die <see cref="P:Microsoft.Office.Interop.Excel._Application.OnDoubleClick" /> oder <see cref="P:Microsoft.Office.Interop.Excel._Application.OnEntry" /> Eigenschaft</term>
                <description>den Namen des Chart-Objekts Bezeichner oder Zelle (falls zutreffend) verweisen, auf dem das Makro angewendet wird</description>
              </item>
              <item>
                <term>Dialogfeld das Makro (Menü Extras) oder ein anderer oben nicht beschrieben</term>
                <description>der #REF! Fehlerwert</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-205">
              <para>This property returns information about how Visual Basic was called, as shown in the following table.</para>
              <list type="table">
                <item>
                  <term>A custom function entered in a single cell</term>
                  <description>A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object specifying that cell</description>
                </item>
                <item>
                  <term>A custom function that is part of an array formula in a range of cells</term>
                  <description>A <b>Range</b> object specifying that range of cells</description>
                </item>
                <item>
                  <term>An Auto_Open, Auto_Close, Auto_Activate, or Auto_Deactivate macro</term>
                  <description>The name of the document as text</description>
                </item>
                <item>
                  <term>A macro set by either the <see cref="P:Microsoft.Office.Interop.Excel._Application.OnDoubleClick" /> or <see cref="P:Microsoft.Office.Interop.Excel._Application.OnEntry" /> property</term>
                  <description>The name of the chart object identifier or cell reference (if applicable) to which the macro applies</description>
                </item>
                <item>
                  <term>The Macro dialog box (Tools menu), or any caller not described above</term>
                  <description>The #REF! error value</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPlaySounds">
      <MemberSignature Language="C#" Value="public bool CanPlaySounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPlaySounds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CanPlaySounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanPlaySounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanPlaySounds { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(318)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(318)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-p121">Diese Eigenschaft sollte nicht verwendet werden. Audionotizen wurden aus Microsoft Excel entfernt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-p121">This property should not be used. Sound notes have been removed from Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRecordSounds">
      <MemberSignature Language="C#" Value="public bool CanRecordSounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRecordSounds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CanRecordSounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRecordSounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRecordSounds { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(319)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(319)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-p122">Diese Eigenschaft sollte nicht verwendet werden. Audionotizen wurden aus Microsoft Excel entfernt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-p122">This property should not be used. Sound notes have been removed from Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-210">Der Name, der in der Titelleiste des Hauptfensters von Microsoft Excel angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-210">The name that appears in the title bar of the main Microsoft Excel window.</span>
          </span>
          <span data-ttu-id="76817-211">Wenn Sie kein Name festgelegt oder wird der Name auf <b>Empty</b>festgelegt, gibt diese Eigenschaft "Microsoft Excel" zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-211">If you don't set a name, or if you set the name to <b>Empty</b>, this property returns "Microsoft Excel".</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CellDragAndDrop">
      <MemberSignature Language="C#" Value="public bool CellDragAndDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CellDragAndDrop" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CellDragAndDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property CellDragAndDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CellDragAndDrop { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(320)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-212">
            <b>True,</b> Wenn per Drag &amp; Drop für Zellen aktiviert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-212">
              <b>True</b> if dragging and dropping cells is enabled.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Cells { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-213">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> -Objekt, das alle Zellen im aktiven Arbeitsblatt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-213">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells on the active worksheet.</span>
          </span>
          <span data-ttu-id="76817-214">Wenn das aktive Dokument kein Arbeitsblatt ist, schlägt diese Eigenschaft fehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-214">If the active document isn’t a worksheet, this property fails.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-215">
            <para>Da die <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> -Eigenschaft die Standardeigenschaft für das <b>Range</b> -Objekt ist, können Sie den Zeile und Spalte Index unmittelbar nach dem Schlüsselwort <b>Zellen</b> angeben. Weitere Informationen finden Sie unter der <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> Eigenschaft.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-215">
              <para>Because the <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> property is the default property for the <b>Range</b> object, you can specify the row and column index immediately after the <b>Cells</b> keyword. For more information, see the <see cref="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" /> property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CentimetersToPoints">
      <MemberSignature Language="C#" Value="public double CentimetersToPoints (double Centimeters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CentimetersToPoints([in]float64 Centimeters) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CentimetersToPoints(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function CentimetersToPoints (Centimeters As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double CentimetersToPoints(double Centimeters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1086)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Centimeters" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Centimeters">
          <span data-ttu-id="76817-216">
            <b>Double</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-216">Required <b>Double</b>.</span>
          </span>
          <span data-ttu-id="76817-217">Legt den Zentimeterwert fest, der in Punkt umgerechnet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-217">Specifies the centimeter value to be converted to points.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-218">Wandelt eine Maßangabe von Zentimeter in Punkt (0,35 mm) um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-218">Converts a measurement from centimeters to points (one point equals 0.035 centimeters).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartDataPointTrack">
      <MemberSignature Language="C#" Value="public bool ChartDataPointTrack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChartDataPointTrack" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ChartDataPointTrack" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartDataPointTrack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChartDataPointTrack { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-219">
            <b>True</b> bewirkt alle Diagramme in neu erstellten Dokumenten den Zellbezug nachverfolgen Verhalten verwenden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-219">
              <b>True</b> will cause all charts in newly created documents to use the cell reference tracking behavior.</span>
          </span>
          <span data-ttu-id="76817-220">
            <b>Boolean</b> (Bool in c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-220">
              <b>Boolean</b> (bool in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Charts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Charts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Charts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Charts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Charts As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Charts { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-221">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> -Auflistung, die alle Diagrammblätter in der aktiven Arbeitsmappe darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-221">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the chart sheets in the active workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAbort">
      <MemberSignature Language="C#" Value="public void CheckAbort (object KeepAbort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckAbort([in]object KeepAbort) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CheckAbort(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckAbort (Optional KeepAbort As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1952)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="KeepAbort" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="KeepAbort">
          <span data-ttu-id="76817-222">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-222">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-223">Ermöglicht die neuberechnung für einen <b>Bereich</b>ausgeführt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-223">Allows recalculation to be performed for a <b>Range</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-224">Stoppt die Neuberechnung in einer Microsoft Excel-Anwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-224">Stops recalculation in a Microsoft Excel application.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public bool CheckSpelling (string Word, object CustomDictionary, object IgnoreUppercase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckSpelling([in]string Word, [in]object CustomDictionary, [in]object IgnoreUppercase) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.CheckSpelling(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSpelling (Word As String, Optional CustomDictionary As Object, Optional IgnoreUppercase As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Word" Type="System.String" />
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Word">
          <span data-ttu-id="76817-225">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-225">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="76817-226">Das Wort, den, das Sie überprüfen möchten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-226">The word you want to check.</span>
          </span>
        </param>
        <param name="CustomDictionary">
          <span data-ttu-id="76817-227">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-227">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-228">Eine Zeichenfolge, die angibt, der Dateiname des Benutzerwörterbuchs untersucht werden, wenn das Wort im Hauptwörterbuch nicht gefunden wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-228">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary.</span>
          </span>
          <span data-ttu-id="76817-229">Wenn dieses Argument ausgelassen wird, wird das derzeit angegebene Wörterbuch verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-229">If this argument is omitted, the currently specified dictionary is used.</span>
          </span>
        </param>
        <param name="IgnoreUppercase">
          <span data-ttu-id="76817-230">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-230">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-231">
            <b>True</b> , wenn Microsoft Excel Wörter ignorieren soll, die vollständig in Großbuchstaben sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-231">
              <b>True</b> to have Microsoft Excel ignore words that are all uppercase.</span>
          </span>
          <span data-ttu-id="76817-232">
            <b>False</b> , wenn Microsoft Excel-Kontrollkästchen Wörter, die vollständig in Großbuchstaben sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-232">
              <b>False</b> to have Microsoft Excel check words that are all uppercase.</span>
          </span>
          <span data-ttu-id="76817-233">Wenn dieses Argument ausgelassen wird, wird die aktuelle Einstellung verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-233">If this argument is omitted, the current setting will be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-234">Prüft die Rechtschreibung eines einzelnen Worts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-234">Checks the spelling of a single word.</span>
          </span>
          <span data-ttu-id="76817-235">Gibt <b>True</b> zurück, wenn das Wort in einem der Wörterbücher gefunden wird. Gibt <b>False</b> zurück, wenn das Wort nicht gefunden wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-235">Returns <b>True</b> if the word is found in one of the dictionaries; returns <b>False</b> if the word isn't found.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipboardFormats">
      <MemberSignature Language="C#" Value="public object ClipboardFormats[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ClipboardFormats(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ClipboardFormats(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClipboardFormats(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ClipboardFormats[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(321)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(321)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="76817-236">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-236">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-237">Das Arrayelement zurückgegeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-237">The array element to be returned.</span>
          </span>
          <span data-ttu-id="76817-238">Wenn dieses Argument ausgelassen wird, gibt die Eigenschaft das gesamte Array der Formate, die derzeit in der Zwischenablage abgelegt sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-238">If this argument is omitted, the property returns the entire array of formats that are currently on the Clipboard.</span>
          </span>
          <span data-ttu-id="76817-239">Weitere Informationen finden Sie unter "Anmerkungen".</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-239">For more information, see the Remarks section.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-240">Gibt die Formate, die derzeit in der Zwischenablage als Array von numerische Werte sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-240">Returns the formats that are currently on the Clipboard as an array of numeric values.</span>
          </span>
          <span data-ttu-id="76817-241">Um festzustellen, ob ein bestimmtes Format in der Zwischenablage abgelegt ist, vergleichen Sie jedes Element im Array mit der entsprechenden Konstante im Abschnitt mit Hinweisen aufgeführten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-241">To determine whether a particular format is on the Clipboard, compare each element in the array with the appropriate constant listed in the Remarks section.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-242">
            <para>Diese Eigenschaft gibt ein Array mit numerischen Werten zurück. Um festzustellen, ob ein bestimmtes Format in der Zwischenablage abgelegt ist, vergleichen Sie jedes Element des Arrays mit einer der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlClipboardFormat" /> Konstanten:</para>
            <para>
              <b>XlClipboardFormatBIFF</b>
            </para>
            <para>
              <b>xlClipboardFormatBIFF2</b>
            </para>
            <para>
              <b>xlClipboardFormatBIFF3</b>
            </para>
            <para>
              <b> xlClipboardFormatBIFF4</b>
            </para>
            <para>
              <b>XlClipboardFormatBinary</b>
            </para>
            <para>
              <b>XlClipboardFormatBitmap</b>
            </para>
            <para>
              <b>XlClipboardFormatCGM</b>
            </para>
            <para>
              <b>XlClipboardFormatCSV</b>
            </para>
            <para>
              <b>XlClipboardFormatDIF</b>
            </para>
            <para>
              <b>XlClipboardFormatDspText</b>
            </para>
            <para>
              <b>xlClipboardFormatEmbeddedObject</b>
            </para>
            <para>
              <b>xlClipboardFormatEmbedSource</b>
            </para>
            <para>
              <b>xlClipboardFormatLink</b>
            </para>
            <para>
              <b>xlClipboardFormatLinkSource</b>
            </para>
            <para>
              <b>xlClipboardFormatLinkSourceDesc</b>
            </para>
            <para>
              <b>xlClipboardFormatMovie</b>
            </para>
            <para>
              <b>xlClipboardFormatNative</b>
            </para>
            <para>
              <b>xlClipboardFormatObjectDesc</b>
            </para>
            <para>
              <b>xlClipboardFormatObjectLink</b>
            </para>
            <para>
              <b>xlClipboardFormatOwnerLink</b>
            </para>
            <para>
              <b>xlClipboardFormatPICT</b>
            </para>
            <para>
              <b>xlClipboardFormatPrintPICT</b>
            </para>
            <para>
              <b>xlClipboardFormatRTF</b>
            </para>
            <para>
              <b>xlClipboardFormatScreenPICT</b>
            </para>
            <para>
              <b>xlClipboardFormatStandardFont</b>
            </para>
            <para>
              <b>xlClipboardFormatStandardScale</b>
            </para>
            <para>
              <b>xlClipboardFormatSYLK</b>
            </para>
            <para>
              <b>xlClipboardFormatTable</b>
            </para>
            <para>
              <b>xlClipboardFormatText</b>
            </para>
            <para>
              <b>xlClipboardFormatToolFace</b>
            </para>
            <para>
              <b>xlClipboardFormatToolFacePICT</b>
            </para>
            <para>
              <b>xlClipboardFormatVALU</b>
            </para>
            <para>
              <b>xlClipboardFormatWK1</b>
            </para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-242">
              <para>This property returns an array of numeric values. To determine whether a particular format is on the Clipboard, compare each element of the array with one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlClipboardFormat" /> constants:</para>
              <para>
                <b>xlClipboardFormatBIFF</b>
              </para>
              <para>
                <b>xlClipboardFormatBIFF2</b>
              </para>
              <para>
                <b>xlClipboardFormatBIFF3</b>
              </para>
              <para>
                <b>xlClipboardFormatBIFF4</b>
              </para>
              <para>
                <b>xlClipboardFormatBinary</b>
              </para>
              <para>
                <b>xlClipboardFormatBitmap</b>
              </para>
              <para>
                <b>xlClipboardFormatCGM</b>
              </para>
              <para>
                <b>xlClipboardFormatCSV</b>
              </para>
              <para>
                <b>xlClipboardFormatDIF</b>
              </para>
              <para>
                <b>xlClipboardFormatDspText</b>
              </para>
              <para>
                <b>xlClipboardFormatEmbeddedObject</b>
              </para>
              <para>
                <b>xlClipboardFormatEmbedSource</b>
              </para>
              <para>
                <b>xlClipboardFormatLink</b>
              </para>
              <para>
                <b>xlClipboardFormatLinkSource</b>
              </para>
              <para>
                <b>xlClipboardFormatLinkSourceDesc</b>
              </para>
              <para>
                <b>xlClipboardFormatMovie</b>
              </para>
              <para>
                <b>xlClipboardFormatNative</b>
              </para>
              <para>
                <b>xlClipboardFormatObjectDesc</b>
              </para>
              <para>
                <b>xlClipboardFormatObjectLink</b>
              </para>
              <para>
                <b>xlClipboardFormatOwnerLink</b>
              </para>
              <para>
                <b>xlClipboardFormatPICT</b>
              </para>
              <para>
                <b>xlClipboardFormatPrintPICT</b>
              </para>
              <para>
                <b>xlClipboardFormatRTF</b>
              </para>
              <para>
                <b>xlClipboardFormatScreenPICT</b>
              </para>
              <para>
                <b>xlClipboardFormatStandardFont</b>
              </para>
              <para>
                <b>xlClipboardFormatStandardScale</b>
              </para>
              <para>
                <b>xlClipboardFormatSYLK</b>
              </para>
              <para>
                <b>xlClipboardFormatTable</b>
              </para>
              <para>
                <b>xlClipboardFormatText</b>
              </para>
              <para>
                <b>xlClipboardFormatToolFace</b>
              </para>
              <para>
                <b>xlClipboardFormatToolFacePICT</b>
              </para>
              <para>
                <b>xlClipboardFormatVALU</b>
              </para>
              <para>
                <b>xlClipboardFormatWK1</b>
              </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClusterConnector">
      <MemberSignature Language="C#" Value="public string ClusterConnector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClusterConnector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" />
      <MemberSignature Language="VB.NET" Value="Public Property ClusterConnector As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClusterConnector { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2779)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-243">Dient zum Abrufen oder Festlegen des Namens der Clusterconnector High Performance Computing (HPC), die zum Ausführen von benutzerdefinierten Funktionen in XLL-add-ins verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-243">Gets or sets the name of the High Performance Computing (HPC) Cluster Connector that is used to run user-defined functions in XLL add-ins.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-244">Der Name der Verbindung Cluster High Performance Computing (HPC), die zum Ausführen von benutzerdefinierten Funktionen in XLL-add-ins verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-244">The name of the High Performance Computing (HPC) Cluster Connector that is used to run user-defined functions in XLL add-ins.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="76817-245">
            <para>Lese-/Schreibzugriff.</para>
            <para>Der Einstellung der <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> -Eigenschaft entspricht der Cluster Typ Dropdown-Feld unter Formeln in der Kategorie erweitert im Dialogfeld Excel-Optionen.</para>
            <para>
              <b>Hinweis</b>: Angeben der <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> Eigenschaft müssen Sie einen Clusterconnector High Performance Computing (HPC) installieren. Einen Clusterconnector können Sie clustersichere XLL-Funktionen Remote auf einem HPC-Cluster zur Verbesserung der Leistung ausgeführt.</para>
            <para>Bevor Sie angeben können die <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> -Eigenschaft, müssen Sie verwenden die <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> -Eigenschaft auf Zulassen von Microsoft Excel 2010 zur Ausführung von benutzerdefinierten Funktionen in XLL-add-ins</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-245">
              <para>Read/write.</para>
              <para>The setting of the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property corresponds to the Cluster type drop-down box under Formulas in the Advanced category of the Excel Options dialog box.</para>
              <para>
                <b>Note</b>: To specify the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property you must install a High Performance Computing (HPC) Cluster Connector. A Cluster Connector enables you to run cluster-safe XLL functions remotely on an HPC cluster for increased performance.</para>
              <para>Before you can specify the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property, you must use the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property to allow Microsoft Excel 2010 to run user-defined functions in XLL add-ins.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColorButtons">
      <MemberSignature Language="C#" Value="public bool ColorButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ColorButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ColorButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property ColorButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ColorButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(365)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-246">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-246">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Columns { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-247">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> -Objekt, das alle Spalten des aktiven Arbeitsblatts darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-247">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the columns on the active worksheet.</span>
          </span>
          <span data-ttu-id="76817-248">Wenn das aktive Dokument kein Arbeitsblatt ist, schlägt die <b>Columns</b> -Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-248">If the active document isn't a worksheet, the <b>Columns</b> property fails.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="COMAddIns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.COMAddIns COMAddIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.COMAddIns COMAddIns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.COMAddIns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property COMAddIns As COMAddIns" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::COMAddIns ^ COMAddIns { Microsoft::Office::Core::COMAddIns ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1796)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1796)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.COMAddIns</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-249">Gibt die <see cref="T:Microsoft.Office.Core.COMAddIns" /> -Auflistung für Microsoft Excel, die die derzeit installierte COM-add-ins darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-249">Returns the <see cref="T:Microsoft.Office.Core.COMAddIns" /> collection for Microsoft Excel, which represents the currently installed COM add-ins.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBars CommandBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CommandBars CommandBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CommandBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBars As CommandBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CommandBars ^ CommandBars { Microsoft::Office::Core::CommandBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-250">Gibt ein <see cref="T:Microsoft.Office.Core.CommandBars" /> -Objekt, die Excel-Befehlsleisten darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-250">Returns a <see cref="T:Microsoft.Office.Core.CommandBars" /> object that represents the Excel command bars.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-251">
            <para>Diese Eigenschaft gibt die integrierten und benutzerdefinierten Befehlsleisten verfügbar an die Anwendung zurück.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-251">
              <para>This property returns the set of built-in and custom command bars available to the application.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandUnderlines">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCommandUnderlines CommandUnderlines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCommandUnderlines CommandUnderlines" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CommandUnderlines" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandUnderlines As XlCommandUnderlines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCommandUnderlines CommandUnderlines { Microsoft::Office::Interop::Excel::XlCommandUnderlines get(); void set(Microsoft::Office::Interop::Excel::XlCommandUnderlines value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(323)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCommandUnderlines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-252">Gibt zurück oder legt den Zustand der befehlsunterstreichungen in Microsoft Excel für Macintosh fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-252">Returns or sets the state of the command underlines in Microsoft Excel for the Macintosh.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-253">
            <para>
              <see cref="T:Microsoft.Office.Interop.Excel.XlCommandUnderlines" />kann eine der folgenden <b>XlCommandUnderlines</b> -Konstanten sein:</para>
            <para>
              <b>Wert XlCommandUnderlinesOn</b>
            </para>
            <para>
              <b>XlCommandUnderlinesOff</b>
            </para>
            <para>
              <b>XlCommandUnderlinesAutomatic</b>
            </para>
            <para>In Microsoft Excel für Windows, lesen diese Eigenschaft immer gibt <b>zurück. Wert XlCommandUnderlinesOn</b>, und ein Fehler wird durch Festlegen dieser Eigenschaft auf einen anderen Wert als <b>Wert XlCommandUnderlinesOn</b> .</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-253">
              <para>
                <see cref="T:Microsoft.Office.Interop.Excel.XlCommandUnderlines" /> can be one of these <b>XlCommandUnderlines</b> constants:</para>
              <para>
                <b>xlCommandUnderlinesOn</b>
              </para>
              <para>
                <b>xlCommandUnderlinesOff</b>
              </para>
              <para>
                <b>xlCommandUnderlinesAutomatic</b>
              </para>
              <para>In Microsoft Excel for Windows, reading this property always returns <b>xlCommandUnderlinesOn</b>, and setting this property to anything other than <b>xlCommandUnderlinesOn</b> is an error.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstrainNumeric">
      <MemberSignature Language="C#" Value="public bool ConstrainNumeric { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConstrainNumeric" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ConstrainNumeric" />
      <MemberSignature Language="VB.NET" Value="Public Property ConstrainNumeric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConstrainNumeric { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(324)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-254">
            <b>True,</b> Wenn handschrifterkennung auf Ziffern und Zeichensetzung nur beschränkt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-254">
              <b>True</b> if handwriting recognition is limited to numbers and punctuation only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-255">
            <para>Diese Eigenschaft ist nur verfügbar, wenn Sie Microsoft Windows für Pen Computing verwenden. Wenn Sie versuchen, diese Eigenschaft unter einem anderen Betriebssystem festzulegen, tritt ein Fehler auf.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-255">
              <para>This property is available only if you're using Microsoft Windows for Pen Computing. If you try to set this property under any other operating system, an error occurs.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlCharacters">
      <MemberSignature Language="C#" Value="public bool ControlCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlCharacters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ControlCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlCharacters { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(233)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-256">
            <b>True,</b> Wenn Microsoft Excel Steuerzeichen für rechts-nach-links-Sprachen angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-256">
              <b>True</b> if Microsoft Excel displays control characters for right-to-left languages.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-257">
            <para>Diese Eigenschaft kann festgelegt werden, nur, wenn rechts nach links sprachunterstützung installiert und aktiviert wurde.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-257">
              <para>This property can be set only when right to left language support has been installed and selected.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFormula">
      <MemberSignature Language="C#" Value="public object ConvertFormula (object Formula, Microsoft.Office.Interop.Excel.XlReferenceStyle FromReferenceStyle, object ToReferenceStyle, object ToAbsolute, object RelativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFormula([in]object Formula, [in]valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle FromReferenceStyle, [in]object ToReferenceStyle, [in]object ToAbsolute, [in]object RelativeTo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFormula (Formula As Object, FromReferenceStyle As XlReferenceStyle, Optional ToReferenceStyle As Object, Optional ToAbsolute As Object, Optional RelativeTo As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(325)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Formula" Type="System.Object" />
        <Parameter Name="FromReferenceStyle" Type="Microsoft.Office.Interop.Excel.XlReferenceStyle" />
        <Parameter Name="ToReferenceStyle" Type="System.Object" />
        <Parameter Name="ToAbsolute" Type="System.Object" />
        <Parameter Name="RelativeTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Formula">
          <span data-ttu-id="76817-258">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-258">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-259">Eine <b>Zeichenfolge</b> , die die Formel enthält, die Sie konvertieren möchten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-259">A <b>String</b> that contains the formula you want to convert.</span>
          </span>
          <span data-ttu-id="76817-260">Dies muss eine gültige Formel sein, und es muss mit einem Gleichheitszeichen beginnen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-260">This must be a valid formula, and it must begin with an equal sign.</span>
          </span>
        </param>
        <param name="FromReferenceStyle">
          <span data-ttu-id="76817-261">Erforderliche <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-261">Required <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          </span>
          <span data-ttu-id="76817-262">Die Bezugsart der Formel. <b>XlReferenceStyle</b> kann eine der folgenden <b>XlReferenceStyle</b> -Konstanten sein:<b>xlA1</b><b>xlR1C1</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-262">The reference style of the formula.<b>XlReferenceStyle</b> can be one of these <b>XlReferenceStyle</b> constants:<b>xlA1</b><b>xlR1C1</b></span>
          </span>
        </param>
        <param name="ToReferenceStyle">
          <span data-ttu-id="76817-263">Optionale <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-263">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          </span>
          <span data-ttu-id="76817-264">Die Bezugsart, die zurückgegeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-264">The reference style you want returned.</span>
          </span>
          <span data-ttu-id="76817-265">Wenn dieses Argument ausgelassen wird, wird die Bezugsart nicht geändert. die Formel in der angegebene Stil bleibt <paramref name="FromReferenceStyle" />. XlReferenceStyle kann eine der folgenden XlReferenceStyle-Konstanten sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-265">If this argument is omitted, the reference style isn't changed; the formula stays in the style specified by <paramref name="FromReferenceStyle" />.XlReferenceStyle can be one of these XlReferenceStyle constants.</span>
          </span>
          <span data-ttu-id="76817-266">
            <b>xlA1</b>
            <b>xlR1C1</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-266">
              <b>xlA1 </b>
              <b>xlR1C1</b>
            </span>
          </span>
        </param>
        <param name="ToAbsolute">
          <span data-ttu-id="76817-267">Optionale <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-267">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          </span>
          <span data-ttu-id="76817-268">Gibt die konvertierte Bezugsart an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-268">Specifies the converted reference type.</span>
          </span>
          <span data-ttu-id="76817-269">Wenn dieses Argument ausgelassen wird, wird der Verweistyp nicht geändert. <b>XlReferenceStyle</b> kann eine der folgenden <b>XlReferenceStyle</b> -Konstanten sein:<b>XlAbsolute</b><b>XlAbsRowRelColumn</b><b>XlRelRowAbsColumn</b><b>XlRelative</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-269">If this argument is omitted, the reference type isn't changed.<b>XlReferenceStyle</b> can be one of these <b>XlReferenceStyle</b> constants:<b>xlAbsolute</b><b>xlAbsRowRelColumn</b><b>xlRelRowAbsColumn</b><b>xlRelative</b></span>
          </span>
        </param>
        <param name="RelativeTo">
          <span data-ttu-id="76817-270">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-270">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-271">Optionaler <b>Variant-Wert</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-271">Optional <b>Variant</b>.</span>
          </span>
          <span data-ttu-id="76817-272">Ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> -Objekt, das eine Zelle enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-272">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that contains one cell.</span>
          </span>
          <span data-ttu-id="76817-273">Relative Bezüge verweisen auf diese Zelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-273">Relative references relate to this cell.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-274">Konvertiert Zellbezüge in Formeln zwischen den Bezugsarten A1 und Z1S1, zwischen relativen und absoluten Bezügen oder beides.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-274">Converts cell references in a formula between the A1 and R1C1 reference styles, between relative and absolute references, or both.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyObjectsWithCells">
      <MemberSignature Language="C#" Value="public bool CopyObjectsWithCells { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CopyObjectsWithCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CopyObjectsWithCells" />
      <MemberSignature Language="VB.NET" Value="Public Property CopyObjectsWithCells As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CopyObjectsWithCells { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(991)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-275">
            <b>True,</b> Wenn Objekte ausgeschnitten, kopiert, extrahiert und mit Zellen sortiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-275">
              <b>True</b> if objects are cut, copied, extracted, and sorted with cells.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-276">Gibt eine 32-Bit-Ganzzahl, die die Anwendung angibt, in der das Objekt erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-276">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="76817-277">Wenn das Objekt in Microsoft Excel erstellt wurde, gibt diese Eigenschaft die Zeichenfolge XCEL zurück, dies entspricht die hexadezimale Zahl 5843454 c ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-277">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-278">
            <para>Die <b>Creator</b> -Eigenschaft ist in Microsoft Excel für den Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen verfügt über entwickelt. Der Erstellercode von Microsoft Excel lautet beispielsweise XCEL zurück.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-278">
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlMousePointer Cursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlMousePointer Cursor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Cursor" />
      <MemberSignature Language="VB.NET" Value="Public Property Cursor As XlMousePointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlMousePointer Cursor { Microsoft::Office::Interop::Excel::XlMousePointer get(); void set(Microsoft::Office::Interop::Excel::XlMousePointer value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlMousePointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-279">Zurückgeben oder festlegen die Darstellung des Mauszeigers in Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-279">Returns or sets the appearance of the mouse pointer in Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-280">
            <para>
              <see cref="T:Microsoft.Office.Interop.Excel.XlMousePointer" />kann eine der folgenden <b>XlMousePointer</b> -Konstanten sein:</para>
            <para>
              <b>XlDefault</b> der Standardmauszeiger.</para>
            <para>
              <b>XlIBeam</b> der i-Mauszeiger.</para>
            <para>
              <b>XlNorthwestArrow</b> der Nordwest-Pfeilzeiger.</para>
            <para>
              <b>XlWait</b> der Sanduhrzeiger.</para>
            <para>Der <b>Cursor</b> -Eigenschaft wird nicht automatisch zurückgesetzt, wenn das Makro beendet. Sie sollten den Mauszeiger auf <b>XlDefault</b> zurücksetzen, bevor das Makro beendet.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-280">
              <para>
                <see cref="T:Microsoft.Office.Interop.Excel.XlMousePointer" /> can be one of these <b>XlMousePointer</b> constants:</para>
              <para>
                <b>xlDefault</b> The default pointer.</para>
              <para>
                <b>xlIBeam</b> The I-beam pointer.</para>
              <para>
                <b>xlNorthwestArrow</b> The northwest arrow pointer.</para>
              <para>
                <b>xlWait</b> The hourglass pointer.</para>
              <para>The <b>Cursor</b> property isn't reset automatically when the macro stops running. You should reset the pointer to <b>xlDefault</b> before your macro stops running.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorMovement">
      <MemberSignature Language="C#" Value="public int CursorMovement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CursorMovement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CursorMovement" />
      <MemberSignature Language="VB.NET" Value="Public Property CursorMovement As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CursorMovement { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(232)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-281">Zurückgeben oder festlegen ein Werts, das angibt, ob ein visueller Cursor oder ein logischer Cursor verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-281">Returns or sets a value that indicates whether a visual cursor or a logical cursor is used.</span>
          </span>
          <span data-ttu-id="76817-282">Kann eine der folgenden Konstanten sein: <b>XlVisualCursor</b> oder <b>XlLogicalCursor</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-282">Can be one of the following constants: <b>xlVisualCursor</b> or <b>xlLogicalCursor</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-283">
            <para>Diese Konstanten möglicherweise nicht zur Verfügung, abhängig von der Unterstützung der Sprache (Englisch USA), beispielsweise), die Sie ausgewählt oder installiert haben.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-283">
              <para>These constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomListCount">
      <MemberSignature Language="C#" Value="public int CustomListCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CustomListCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CustomListCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomListCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CustomListCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-284">Gibt die Anzahl der benutzerdefinierten Listen (einschließlich der integrierten Listen) zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-284">Returns the number of defined custom lists (including built-in lists).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CutCopyMode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCutCopyMode CutCopyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCutCopyMode CutCopyMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.CutCopyMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CutCopyMode As XlCutCopyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCutCopyMode CutCopyMode { Microsoft::Office::Interop::Excel::XlCutCopyMode get(); void set(Microsoft::Office::Interop::Excel::XlCutCopyMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(330)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCutCopyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-285">Gibt zurück oder legt den Status des Modus für das Ausschneiden oder kopieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-285">Returns or sets the status of Cut or Copy mode.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-286">
            <para>
              <see cref="T:Microsoft.Office.Interop.Excel.XlCutCopyMode" />kann eine der folgenden Konstanten <b>XlCutCopyMode</b> .</para>
            <list type="table">
              <item>
                <term>
                  <b>"False"</b>
                </term>
                <description>nicht im Modus für das Ausschneiden oder kopieren</description>
              </item>
              <item>
                <term>
                  <b>XlCopy</b>
                </term>
                <description>im Kopiermodus</description>
              </item>
              <item>
                <term>
                  <b>XlCut</b>
                </term>
                <description>Ausschneiden im Modus</description>
              </item>
            </list>
            <list type="table">
              <item>
                <term>
                  <b>False</b>
                </term>
                <description>Ausschneiden abbricht oder Kopiermodus und entfernt das Verschieben border.</description>
              </item>
              <item>
                <term>
                  <b>True</b>
                </term>
                <description>Ausschneiden abbricht oder Kopiermodus und entfernt das Verschieben border.</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-286">
              <para>
                <see cref="T:Microsoft.Office.Interop.Excel.XlCutCopyMode" /> can be one of these <b>XlCutCopyMode</b> constants.</para>
              <list type="table">
                <item>
                  <term>
                    <b>False</b>
                  </term>
                  <description>Not in Cut or Copy mode</description>
                </item>
                <item>
                  <term>
                    <b>xlCopy</b>
                  </term>
                  <description>In Copy mode</description>
                </item>
                <item>
                  <term>
                    <b>xlCut</b>
                  </term>
                  <description>In Cut mode</description>
                </item>
              </list>
              <list type="table">
                <item>
                  <term>
                    <b>False</b>
                  </term>
                  <description>Cancels Cut or Copy mode and removes the moving border.</description>
                </item>
                <item>
                  <term>
                    <b>True</b>
                  </term>
                  <description>Cancels Cut or Copy mode and removes the moving border.</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataEntryMode">
      <MemberSignature Language="C#" Value="public int DataEntryMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataEntryMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DataEntryMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DataEntryMode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataEntryMode { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(331)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-287">Zurückgeben oder Festlegen der Dateneingabemodus, wie in der folgenden Tabelle dargestellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-287">Returns or sets Data Entry mode, as shown in the table below.</span>
          </span>
          <span data-ttu-id="76817-288">Wenn im Dateneingabemodus, können Sie Daten nur in der nicht gesperrten Zellen im aktuell ausgewählten Bereich eingeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-288">When in Data Entry mode, you can enter data only in the unlocked cells in the currently selected range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-289">
            <list type="table">
              <item>
                <term>
                  <b>xlOn</b>
                </term>
                <description>Dateneingabemodus ist aktiviert.</description>
              </item>
              <item>
                <term>
                  <b>XlOff</b>
                </term>
                <description>Dateneingabe-Modus ist aktiviert ausgeschaltet</description>
              </item>
              <item>
                <term>
                  <b>XlStrict</b>
                </term>
                <description>Dateneingabemodus ist aktiviert, und Drücken von ESC wird nicht aktiviert, ausgeschaltet</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-289">
              <list type="table">
                <item>
                  <term>
                    <b>xlOn</b>
                  </term>
                  <description>Data Entry mode is turned on.</description>
                </item>
                <item>
                  <term>
                    <b>xlOff</b>
                  </term>
                  <description>Data Entry mode is turned off.</description>
                </item>
                <item>
                  <term>
                    <b>xlStrict</b>
                  </term>
                  <description>Data Entry mode is turned on and pressing ESC won't turn it off.</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEAppReturnCode">
      <MemberSignature Language="C#" Value="public int DDEAppReturnCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DDEAppReturnCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DDEAppReturnCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DDEAppReturnCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DDEAppReturnCode { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(332)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(332)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-290">Gibt die anwendungsspezifischen DDE-Rückgabecode die ursprüngliche wurde in den letzten DDE Erkennen von Excel empfangene Meldung an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-290">Returns the application-specific DDE return code that was contained in the last DDE acknowledge message received by Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEExecute">
      <MemberSignature Language="C#" Value="public void DDEExecute (int Channel, string String);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDEExecute([in]int32 Channel, [in]string String) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEExecute(System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDEExecute(int Channel, System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(333)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Channel">
          <span data-ttu-id="76817-291">
            <b>Integer</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-291">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="76817-292">Die zurückgegebene Kanalnummer der <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-292">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span>
          </span>
        </param>
        <param name="String">
          <span data-ttu-id="76817-293">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-293">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="76817-294">Die Nachricht, die in der empfangenden Anwendung definiert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-294">The message defined in the receiving application.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-295">Es wird über den angegebenen DDE-Kanal (Dynamic Data Exchange) ein Befehl oder eine (bzw. mehrere) sonstige Aktion(en) in einer anderen Anwendung ausgeführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-295">Runs a command or performs some other action or actions in another application by way of the specified DDE channel.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="76817-296">
            <para>
              <b>DDEExecute</b> -Methode dient zum Senden von Befehlen zu einer anderen Anwendung. Außerdem können Sie sie zu einer anderen Anwendung Tastenanschläge zwar die <see cref="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)" /> -Methode ist die bevorzugte Methode zum Senden von Tastenanschlägen. Die <paramref name="String" /> -Argument kann eine einzelne Taste kombiniert mit ALT, STRG oder UMSCHALT oder eine beliebige Kombination dieser Tasten angeben. Jeden Schlüssel ist durch eine oder mehrere Zeichen dargestellt, wie "a" für das Zeichen ein, oder "{ENTER}" für die EINGABETASTE.</para>
            <para>An Zeichen, die angezeigt werden, wenn Sie den entsprechenden Schlüssel (beispielsweise eingeben oder Registerkarte), drücken Sie die in der folgenden Tabelle aufgeführten Codes verwenden. Jeder Code in der Tabelle steht für eine Taste auf der Tastatur.</para>
            <list type="table">
              <item>
                <term>RÜCKTASTE</term>
                <description>{BACKSPACE} oder {BS}</description>
              </item>
              <item>
                <term>UNTERBRECHEN</term>
                <description>{UNTERBRECHEN}</description>
              </item>
              <item>
                <term>Feststelltaste</term>
                <description>{CAPSLOCK}</description>
              </item>
              <item>
                <term>Löschen</term>
                <description>{KLAR}</description>
              </item>
              <item>
                <term>Entfernen oder ENTF</term>
                <description>{DELETE} oder {DEL}</description>
              </item>
              <item>
                <term>Pfeil nach unten</term>
                <description>{nach unten}</description>
              </item>
              <item>
                <term>END</term>
                <description>{END}</description>
              </item>
              <item>
                <term>EINGABETASTE</term>
                <description>~ (Tilde)</description>
              </item>
              <item>
                <term>EINGABETASTE (Zehnertastatur)</term>
                <description>{ENTER}</description>
              </item>
              <item>
                <term>ESC</term>
                <description>{ESCAPE} oder {ESC}</description>
              </item>
              <item>
                <term>F1 bis F15</term>
                <description>{F1} bis {F15}</description>
              </item>
              <item>
                <term>Hilfe</term>
                <description>-Hilfe {}</description>
              </item>
              <item>
                <term>Startseite</term>
                <description>{HOME}</description>
              </item>
              <item>
                <term>INS</term>
                <description>{Einfügen}</description>
              </item>
              <item>
                <term>Pfeil nach links</term>
                <description>{LEFT}</description>
              </item>
              <item>
                <term>NUM-Taste</term>
                <description>{NUMLOCK}</description>
              </item>
              <item>
                <description>{Bild-ab}</description> - 
              <term>Bild-ab</term></item>
              <item>
                <term>Bild-auf</term>
                <description>{Bild-auf}</description>
              </item>
              <item>
                <description>{RETURN}</description>
                <term>zurückgeben</term>
              </item>
              <item>
                <term>Pfeil nach rechts</term>
                <description>{RIGHT}</description>
              </item>
              <item>
                <term>Rollen-Taste</term>
                <description>{SCROLLLOCK}</description>
              </item>
              <item>
                <term>Registerkarte</term>
                <description>{TAB}</description>
              </item>
              <item>
                <term>Pfeil nach oben</term>
                <description>{UP}</description>
              </item>
            </list>
            <para>Können Sie auch können Tastenkombinationen mit UMSCHALT und/oder STRG und/oder ALT angeben. Um einen Schlüssel in Kombination mit einem oder mehreren der erwähnten Tasten anzugeben, verwenden Sie in der folgenden Tabelle.</para>
            <list type="table">
              <item>
                <term>UMSCHALT</term>
                <description>+ (Pluszeichen)</description>
              </item>
              <item>
                <term>STRG</term>
                <description>^ (Caretzeichen)</description>
              </item>
              <item>
                <term>ALT</term>
                <description>% (Prozentzeichen)</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-296">
              <para>The <b>DDEExecute</b> method is designed to send commands to another application. You can also use it to send keystrokes to another application, although the <see cref="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)" /> method is the preferred way to send keystrokes. The <paramref name="String" /> argument can specify any single key combined with ALT, CTRL, or SHIFT, or any combination of those keys. Each key is represented by one or more characters, such as "a" for the character a, or "{ENTER}" for the ENTER key.</para>
              <para>To specify characters that aren't displayed when you press the corresponding key (for example, ENTER or TAB), use the codes listed in the following table. Each code in the table represents one key on the keyboard.</para>
              <list type="table">
                <item>
                  <term>BACKSPACE</term>
                  <description>{BACKSPACE} or {BS}</description>
                </item>
                <item>
                  <term>BREAK</term>
                  <description>{BREAK}</description>
                </item>
                <item>
                  <term>CAPS LOCK</term>
                  <description>{CAPSLOCK}</description>
                </item>
                <item>
                  <term>CLEAR</term>
                  <description>{CLEAR}</description>
                </item>
                <item>
                  <term>DELETE or DEL</term>
                  <description>{DELETE} or {DEL}</description>
                </item>
                <item>
                  <term>DOWN ARROW</term>
                  <description>{DOWN}</description>
                </item>
                <item>
                  <term>END</term>
                  <description>{END}</description>
                </item>
                <item>
                  <term>ENTER</term>
                  <description>~ (tilde)</description>
                </item>
                <item>
                  <term>ENTER (numeric keypad)</term>
                  <description>{ENTER}</description>
                </item>
                <item>
                  <term>ESC</term>
                  <description>{ESCAPE} or {ESC}</description>
                </item>
                <item>
                  <term>F1 through F15</term>
                  <description>{F1} through {F15}</description>
                </item>
                <item>
                  <term>HELP</term>
                  <description>{HELP}</description>
                </item>
                <item>
                  <term>HOME</term>
                  <description>{HOME}</description>
                </item>
                <item>
                  <term>INS</term>
                  <description>{INSERT}</description>
                </item>
                <item>
                  <term>LEFT ARROW</term>
                  <description>{LEFT}</description>
                </item>
                <item>
                  <term>NUM LOCK</term>
                  <description>{NUMLOCK}</description>
                </item>
                <item>
                  <term>PAGE DOWN</term>
                  <description>{PGDN}</description>
                </item>
                <item>
                  <term>PAGE UP</term>
                  <description>{PGUP}</description>
                </item>
                <item>
                  <term>RETURN</term>
                  <description>{RETURN}</description>
                </item>
                <item>
                  <term>RIGHT ARROW</term>
                  <description>{RIGHT}</description>
                </item>
                <item>
                  <term>SCROLL LOCK</term>
                  <description>{SCROLLLOCK}</description>
                </item>
                <item>
                  <term>TAB</term>
                  <description>{TAB}</description>
                </item>
                <item>
                  <term>UP ARROW</term>
                  <description>{UP}</description>
                </item>
              </list>
              <para>You can also specify keys combined with SHIFT and/or CTRL and/or ALT. To specify a key combined with one or more of the keys just mentioned, use the following table.</para>
              <list type="table">
                <item>
                  <term>SHIFT</term>
                  <description>+ (plus sign)</description>
                </item>
                <item>
                  <term>CTRL</term>
                  <description>^ (caret)</description>
                </item>
                <item>
                  <term>ALT</term>
                  <description>% (percent sign)</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEInitiate">
      <MemberSignature Language="C#" Value="public int DDEInitiate (string App, string Topic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DDEInitiate([in]string App, [in]string Topic) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DDEInitiate (App As String, Topic As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DDEInitiate(System::String ^ App, System::String ^ Topic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(334)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="App" Type="System.String" />
        <Parameter Name="Topic" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="App">
          <span data-ttu-id="76817-297">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-297">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="76817-298">Der Anwendungsname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-298">The application name.</span>
          </span>
        </param>
        <param name="Topic">
          <span data-ttu-id="76817-299">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-299">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="76817-300">Beschreibt einen Bestandteil der Anwendung, zu der Sie einen Kanal öffnen (in der Regel ein Dokument dieser Anwendung).</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-300">Describes something in the application to which you're opening a channel — usually a document of that application.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-301">Öffnet einen DDE-Kanal (Dynamic Data Exchange) zu einer Anwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-301">Opens a DDE channel to an application.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="76817-302">
            <para>Bei erfolgreicher gibt die <b>DDEInitiate</b> -Methode die Anzahl der geöffneten Kanals zurück. Alle nachfolgende DDE-Funktionen verwenden diese Nummer zum Angeben des Kanals.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-302">
              <para>If successful, the <b>DDEInitiate</b> method returns the number of the open channel. All subsequent DDE functions use this number to specify the channel.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DDEPoke">
      <MemberSignature Language="C#" Value="public void DDEPoke (int Channel, object Item, object Data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDEPoke([in]int32 Channel, [in]object Item, [in]object Data) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDEPoke(System.Int32,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DDEPoke (Channel As Integer, Item As Object, Data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDEPoke(int Channel, System::Object ^ Item, System::Object ^ Data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(335)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="Item" Type="System.Object" />
        <Parameter Name="Data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Channel">
          <span data-ttu-id="76817-303">
            <b>Integer</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-303">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="76817-304">Die zurückgegebene Kanalnummer der <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-304">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span>
          </span>
        </param>
        <param name="Item">
          <span data-ttu-id="76817-305">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-305">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-306">Das Element, zu dem die Daten gesendet werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-306">The item to which the data is to be sent.</span>
          </span>
        </param>
        <param name="Data">
          <span data-ttu-id="76817-307">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-307">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-308">Die Daten, die an die Anwendung gesendet werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-308">The data to be sent to the application.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-309">Diese Methode sendet Daten an eine Anwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-309">Sends data to an application.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="76817-310">
            <para>Ein Fehler tritt auf, wenn der Methodenaufruf nicht erfolgreich.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-310">
              <para>An error occurs if the method call doesn't succeed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DDERequest">
      <MemberSignature Language="C#" Value="public object DDERequest (int Channel, string Item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DDERequest([in]int32 Channel, [in]string Item) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDERequest(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DDERequest (Channel As Integer, Item As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DDERequest(int Channel, System::String ^ Item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(336)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
        <Parameter Name="Item" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Channel">
          <span data-ttu-id="76817-311">
            <b>Integer</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-311">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="76817-312">Die zurückgegebene Kanalnummer der <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-312">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span>
          </span>
        </param>
        <param name="Item">
          <span data-ttu-id="76817-313">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-313">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="76817-314">Das Element, das angefordert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-314">The item to be requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-p152">Mit dieser Methode können Sie Informationen von einer bestimmten Anwendung anfordern. Diese Methode gibt immer ein Array zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-p152">Requests information from the specified application. This method always returns an array.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DDETerminate">
      <MemberSignature Language="C#" Value="public void DDETerminate (int Channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DDETerminate([in]int32 Channel) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DDETerminate(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DDETerminate (Channel As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DDETerminate(int Channel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(337)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Channel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Channel">
          <span data-ttu-id="76817-317">
            <b>Integer</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-317">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="76817-318">Die zurückgegebene Kanalnummer der <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-318">The channel number returned by the <see cref="M:Microsoft.Office.Interop.Excel._Application.DDEInitiate(System.String,System.String)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-319">Durch diese Methode wird ein Kanal zu einer anderen Anwendung geschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-319">Closes a channel to another application.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecimalSeparator">
      <MemberSignature Language="C#" Value="public string DecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property DecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1809)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-320">Legt fest oder gibt das Zeichen verwendet Dezimaltrennzeichen als <b>Zeichenfolge</b>zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-320">Sets or returns the character used for the decimal separator as a <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultFilePath">
      <MemberSignature Language="C#" Value="public string DefaultFilePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFilePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultFilePath" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultFilePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-321">Zurück oder legt den Standardpfad, den Microsoft Excel beim Öffnen einer Datei verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-321">Returns or sets the default path that Microsoft Excel uses when it opens files.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSaveFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFileFormat DefaultSaveFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFileFormat DefaultSaveFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultSaveFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSaveFormat As XlFileFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFileFormat DefaultSaveFormat { Microsoft::Office::Interop::Excel::XlFileFormat get(); void set(Microsoft::Office::Interop::Excel::XlFileFormat value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFileFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-322">Zurück oder legt das Standardformat zum Speichern von Dateien.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-322">Returns or sets the default format for saving files.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSheetDirection">
      <MemberSignature Language="C#" Value="public int DefaultSheetDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSheetDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultSheetDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSheetDirection As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DefaultSheetDirection { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(229)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-323">Zurückgeben oder festlegen die standardrichtung in der Microsoft Excel neue Fenster und Arbeitsblätter anzeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-323">Returns or sets the default direction in which Microsoft Excel displays new windows and worksheets.</span>
          </span>
          <span data-ttu-id="76817-324">Kann eine der folgenden Konstanten sein: <b>XlRTL</b> (von rechts nach links) oder <b>XlLTR</b> (von links nach rechts).</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-324">Can be one of the following constants: <b>xlRTL</b> (right to left) or <b>xlLTR</b> (left to right).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-325">
            <para>Einige der folgenden Konstanten haben möglicherweise nicht zur Verfügung, abhängig von der Unterstützung der Sprache (Englisch USA), beispielsweise).</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-325">
              <para>Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultWebOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DefaultWebOptions DefaultWebOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DefaultWebOptions DefaultWebOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DefaultWebOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultWebOptions As DefaultWebOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DefaultWebOptions ^ DefaultWebOptions { Microsoft::Office::Interop::Excel::DefaultWebOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1797)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1797)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DefaultWebOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-326">Gibt die <see cref="T:Microsoft.Office.Interop.Excel.DefaultWebOptions" /> -Objekt, das globale Attribute auf Anwendungsebene, die von Microsoft Excel verwendet wird, wenn Sie ein Dokument als Webseite speichern oder eine Webseite öffnen enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-326">Returns the <see cref="T:Microsoft.Office.Interop.Excel.DefaultWebOptions" /> object that contains global application-level attributes used by Microsoft Excel whenever you save a document as a Web page or open a Web page.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferAsyncQueries">
      <MemberSignature Language="C#" Value="public bool DeferAsyncQueries { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DeferAsyncQueries" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DeferAsyncQueries" />
      <MemberSignature Language="VB.NET" Value="Public Property DeferAsyncQueries As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DeferAsyncQueries { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2390)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-327">Ruft ab oder legt fest, ob asynchrone Abfragen OLAP-Datenquellen ausgeführt werden, wenn ein Arbeitsblatt von VBA-Code berechnet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-327">Gets or sets whether asychronous queries to OLAP data sources are executed when a worksheet is calculated by VBA code.</span>
          </span>
          <span data-ttu-id="76817-328">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-328">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-329">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-329">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="76817-330">
            <para>Festlegen der <b>DeferAsyncQueries</b> -Eigenschaft auf <b>True</b> wird verhindert, dass alle asynchrone Abfragen ausgeführt werden, bis die <see cref="M:Microsoft.Office.Interop.Excel._Application.CalculateUntilAsyncQueriesDone" /> -Methode aufgerufen wird.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-330">
              <para>Setting the <b>DeferAsyncQueries</b> property to <b>True</b> prevents any asynchronous queries form executing until the <see cref="M:Microsoft.Office.Interop.Excel._Application.CalculateUntilAsyncQueriesDone" /> method is called.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteChartAutoFormat">
      <MemberSignature Language="C#" Value="public void DeleteChartAutoFormat (string Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteChartAutoFormat([in]string Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DeleteChartAutoFormat(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteChartAutoFormat (Name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteChartAutoFormat(System::String ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(217)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="76817-331">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-331">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="76817-332">Der Name des benutzerdefinierten AutoFormats entfernt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-332">The name of the custom autoformat to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-333">Entfernt ein benutzerdefiniertes Diagramm-AutoFormat aus der Liste verfügbarer Diagramm-AutoFormate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-333">Removes a custom chart autoformat from the list of available chart autoformats.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCustomList">
      <MemberSignature Language="C#" Value="public void DeleteCustomList (int ListNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteCustomList([in]int32 ListNum) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DeleteCustomList(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteCustomList (ListNum As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteCustomList(int ListNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ListNum">
          <span data-ttu-id="76817-334">
            <b>Integer</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-334">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="76817-335">Die Nummer der benutzerdefinierten Liste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-335">The custom list number.</span>
          </span>
          <span data-ttu-id="76817-336">Diese Nummer muss größer als oder gleich 5 (Microsoft Excel weist vier integrierte benutzerdefinierte Listen, die nicht gelöscht werden können).</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-336">This number must be greater than or equal to 5 (Microsoft Excel has four built-in custom lists that cannot be deleted).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-337">Löscht eine benutzerdefinierte Liste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-337">Deletes a custom list.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="76817-338">
            <para>Diese Methode generiert einen Fehler, wenn die Listennummer kleiner 5 ist oder wenn die entsprechende benutzerdefinierte Liste nicht vorhanden ist.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-338">
              <para>This method generates an error if the list number is less than 5 or if there's no matching custom list.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dialogs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Dialogs Dialogs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Dialogs Dialogs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dialogs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dialogs As Dialogs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Dialogs ^ Dialogs { Microsoft::Office::Interop::Excel::Dialogs ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(761)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(761)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Dialogs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-339">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Dialogs" /> -Auflistung, die alle integrierten Dialogfelder darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-339">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Dialogs" /> collection that represents all built-in dialog boxes.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets DialogSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets DialogSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DialogSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DialogSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ DialogSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-340">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-340">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAlerts">
      <MemberSignature Language="C#" Value="public bool DisplayAlerts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayAlerts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayAlerts As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayAlerts { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-341">
            <b>True,</b> Wenn Microsoft Excel bestimmte Warnungen und Nachrichten, während ein Makro ausgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-341">
              <b>True</b> if Microsoft Excel displays certain alerts and messages while a macro is running.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-342">
            <para>Der Standardwert ist <b>True</b>. Legen Sie diese Eigenschaft auf <b>false fest</b> , wenn Sie nicht während der Ausführung eines Programms von Anweisungen und Warnhinweise gestört werden möchten; jedes Mal eine Nachricht eine Antwort erfordert, Microsoft Excel wählt die Standardantwort.</para>
            <para>Wenn Sie diese Eigenschaft auf <b>False</b>festlegen, Microsoft Excel wird diese Eigenschaft auf <b>true fest,</b> Wenn der Code abgeschlossen ist, es sei denn, Sie Cross ausführen prozessüberschreitenden Code.</para>
            <para>Bei Verwendung der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> Methode für Arbeitsmappen in eine vorhandene Datei überschreiben, die Benachrichtigung "Überschreiben" weist den Standardwert "Nein", während die Antwort "Ja" von Excel ausgewählt ist, wenn die <b>DisplayAlerts</b> -Eigenschaft auf <b>False</b>festgelegt ist.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-342">
              <para>The default value is <b>True</b>. Set this property to <b>False</b> if you don’t want to be disturbed by prompts and alert messages while a program is running; any time a message requires a response, Microsoft Excel chooses the default response.</para>
              <para>If you set this property to <b>False</b>, Microsoft Excel sets this property to <b>True</b> when the code is finished, unless you are running cross process code.</para>
              <para>When using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method for workbooks to overwrite an existing file, the 'Overwrite' alert has a default of 'No', while the 'Yes' response is selected by Excel when the <b>DisplayAlerts</b> property is set to <b>False</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayClipboardWindow">
      <MemberSignature Language="C#" Value="public bool DisplayClipboardWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayClipboardWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayClipboardWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayClipboardWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayClipboardWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(322)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-343">Gibt <b>True</b> zurück, wenn die Microsoft Office-Zwischenablage angezeigt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-343">Returns <b>True</b> if the Microsoft Office Clipboard can be displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayCommentIndicator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCommentDisplayMode DisplayCommentIndicator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCommentDisplayMode DisplayCommentIndicator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayCommentIndicator" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayCommentIndicator As XlCommentDisplayMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCommentDisplayMode DisplayCommentIndicator { Microsoft::Office::Interop::Excel::XlCommentDisplayMode get(); void set(Microsoft::Office::Interop::Excel::XlCommentDisplayMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1196)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCommentDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-344">Gibt zurück oder legt fest, wie Zellen Kommentare und Indikatoren anzeigen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-344">Returns or sets the way cells display comments and indicators.</span>
          </span>
          <span data-ttu-id="76817-345">Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlCommentDisplayMode" /> Konstanten: <b>XlNoIndicator</b>, <b>XlCommentIndicatorOnly</b>oder <b>XlCommentAndIndicator</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-345">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlCommentDisplayMode" /> constants: <b>xlNoIndicator</b>, <b>xlCommentIndicatorOnly</b>, or <b>xlCommentAndIndicator</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDocumentActionTaskPane">
      <MemberSignature Language="C#" Value="public bool DisplayDocumentActionTaskPane { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayDocumentActionTaskPane" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayDocumentActionTaskPane" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDocumentActionTaskPane As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayDocumentActionTaskPane { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2251)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-346">Festgelegt auf <b>True</b> im Aufgabenbereich Dokumentaktionen angezeigt. Legen Sie auf <b>false fest</b> , um den Aufgabenbereich ' Dokumentaktionen ' auszublenden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-346">Set to <b>True</b> to display the Document Actions task pane; set to <b>False</b> to hide the Document Actions task pane.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-347">
            <para>Durch Festlegen dieser Eigenschaft auf <b>True</b> führt zu einem Laufzeitfehler, wenn die aktive Arbeitsmappe nicht um ein SmartDocument handelt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-347">
              <para>Setting this property to <b>True</b> will result in a run-time error if the active workbook is not a smart document.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDocumentInformationPanel">
      <MemberSignature Language="C#" Value="public bool DisplayDocumentInformationPanel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayDocumentInformationPanel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayDocumentInformationPanel" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDocumentInformationPanel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayDocumentInformationPanel { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2380)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-p159">Gibt einen Wert vom Typ <b>Boolean</b> zurück, der angibt, ob der Bereich mit den Dokumenteigenschaften angezeigt wird, oder legt diesen Wert fest. Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-p159">Returns or sets a <b>Boolean</b> that represents whether the document properties panel is displayed. Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-350">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-350">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayExcel4Menus">
      <MemberSignature Language="C#" Value="public bool DisplayExcel4Menus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayExcel4Menus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayExcel4Menus" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayExcel4Menus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayExcel4Menus { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-351">
            <b>True,</b> Wenn Microsoft Excel die Menüleisten der Version 4.0 anzeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-351">
              <b>True</b> if Microsoft Excel displays version 4.0 menu bars.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormulaAutoComplete">
      <MemberSignature Language="C#" Value="public bool DisplayFormulaAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFormulaAutoComplete" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFormulaAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFormulaAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFormulaAutoComplete { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2384)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-352">Ruft ab oder legt fest, ob für eine Liste der relevanten Funktionen und definierten Namen beim Erstellen von Zellformeln angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-352">Gets or sets whether to show a list of relevant functions and defined names when building cell formulas.</span>
          </span>
          <span data-ttu-id="76817-353">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-353">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-354">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-354">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormulaBar">
      <MemberSignature Language="C#" Value="public bool DisplayFormulaBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFormulaBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFormulaBar" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFormulaBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFormulaBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(344)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-355">
            <b>True,</b> Wenn die Bearbeitungsleiste angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-355">
              <b>True</b> if the formula bar is displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFullScreen">
      <MemberSignature Language="C#" Value="public bool DisplayFullScreen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFullScreen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFullScreen" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFullScreen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFullScreen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-356">
            <b>True,</b> Wenn Microsoft Excel im Vollbildmodus befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-356">
              <b>True</b> if Microsoft Excel is in full-screen mode.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-357">
            <para>Im Vollbildmodus wird das Anwendungsfenster maximiert, so, dass er den ganzen Bildschirm ausfüllt und Titelleiste der Anwendung Blendet. Symbolleisten, der Statusleiste und die Bearbeitungsleiste verdeckt für Vollbildmodus und den normalen Modus.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-357">
              <para>Full-screen mode maximizes the application window so that it fills the entire screen and hides the application title bar. Toolbars, the status bar, and the formula bar maintain separate display settings for full-screen mode and normal mode.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFunctionToolTips">
      <MemberSignature Language="C#" Value="public bool DisplayFunctionToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFunctionToolTips" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayFunctionToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFunctionToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFunctionToolTips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1940)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-358">
            <b>True,</b> wenn QuickInfos angezeigt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-358">
              <b>True</b> if function ToolTips can be displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInfoWindow">
      <MemberSignature Language="C#" Value="public bool DisplayInfoWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayInfoWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayInfoWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayInfoWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayInfoWindow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1213)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-359">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-359">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInsertOptions">
      <MemberSignature Language="C#" Value="public bool DisplayInsertOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayInsertOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayInsertOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayInsertOptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayInsertOptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1947)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-360">
            <b>True,</b> Wenn die Schaltfläche Einfügen-Optionen angezeigt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-360">
              <b>True</b> if the Insert Options button should be displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayNoteIndicator">
      <MemberSignature Language="C#" Value="public bool DisplayNoteIndicator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayNoteIndicator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayNoteIndicator" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayNoteIndicator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayNoteIndicator { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(345)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-361">
            <b>True,</b> Wenn Zellen mit Anmerkungen Zelltipps anzuzeigen und die Notizanzeiger (kleine Punkte in der Ecke oben rechts).</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-361">
              <b>True</b> if cells containing notes display cell tips and contain note indicators (small dots in their upper-right corners).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayPasteOptions">
      <MemberSignature Language="C#" Value="public bool DisplayPasteOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayPasteOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayPasteOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayPasteOptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayPasteOptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1946)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-362">
            <b>True,</b> Wenn die Schaltfläche Einfügen-Optionen angezeigt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-362">
              <b>True</b> if the Paste Options button can be displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-363">
            <para>Dies ist eine Microsoft Office-Einstellung. Diese Einstellung wirkt sich auf alle anderen Office-Anwendung. Festlegen der <b>DisplayPasteOptions</b> wird die Schaltfläche Auto-Ausfülloptionen in Microsoft Excel-Eigenschaft auf <b>True</b> deaktiviert. Die Schaltfläche <b>AutoAusfüllen-Optionen</b> ist nur in Excel die Schaltfläche Einfügen-Optionen wird in allen anderen Microsoft Office-Programmen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-363">
              <para>This is a Microsoft Office-wide setting. This setting affects all other Microsoft Office applications. Setting the <b>DisplayPasteOptions</b> property to <b>True</b> turns off the Auto Fill Options button in Microsoft Excel. The <b>Auto Fill Options</b> button is only in Excel, but the Paste Options button is in all the other Microsoft Office applications.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRecentFiles">
      <MemberSignature Language="C#" Value="public bool DisplayRecentFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRecentFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayRecentFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayRecentFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayRecentFiles { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(926)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-364">
            <b>True,</b> Wenn die Liste der zuletzt verwendeten Dateien im Menü Datei angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-364">
              <b>True</b> if the list of recently used files is displayed on the File menu.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayScrollBars">
      <MemberSignature Language="C#" Value="public bool DisplayScrollBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayScrollBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayScrollBars" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayScrollBars As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayScrollBars { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(346)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-365">
            <b>True,</b> wenn Bildlaufleisten für alle Arbeitsmappen sichtbar sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-365">
              <b>True</b> if scroll bars are visible for all workbooks.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayStatusBar">
      <MemberSignature Language="C#" Value="public bool DisplayStatusBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayStatusBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.DisplayStatusBar" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayStatusBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayStatusBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(347)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-366">
            <b>True</b>, wenn die Statusleiste angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-366">
              <b>True</b> if the status bar is displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayXMLSourcePane">
      <MemberSignature Language="C#" Value="public void DisplayXMLSourcePane (object XmlMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisplayXMLSourcePane([in]object XmlMap) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DisplayXMLSourcePane(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisplayXMLSourcePane (Optional XmlMap As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2252)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XmlMap" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XmlMap">
          <span data-ttu-id="76817-367">Optionale <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-367">Optional <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span>
          </span>
          <span data-ttu-id="76817-368">Die im Aufgabenbereich anzuzeigende XML-Zuordnung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-368">The XML map to display in the task pane.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-369">Öffnet den Aufgabenbereich XML-Quelle und zeigt die durch angegebene XML-Zuordnung der <paramref name="XmlMap" /> Argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-369">Opens the XML Source task pane and displays the XML map specified by the <paramref name="XmlMap" /> argument.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="76817-370">
            <para>XML-Features, außer das Speichern von Dateien im XML-Tabellenformat stehen nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-370">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public void DoubleClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoubleClick() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoubleClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DoubleClick();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(349)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76817-371">Diese Methode entspricht einem Doppelklick auf die aktive Zelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-371">Equivalent to double-clicking the active cell.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy1">
      <MemberSignature Language="C#" Value="public object Dummy1 (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy1([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy1(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy1 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <summary>
          <span data-ttu-id="76817-372">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-372">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy10">
      <MemberSignature Language="C#" Value="public bool Dummy10 (object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Dummy10([in]object arg) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy10(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy10 (Optional arg As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1791)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="arg">To be added.</param>
        <summary>
          <span data-ttu-id="76817-373">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-373">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy101">
      <MemberSignature Language="C#" Value="public object Dummy101 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Dummy101" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy101" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dummy101 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Dummy101 { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1802)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1802)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-374">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-374">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy11">
      <MemberSignature Language="C#" Value="public void Dummy11 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy11() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy11" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy11 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy11();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1792)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76817-375">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-375">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy12">
      <MemberSignature Language="C#" Value="public void Dummy12 (Microsoft.Office.Interop.Excel.PivotTable p1, Microsoft.Office.Interop.Excel.PivotTable p2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy12([in]class Microsoft.Office.Interop.Excel.PivotTable p1, [in]class Microsoft.Office.Interop.Excel.PivotTable p2) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy12(Microsoft.Office.Interop.Excel.PivotTable,Microsoft.Office.Interop.Excel.PivotTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy12 (p1 As PivotTable, p2 As PivotTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy12(Microsoft::Office::Interop::Excel::PivotTable ^ p1, Microsoft::Office::Interop::Excel::PivotTable ^ p2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1803)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p1" Type="Microsoft.Office.Interop.Excel.PivotTable" />
        <Parameter Name="p2" Type="Microsoft.Office.Interop.Excel.PivotTable" />
      </Parameters>
      <Docs>
        <param name="p1">To be added.</param>
        <param name="p2">To be added.</param>
        <summary>
          <span data-ttu-id="76817-376">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-376">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy13">
      <MemberSignature Language="C#" Value="public object Dummy13 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy13([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy13(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy13 (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1933)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>
          <span data-ttu-id="76817-377">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-377">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy14">
      <MemberSignature Language="C#" Value="public void Dummy14 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy14() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy14" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy14 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy14();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1944)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76817-378">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-378">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy2">
      <MemberSignature Language="C#" Value="public object Dummy2 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy2([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy2 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <summary>
          <span data-ttu-id="76817-379">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-379">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy20">
      <MemberSignature Language="C#" Value="public object Dummy20 (int grfCompareFunctions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy20([in]int32 grfCompareFunctions) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy20(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy20 (grfCompareFunctions As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy20(int grfCompareFunctions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grfCompareFunctions" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="grfCompareFunctions">To be added.</param>
        <summary>
          <span data-ttu-id="76817-380">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-380">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76817-381">
            <b>s</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-381">
              <b>s</b>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy22">
      <MemberSignature Language="C#" Value="public bool Dummy22 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy22" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy22" />
      <MemberSignature Language="VB.NET" Value="Public Property Dummy22 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dummy22 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2781)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy23">
      <MemberSignature Language="C#" Value="public bool Dummy23 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dummy23" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Dummy23" />
      <MemberSignature Language="VB.NET" Value="Public Property Dummy23 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Dummy23 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2782)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy3">
      <MemberSignature Language="C#" Value="public object Dummy3 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy3() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy3" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy3 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy3();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1784)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76817-382">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-382">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy4">
      <MemberSignature Language="C#" Value="public object Dummy4 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy4([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy4(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy4 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <summary>
          <span data-ttu-id="76817-383">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-383">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy5">
      <MemberSignature Language="C#" Value="public object Dummy5 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy5([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy5(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy5 (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <summary>
          <span data-ttu-id="76817-384">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-384">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy6">
      <MemberSignature Language="C#" Value="public object Dummy6 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy6() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy6" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy6 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy6();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76817-385">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-385">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy7">
      <MemberSignature Language="C#" Value="public object Dummy7 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy7() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy7" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy7 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy7();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76817-386">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-386">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy8">
      <MemberSignature Language="C#" Value="public object Dummy8 (object Arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy8([in]object Arg1) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy8(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy8 (Optional Arg1 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <summary>
          <span data-ttu-id="76817-387">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-387">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy9">
      <MemberSignature Language="C#" Value="public object Dummy9 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy9() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Dummy9" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy9 () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Dummy9();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1790)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76817-388">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-388">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditDirectlyInCell">
      <MemberSignature Language="C#" Value="public bool EditDirectlyInCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EditDirectlyInCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EditDirectlyInCell" />
      <MemberSignature Language="VB.NET" Value="Public Property EditDirectlyInCell As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EditDirectlyInCell { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(929)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-389">
            <b>True,</b> Wenn Microsoft Excel ermöglicht die Bearbeitung in Zellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-389">
              <b>True</b> if Microsoft Excel allows editing in cells.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAnimations">
      <MemberSignature Language="C#" Value="public bool EnableAnimations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAnimations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableAnimations" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAnimations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAnimations { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1180)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-390">Dieses Objekt, dieses Mitglied oder diese Aufzählung ist veraltet und kann nicht in Ihrem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-390">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoComplete">
      <MemberSignature Language="C#" Value="public bool EnableAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoComplete" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoComplete { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1179)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-391">
            <b>True,</b> Wenn das AutoVervollständigen-Feature aktiviert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-391">
              <b>True</b> if the AutoComplete feature is enabled.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCancelKey">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlEnableCancelKey EnableCancelKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlEnableCancelKey EnableCancelKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableCancelKey" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCancelKey As XlEnableCancelKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlEnableCancelKey EnableCancelKey { Microsoft::Office::Interop::Excel::XlEnableCancelKey get(); void set(Microsoft::Office::Interop::Excel::XlEnableCancelKey value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1096)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlEnableCancelKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-392">Steuert, wie Microsoft Excel STRG + UNTBR (oder ESC oder Befehl + Punkt) Unterbrechungen der ausgeführten Prozedur behandelt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-392">Controls how Microsoft Excel handles CTRL+BREAK (or ESC or COMMAND+PERIOD) user interruptions to the running procedure.</span>
          </span>
          <span data-ttu-id="76817-393">Lese-/Schreibzugriff <see cref="T:Microsoft.Office.Interop.Excel.XlEnableCancelKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-393">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlEnableCancelKey" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-394">
            <para>
              <b>XlEnableCancelKey</b> kann eine der folgenden <b>XlEnableCancelKey</b> -Konstanten sein:</para>
            <list type="bullet">
              <item>
                <description>
                  <b>XlDisabled</b>  Abbrechen wichtige Trapping vollständig deaktiviert.</description>
              </item>
              <item>
                <description>
                  <b>XlErrorHandler</b>  die Unterbrechung der ausgeführten Prozedur als Fehler durch einen Fehlerhandler einrichten, die mit einer On Error GoTo-Anweisung auffangbarer gesendet wird. Der auffangbarer Fehlercode ist 18.</description>
              </item>
              <item>
                <description>
                  <b>XlInterrupt</b>  in die aktuelle Prozedur wird unterbrochen, und der Benutzer kann testen oder beenden Sie die Prozedur.</description>
              </item>
            </list>
            <para>Verwenden Sie diese Eigenschaft sehr sorgfältig. Wenn Sie <b>XlDisabled</b>verwenden, gibt es keine Möglichkeit, eine Endlosschleife oder anderen Code, der nicht, sich selbst beendet wird zu unterbrechen. Dienstanbieter entscheidet auch, wenn Sie <b>XlErrorHandler</b> verwenden, aber die Fehlerbehandlungsroutine immer mit der <b>Resume</b> -Anweisung, es ist nicht möglich, Limit für Code beenden.</para>
            <para>Die <b>EnableCancelKey</b> -Eigenschaft wird immer auf <b>XlInterrupt</b> zurückgesetzt, sobald Microsoft Excel zurückgegeben wird, in den Leerlauf, und es wird kein Code ausgeführt. Zum Auffangen oder Abbruch in der Prozedur zu deaktivieren, müssen Sie explizit die <b>EnableCancelKey</b> -Eigenschaft ändern, jedes Mal, wenn die Prozedur aufgerufen wird.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-394">
              <para>
                <b>XlEnableCancelKey</b> can be one of these <b>XlEnableCancelKey</b> constants:</para>
              <list type="bullet">
                <item>
                  <description>
                    <b>xlDisabled</b>  Cancel key trapping is completely disabled.</description>
                </item>
                <item>
                  <description>
                    <b>xlErrorHandler</b>  The interrupt is sent to the running procedure as an error, trappable by an error handler set up with an On Error GoTo statement. The trappable error code is 18.</description>
                </item>
                <item>
                  <description>
                    <b>xlInterrupt</b>  The current procedure is interrupted, and the user can debug or end the procedure.</description>
                </item>
              </list>
              <para>Use this property very carefully. If you use <b>xlDisabled</b>, there's no way to interrupt a runaway loop or other code that is not self-terminating. Likewise, if you use <b>xlErrorHandler</b> but your error handler always returns using the <b>Resume</b> statement, there's no way to stop runaway code.</para>
              <para>The <b>EnableCancelKey</b> property is always reset to <b>xlInterrupt</b> whenever Microsoft Excel returns to the idle state and there's no code running. To trap or disable cancellation in your procedure, you must explicitly change the <b>EnableCancelKey</b> property every time the procedure is called.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCheckFileExtensions">
      <MemberSignature Language="C#" Value="public bool EnableCheckFileExtensions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCheckFileExtensions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableCheckFileExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCheckFileExtensions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCheckFileExtensions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3158)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-395">True, um mitteilen zu aktivieren, wenn Microsoft Excel nicht als Standardprogramm zum Anzeigen und Bearbeiten von Kalkulationstabellen Dialogfeld ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-395">True to enable the Tell me if Microsoft Excel isn't the default program for viewing and editing spreadsheets dialog box.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEvents">
      <MemberSignature Language="C#" Value="public bool EnableEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableEvents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableEvents { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1212)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-396">
            <b>True,</b> Wenn Ereignisse für das angegebene Objekt aktiviert sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-396">
              <b>True</b> if events are enabled for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableLargeOperationAlert">
      <MemberSignature Language="C#" Value="public bool EnableLargeOperationAlert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableLargeOperationAlert" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableLargeOperationAlert" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableLargeOperationAlert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableLargeOperationAlert { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2388)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-397">Legt fest oder gibt einen Wert <b>vom Typ Boolean</b> , der angibt, ob die anzuzeigenden eine Warnung angezeigt, wenn ein Benutzer versucht, einen Vorgang auszuführen, die eine größere Anzahl von Zellen, als im Office-Center Benutzeroberfläche angegeben ist wirkt sich auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-397">Sets or returns a <b>Boolean</b> that represents whether to display an alert message when a user attempts to perform an operation that affects a larger number of cells than is specified in the Office center UI.</span>
          </span>
          <span data-ttu-id="76817-398">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-398">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-399">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-399">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="76817-400">
            <para>Der Standardwert dieser Eigenschaft ist <b>True</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-400">
              <para>The default value of this property is <b>True</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableLivePreview">
      <MemberSignature Language="C#" Value="public bool EnableLivePreview { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableLivePreview" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableLivePreview" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableLivePreview As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableLivePreview { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2379)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-401">Legt fest oder gibt einen Wert <b>vom Typ Boolean</b> , der angibt, ob ein- oder Ausblenden von Gallery-Vorschau, die angezeigt beim Verwenden von Katalogen werden, die Unterstützung für die Vorschau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-401">Sets or returns a <b>Boolean</b> that represents whether to show or hide gallery previews that appear when using galleries that support previewing.</span>
          </span>
          <span data-ttu-id="76817-402">Durch Festlegen dieser Eigenschaft auf <b>True</b> wird eine Vorschau der Arbeitsmappe vor dem Ausführen des Befehls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-402">Setting this property to <b>True</b> shows a preview of your workbook before applying the command.</span>
          </span>
          <span data-ttu-id="76817-403">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-403">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-404">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-404">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="76817-405">
            <para>Diese Eigenschaft entspricht dem Kontrollkästchen Livevorschau aktivieren im Dialogfeld Excel-Optionen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-405">
              <para>This property corresponds to the Enable Live Preview check box in the Excel Options dialog box.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableMacroAnimations">
      <MemberSignature Language="C#" Value="public bool EnableMacroAnimations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableMacroAnimations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableMacroAnimations" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableMacroAnimations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableMacroAnimations { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2997)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-406">Steuert, ob Animationen Makro aktiviert sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-406">Controls whether macro animations are enabled.</span>
          </span>
          <span data-ttu-id="76817-407">
            <b>True,</b> Wenn Benutzer Schnittstelle Animationen oder Diagramm Animationen aktiviert sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-407">
              <b>True</b> if user interface animations or chart animations are enabled.</span>
          </span>
          <span data-ttu-id="76817-408">Ist standardmäßig auf <b>"false"</b> (keine Animation) festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-408">Is set to <b>False</b> (no animation) by default.</span>
          </span>
          <span data-ttu-id="76817-409">Wenn sie während der Ausführung eines Makros auf <b>True</b> festgelegt ist, Animation zu aktivieren und dann werden zurückgesetzt auf <b>false festgelegt</b> , nachdem das Makro ausgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-409">If it is set to <b>True</b> during the running of a macro, it will enable animation and then will reset to <b>False</b> after the macro runs.</span>
          </span>
          <span data-ttu-id="76817-410">Lese-/Schreibzugriff <b>vom Typ Boolean</b> (<b>Bool</b> in c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-410">Read/write <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSound">
      <MemberSignature Language="C#" Value="public bool EnableSound { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSound" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableSound" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSound { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-411">
            <b>True,</b> Wenn Sounds für Microsoft Office aktiviert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-411">
              <b>True</b> if sound is enabled for Microsoft Office.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableTipWizard">
      <MemberSignature Language="C#" Value="public bool EnableTipWizard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTipWizard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.EnableTipWizard" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableTipWizard As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableTipWizard { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-412">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-412">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorCheckingOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ErrorCheckingOptions ErrorCheckingOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ErrorCheckingOptions ErrorCheckingOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ErrorCheckingOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorCheckingOptions As ErrorCheckingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ErrorCheckingOptions ^ ErrorCheckingOptions { Microsoft::Office::Interop::Excel::ErrorCheckingOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1954)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1954)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ErrorCheckingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-413">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.ErrorCheckingOptions" /> -Objekt, das die fehlerprüfung Optionen für eine Anwendung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-413">Returns an <see cref="T:Microsoft.Office.Interop.Excel.ErrorCheckingOptions" /> object, which represents the error checking options for an application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate (object Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate([in]object Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Evaluate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (Name As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate(System::Object ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="76817-414">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-414">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-415">Der Name des Objekts, wobei die für Microsoft Excel gültigen Namenskonventionen zu berücksichtigen sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-415">The name of the object, using the naming convention of Microsoft Excel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-416">Diese Methode konvertiert einen Microsoft Excel-Namen in ein Objekt oder in einen Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-416">Converts a Microsoft Excel name to an object or a value.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="76817-417">
            <para>Mit dieser Methode können die folgenden Typen von Namen in Microsoft Excel verwendet werden:</para>
            <list type="bullet">
              <item>
                <description>Verweist auf A1-Schreibweise. Sie können einen Verweis auf eine einzelne Zelle in der A1-Schreibweise verwenden. Bezüge sind immer absolute Bezüge.</description>
              </item>
              <item>
                <description>Bereiche. Können, verwenden Sie den Bereich überschneiden, und union-Operatoren (Doppelpunkt, Leerzeichen und Komma, jeweils) durch Verweise.</description>
              </item>
              <item>
                <description>Definierte Namen. Sie können einen beliebigen Namen in der Sprache des Makros angeben.</description>
              </item>
              <item>
                <description>Externe Verweise. Sie können die! Operator verweisen auf eine Zelle oder einen Namen in einer anderen Arbeitsmappe definiert – beispielsweise Evaluate ("[Mappe1. XLS] Sheet1! A1 ").</description>
              </item>
            </list>
            <para>
              <b>Hinweis</b>: Verwenden von Klammern (beispielsweise "[a1: C5]") ist identisch mit Aufrufen der <b>Evaluate</b> -Methode mit einem Zeichenfolgenargument. Die Vorteile der Verwendung von Klammern ist, dass der Code kürzer ist. Die Vorteile der Verwendung von <b>Evaluate</b> besteht darin, dass das Argument eine Zeichenfolge ist, damit können Sie die Zeichenfolge in Ihrem Code erstellen oder eine Variablen verwenden.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-417">
              <para>The following types of names in Microsoft Excel can be used with this method:</para>
              <list type="bullet">
                <item>
                  <description>A1-style references. You can use any reference to a single cell in A1-style notation. All references are considered to be absolute references.</description>
                </item>
                <item>
                  <description>Ranges. You can use the range, intersect, and union operators (colon, space, and comma, respectively) with references.</description>
                </item>
                <item>
                  <description>Defined names. You can specify any name in the language of the macro.</description>
                </item>
                <item>
                  <description>External references. You can use the ! operator to refer to a cell or to a name defined in another workbook — for example, Evaluate("[BOOK1.XLS]Sheet1!A1").</description>
                </item>
              </list>
              <para>
                <b>Note</b>: Using square brackets (for example, "[A1:C5]") is identical to calling the <b>Evaluate</b> method with a string argument. The advantage of using square brackets is that the code is shorter. The advantage of using <b>Evaluate</b> is that the argument is a string, so you can either construct the string in your code or use a variable.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4IntlMacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Excel4IntlMacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4IntlMacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4IntlMacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-418">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> -Auflistung, die alle internationalen Makrovorlagen von Microsoft Excel 4.0 in der angegebenen Arbeitsmappe darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-418">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 international macro sheets in the specified workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4MacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Excel4MacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4MacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4MacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-419">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> -Auflistung, die alle Microsoft Excel 4.0-Makrovorlagen in der angegebenen Arbeitsmappe darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-419">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 macro sheets in the specified workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteExcel4Macro">
      <MemberSignature Language="C#" Value="public object ExecuteExcel4Macro (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ExecuteExcel4Macro([in]string String) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ExecuteExcel4Macro(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteExcel4Macro(System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(350)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String">
          <span data-ttu-id="76817-420">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-420">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="76817-421">Eine Microsoft Excel 4.0-Makro Sprache Funktion ohne Gleichheitszeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-421">A Microsoft Excel 4.0 macro language function without the equal sign.</span>
          </span>
          <span data-ttu-id="76817-422">Alle Verweise müssen als Z1S1-Zeichenfolgen angegeben sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-422">All references must be given as R1C1 strings.</span>
          </span>
          <span data-ttu-id="76817-423">Wenn <paramref name="String" /> enthält eingebetteten Anführungszeichen, müssen Sie diese zweimal angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-423">If <paramref name="String" /> contains embedded double quotation marks, you must double them.</span>
          </span>
          <span data-ttu-id="76817-424">Beispiel für die Makrofunktion ausführen =Mid("ein_text",1,4), <paramref name="String" /> "MID(""sometext"",1,4)" sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-424">For example, to run the macro function =MID("sometext",1,4), <paramref name="String" /> would have to be "MID(""sometext"",1,4)".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-425">Führt eine Microsoft Excel 4.0-Makros-Funktion, und klicken Sie dann das Ergebnis der Funktion zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-425">Runs a Microsoft Excel 4.0 macro function, and then returns the result of the function.</span>
          </span>
          <span data-ttu-id="76817-426">Der Rückgabetyp hängt von der Funktion ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-426">The return type depends on the function.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="76817-427">
            <para>Microsoft Excel 4.0-Makros im Zusammenhang mit der aktuellen Arbeitsmappe oder Blatt wird nicht ausgewertet. Dies bedeutet, dass alle Verweise externe und sollten Arbeitsmappenname ausdrücklich angeben. Beispielsweise müssen zum Ausführen des Microsoft Excel 4.0-Makros "Makro_3" in Mappe1, Sie "Mappe1! verwenden My_Macro() ". Wenn Sie den Namen der Arbeitsmappe nicht angeben, schlägt diese Methode fehl.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-427">
              <para>The Microsoft Excel 4.0 macro isn't evaluated in the context of the current workbook or sheet. This means that any references should be external and should specify an explicit workbook name. For example, to run the Microsoft Excel 4.0 macro "My_Macro" in Book1, you must use "Book1!My_Macro()". If you don't specify the workbook name, this method fails.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendList">
      <MemberSignature Language="C#" Value="public bool ExtendList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExtendList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ExtendList" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExtendList { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-428">
            <b>True,</b> Wenn Microsoft Excel automatisch Formatierung und Formeln für neue Daten, die erweitert wird zu einer Liste hinzugefügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-428">
              <b>True</b> if Microsoft Excel automatically extends formatting and formulas to new data that is added to a list.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-429">
            <para>Erweitert, formatiert und Formeln müssen in mindestens drei der ersten fünf Zeilen oder Spalten vor der neuen Zeile oder Spalte angezeigt werden, und Sie müssen die Daten an den unteren Rand oder an der rechten Seite der Liste hinzufügen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-429">
              <para>To be extended, formats and formulas must appear in at least three of the five list rows or columns preceding the new row or column, and you must add the data to the bottom or to the right-hand side of the list.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureInstall">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoFeatureInstall FeatureInstall { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoFeatureInstall FeatureInstall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FeatureInstall" />
      <MemberSignature Language="VB.NET" Value="Public Property FeatureInstall As MsoFeatureInstall" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoFeatureInstall FeatureInstall { Microsoft::Office::Core::MsoFeatureInstall get(); void set(Microsoft::Office::Core::MsoFeatureInstall value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoFeatureInstall</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-430">Zurückgeben oder festlegen ein Werts (Konstante), das angibt, wie Microsoft Excel Aufrufe von Methoden und Eigenschaften, die noch nicht installierte Funktionsmerkmale, behandelt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-430">Returns or sets a value (constant) that specifies how Microsoft Excel handles calls to methods and properties that require features that aren’t yet installed.</span>
          </span>
          <span data-ttu-id="76817-431">Lese-/Schreibzugriff <see cref="T:Microsoft.Office.Core.MsoFeatureInstall" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-431">Read/write <see cref="T:Microsoft.Office.Core.MsoFeatureInstall" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-432">
            <para>
              <b>MsoFeatureInstall</b> kann eine der folgenden <b>MsoFeatureInstall</b> -Konstanten sein:</para>
            <list type="bullet">
              <item>
                <description>
                  <b>MsoFeatureInstallNone</b>  generiert einen generischen Automatisierungsfehler zur Laufzeit, wenn nicht installierte Features aufgerufen werden. Dies ist die Standardkonstante.</description>
              </item>
              <item>
                <description>
                  <b>MsoFeatureInstallOnDemand</b>  fordert den Benutzer zur Installation neuer Features.</description>
              </item>
              <item>
                <description>
                  <b>MsoFeatureInstallOnDemandWithUI</b>  eine Statusanzeige während der Installation angezeigt; nicht der Benutzer zum Installieren neuer Features aufgefordert.</description>
              </item>
            </list>
            <para>Die <b>MsoFeatureInstallOnDemandWithUI</b> -Konstante können Sie verhindern, dass die Benutzer denken, die die Anwendung nicht mehr reagiert nicht zur Verfügung, während ein Feature installiert wird. Verwenden Sie die <b>MsoFeatureInstallNone</b> -Konstante, wenn den Entwickler die einzige sein, die Features installieren können soll.</para>
            <para>, Wenn Sie haben die <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> -Eigenschaft auf <b>False</b>festgelegt Benutzer nicht aufgefordert, neue Features zu installieren, auch wenn die <b>FeatureInstall</b> -Eigenschaft auf <b>MsoFeatureInstallOnDemand</b>festgelegt ist. Wenn die <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> -Eigenschaft auf <b>True</b>festgelegt ist, eine Statusanzeige wird angezeigt, wenn die <b>FeatureInstall</b> -Eigenschaft auf <b>MsoFeatureInstallOnDemand</b>festgelegt ist.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-432">
              <para>
                <b>MsoFeatureInstall</b> can be one of these <b>MsoFeatureInstall</b> constants:</para>
              <list type="bullet">
                <item>
                  <description>
                    <b>msoFeatureInstallNone</b>  Generates a generic Automation error at run time when uninstalled features are called. This is the default constant.</description>
                </item>
                <item>
                  <description>
                    <b>msoFeatureInstallOnDemand</b>  Prompts the user to install new features.</description>
                </item>
                <item>
                  <description>
                    <b>msoFeatureInstallOnDemandWithUI</b>  Displays a progress meter during installation; doesn’t prompt the user to install new features.</description>
                </item>
              </list>
              <para>You can use the <b>msoFeatureInstallOnDemandWithUI</b> constant to prevent users from thinking that the application isn't responding while a feature is being installed. Use the <b>msoFeatureInstallNone</b> constant if you want the developer to be the only one who can install features.</para>
              <para>If you have the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property set to <b>False</b>, users won’t be prompted to install new features even if the <b>FeatureInstall</b> property is set to <b>msoFeatureInstallOnDemand</b>. If the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property is set to <b>True</b>, an installation progress meter will appear if the <b>FeatureInstall</b> property is set to <b>msoFeatureInstallOnDemand</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileConverters">
      <MemberSignature Language="C#" Value="public object FileConverters[object Index1, object Index2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FileConverters(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileConverters(Optional Index1 As Object, Optional Index2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FileConverters[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ Index1, System::Object ^ Index2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(931)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(931)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index1" Type="System.Object" />
        <Parameter Name="Index2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index1">
          <span data-ttu-id="76817-433">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-433">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-434">Der ausgeschriebene Name des Konverters, einschließlich der Suchzeichenfolge Dateitypen in Windows, z. B. "Lotus 1-2-3 Dateien (*.wk*)".</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-434">The long name of the converter, including the file-type search string in Windows, for example, "Lotus 1-2-3 Files (*.wk*)".</span>
          </span>
        </param>
        <param name="Index2">
          <span data-ttu-id="76817-435">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-435">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-436">Der Pfad der DLL-Datei oder des Quellcodes des Konverters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-436">The path of the converter DLL or code resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-437">Informationen zur installierten Dateikonverter zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-437">Returns information about installed file converters.</span>
          </span>
          <span data-ttu-id="76817-438">Gibt <b>Null</b> zurück, wenn keine Konverter installiert sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-438">Returns <b>Null</b> if there are no converters installed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-439">
            <para>, Wenn Sie keine Argumente angeben, gibt diese Eigenschaft ein Array, das Informationen über alle installierten Dateikonverter enthält. Jede Zeile im Array enthält Informationen über eine einzelne Datei-Konverter aus, wie in der folgenden Tabelle dargestellt.</para>
            <list type="table">
              <item>
                <term>1</term>
                <description>der ausgeschriebene Name des Konverters</description>
              </item>
              <item>
                <term>2</term>
                <description>den Pfad des Konverters DLL oder Code-Ressource</description>
              </item>
              <item>
                <term>3</term>
                <description>der Suchzeichenfolge Erweiterung</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-439">
              <para>If you don’t specify arguments, this property returns an array that contains information about all the installed file converters. Each row in the array contains information about a single file converter, as shown in the following table.</para>
              <list type="table">
                <item>
                  <term>1</term>
                  <description>The long name of the converter</description>
                </item>
                <item>
                  <term>2</term>
                  <description>The path of the converter DLL or code resource</description>
                </item>
                <item>
                  <term>3</term>
                  <description>The file-extension search string</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileDialog">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.FileDialog FileDialog[Microsoft.Office.Core.MsoFileDialogType fileDialogType] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.FileDialog FileDialog(valuetype Microsoft.Office.Core.MsoFileDialogType)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileDialog(Microsoft.Office.Core.MsoFileDialogType)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileDialog(fileDialogType As MsoFileDialogType) As FileDialog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::FileDialog ^ FileDialog[Microsoft::Office::Core::MsoFileDialogType] { Microsoft::Office::Core::FileDialog ^ get(Microsoft::Office::Core::MsoFileDialogType fileDialogType); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1942)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.FileDialog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileDialogType" Type="Microsoft.Office.Core.MsoFileDialogType" />
      </Parameters>
      <Docs>
        <param name="fileDialogType">
          <span data-ttu-id="76817-440">Erforderliche <see cref="T:Microsoft.Office.Core.MsoFileDialogType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-440">Required <see cref="T:Microsoft.Office.Core.MsoFileDialogType" />.</span>
          </span>
          <span data-ttu-id="76817-441">Der Typ des Dateidialogfelds. <b>MsoFileDialogType</b> kann eine der folgenden <b>MsoFileDialogType</b> -Konstanten sein:<b>MsoFileDialogFilePicker</b> ermöglicht es den Benutzern, eine Datei auszuwählen. <b>msoFileDialogFolderPicker</b> Ermöglicht Benutzern, einen Ordner auszuwählen. <b>msoFileDialogOpen</b> Ermöglicht Benutzer das Öffnen einer Datei. <b>msoFileDialogSaveAs</b> Ermöglicht Benutzern, eine Datei zu speichern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-441">The type of file dialog.<b>MsoFileDialogType</b> can be one of these <b>MsoFileDialogType</b> constants:<b>msoFileDialogFilePicker</b> Allows user to select a file.<b>msoFileDialogFolderPicker</b> Allows user to select a folder.<b>msoFileDialogOpen</b> Allows user to open a file.<b>msoFileDialogSaveAs</b> Allows user to save a file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-442">Gibt ein <see cref="T:Microsoft.Office.Core.FileDialog" /> -Objekt, das eine Instanz des Dateidialogfelds darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-442">Returns a <see cref="T:Microsoft.Office.Core.FileDialog" /> object representing an instance of the file dialog.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExportConverters">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.FileExportConverters FileExportConverters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.FileExportConverters FileExportConverters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileExportConverters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileExportConverters As FileExportConverters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::FileExportConverters ^ FileExportConverters { Microsoft::Office::Interop::Excel::FileExportConverters ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2768)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2768)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.FileExportConverters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-443">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" /> -Auflistung, die alle Dateikonverter zum Speichern stellt Dateien in Microsoft Excel verfügbar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-443">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" /> collection that represents all the file converters for saving files available to Microsoft Excel.</span>
          </span>
          <span data-ttu-id="76817-444">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-444">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-445">Gibt <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-445">Returns <see cref="T:Microsoft.Office.Interop.Excel.FileExportConverters" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileFind">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.IFind FileFind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.IFind FileFind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileFind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileFind As IFind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::IFind ^ FileFind { Microsoft::Office::Core::IFind ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.IFind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-p175">Sie haben für ein Visual Basic-Schlüsselwort Hilfe angefordert, das nur auf dem Macintosh verwendet wird. Weitere Informationen zu diesem Schlüsselwort finden Sie in der Sprachverzeichnishilfe zu Microsoft Office Macintosh Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-p175">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileSearch">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.FileSearch FileSearch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.FileSearch FileSearch" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileSearch" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileSearch As FileSearch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::FileSearch ^ FileSearch { Microsoft::Office::Core::FileSearch ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1200)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1200)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.FileSearch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-448">Gibt ein <see cref="T:Microsoft.Office.Core.FileSearch" /> -Objekt für die Verwendung mit Dateisuche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-448">Returns a <see cref="T:Microsoft.Office.Core.FileSearch" /> object for use with file searches.</span>
          </span>
          <span data-ttu-id="76817-449">Diese Eigenschaft ist nur in Microsoft Windows verfügbar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-449">This property is available only in Microsoft Windows.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileValidation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoFileValidationMode FileValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoFileValidationMode FileValidation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property FileValidation As MsoFileValidationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoFileValidationMode FileValidation { Microsoft::Office::Core::MsoFileValidationMode get(); void set(Microsoft::Office::Core::MsoFileValidationMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2788)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoFileValidationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-450">Ruft ab oder legt fest, wie Microsoft Excel Dateien vor dem Öffnen überprüft wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-450">Gets or sets how Microsoft Excel will validate files before opening them.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-451">Eine <see cref="T:Microsoft.Office.Core.MsoFileValidationMode" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-451">A <see cref="T:Microsoft.Office.Core.MsoFileValidationMode" /> object.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="76817-452">
            <para>Lese-/Schreibzugriff.</para>
            <para>-Dateien, die nicht Validierung werden in einem Fenster geschützte Ansicht geöffnet werden. Wenn Sie festlegen, die <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidation" /> -Eigenschaft, wird diese Einstellung in Kraft für die gesamte Sitzung bleibt die Anwendung geöffnet wird.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-452">
              <para>Read/write.</para>
              <para>Files that do not pass validation will be opened in a Protected View window. If you set the <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidation" /> property, that setting will remain in effect for the entire session the application is open.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileValidationPivot">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFileValidationPivotMode FileValidationPivot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFileValidationPivotMode FileValidationPivot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FileValidationPivot" />
      <MemberSignature Language="VB.NET" Value="Public Property FileValidationPivot As XlFileValidationPivotMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFileValidationPivotMode FileValidationPivot { Microsoft::Office::Interop::Excel::XlFileValidationPivotMode get(); void set(Microsoft::Office::Interop::Excel::XlFileValidationPivotMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2789)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFileValidationPivotMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-453">Ruft ab oder legt fest, wie Microsoft Excel den Inhalt der die Datencaches für PivotTable-Berichte überprüft wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-453">Gets or sets how Microsoft Excel will validate the contents of the data caches for PivotTable reports.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-454">Eine <see cref="T:Microsoft.Office.Interop.Excel.XlFileValidationPivotMode" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-454">A <see cref="T:Microsoft.Office.Interop.Excel.XlFileValidationPivotMode" /> object.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="76817-455">
            <para>Lese-/Schreibzugriff.</para>
            <para>-Dateien, die Datencaches enthalten, die nicht überprüft werden, werden in einem Fenster geschützte Ansicht geöffnet werden. Wenn Sie festlegen, die <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidationPivot" /> -Eigenschaft, wird diese Einstellung in Kraft für die gesamte Sitzung bleibt die Anwendung geöffnet wird.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-455">
              <para>Read/write.</para>
              <para>Files that contain data caches that do not validate will be opened in a Protected View window. If you set the <see cref="P:Microsoft.Office.Interop.Excel._Application.FileValidationPivot" /> property, that setting will remain in effect for the entire session the application is open.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindFile">
      <MemberSignature Language="C#" Value="public bool FindFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FindFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.FindFile" />
      <MemberSignature Language="VB.NET" Value="Public Function FindFile () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FindFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1771)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76817-456">Zeigt das Dialogfeld Öffnen an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-456">Displays the Open dialog box.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="76817-457">
            <para>Diese Methode zeigt das Dialogfeld Öffnen an und ermöglicht es dem Benutzer, eine Datei zu öffnen. Diese Methode gibt <b>True</b>zurück, wenn eine neue Datei erfolgreich geöffnet wird. Wenn der Benutzer das Dialogfeld abbricht, gibt diese Methode <b>False</b>zurück.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-457">
              <para>This method displays the Open dialog box and allows the user to open a file. If a new file is opened successfully, this method returns <b>True</b>. If the user cancels the dialog box, this method returns <b>False</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CellFormat FindFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CellFormat FindFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FindFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property FindFormat As CellFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CellFormat ^ FindFormat { Microsoft::Office::Interop::Excel::CellFormat ^ get(); void set(Microsoft::Office::Interop::Excel::CellFormat ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1934)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CellFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-458">Gibt die Suchkriterien für den Typ der zu suchenden Zellenformate zurück oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-458">Sets or returns the search criteria for the type of cell formats to find.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedDecimal">
      <MemberSignature Language="C#" Value="public bool FixedDecimal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FixedDecimal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Property FixedDecimal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FixedDecimal { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(351)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-459">Alle Daten eingegeben, nachdem Sie diese Eigenschaft auf <b>True</b> festgelegt ist, mit der Anzahl der festen Dezimalstellen festlegen, indem formatiert werden die <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces" /> Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-459">All data entered after this property is set to <b>True</b> will be formatted with the number of fixed decimal places set by the <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces" /> property.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedDecimalPlaces">
      <MemberSignature Language="C#" Value="public int FixedDecimalPlaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FixedDecimalPlaces" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FixedDecimalPlaces" />
      <MemberSignature Language="VB.NET" Value="Public Property FixedDecimalPlaces As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FixedDecimalPlaces { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(352)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-460">Gibt zurück oder legt die Anzahl der festen Dezimalstellen verwendet werden, wenn die <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal" /> -Eigenschaft auf <b>True</b>festgelegt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-460">Returns or sets the number of fixed decimal places used when the <see cref="P:Microsoft.Office.Interop.Excel._Application.FixedDecimal" /> property is set to <b>True</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashFill">
      <MemberSignature Language="C#" Value="public bool FlashFill { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlashFill" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FlashFill" />
      <MemberSignature Language="VB.NET" Value="Public Property FlashFill As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FlashFill { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-461">
            <b>TRUE</b> gibt an, dass das Feature Excel Flash füllen und aktiviert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-461">
              <b>TRUE</b> indicates that the Excel Flash Fill feature has been enabled and active.</span>
          </span>
          <span data-ttu-id="76817-462">
            <b>Boolean</b> (<b>Bool</b> in c#) Lese-/Schreibzugriff</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-462">
              <b>Boolean</b> (<b>bool</b> in C#) Read/Write</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-463">
            <para>Flash Füllung erkennt, wenn Sie Daten ändern, die ein Muster entspricht, die nach unten gefüllt und auf zusätzliche Daten in der Arbeitsmappe angewendet werden können, und füllt dann automatisch die Spalte mit den Ergebnissen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-463">
              <para>Flash Fill detects when you are modifying data that fits a pattern which can be filled down and applied to additional data in the workbook, and then automatically fills down the column with the results.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashFillMode">
      <MemberSignature Language="C#" Value="public bool FlashFillMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FlashFillMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FlashFillMode" />
      <MemberSignature Language="VB.NET" Value="Public Property FlashFillMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FlashFillMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2999)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-464">
            <b>True,</b> Wenn das Ausfüllen Flash-Feature aktiviert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-464">
              <b>True</b> if the Flash Fill feature is enabled.</span>
          </span>
          <span data-ttu-id="76817-465">
            <b>Boolean</b> (<b>Bool</b> in c#) Lese-/Schreibzugriff</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-465">
              <b>Boolean</b> (<b>bool</b> in C#) Read/Write</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaBarHeight">
      <MemberSignature Language="C#" Value="public int FormulaBarHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FormulaBarHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.FormulaBarHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaBarHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FormulaBarHeight { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2383)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-466">Ermöglicht dem Benutzer die Höhe der Bearbeitungsleiste in Zeilen an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-466">Allows the user to specify the height of the formula bar in lines.</span>
          </span>
          <span data-ttu-id="76817-467">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-467">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-468">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-468">
              <b>Integer</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="76817-469">
            <para>Wenn der angegebene Wert von <b>FormulaBarHeight</b> größer als das angezeigte Fenster Platz ist, wird die Bearbeitungsleiste Größe Fensterhöhe entsprechen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-469">
              <para>If the specified value of <b>FormulaBarHeight</b> is greater than the viewable window space, the formula bar is  resized to be equal to the window height.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateGetPivotData">
      <MemberSignature Language="C#" Value="public bool GenerateGetPivotData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateGetPivotData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.GenerateGetPivotData" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateGetPivotData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateGetPivotData { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1948)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-470">Gibt <b>True</b> zurück, wenn Microsoft Excel PivotTable-Berichtdaten abrufen können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-470">Returns <b>True</b> when Microsoft Excel can get PivotTable report data.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateTableRefs">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlGenerateTableRefs GenerateTableRefs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlGenerateTableRefs GenerateTableRefs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateTableRefs As XlGenerateTableRefs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlGenerateTableRefs GenerateTableRefs { Microsoft::Office::Interop::Excel::XlGenerateTableRefs get(); void set(Microsoft::Office::Interop::Excel::XlGenerateTableRefs value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlGenerateTableRefs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-471">Die <see cref="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs" /> -Eigenschaft bestimmt, ob der traditionellen Schreibweise-Methode oder die neue strukturierte verweisenden Notationsmethode zum Verweisen auf Tabellen in Formeln verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-471">The <see cref="P:Microsoft.Office.Interop.Excel._Application.GenerateTableRefs" /> property determines whether the traditional notation method or the new structured referencing notation method is used for referencing tables in formulas.</span>
          </span>
          <span data-ttu-id="76817-472">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-472">Read/write.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.XlGenerateTableRefs" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomListContents">
      <MemberSignature Language="C#" Value="public object GetCustomListContents (int ListNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetCustomListContents([in]int32 ListNum) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetCustomListContents(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomListContents (ListNum As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCustomListContents(int ListNum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListNum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ListNum">
          <span data-ttu-id="76817-473">
            <b>Integer</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-473">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="76817-474">Die Listennummer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-474">The list number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-475">Gibt eine benutzerdefinierte Liste (ein Array mit Zeichenfolgen) zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-475">Returns a custom list (an array of strings).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomListNum">
      <MemberSignature Language="C#" Value="public int GetCustomListNum (object ListArray);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCustomListNum([in]object ListArray) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetCustomListNum(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomListNum (ListArray As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCustomListNum(System::Object ^ ListArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ListArray" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ListArray">
          <span data-ttu-id="76817-476">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-476">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-477">Ein Array mit Zeichenfolgen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-477">An array of strings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-p183">Gibt für ein Array mit Zeichenfolgen die Nummer der benutzerdefinierten Liste zurück. Es können benutzerdefinierte und integrierte Listen zusammengeführt werden, um diese Methode zu benutzen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-p183">Returns the custom list number for an array of strings. You can use this method to match both built-in lists and custom-defined lists.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="76817-480">
            <para>Diese Methode generiert einen Fehler, wenn keine entsprechende Liste vorhanden ist.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-480">
              <para>This method generates an error if there's no corresponding list.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOpenFilename">
      <MemberSignature Language="C#" Value="public object GetOpenFilename (object FileFilter, object FilterIndex, object Title, object ButtonText, object MultiSelect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOpenFilename([in]object FileFilter, [in]object FilterIndex, [in]object Title, [in]object ButtonText, [in]object MultiSelect) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetOpenFilename(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOpenFilename (Optional FileFilter As Object, Optional FilterIndex As Object, Optional Title As Object, Optional ButtonText As Object, Optional MultiSelect As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1075)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileFilter" Type="System.Object" />
        <Parameter Name="FilterIndex" Type="System.Object" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="ButtonText" Type="System.Object" />
        <Parameter Name="MultiSelect" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="FileFilter">
          <span data-ttu-id="76817-481">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-481">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-482">Eine Zeichenfolge, die Dateifilterkriterien angibt. Diese Zeichenfolge besteht aus Paare von Datei Filterzeichenfolgen gefolgt von der MS-DOS-Platzhalter Filter Dateiangabe, wobei jeder Teil und jedes Paar durch Kommas getrennt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-482">A string specifying file filtering criteria.This string consists of pairs of file filter strings followed by the MS-DOS wildcard file filter specification, with each part and each pair separated by commas.</span>
          </span>
          <span data-ttu-id="76817-483">Jedes einzelne Paar wird in der Dropdown-Listenfeld Typ aufgeführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-483">Each separate pair is listed in the Files of type drop-down list box.</span>
          </span>
          <span data-ttu-id="76817-484">Die folgende Zeichenfolge gibt beispielsweise die zwei – Text und Addin: "Textdateien (*.txt),*.txt, Add-in-Dateien (*xla),* xla". Um mehrere MS-DOS-Platzhalterausdrücke für eine einzelne Datei Filtertyp verwenden, trennen Sie die Platzhalterausdrücke mit Semikolons, beispielsweise "Visual Basic-Dateien (*. BAS; *.txt),*. BAS;*. TXT". Wenn Length angegeben, wird dieses Argument auf "Allerdateien (*.*),*.*".</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-484">For example, the following string specifies two file filters — text and addin: "Text Files (*.txt),*.txt,Add-In Files (*.xla),*.xla".To use multiple MS-DOS wildcard expressions for a single file filter type, separate the wildcard expressions with semicolons, for example, "Visual Basic Files (*.bas; *.txt),*.bas;*.txt".If omitted, this argument defaults to "All Files (*.*),*.*".</span>
          </span>
        </param>
        <param name="FilterIndex">
          <span data-ttu-id="76817-485">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-485">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-486">Gibt die Indexnummern der standardmäßigen Dateifilterkriterien angibt, von 1 bis die Anzahl der Filter im angegebenen <paramref name="FileFilter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-486">Specifies the index numbers of the default file filtering criteria, from 1 to the number of filters specified in <paramref name="FileFilter" />.</span>
          </span>
          <span data-ttu-id="76817-487">Wenn dieses Argument nicht angegeben oder größer als die Anzahl der Filter vorhanden ist, wird der erste Dateifilter verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-487">If this argument is omitted or greater than the number of filters present, the first file filter is used.</span>
          </span>
        </param>
        <param name="Title">
          <span data-ttu-id="76817-488">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-488">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-489">Gibt den Titel des Dialogfelds.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-489">Specifies the title of the dialog box.</span>
          </span>
          <span data-ttu-id="76817-490">Wenn dieses Argument ausgelassen wird, ist der Titel "Öffnen".</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-490">If this argument is omitted, the title is "Open."</span>
          </span>
        </param>
        <param name="ButtonText">
          <span data-ttu-id="76817-491">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-491">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-492">Nur bei Macintosh.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-492">Macintosh only.</span>
          </span>
        </param>
        <param name="MultiSelect">
          <span data-ttu-id="76817-493">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-493">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-494">
            <b>True</b> , wenn mehrere Dateinamen ausgewählt werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-494">
              <b>True</b> to allow multiple file names to be selected.</span>
          </span>
          <span data-ttu-id="76817-495">
            <b>False</b> , wenn nur ein Dateiname ausgewählt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-495">
              <b>False</b> to allow only one file name to be selected.</span>
          </span>
          <span data-ttu-id="76817-496">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-496">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-497">Zeigt das standardmäßige Dialogfeld Öffnen an und ruft einen Dateinamen vom Benutzer ab, ohne Dateien versehentlich zu öffnen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-497">Displays the standard Open dialog box and gets a file name from the user without actually opening any files.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="76817-498">
            <para>Gibt diese Methode den ausgewählten Dateinamen oder den Namen, die vom Benutzer eingegebene zurück. Der zurückgegebene Name kann eine Pfadangabe enthalten. Wenn <paramref name="MultiSelect" /> ist <b>True</b>, der Rückgabewert ist ein Array mit den Namen der ausgewählten Datei (selbst wenn nur ein Dateiname ausgewählt wurde). Gibt <b>False</b> zurück, wenn der Benutzer das Dialogfeld abbricht.</para>
            <para>Diese Methode kann das aktuelle Laufwerk oder Ordner ändern.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-498">
              <para>This method returns the selected file name or the name entered by the user. The returned name may include a path specification. If <paramref name="MultiSelect" /> is <b>True</b>, the return value is an array of the selected file names (even if only one filename is selected). Returns <b>False</b> if the user cancels the dialog box.</para>
              <para>This method may change the current drive or folder.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPhonetic">
      <MemberSignature Language="C#" Value="public string GetPhonetic (object Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPhonetic([in]object Text) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetPhonetic(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPhonetic (Optional Text As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1795)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text">
          <span data-ttu-id="76817-499">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-499">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-500">Gibt den Text in phonetischen Text konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-500">Specifies the text to be converted to phonetic text.</span>
          </span>
          <span data-ttu-id="76817-501">Wenn Sie dieses Argument, die möglichen phonetischen Textzeichenfolge (sofern vorhanden) des zuvor angegebenen auslassen <paramref name="Text" /> wird zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-501">If you omit this argument, the next possible phonetic text string (if any) of the previously specified <paramref name="Text" /> is returned.</span>
          </span>
          <span data-ttu-id="76817-502">Wenn keine weiteren mögliche phonetischen Textzeichenfolgen vorhanden sind, wird eine leere Zeichenfolge zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-502">If there are no more possible phonetic text strings, an empty string is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-p190">Gibt den japanischen phonetischen Text der angegebenen Textzeichenfolge zurück. Diese Methode ist nur verfügbar, wenn die japanische Sprachenunterstützung für Microsoft Office ausgewählt oder installiert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-p190">Returns the Japanese phonetic text of the specified text string. This method is available to you only if you have selected or installed Japanese language support for Microsoft Office.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSaveAsFilename">
      <MemberSignature Language="C#" Value="public object GetSaveAsFilename (object InitialFilename, object FileFilter, object FilterIndex, object Title, object ButtonText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSaveAsFilename([in]object InitialFilename, [in]object FileFilter, [in]object FilterIndex, [in]object Title, [in]object ButtonText) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.GetSaveAsFilename(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSaveAsFilename (Optional InitialFilename As Object, Optional FileFilter As Object, Optional FilterIndex As Object, Optional Title As Object, Optional ButtonText As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1076)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="InitialFilename" Type="System.Object" />
        <Parameter Name="FileFilter" Type="System.Object" />
        <Parameter Name="FilterIndex" Type="System.Object" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="ButtonText" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="InitialFilename">
          <span data-ttu-id="76817-505">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-505">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-506">Gibt den vorgeschlagenen Dateinamen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-506">Specifies the suggested file name.</span>
          </span>
          <span data-ttu-id="76817-507">Wenn dieses Argument ausgelassen wird, verwendet Microsoft Excel den Namen der aktiven Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-507">If this argument is omitted, Microsoft Excel uses the active workbook's name.</span>
          </span>
        </param>
        <param name="FileFilter">
          <span data-ttu-id="76817-508">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-508">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-509">Eine Zeichenfolge, die Dateifilterkriterien angibt. Diese Zeichenfolge besteht aus Paare von Datei Filterzeichenfolgen gefolgt von der MS-DOS-Platzhalter Filter Dateiangabe, wobei jeder Teil und jedes Paar durch Kommas getrennt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-509">A string specifying file filtering criteria.This string consists of pairs of file filter strings followed by the MS-DOS wildcard file filter specification, with each part and each pair separated by commas.</span>
          </span>
          <span data-ttu-id="76817-510">Jedes einzelne Paar wird in der Dropdown-Listenfeld Typ aufgeführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-510">Each separate pair is listed in the Files of type drop-down list box.</span>
          </span>
          <span data-ttu-id="76817-511">Beispielsweise die folgende Zeichenfolge gibt die beiden Filter, Text und Addin: "Textdateien (*.txt), *.txt, Add-in-Dateien (* xla), *xla". Um mehrere MS-DOS-Platzhalterausdrücke für eine einzelne Datei Filtertyp verwenden, trennen Sie die Platzhalterausdrücke mit Semikolons, beispielsweise "Visual Basic-Dateien (*. BAS; *.txt),*. BAS;*. TXT". Wenn Length angegeben, wird dieses Argument auf "Allerdateien (*.*),*.*".</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-511">For example, the following string specifies two file filters, text and addin: "Text Files (*.txt), *.txt, Add-In Files (*.xla), *.xla".To use multiple MS-DOS wildcard expressions for a single file filter type, separate the wildcard expressions with semicolons, for example, "Visual Basic Files (*.bas; *.txt),*.bas;*.txt".If omitted, this argument defaults to "All Files (*.*),*.*".</span>
          </span>
        </param>
        <param name="FilterIndex">
          <span data-ttu-id="76817-512">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-512">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-513">Gibt die Indexnummer der standardmäßigen Dateifilterkriterien angibt, von 1 bis die Anzahl der Filter im angegebenen <paramref name="FileFilter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-513">Specifies the index number of the default file filtering criteria, from 1 to the number of filters specified in <paramref name="FileFilter" />.</span>
          </span>
          <span data-ttu-id="76817-514">Wenn dieses Argument nicht angegeben oder größer als die Anzahl der Filter vorhanden ist, wird der erste Dateifilter verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-514">If this argument is omitted or greater than the number of filters present, the first file filter is used.</span>
          </span>
        </param>
        <param name="Title">
          <span data-ttu-id="76817-515">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-515">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-516">Gibt den Titel des Dialogfelds.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-516">Specifies the title of the dialog box.</span>
          </span>
          <span data-ttu-id="76817-517">Wenn dieses Argument ausgelassen wird, wird der Standardtitel verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-517">If this argument is omitted, the default title is used.</span>
          </span>
        </param>
        <param name="ButtonText">
          <span data-ttu-id="76817-518">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-518">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-519">Nur bei Macintosh.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-519">Macintosh only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-520">Zeigt das Standarddialogfeld Speichern unter an und ruft einen Dateinamen vom Benutzer ab, ohne jedoch Dateien zu speichern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-520">Displays the standard Save As dialog box and gets a file name from the user without actually saving any files.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="76817-521">
            <para>Gibt diese Methode den ausgewählten Dateinamen oder den Namen, die vom Benutzer eingegebene zurück. Der zurückgegebene Name kann eine Pfadangabe enthalten. Gibt <b>False</b> zurück, wenn der Benutzer das Dialogfeld abbricht.</para>
            <para>Diese Methode kann das aktuelle Laufwerk oder Ordner ändern.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-521">
              <para>This method returns the selected file name or the name entered by the user. The returned name may include a path specification. Returns <b>False</b> if the user cancels the dialog box.</para>
              <para>This method may change the current drive or folder.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Goto">
      <MemberSignature Language="C#" Value="public void Goto (object Reference, object Scroll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Goto([in]object Reference, [in]object Scroll) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Goto (Optional Reference As Object, Optional Scroll As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(475)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Reference" Type="System.Object" />
        <Parameter Name="Scroll" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Reference">
          <span data-ttu-id="76817-522">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-522">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-523">Das Ziel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-523">The destination.</span>
          </span>
          <span data-ttu-id="76817-524">Kann ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> -Objekt, eine Zeichenfolge, die einen Zellbezug in Z1S1-Schreibweise enthält oder eine Zeichenfolge, die Namen einer Visual Basic-Prozedur enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-524">Can be a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object, a string that contains a cell reference in R1C1-style notation, or a string that contains a Visual Basic procedure name.</span>
          </span>
          <span data-ttu-id="76817-525">Wenn dieses Argument ausgelassen wird, ist das Ziel der letzte Bereich, den Sie die <b>Goto</b> -Methode verwendet, um auszuwählen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-525">If this argument is omitted, the destination is the last range you used the <b>Goto</b> method to select.</span>
          </span>
        </param>
        <param name="Scroll">
          <span data-ttu-id="76817-526">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-526">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-527">
            <b>True</b> , wenn das Fenster einen Bildlauf, damit das obere linke Ecke des Bereichs in der oberen linken Ecke des Fensters angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-527">
              <b>True</b> to scroll through the window so that the upper-left corner of the range appears in the upper-left corner of the window.</span>
          </span>
          <span data-ttu-id="76817-528">
            <b>False</b> , wenn kein Bildlauf durch das Fenster.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-528">
              <b>False</b> to not scroll through the window.</span>
          </span>
          <span data-ttu-id="76817-529">Der Standardwert ist <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-529">The default is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-530">Wählt einen Bereich oder eine Visual Basic-Prozedur in einer beliebigen Arbeitsmappe und aktiviert diese, falls sie nicht bereits aktiv ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-530">Selects any range or Visual Basic procedure in any workbook and activates that workbook if it’s not already active.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="76817-531">
            <para>Diese Methode unterscheidet sich von der <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Select(System.Object)" /> -Methode in der folgenden Methoden:</para>
            <list type="bullet">
              <item>
                <description>, wenn Sie einen Bereich in einem Blatt angeben, die nicht im Vordergrund befindet, wechselt Microsoft Excel wird auf das Blatt vor dem auswählen. (Wenn Sie <b>Wählen Sie</b> mit einem Bereich in einem Blatt, die nicht im Vordergrund befindet verwenden, wird der Bereich aktiviert, doch das Blatt nicht aktiviert).</description>
              </item>
              <item>
                <description>Diese Methode besitzt eine <paramref name="Scroll" /> -Argument, das Sie können im Zielfenster einen Bildlauf.</description>
              </item>
              <item>
                <description>, Wenn Sie die <b>Goto</b> -Methode der vorherigen Markierung (vor dem Ausführen die <b>Goto</b> -Methode) verwenden die Matrix der vorhergehenden hinzugefügt wird (Weitere Informationen finden Sie unter der <see cref="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)" /> -Eigenschaft). Sie können dieses Feature verwenden, um bis zu vier Auswahlmöglichkeiten PreviousSelections.</description>
              </item>
              <item>
                <description>Die <b>Select</b> -Methode hat eine <paramref name="Replace" /> Argument; die <b>Goto</b> -Methode nicht.</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-531">
              <para>This method differs from the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Select(System.Object)" /> method in the following ways:</para>
              <list type="bullet">
                <item>
                  <description>If you specify a range on a sheet that’s not on top, Microsoft Excel will switch to that sheet before selecting. (If you use <b>Select</b> with a range on a sheet that’s not on top, the range will be selected but the sheet won’t be activated).</description>
                </item>
                <item>
                  <description>This method has a <paramref name="Scroll" /> argument that lets you scroll through the destination window.</description>
                </item>
                <item>
                  <description>When you use the <b>Goto</b> method, the previous selection (before the <b>Goto</b> method runs) is added to the array of previous selections (for more information, see the <see cref="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)" /> property). You can use this feature to quickly jump between as many as four selections.</description>
                </item>
                <item>
                  <description>The <b>Select</b> method has a <paramref name="Replace" /> argument; the <b>Goto</b> method doesn’t.</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-532">Die Höhe des Hauptfensters der Anwendung in Punkt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-532">The height, in points, of the main application window.</span>
          </span>
          <span data-ttu-id="76817-533">Wenn das Fenster minimiert wird, wird diese Eigenschaft ist schreibgeschützt und bezieht sich auf die Höhe des Symbols.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-533">If the window is minimized, this property is read-only and refers to the height of the icon.</span>
          </span>
          <span data-ttu-id="76817-534">Wenn das Fenster maximiert ist, kann diese Eigenschaft nicht festgelegt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-534">If the window is maximized, this property cannot be set.</span>
          </span>
          <span data-ttu-id="76817-535">Verwendung der <see cref="P:Microsoft.Office.Interop.Excel._Application.WindowState" /> -Eigenschaft auf den Status des Fensters zu bestimmen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-535">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.WindowState" /> property to determine the window state.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public void Help (object HelpFile, object HelpContextID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Help([in]object HelpFile, [in]object HelpContextID) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Help(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Help (Optional HelpFile As Object, Optional HelpContextID As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(354)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="HelpFile">
          <span data-ttu-id="76817-536">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-536">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-537">Der Name der Hilfedatei online, die Sie anzeigen möchten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-537">The name of the online Help file you want to display.</span>
          </span>
          <span data-ttu-id="76817-538">Wenn dieses Argument nicht angegeben ist, wird die Hilfe von Microsoft Excel verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-538">If this argument isn't specified, Microsoft Excel Help is used.</span>
          </span>
        </param>
        <param name="HelpContextID">
          <span data-ttu-id="76817-539">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-539">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-540">Gibt die Kontext-ID für das Hilfethema an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-540">Specifies the context ID number for the Help topic.</span>
          </span>
          <span data-ttu-id="76817-541">Wenn dieses Argument nicht angegeben ist, wird das Dialogfeld Hilfethemen angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-541">If this argument isn't specified, the Help Topics dialog box is displayed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-542">Zeigt ein Hilfethema an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-542">Displays a Help topic.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HighQualityModeForGraphics">
      <MemberSignature Language="C#" Value="public bool HighQualityModeForGraphics { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HighQualityModeForGraphics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.HighQualityModeForGraphics" />
      <MemberSignature Language="VB.NET" Value="Public Property HighQualityModeForGraphics As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HighQualityModeForGraphics { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2395)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-543">Ruft ab oder legt fest, ob Excel Modus für hohe Qualität verwendet Grafiken gedruckt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-543">Gets or sets whether Excel uses high quality mode to print graphics.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-544">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-544">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="76817-545">
            <para>Diese Eigenschaft entspricht der Einstellung des Modus für hohe Qualität für Grafiken Kontrollkästchen im Bereich Drucken der Kategorie erweitert im Dialogfeld Excel-Optionen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-545">
              <para>This property corresponds to the setting of the High quality mode for graphics check box in the Print section of the Advanced category of the Excel Options dialog box.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hinstance">
      <MemberSignature Language="C#" Value="public int Hinstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hinstance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Hinstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hinstance As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hinstance { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1951)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1951)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-546">Gibt die Instanzzugriffsnummer der Instanz, die Microsoft Excel aufruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-546">Returns the instance handle of the instance that is calling Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HinstancePtr">
      <MemberSignature Language="C#" Value="public object HinstancePtr { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HinstancePtr" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.HinstancePtr" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HinstancePtr As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HinstancePtr { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2787)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2787)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-547">Ruft einen Handle für die Instanz von Microsoft Excel 2010, dargestellt durch die angegebene <see cref="T:Microsoft.Office.Interop.Excel._Application" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-547">Gets a handle to the instance of Microsoft Excel 2010 represented by the specified <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-548">Ein Handle für die Instanz von Microsoft Excel 2010, dargestellt durch die angegebene <see cref="T:Microsoft.Office.Interop.Excel._Application" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-548">A handle to the instance of Microsoft Excel 2010 represented by the specified <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="76817-549">
            <para>Read-only <b>Variant</b>.</para>
            <para>Gibt diese Eigenschaft einen richtigen Handle in beiden die 32- und 64-Bit-Versionen von Excel. Es erweitert die Funktionalität von der <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> -Eigenschaft des der <see cref="T:Microsoft.Office.Interop.Excel._Application" /> -Objekt, das nur in der 32-Bit-Version von Excel ordnungsgemäß funktioniert.</para> Die idealen Daten 
          <para>für Formular zu verwendender mit dieser Eigenschaft ist der <b>LongPtr</b> -Datentyp. Zuweisen des Werts einer Variablen <b>LongPtr</b> von dieser Eigenschaft zurückgegebene funktioniert wie erwartet in beiden 32- und 64-Bit-Versionen von Excel. Die Eigenschaft ist als <b>Variant</b> aus Gründen der interne Implementierung definiert. Jedoch immer ein 32-Bit-Wert zurückgegeben auf 32-Bit-Systeme und 64-Bit-Wert auf 64-Bit-Systeme.</para><para>Diese Eigenschaft nur funktioniert, beginnend mit Excel 2010 und ist nur erforderlich, mit der 64-Bit-Version von Excel. Wenn Sie Code schreiben müssen, die auch mit früheren Versionen von Excel, eingesetzt werden kann, um die Kompilierungsfehler zu vermeiden lesen Sie diese Eigenschaft auf eine Direktive für die bedingte Kompilierung #if Win64, und verwenden Sie die <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> -Eigenschaft unter der #else-Direktive.</para><para><b>Hinweis</b>: Diese Eigenschaft funktioniert in beiden 32- und 64-Bit-Umgebungen, beginnend mit Excel 2010. Aus diesem Grund Code nur mit Excel 2010 oder höher verwendet werden soll, entweder 32- oder 64-Bit, es kann Lesen dieser Eigenschaft ohne bedingte Kompilierung.</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-549">
              <para>Read-only <b>Variant</b>.</para>
              <para>This property returns a correct handle in both the 32- and 64-bit versions of Excel. It extends the functionality of the <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> property of the <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object, which only works correctly in the 32-bit version of Excel.</para>
              <para>The ideal data type to use with this property is the <b>LongPtr</b> data type. Assigning the value returned by this property to a <b>LongPtr</b> variable will work as expected in both 32- and 64-bit versions of Excel. The property is defined as <b>Variant</b> for internal implementation reasons. However, it always returns a 32-bit value on 32-bit systems and a 64-bit value on 64-bit systems.</para>
              <para>This property only works starting with Excel 2010, and is only required with the 64-bit version of Excel. If you must write code that will also work with earlier versions of Excel, in order to avoid compilation errors, read this property under an #if Win64 conditional compilation directive, and use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Hinstance" /> property under the #else directive.</para>
              <para>
                <b>Note</b>: This property works fine in both 32- and 64-bit environments starting with Excel 2010. Therefore, if your code is intended to be used only with Excel 2010 or later, either 32- or 64-bit, it can read this property without conditional compilation.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hwnd">
      <MemberSignature Language="C#" Value="public int Hwnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hwnd" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Hwnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hwnd As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hwnd { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1950)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-550">Gibt eine <b>ganze Zahl</b> , die angibt, des auf oberster Ebene Fensterhandle des Microsoft Excel-Fensters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-550">Returns an <b>Integer</b> indicating the top-level window handle of the Microsoft Excel window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreRemoteRequests">
      <MemberSignature Language="C#" Value="public bool IgnoreRemoteRequests { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreRemoteRequests" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.IgnoreRemoteRequests" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreRemoteRequests As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreRemoteRequests { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(356)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-551">
            <b>True,</b> wenn DDE-Fernabfragen ignoriert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-551">
              <b>True</b> if remote DDE requests are ignored.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InchesToPoints">
      <MemberSignature Language="C#" Value="public double InchesToPoints (double Inches);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 InchesToPoints([in]float64 Inches) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.InchesToPoints(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function InchesToPoints (Inches As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InchesToPoints(double Inches);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1087)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Inches" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Inches">
          <span data-ttu-id="76817-552">
            <b>Double</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-552">Required <b>Double</b>.</span>
          </span>
          <span data-ttu-id="76817-553">Gibt den Zollwert an, der in Punkt umgerechnet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-553">Specifies the inch value to be converted to points.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-554">Wandelt eine Maßangabe von Zoll in Punkt um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-554">Converts a measurement from inches to points.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBox">
      <MemberSignature Language="C#" Value="public object InputBox (string Prompt, object Title, object Default, object Left, object Top, object HelpFile, object HelpContextID, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InputBox([in]string Prompt, [in]object Title, [in]object Default, [in]object Left, [in]object Top, [in]object HelpFile, [in]object HelpContextID, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.InputBox(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function InputBox (Prompt As String, Optional Title As Object, Optional Default As Object, Optional Left As Object, Optional Top As Object, Optional HelpFile As Object, Optional HelpContextID As Object, Optional Type As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(357)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Prompt" Type="System.String" />
        <Parameter Name="Title" Type="System.Object" />
        <Parameter Name="Default" Type="System.Object" />
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Top" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Prompt">
          <span data-ttu-id="76817-555">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-555">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-556">Die im Dialogfeld anzuzeigende Meldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-556">The message to be displayed in the dialog box.</span>
          </span>
          <span data-ttu-id="76817-557">Dies kann eine Zeichenfolge, eine Zahl, ein Datum oder einen <b>Boolean</b> -Wert sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-557">This can be a string, a number, a date, or a <b>Boolean</b> value.</span>
          </span>
        </param>
        <param name="Title">
          <span data-ttu-id="76817-558">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-558">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-559">Der Titel für das Eingabefeld.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-559">The title for the input box.</span>
          </span>
          <span data-ttu-id="76817-560">Wenn dieses Argument ausgelassen wird, wird der Standardtitel "Input".</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-560">If this argument is omitted, the default title is "Input."</span>
          </span>
        </param>
        <param name="Default">
          <span data-ttu-id="76817-561">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-561">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-562">Gibt einen Wert an, der im Textfeld angezeigt wird, wenn das Dialogfeld zum ersten  Mal angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-562">Specifies a value that will appear in the text box when the dialog box is initially displayed.</span>
          </span>
          <span data-ttu-id="76817-563">Wenn dieses Argument ausgelassen wird, bleibt das Textfeld leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-563">If this argument is omitted, the text box is left empty.</span>
          </span>
          <span data-ttu-id="76817-564">Der Wert kann eine <b>Bereich</b>-Objekt sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-564">This value can be a <b>Range</b> object.</span>
          </span>
        </param>
        <param name="Left">
          <span data-ttu-id="76817-565">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-565">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-566">Gibt die X-Koordinate für die Dialogfeldposition der oberen linken Ecke des Bildschirms in Punkten an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-566">Specifies an x position for the dialog box in relation to the upper-left corner of the screen in points.</span>
          </span>
        </param>
        <param name="Top">
          <span data-ttu-id="76817-567">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-567">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-568">Gibt die y-Koordinate für die Dialogfeldposition der oberen linken Ecke des Bildschirms in Punkten an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-568">Specifies a y position for the dialog box in relation to the upper-left corner of the screen in points.</span>
          </span>
        </param>
        <param name="HelpFile">
          <span data-ttu-id="76817-569">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-569">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-570">Der Name der Hilfedatei für dieses Eingabefeld.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-570">The name of the Help file for this input box.</span>
          </span>
          <span data-ttu-id="76817-571">Wenn die <paramref name="HelpFile" /> und <paramref name="HelpContextID" /> Argumente vorhanden sind, wird eine Schaltfläche "Hilfe" im Dialogfeld angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-571">If the <paramref name="HelpFile" /> and <paramref name="HelpContextID" /> arguments are present, a Help button will appear in the dialog box.</span>
          </span>
        </param>
        <param name="HelpContextID">
          <span data-ttu-id="76817-572">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-572">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-573">Die Kontext-ID des Hilfethemas in <paramref name="HelpFile" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-573">The context ID number of the Help topic in <paramref name="HelpFile" />.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="76817-574">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-574">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-575">Gibt den Typ der Daten zurückgeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-575">Specifies the return data type.</span>
          </span>
          <span data-ttu-id="76817-576">Wenn dieses Argument ausgelassen wird, gibt das Dialogfeld Text zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-576">If this argument is omitted, the dialog box returns text.</span>
          </span>
          <span data-ttu-id="76817-577">Eine oder eine Summe der folgenden Werte kann sein. Sie können mithilfe der Summe der zulässigen Werte für <paramref name="Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-577">Can be one or a sum of the following values.You can use the sum of the allowable values for <paramref name="Type" />.</span>
          </span>
          <span data-ttu-id="76817-578">Legen Sie ein Eingabefeld, die Text und Zahlen akzeptieren kann, beispielsweise <paramref name="Type" /> auf 1 + 2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-578">For example, for an input box that can accept both text and numbers, set <paramref name="Type" /> to 1 + 2.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-p210">Zeigt ein Dialogfeld für eine Benutzereingabe an. Es werden die Informationen zurückgegeben, die in das Dialogfeld eingegeben wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-p210">Displays a dialog box for user input. Returns the information entered in the dialog box.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="76817-581">
            <para>Verwenden Sie <b>InputBox</b> ein einfaches Dialogfeld angezeigt, sodass Informationen eingegeben, die in einem Makro verwendet werden können. Das Dialogfeld wurde auf die Schaltfläche OK und Abbrechen. Wenn Sie auf die Schaltfläche OK auswählen, gibt <b>InputBox</b> den Wert im Dialogfeld eingegeben. Wenn Sie auf die Schaltfläche Abbrechen klicken, <b>InputBox</b><b>"false"</b>zurückgibt.</para>
            <para>Wenn <paramref name="Type" /> ist 0, gibt <b>InputBox</b> die Formel in Form von Text zurück – beispielsweise "= 2 \* PI () / 360". Wenn in der Formel Verweise vorhanden sind, werden sie als A1-Bezugsart zurückgegeben. (Verwendung <see cref="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)" /> für die Konvertierung zwischen Verweis Formatvorlagen.)</para>
            <para>Wenn <paramref name="Type" /> 8 ist, gibt <b>InputBox</b> ein <b>Range</b> -Objekt zurück.</para>
            <para>, Wenn Sie die <b>InputBox</b> -Methode verwenden, um dem Benutzer eine Formel abzufragen, müssen Sie verwenden die <see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaLocal" /> Eigenschaft, um die Formel ein <b>Range</b> -Objekt zuweisen. Die Eingabe der Formel kann in der Sprache des Benutzers.</para>
            <para>Der <b>InputBox</b> -Methode unterscheidet sich von der <b>InputBox</b> -Funktion, dass es möglich ist, der die Eingabe des Benutzers und mit Microsoft Excel-Objekte, Fehlerwerte und Formeln verwendet werden. Beachten Sie, dass ohne einen Objektbezeichner <b>InputBox</b> -Funktion aufruft.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-581">
              <para>Use <b>InputBox</b> to display a simple dialog box so that you can enter information to be used in a macro. The dialog box has an OK button and a Cancel button. If you choose the OK button, <b>InputBox</b> returns the value entered in the dialog box. If you click the Cancel button, <b>InputBox</b> returns <b>False</b>.</para>
              <para>If <paramref name="Type" /> is 0, <b>InputBox</b> returns the formula in the form of text — for example, "=2\*PI()/360". If there are any references in the formula, they are returned as A1-style references. (Use <see cref="M:Microsoft.Office.Interop.Excel._Application.ConvertFormula(System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object,System.Object)" /> to convert between reference styles.)</para>
              <para>If <paramref name="Type" /> is 8, <b>InputBox</b> returns a <b>Range</b> object.</para>
              <para>If you use the <b>InputBox</b> method to ask the user for a formula, you must use the <see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaLocal" /> property to assign the formula to a <b>Range</b> object. The input formula will be in the user's language.</para>
              <para>The <b>InputBox</b> method differs from the <b>InputBox</b> function in that it allows selective validation of the user's input, and it can be used with Microsoft Excel objects, error values, and formulas. InputBox with no object qualifier calls the <b>InputBox</b> function.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interactive">
      <MemberSignature Language="C#" Value="public bool Interactive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Interactive" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Interactive" />
      <MemberSignature Language="VB.NET" Value="Public Property Interactive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Interactive { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-582">
            <b>True,</b> Wenn Microsoft Excel im interaktiven Modus befindet. Diese Eigenschaft ist in der Regel <b>"true"</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-582">
              <b>True</b> if Microsoft Excel is in interactive mode; this property is usually <b>True</b>.</span>
          </span>
          <span data-ttu-id="76817-583">Wenn Sie diese Eigenschaft auf <b>False</b>festlegen, wird Microsoft Excel jegliche Eingabe von Tastatur oder Maus (mit Ausnahme von Eingaben in Dialogfelder, die von Ihrem Code angezeigt werden) blockiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-583">If you set this property to <b>False</b>, Microsoft Excel will block all input from the keyboard and mouse (except input to dialog boxes that are displayed by your code).</span>
          </span>
          <span data-ttu-id="76817-584">Blockierung der Benutzereingabe wird verhindert, dass den Benutzer nicht durch den Code wie Ablaufs verschoben oder Microsoft Excel-Objekte aktiviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-584">Blocking user input will prevent the user from interfering with the code as it moves or activates Microsoft Excel objects.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-585">
            <para>Diese Eigenschaft ist nützlich, wenn Sie Code zur Kommunikation mit Microsoft Excel aus einer anderen Anwendung schreiben.</para>
            <para>Wenn Sie diese Eigenschaft auf <b>False</b>festlegen, vergessen Sie nicht, sie wieder auf <b>True</b>festgelegt. Microsoft Excel nicht diese Eigenschaft automatisch auf <b>True</b> gesetzt werden, wenn der Code beendet.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-585">
              <para>This property is useful if you're writing code to communicate with Microsoft Excel from another application.</para>
              <para>If you set this property to <b>False</b>, don't forget to set it back to <b>True</b>. Microsoft Excel won't automatically set this property back to <b>True</b> when your code stops running.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="International">
      <MemberSignature Language="C#" Value="public object International[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object International(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.International(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property International(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ International[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(362)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(362)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="76817-586">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-586">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-587">Die Einstellung zurückgegeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-587">The setting to be returned.</span>
          </span>
          <span data-ttu-id="76817-588">Kann eine der der <see cref="T:Microsoft.Office.Interop.Excel.XlApplicationInternational" /> Konstanten, die in den folgenden Tabellen aufgelistet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-588">Can be one of the <see cref="T:Microsoft.Office.Interop.Excel.XlApplicationInternational" /> constants listed in the following tables.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-589">Gibt Informationen zu den aktuellen nationale/regionale und internationale Einstellungen zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-589">Returns information about the current country/region and international settings.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-590">
            <para>Eckige und geschweifte Klammern</para>
            <list type="table">
              <item>
                <term>
                  <b>XlLeftBrace</b>
                </term>
                <description>
                  <b>Zeichenfolge</b>
                </description>
                <description>Zeichen verwendet anstelle der linken geschweiften Klammer ({}) in einem Array getrennt.</description>
              </item>
              <item>
                <term>
                  <b>XlLeftBracket</b>
                </term>
                <description>
                  <b>Zeichenfolge</b>
                </description>
                <description>das Zeichen, anstatt die linke Klammer ([]) in Z1S1-Bezügen.</description>
              </item>
              <item>
                <term>
                  <b>XlLowerCaseColumnLetter</b>
                </term>
                <description>
                  <b>Zeichenfolge</b>
                </description>
                <description>ein Kleinbuchstabe für Spaltenangaben.</description>
              </item>
              <item>
                <term>
                  <b>XlLowerCaseRowLetter</b>
                </term>
                <description>
                  <b>Zeichenfolge</b>
                </description>
                <description>ein Kleinbuchstabe für Zeilenangaben.</description>
              </item>
              <item>
                <term>
                  <b>XlRightBrace</b>
                </term>
                <description>
                  <b>Zeichenfolge</b>
                </description>
                <description>Zeichen verwendet anstelle der rechten geschweiften Klammer (}) in einem Array getrennt.</description>
              </item>
              <item>
                <term>
                  <b>XlRightBracket</b>
                </term>
                <description>
                  <b>Zeichenfolge</b>
                </description>
                <description>das Zeichen, anstatt die Rechte Klammer (]) in Z1S1-Bezügen.</description>
              </item>
              <item>
                <term>
                  <b>XlUpperCaseColumnLetter</b>
                </term>
                <description>
                  <b>Zeichenfolge</b>
                </description>
                <description>Großbuchstabe für Spaltenangaben.</description>
              </item>
              <item>
                <term>
                  <b>XlUpperCaseRowLetter</b>
                </term>
                <description>
                  <b>Zeichenfolge</b>
                </description>
                <description>Großbuchstabe für Zeilenangaben (Z1S1-Bezügen).</description>
              </item>
            </list>
            <para>Nationale/regionale Einstellungen</para>
            <list type="table">
              <item>
                <term>
                  <b>XlCountryCode</b>
                </term>
                <description>
                  <b>ganze Zahl</b>
                </description>
                <description>nationale/regionale Version von Microsoft Excel.</description>
              </item>
              <item>
                <term>
                  <b>XlCountrySetting</b>
                </term>
                <description>
                  <b>ganze Zahl</b>
                </description>
                <description>aktuellen Regions-und Sprachoptionen in der Windows-Systemsteuerung.</description>
              </item>
              <item>
                <term>
                  <b>XlGeneralFormatName</b>
                </term>
                <description>
                  <b>Zeichenfolge</b>
                </description>
                <description>Name des Standardzahlenformats.</description>
              </item>
            </list>
            <para>Währung</para>
            <list type="table">
              <item>
                <term>
                  <b>XlCurrencyBefore</b>
                </term>
                <description>
                  <b>Boolean</b>
                </description>
                <description>
                  <b>true,</b> Wenn das Währungssymbol den Währungswerten vorangestellt; <b>False,</b> Wenn es nachgestellt.</description>
              </item>
              <item>
                <term>
                  <b>XlCurrencyCode</b>
                </term>
                <description>
                  <b>Zeichenfolge</b>
                </description>
                <description>Währungssymbol.</description>
              </item>
              <item>
                <term>
                  <b>XlCurrencyDigits</b>
                </term>
                <description>
                  <b>ganze Zahl</b>
                </description>
                <description>Anzahl der Nachkommastellen in Währungsformaten verwendet werden.</description>
              </item>
              <item>
                <term>
                  <b>XlCurrencyLeadingZeros</b>
                </term>
                <description>
                  <b>Boolean</b>
                </description>
                <description>
                  <b>true,</b> Wenn führende Nullen bei Nullbeträgen angezeigt werden.</description>
              </item>
              <item>
                <term>
                  <b>XlCurrencyMinusSign</b>
                </term>
                <description>
                  <b>Boolean</b>
                </description>
                <description>
                  <b>true,</b> Wenn Sie ein Minuszeichen für negative Zahlen verwenden; <b>False,</b> Wenn Sie Klammern verwenden.</description>
              </item>
              <item>
                <term>
                  <b>XlCurrencyNegative</b>
                </term>
                <description>
                  <b>ganze Zahl</b>
                </description>
                <description>Währungsformat für negative Währungswerte: 0 = (Symbolx) oder (Xsymbol) 1 = - Symbolx oder -xsymbol2 = Symbol-X oder X-symbol3 = Symbolx - oder Xsymbol, wobei Symbol das Währungssymbol des ist die Land oder Region. Beachten Sie, dass die Position des Währungssymbols durch <b>XlCurrencyBefore</b>bestimmt wird.</description>
              </item>
              <item>
                <term>
                  <b>XlCurrencySpaceBefore</b>
                </term>
                <description>
                  <b>Boolean</b>
                </description>
                <description>
                  <b>true,</b> Wenn vor dem Währungssymbol ein Leerzeichen eingefügt wird.</description>
              </item>
              <item>
                <term>
                  <b>XlCurrencyTrailingZeros</b>
                </term>
                <description>
                  <b>Boolean</b>
                </description>
                <description>
                  <b>true,</b> Wenn nachstehende Nullen bei Nullbeträgen angezeigt werden.</description>
              </item>
              <item>
                <term>
                  <b>XlNoncurrencyDigits</b>
                </term>
                <description>
                  <b>ganze Zahl</b>
                </description>
                <description>Anzahl der Nachkommastellen in nicht-Währungsformate verwendet werden.</description>
              </item>
            </list>
            <para>Datum und Uhrzeit</para>
            <list type="table">
              <item>
                <term>
                  <b>xl24HourClock</b>
                </term>
                <description>
                  <b>Boolean</b>
                </description>
                <description>
                  <b>true,</b> Wenn Sie das 24-Stunden-Zeitformat verwenden; <b>False,</b> Wenn beim 12-Stunden-Zeitformat.</description>
              </item>
              <item>
                <term>
                  <b>xl4DigitYears</b>
                </term>
                <description>
                  <b>Boolean</b>
                </description>
                <description>
                  <b>true,</b> Wenn Sie vierstellige Jahreszahlen verwenden; <b>False,</b> Wenn Sie zweistellige Jahreszahlen verwenden.</description>
              </item>
              <item>
                <term>
                  <b>XlDateOrder</b>
                </term>
                <description>
                  <b>ganze Zahl</b>
                </description>
                <description>Reihenfolge der Datumselemente: 0 = Monat-Tag-Jahr1 = Tag-Monat-Jahr2 = Jahr-Monat-Tag</description>
              </item>
              <item>
                <term>
                  <b>XlDateSeparator</b>
                </term>
                <description>
                  <b>Zeichenfolge</b>
                </description>
                <description>das Datumstrennzeichen (/).</description>
              </item>
              <item>
                <term>
                  <b>XlDayCode</b>
                </term>
                <description>
                  <b>Zeichenfolge</b>
                </description>
                <description>Tagessymbol (d).</description>
              </item>
              <item>
                <term>
                  <b>XlDayLeadingZero</b>
                </term>
                <description>
                  <b>Boolean</b>
                </description>
                <description>True, wenn bei Tagen eine führende Null angezeigt wird.</description>
              </item>
              <item>
                <term>
                  <b>XlHourCode</b>
                </term>
                <description>
                  <b>Zeichenfolge</b>
                </description>
                <description>Stundensymbol (h).</description>
              </item>
              <item>
                <term>
                  <b>XlMDY</b>
                </term>
                <description>
                  <b>Boolean</b>
                </description>
                <description>
                  <b>true,</b> Wenn die Reihenfolge Monat-Tag-Jahr ist für Datumsangaben im langen; <b>False,</b> Wenn die Reihenfolge Tag-Monat-Jahr ist.</description>
              </item>
              <item>
                <term>
                  <b>XlMinuteCode</b>
                </term>
                <description>
                  <b>Zeichenfolge</b>
                </description>
                <description>Minutensymbol (m).</description>
              </item>
              <item>
                <term>
                  <b>XlMonthCode</b>
                </term>
                <description>
                  <b>Zeichenfolge</b>
                </description>
                <description>Monatssymbol (m).</description>
              </item>
              <item>
                <term>
                  <b>XlMonthLeadingZero</b>
                </term>
                <description>
                  <b>Boolean</b>
                </description>
                <description>
                  <b>true,</b> Wenn in Monaten führende Nullen angezeigt wird (wenn Monate als Zahlen dargestellt werden).</description>
              </item>
              <item>
                <term>
                  <b>XlMonthNameChars</b>
                </term>
                <description>
                  <b>ganze Zahl</b>
                </description>
                <description>gibt immer drei Zeichen für Abwärtskompatibilität zurück. Verkürzte Monatsnamen werden von Microsoft Windows gelesen und können eine beliebige Länge.</description>
              </item>
              <item>
                <term>
                  <b>XlSecondCode</b>
                </term>
                <description>
                  <b>Zeichenfolge</b>
                </description>
                <description>Sekundensymbol (s).</description>
              </item>
              <item>
                <term>
                  <b>XlTimeSeparator</b>
                </term>
                <description>
                  <b>Zeichenfolge</b>
                </description>
                <description>Uhrzeittrennzeichen (:)).</description>
              </item>
              <item>
                <term>
                  <b>XlTimeLeadingZero</b>
                </term>
                <description>
                  <b>Boolean</b>
                </description>
                <description>
                  <b>true,</b> Wenn bei Uhrzeiten führende Nullen angezeigt werden.</description>
              </item>
              <item>
                <term>
                  <b>XlWeekdayNameChars</b>
                </term>
                <description>
                  <b>ganze Zahl</b>
                </description>
                <description>gibt immer drei Zeichen für Abwärtskompatibilität zurück. Verkürzte Wochentagsnamen werden von Microsoft Windows gelesen und können eine beliebige Länge.</description>
              </item>
              <item>
                <term>
                  <b>XlYearCode</b>
                </term>
                <description>
                  <b>Zeichenfolge</b>
                </description>
                <description>Jahressymbol in Zahlenformaten (y).</description>
              </item>
            </list>
            <para>Maßeinheitensysteme</para>
            <list type="table">
              <item>
                <term>
                  <b>XlMetric</b>
                </term>
                <description>
                  <b>Boolean</b>
                </description>
                <description>
                  <b>true,</b> Wenn Sie das metrische System verwenden; <b>False,</b> Wenn Sie das englische Maßsystem verwenden.</description>
              </item>
              <item>
                <term>
                  <b>XlNonEnglishFunctions</b>
                </term>
                <description>
                  <b>Boolean</b>
                </description>
                <description>
                  <b>true,</b> wenn Funktionen nicht in Englisch angezeigt werden.</description>
              </item>
            </list>
            <para>Trennzeichen</para>
            <list type="table">
              <item>
                <term>
                  <b>XlAlternateArraySeparator</b>
                </term>
                <description>
                  <b>Zeichenfolge</b>
                </description>
                <description>Alternative Arrayelemente, verwendet werden, wenn das aktuelle Array Trennzeichen dem Dezimaltrennzeichen identisch ist.</description>
              </item>
              <item>
                <term>
                  <b>XlColumnSeparator</b>
                </term>
                <description>
                  <b>Zeichenfolge</b>
                </description>
                <description>Zeichen zum Trennen von Spalten in einem Array getrennt verwendet.</description>
              </item>
              <item>
                <term>
                  <b>XlDecimalSeparator</b>
                </term>
                <description>
                  <b>Zeichenfolge</b>
                </description>
                <description>Dezimaltrennzeichen.</description>
              </item>
              <item>
                <term>
                  <b>XlListSeparator</b>
                </term>
                <description>
                  <b>Zeichenfolge</b>
                </description>
                <description>Listentrennzeichen.</description>
              </item>
              <item>
                <term>
                  <b>XlRowSeparator</b>
                </term>
                <description>
                  <b>Zeichenfolge</b>
                </description>
                <description>Zeichen verwendet, um die Zeilen in einem Array getrennt voneinander.</description>
              </item>
              <item>
                <term>
                  <b>XlThousandsSeparator</b>
                </term>
                <description>
                  <b>Zeichenfolge</b>
                </description>
                <description>null- oder 1.000er-Trennzeichen.</description>
              </item>
            </list>
            <para>Symbole, Trennzeichen und in der obigen Tabelle aufgeführten Währungsformate möglicherweise unterscheiden sich von denen in Ihrer Sprache oder geografischen Standort und möglicherweise nicht zur Verfügung, abhängig von der Unterstützung der Sprache (Englisch USA), beispielsweise), die Sie ausgewählt haben oder installiert.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-590">
              <para>Brackets and Braces</para>
              <list type="table">
                <item>
                  <term>
                    <b>xlLeftBrace</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Character used instead of the left brace ({) in array literals.</description>
                </item>
                <item>
                  <term>
                    <b>xlLeftBracket</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Character used instead of the left bracket ([) in R1C1-style relative references.</description>
                </item>
                <item>
                  <term>
                    <b>xlLowerCaseColumnLetter</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Lowercase column letter.</description>
                </item>
                <item>
                  <term>
                    <b>xlLowerCaseRowLetter</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Lowercase row letter.</description>
                </item>
                <item>
                  <term>
                    <b>xlRightBrace</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Character used instead of the right brace (}) in array literals.</description>
                </item>
                <item>
                  <term>
                    <b>xlRightBracket</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Character used instead of the right bracket (]) in R1C1-style references.</description>
                </item>
                <item>
                  <term>
                    <b>xlUpperCaseColumnLetter</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Uppercase column letter.</description>
                </item>
                <item>
                  <term>
                    <b>xlUpperCaseRowLetter</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Uppercase row letter (for R1C1-style references).</description>
                </item>
              </list>
              <para>Country/Region Settings</para>
              <list type="table">
                <item>
                  <term>
                    <b>xlCountryCode</b>
                  </term>
                  <description>
                    <b>Integer</b>
                  </description>
                  <description>Country/Region version of Microsoft Excel.</description>
                </item>
                <item>
                  <term>
                    <b>xlCountrySetting</b>
                  </term>
                  <description>
                    <b>Integer</b>
                  </description>
                  <description>Current country/region setting in the Windows Control Panel.</description>
                </item>
                <item>
                  <term>
                    <b>xlGeneralFormatName</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Name of the General number format.</description>
                </item>
              </list>
              <para>Currency</para>
              <list type="table">
                <item>
                  <term>
                    <b>xlCurrencyBefore</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if the currency symbol precedes the currency values; <b>False</b> if it follows them.</description>
                </item>
                <item>
                  <term>
                    <b>xlCurrencyCode</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Currency symbol.</description>
                </item>
                <item>
                  <term>
                    <b>xlCurrencyDigits</b>
                  </term>
                  <description>
                    <b>Integer</b>
                  </description>
                  <description>Number of decimal digits to be used in currency formats.</description>
                </item>
                <item>
                  <term>
                    <b>xlCurrencyLeadingZeros</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if leading zeros are displayed for zero currency values.</description>
                </item>
                <item>
                  <term>
                    <b>xlCurrencyMinusSign</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if you’re using a minus sign for negative numbers; <b>False</b> if you’re using parentheses.</description>
                </item>
                <item>
                  <term>
                    <b>xlCurrencyNegative</b>
                  </term>
                  <description>
                    <b>Integer</b>
                  </description>
                  <description>Currency format for negative currency values:0 = (symbolx) or (xsymbol)1 = -symbolx or -xsymbol2 = symbol-x or x-symbol3 = symbolx- or xsymbol-where symbol is the currency symbol of the country or region. Note that the position of the currency symbol is determined by <b>xlCurrencyBefore</b>.</description>
                </item>
                <item>
                  <term>
                    <b>xlCurrencySpaceBefore</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if a space is added before the currency symbol.</description>
                </item>
                <item>
                  <term>
                    <b>xlCurrencyTrailingZeros</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if trailing zeros are displayed for zero currency values.</description>
                </item>
                <item>
                  <term>
                    <b>xlNoncurrencyDigits</b>
                  </term>
                  <description>
                    <b>Integer</b>
                  </description>
                  <description>Number of decimal digits to be used in non-currency formats.</description>
                </item>
              </list>
              <para>Date and Time</para>
              <list type="table">
                <item>
                  <term>
                    <b>xl24HourClock</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if you’re using 24-hour time; <b>False</b> if you’re using 12-hour time.</description>
                </item>
                <item>
                  <term>
                    <b>xl4DigitYears</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if you’re using four-digit years; <b>False</b> if you’re using two-digit years.</description>
                </item>
                <item>
                  <term>
                    <b>xlDateOrder</b>
                  </term>
                  <description>
                    <b>Integer</b>
                  </description>
                  <description>Order of date elements:0 = month-day-year1 = day-month-year2 = year-month-day</description>
                </item>
                <item>
                  <term>
                    <b>xlDateSeparator</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Date separator (/).</description>
                </item>
                <item>
                  <term>
                    <b>xlDayCode</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Day symbol (d).</description>
                </item>
                <item>
                  <term>
                    <b>xlDayLeadingZero</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>True if a leading zero is displayed in days.</description>
                </item>
                <item>
                  <term>
                    <b>xlHourCode</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Hour symbol (h).</description>
                </item>
                <item>
                  <term>
                    <b>xlMDY</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if the date order is month-day-year for dates displayed in the long form; <b>False</b> if the date order is day-month-year.</description>
                </item>
                <item>
                  <term>
                    <b>xlMinuteCode</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Minute symbol (m).</description>
                </item>
                <item>
                  <term>
                    <b>xlMonthCode</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Month symbol (m).</description>
                </item>
                <item>
                  <term>
                    <b>xlMonthLeadingZero</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if a leading zero is displayed in months (when months are displayed as numbers).</description>
                </item>
                <item>
                  <term>
                    <b>xlMonthNameChars</b>
                  </term>
                  <description>
                    <b>Integer</b>
                  </description>
                  <description>Always returns three characters for backward compatibility. Abbreviated month names are read from Microsoft Windows and can be any length.</description>
                </item>
                <item>
                  <term>
                    <b>xlSecondCode</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Second symbol (s).</description>
                </item>
                <item>
                  <term>
                    <b>xlTimeSeparator</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Time separator (:).</description>
                </item>
                <item>
                  <term>
                    <b>xlTimeLeadingZero</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if a leading zero is displayed in times.</description>
                </item>
                <item>
                  <term>
                    <b>xlWeekdayNameChars</b>
                  </term>
                  <description>
                    <b>Integer</b>
                  </description>
                  <description>Always returns three characters for backward compatibility. Abbreviated weekday names are read from Microsoft Windows and can be any length.</description>
                </item>
                <item>
                  <term>
                    <b>xlYearCode</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Year symbol in number formats (y).</description>
                </item>
              </list>
              <para>Measurement Systems</para>
              <list type="table">
                <item>
                  <term>
                    <b>xlMetric</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if you’re using the metric system; <b>False</b> if you’re using the English measurement system.</description>
                </item>
                <item>
                  <term>
                    <b>xlNonEnglishFunctions</b>
                  </term>
                  <description>
                    <b>Boolean</b>
                  </description>
                  <description>
                    <b>True</b> if you’re not displaying functions in English.</description>
                </item>
              </list>
              <para>Separators</para>
              <list type="table">
                <item>
                  <term>
                    <b>xlAlternateArraySeparator</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Alternate array item separator to be used if the current array separator is the same as the decimal separator.</description>
                </item>
                <item>
                  <term>
                    <b>xlColumnSeparator</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Character used to separate columns in array literals.</description>
                </item>
                <item>
                  <term>
                    <b>xlDecimalSeparator</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Decimal separator.</description>
                </item>
                <item>
                  <term>
                    <b>xlListSeparator</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>List separator.</description>
                </item>
                <item>
                  <term>
                    <b>xlRowSeparator</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Character used to separate rows in array literals.</description>
                </item>
                <item>
                  <term>
                    <b>xlThousandsSeparator</b>
                  </term>
                  <description>
                    <b>String</b>
                  </description>
                  <description>Zero or thousands separator.</description>
                </item>
              </list>
              <para>Symbols, separators, and currency formats shown in the preceding table may differ from those used in your language or geographic location and may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Intersect (Microsoft.Office.Interop.Excel.Range Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range Intersect([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Intersect(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (Arg1 As Range, Arg2 As Range, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(766)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">
          <span data-ttu-id="76817-591">
            <b>Range</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-591">Required <b>Range</b>.</span>
          </span>
          <span data-ttu-id="76817-592">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-592">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-593">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-593">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg2">
          <span data-ttu-id="76817-594">
            <b>Range</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-594">Required <b>Range</b>.</span>
          </span>
          <span data-ttu-id="76817-595">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-595">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-596">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-596">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg3">
          <span data-ttu-id="76817-597">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-597">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-598">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-598">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-599">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-599">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg4">
          <span data-ttu-id="76817-600">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-600">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-601">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-601">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-602">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-602">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg5">
          <span data-ttu-id="76817-603">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-603">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-604">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-604">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-605">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-605">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg6">
          <span data-ttu-id="76817-606">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-606">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-607">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-607">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-608">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-608">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg7">
          <span data-ttu-id="76817-609">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-609">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-610">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-610">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-611">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-611">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg8">
          <span data-ttu-id="76817-612">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-612">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-613">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-613">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-614">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-614">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg9">
          <span data-ttu-id="76817-615">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-615">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-616">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-616">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-617">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-617">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg10">
          <span data-ttu-id="76817-618">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-618">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-619">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-619">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-620">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-620">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg11">
          <span data-ttu-id="76817-621">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-621">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-622">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-622">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-623">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-623">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg12">
          <span data-ttu-id="76817-624">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-624">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-625">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-625">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-626">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-626">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg13">
          <span data-ttu-id="76817-627">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-627">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-628">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-628">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-629">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-629">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg14">
          <span data-ttu-id="76817-630">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-630">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-631">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-631">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-632">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-632">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg15">
          <span data-ttu-id="76817-633">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-633">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-634">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-634">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-635">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-635">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg16">
          <span data-ttu-id="76817-636">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-636">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-637">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-637">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-638">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-638">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg17">
          <span data-ttu-id="76817-639">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-639">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-640">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-640">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-641">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-641">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg18">
          <span data-ttu-id="76817-642">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-642">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-643">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-643">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-644">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-644">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg19">
          <span data-ttu-id="76817-645">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-645">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-646">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-646">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-647">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-647">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg20">
          <span data-ttu-id="76817-648">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-648">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-649">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-649">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-650">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-650">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg21">
          <span data-ttu-id="76817-651">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-651">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-652">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-652">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-653">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-653">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg22">
          <span data-ttu-id="76817-654">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-654">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-655">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-655">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-656">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-656">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg23">
          <span data-ttu-id="76817-657">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-657">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-658">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-658">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-659">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-659">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg24">
          <span data-ttu-id="76817-660">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-660">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-661">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-661">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-662">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-662">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg25">
          <span data-ttu-id="76817-663">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-663">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-664">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-664">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-665">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-665">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg26">
          <span data-ttu-id="76817-666">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-666">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-667">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-667">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-668">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-668">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg27">
          <span data-ttu-id="76817-669">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-669">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-670">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-670">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-671">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-671">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg28">
          <span data-ttu-id="76817-672">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-672">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-673">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-673">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-674">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-674">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg29">
          <span data-ttu-id="76817-675">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-675">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-676">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-676">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-677">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-677">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg30">
          <span data-ttu-id="76817-678">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-678">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-679">Die sich überschneidenden Bereiche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-679">The intersecting ranges.</span>
          </span>
          <span data-ttu-id="76817-680">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-680">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-681">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> -Objekt, das die rechteckige Schnittmenge von zwei oder mehreren Bereichen darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-681">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the rectangular intersection of two or more ranges.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSandboxed">
      <MemberSignature Language="C#" Value="public bool IsSandboxed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSandboxed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.IsSandboxed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSandboxed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSandboxed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2785)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2785)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-682">Ruft ab, ob die angegebene Arbeitsmappe in einem Fenster geschützte Ansicht geöffnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-682">Gets whether the specified workbook is open in a Protected View window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-683">
            <b>true,</b> Wenn die angegebene Arbeitsmappe in einem Fenster geschützte Ansicht geöffnet ist. anderenfalls <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-683">
              <b>true</b> if the specified workbook is open in a Protected View window; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="76817-684">
            <para>Read-only</para>
            <para>Verwendung der <see cref="P:Microsoft.Office.Interop.Excel._Application.IsSandboxed" /> Eigenschaft, um zu bestimmen, ob eine Arbeitsmappe in einem geschützten Ansichtsfenster geöffnet ist.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-684">
              <para>Read-only</para>
              <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.IsSandboxed" /> property to determine if a workbook is open in a Protected View window.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Iteration">
      <MemberSignature Language="C#" Value="public bool Iteration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Iteration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Iteration" />
      <MemberSignature Language="VB.NET" Value="Public Property Iteration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Iteration { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(363)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-685">
            <b>True,</b> Wenn Microsoft Excel zum Auflösen von Zirkularbezügen Iteration verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-685">
              <b>True</b> if Microsoft Excel will use iteration to resolve circular references.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageSettings">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.LanguageSettings LanguageSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.LanguageSettings LanguageSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LanguageSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LanguageSettings As LanguageSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::LanguageSettings ^ LanguageSettings { Microsoft::Office::Core::LanguageSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1801)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1801)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.LanguageSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-686">Gibt die <see cref="T:Microsoft.Office.Core.LanguageSettings" /> -Objekt, das Informationen über die spracheinstellungen in Microsoft Excel enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-686">Returns the <see cref="T:Microsoft.Office.Core.LanguageSettings" /> object, which contains information about the language settings in Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeButtons">
      <MemberSignature Language="C#" Value="public bool LargeButtons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LargeButtons" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LargeButtons" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeButtons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LargeButtons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(364)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-687">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-687">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeOperationCellThousandCount">
      <MemberSignature Language="C#" Value="public int LargeOperationCellThousandCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LargeOperationCellThousandCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LargeOperationCellThousandCount" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeOperationCellThousandCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LargeOperationCellThousandCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2389)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-688">Gibt zurück oder legt die maximale Anzahl von Zellen in einem Vorgang hinter, dem eine Warnung ausgegeben wird benötigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-688">Returns or sets the maximum number of cells needed in an operation beyond which an alert  is triggered.</span>
          </span>
          <span data-ttu-id="76817-689">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-689">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-690">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-690">
              <b>Integer</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-691">Der Abstand in Punkt vom linken Rand des Bildschirms zum linken Rand des Hauptfensters von Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-691">The distance, in points, from the left edge of the screen to the left edge of the main Microsoft Excel window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-692">
            <para>Wenn das Fenster maximiert ist, gibt diese Eigenschaft die Breite des Fensterrahmens eine negative Zahl, die variiert, entsprechend. Durch Festlegen dieser Eigenschaft auf 0 (null) wird, das Fenster ein wenig kleiner, als wäre, wenn das Anwendungsfenster maximiert wurden. Anders ausgedrückt, wenn diese Eigenschaft 0 (null) ist, ist der linke Rand des Hauptfensters von Microsoft Excel auf dem Bildschirm kaum sichtbar.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-692">
              <para>If the window is maximized, this property returns a negative number that varies based on the width of the window border. Setting this property to 0 (zero) will make the window a tiny bit smaller than it would be if the application window were maximized. In other words, if this property is 0 (zero), the left border of the main Microsoft Excel window will just barely be visible on the screen.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LibraryPath">
      <MemberSignature Language="C#" Value="public string LibraryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LibraryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.LibraryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LibraryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LibraryPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(366)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(366)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-693">Gibt den Pfad zum Bibliotheksordner, aber ohne das abschließende Trennzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-693">Returns the path to the Library folder but without the final separator.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MacroOptions">
      <MemberSignature Language="C#" Value="public void MacroOptions (object Macro, object Description, object HasMenu, object MenuText, object HasShortcutKey, object ShortcutKey, object Category, object StatusBar, object HelpContextID, object HelpFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MacroOptions([in]object Macro, [in]object Description, [in]object HasMenu, [in]object MenuText, [in]object HasShortcutKey, [in]object ShortcutKey, [in]object Category, [in]object StatusBar, [in]object HelpContextID, [in]object HelpFile) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MacroOptions(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MacroOptions (Optional Macro As Object, Optional Description As Object, Optional HasMenu As Object, Optional MenuText As Object, Optional HasShortcutKey As Object, Optional ShortcutKey As Object, Optional Category As Object, Optional StatusBar As Object, Optional HelpContextID As Object, Optional HelpFile As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1135)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HasMenu" Type="System.Object" />
        <Parameter Name="MenuText" Type="System.Object" />
        <Parameter Name="HasShortcutKey" Type="System.Object" />
        <Parameter Name="ShortcutKey" Type="System.Object" />
        <Parameter Name="Category" Type="System.Object" />
        <Parameter Name="StatusBar" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">
          <span data-ttu-id="76817-694">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-694">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-695">Der Name des Makros oder einer benutzerdefinierten Funktion (UDF).</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-695">The macro name or the name of a user defined function (UDF).</span>
          </span>
        </param>
        <param name="Description">
          <span data-ttu-id="76817-696">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-696">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-697">Die Beschreibung des Makros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-697">The macro description.</span>
          </span>
        </param>
        <param name="HasMenu">
          <span data-ttu-id="76817-698">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-698">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-699">Dieses Argument wird ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-699">This argument is ignored.</span>
          </span>
        </param>
        <param name="MenuText">
          <span data-ttu-id="76817-700">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-700">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-701">Dieses Argument wird ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-701">This argument is ignored.</span>
          </span>
        </param>
        <param name="HasShortcutKey">
          <span data-ttu-id="76817-702">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-702">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-703">
            <b>True</b> , wenn das Makro eine Tastenkombination zugewiesen (<paramref name="ShortcutKey" /> muss ebenfalls angegeben werden).</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-703">
              <b>True</b> to assign a shortcut key to the macro (<paramref name="ShortcutKey" /> must also be specified).</span>
          </span>
          <span data-ttu-id="76817-704">Wenn dieses Argument auf <b>False</b>festgelegt ist, wird das Makro keine Tastenkombination zugewiesen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-704">If this argument is <b>False</b>, no shortcut key is assigned to the macro.</span>
          </span>
          <span data-ttu-id="76817-705">Wenn das Makro bereits eine Tastenkombination zugeordnet, wird diese entfernt, dieses Argument auf <b>False</b> festlegen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-705">If the macro already has a shortcut key, setting this argument to <b>False</b> removes the shortcut key.</span>
          </span>
          <span data-ttu-id="76817-706">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-706">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="ShortcutKey">
          <span data-ttu-id="76817-707">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-707">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-708">Erforderlich, wenn <paramref name="HasShortcutKey" /> ist <b>True</b>; andernfalls ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-708">Required if <paramref name="HasShortcutKey" /> is <b>True</b>; ignored otherwise.</span>
          </span>
          <span data-ttu-id="76817-709">Die Tastenkombination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-709">The shortcut key.</span>
          </span>
        </param>
        <param name="Category">
          <span data-ttu-id="76817-710">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-710">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-711">Eine ganze Zahl, die eine vorhandene Funktionskategorie des Makros angibt (Finanzmathematisch, Datum &amp; Zeit oder User-Defined beispielsweise).</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-711">An integer that specifies an existing macro function category (Financial, Date &amp; Time, or User Defined, for example).</span>
          </span>
          <span data-ttu-id="76817-712">Finden Sie unter "Hinweise" die ganzen Zahlen zu bestimmen, die den integrierten Kategorien zugeordnet sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-712">See the remarks section to determine the integers that are mapped to the built-in categories.</span>
          </span>
          <span data-ttu-id="76817-713">Sie können auch eine Zeichenfolge für eine benutzerdefinierte Kategorie angeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-713">You can also specify a string for a custom category.</span>
          </span>
          <span data-ttu-id="76817-714">Wenn Sie eine Zeichenfolge angeben, wird diese als der Kategoriename behandelt, die im Dialogfeld Funktion einfügen angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-714">If you provide a string, it will be treated as the category name that is displayed in the Insert Function dialog box.</span>
          </span>
          <span data-ttu-id="76817-715">Wenn Sie den Namen der Kategorie noch nie verwendet wurde, wird eine neue Kategorie mit diesem Namen definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-715">If the category name has never been used, a new category is defined with that name.</span>
          </span>
          <span data-ttu-id="76817-716">Wenn Sie einen Kategorienamen verwenden, der ist, dass dasselbe wie ein integrierter Namen, Excel die benutzerdefinierte Funktion dieser integrierten Kategorie zugeordnet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-716">If you use a category name that is that same as a built-in name, Excel will map the user defined function to that built-in category.</span>
          </span>
        </param>
        <param name="StatusBar">
          <span data-ttu-id="76817-717">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-717">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-718">Der Statusleistentext des Makros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-718">The status bar text for the macro.</span>
          </span>
        </param>
        <param name="HelpContextID">
          <span data-ttu-id="76817-719">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-719">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-720">Eine ganze Zahl, die die Kontext-ID für das Hilfethema angibt, das dem Makro zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-720">An integer that specifies the context ID for the Help topic assigned to the macro.</span>
          </span>
        </param>
        <param name="HelpFile">
          <span data-ttu-id="76817-721">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-721">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-722">Der Name der Hilfedatei, die das Hilfethema von definierten enthält <paramref name="HelpContextId" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-722">The name of the Help file that contains the Help topic defined by <paramref name="HelpContextId" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-723">Optionen im Dialogfeld Makrooptionen entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-723">Corresponds to options in the Macro Options dialog box.</span>
          </span>
          <span data-ttu-id="76817-724">Sie können diese Methode auch verwenden, um eine benutzerdefinierte Funktion (UDF) in einer integrierten oder neuen Kategorie im Dialogfeld Funktion einfügen anzuzeigen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-724">You can also use this method to display a user defined function (UDF) in a built-in or new category within the Insert Function dialog box.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="76817-725">
            <para>In der folgenden Tabelle listet die jeweiligen ganzen Zahlen auf den integrierten Kategorien zugeordnet sind, die im Category-Parameter verwendet werden können.</para>
            <list type="table">
              <item>
                <term>1</term>
                <description>
                  <b>finanzielle</b>
                </description>
              </item>
              <item>
                <term>2</term>
                <description>
                  <b>Datum &amp; Zeit</b>
                </description>
              </item>
              <item>
                <term>3</term>
                <description>
                  <b>Math &amp; Trig</b>
                </description>
              </item>
              <item>
                <term>4</term>
                <description>
                  <b>statistische</b>
                </description>
              </item>
              <item>
                <term>5</term>
                <description>
                  <b>Lookup &amp; Referenz</b>
                </description>
              </item>
              <item>
                <item>
                  <term>6</term>
                  <description>
                    <b>Datenbank</b>
                  </description>
                </item>
                <item>
                  <term>7</term>
                  <description>
                    <b>Text</b>
                  </description>
                </item>
                <term>8</term>
                <description>
                  <b>logische</b>
                </description>
              </item>
              <item>
                <term>9</term>
                <description>
                  <b>Informationen</b>
                </description>
              </item>
              <item>
                <term>10</term>-
              <description><b>Befehle</b></description></item>
              <item>
                <term>11</term>
                <description>
                  <b>Anpassen</b>
                </description>
              </item>
              <term>12</term>
              <description>
                <b>Makrosteuerung</b>
              </description>
              <item>
                <term>13</term>
                <description>
                  <b>DDE/externer</b>
                </description>
              </item>
              <item></item>
              <item>
                <term>14</term>
                <description>
                  <b>benutzerdefinierte</b>
                </description>
              </item>
              <item>
                <term>15</term>
                <description>ersten benutzerdefinierte Kategorie</description>
              </item>
              <item>
                <term>16</term>
                <description>zweite benutzerdefinierte Kategorie</description>
              </item>
              <item>
                <term>17</term>
                <description>Dritte benutzerdefinierte Kategorie</description>
              </item>
              <item>
                <term>18</term>
                <description>vierte benutzerdefinierte Kategorie</description>
              </item>
              <item>
                <term>19</term>
                <description>fünfte benutzerdefinierte Kategorie</description>
              </item>
              <item>
                <term>20</term>
                <description>sechste benutzerdefinierte Kategorie</description>
              </item>
              <item>
                <term>21</term>
                <description>siebte benutzerdefinierte Kategorie</description>
              </item>
              <item>
                <term>22</term>
                <description>achte benutzerdefinierte Kategorie</description>
              </item>
              <item>
                <term>23</term>
                <description>neunte benutzerdefinierte Kategorie</description>
              </item>
              <item>
                <term>24</term>
                <description>zehnte benutzerdefinierte Kategorie</description>
              </item>
              <item>
                <term>25</term>
                <description>Elfte benutzerdefinierte Kategorie</description>
              </item>
              <item>
                <term>26</term>
                <description>zwölfte benutzerdefinierte Kategorie</description>
              </item>
              <item>
                <term>27</term>
                <description>Dreizehnter benutzerdefinierte Kategorie</description>
              </item>
              <item>
                <term>28</term>
                <description>Vierzehnte benutzerdefinierte Kategorie</description>
              </item>
              <item>
                <term>29</term>
                <description>Fünfzehnte benutzerdefinierte Kategorie</description>
              </item>
              <item>
                <term>30</term>
                <description>sechzehnte benutzerdefinierte Kategorie</description>
              </item>
              <item>
                <term>31</term>
                <description>Siebzehnte benutzerdefinierte Kategorie</description>
              </item>
              <item>
                <term>32</term>
                <description>achtzehnte benutzerdefinierte Kategorie</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-725">
              <para>The following table lists which integers are mapped to the built-in categories that can be used in the Category parameter.</para>
              <list type="table">
                <item>
                  <term>1</term>
                  <description>
                    <b>Financial</b>
                  </description>
                </item>
                <item>
                  <term>2</term>
                  <description>
                    <b>Date &amp; Time</b>
                  </description>
                </item>
                <item>
                  <term>3</term>
                  <description>
                    <b>Math &amp; Trig</b>
                  </description>
                </item>
                <item>
                  <term>4</term>
                  <description>
                    <b>Statistical</b>
                  </description>
                </item>
                <item>
                  <term>5</term>
                  <description>
                    <b>Lookup &amp; Reference</b>
                  </description>
                </item>
                <item>
                  <term>6</term>
                  <description>
                    <b>Database</b>
                  </description>
                </item>
                <item>
                  <term>7</term>
                  <description>
                    <b>Text</b>
                  </description>
                </item>
                <item>
                  <term>8</term>
                  <description>
                    <b>Logical</b>
                  </description>
                </item>
                <item>
                  <term>9</term>
                  <description>
                    <b>Information</b>
                  </description>
                </item>
                <item>
                  <term>10</term>
                  <description>
                    <b>Commands</b>
                  </description>
                </item>
                <item>
                  <term>11</term>
                  <description>
                    <b>Customizing</b>
                  </description>
                </item>
                <item>
                  <term>12</term>
                  <description>
                    <b>Macro Control</b>
                  </description>
                </item>
                <item>
                  <term>13</term>
                  <description>
                    <b>DDE/External</b>
                  </description>
                </item>
                <item>
                  <term>14</term>
                  <description>
                    <b>User Defined</b>
                  </description>
                </item>
                <item>
                  <term>15</term>
                  <description>First custom category</description>
                </item>
                <item>
                  <term>16</term>
                  <description>Second custom category</description>
                </item>
                <item>
                  <term>17</term>
                  <description>Third custom category</description>
                </item>
                <item>
                  <term>18</term>
                  <description>Fourth custom category</description>
                </item>
                <item>
                  <term>19</term>
                  <description>Fifth custom category</description>
                </item>
                <item>
                  <term>20</term>
                  <description>Sixth custom category</description>
                </item>
                <item>
                  <term>21</term>
                  <description>Seventh custom category</description>
                </item>
                <item>
                  <term>22</term>
                  <description>Eighth custom category</description>
                </item>
                <item>
                  <term>23</term>
                  <description>Ninth custom category</description>
                </item>
                <item>
                  <term>24</term>
                  <description>Tenth custom category</description>
                </item>
                <item>
                  <term>25</term>
                  <description>Eleventh custom category</description>
                </item>
                <item>
                  <term>26</term>
                  <description>Twelfth custom category</description>
                </item>
                <item>
                  <term>27</term>
                  <description>Thirteenth custom category</description>
                </item>
                <item>
                  <term>28</term>
                  <description>Fourteenth custom category</description>
                </item>
                <item>
                  <term>29</term>
                  <description>Fifteenth custom category</description>
                </item>
                <item>
                  <term>30</term>
                  <description>Sixteenth custom category</description>
                </item>
                <item>
                  <term>31</term>
                  <description>Seventeenth custom category</description>
                </item>
                <item>
                  <term>32</term>
                  <description>Eighteenth custom category</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MacroOptions2">
      <MemberSignature Language="C#" Value="public void MacroOptions2 (object Macro, object Description, object HasMenu, object MenuText, object HasShortcutKey, object ShortcutKey, object Category, object StatusBar, object HelpContextID, object HelpFile, object ArgumentDescriptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MacroOptions2([in]object Macro, [in]object Description, [in]object HasMenu, [in]object MenuText, [in]object HasShortcutKey, [in]object ShortcutKey, [in]object Category, [in]object StatusBar, [in]object HelpContextID, [in]object HelpFile, [in]object ArgumentDescriptions) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MacroOptions2(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MacroOptions2 (Optional Macro As Object, Optional Description As Object, Optional HasMenu As Object, Optional MenuText As Object, Optional HasShortcutKey As Object, Optional ShortcutKey As Object, Optional Category As Object, Optional StatusBar As Object, Optional HelpContextID As Object, Optional HelpFile As Object, Optional ArgumentDescriptions As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HasMenu" Type="System.Object" />
        <Parameter Name="MenuText" Type="System.Object" />
        <Parameter Name="HasShortcutKey" Type="System.Object" />
        <Parameter Name="ShortcutKey" Type="System.Object" />
        <Parameter Name="Category" Type="System.Object" />
        <Parameter Name="StatusBar" Type="System.Object" />
        <Parameter Name="HelpContextID" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="ArgumentDescriptions" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">To be added.</param>
        <param name="Description">To be added.</param>
        <param name="HasMenu">To be added.</param>
        <param name="MenuText">To be added.</param>
        <param name="HasShortcutKey">To be added.</param>
        <param name="ShortcutKey">To be added.</param>
        <param name="Category">To be added.</param>
        <param name="StatusBar">To be added.</param>
        <param name="HelpContextID">To be added.</param>
        <param name="HelpFile">To be added.</param>
        <param name="ArgumentDescriptions">To be added.</param>
        <summary>
          <span data-ttu-id="76817-726">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-726">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailLogoff">
      <MemberSignature Language="C#" Value="public void MailLogoff ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MailLogoff() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MailLogoff" />
      <MemberSignature Language="VB.NET" Value="Public Sub MailLogoff ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MailLogoff();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(945)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76817-727">Beendet eine von Microsoft Excel hergestellte MAPI Mail-Sitzung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-727">Closes a MAPI mail session established by Microsoft Excel.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MailLogon">
      <MemberSignature Language="C#" Value="public void MailLogon (object Name, object Password, object DownloadNewMail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MailLogon([in]object Name, [in]object Password, [in]object DownloadNewMail) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.MailLogon(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MailLogon (Optional Name As Object, Optional Password As Object, Optional DownloadNewMail As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(943)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="DownloadNewMail" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="76817-728">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-728">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-729">Der Kontoname Mail oder Microsoft Exchange-Profilname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-729">The mail account name or Microsoft Exchange profile name.</span>
          </span>
          <span data-ttu-id="76817-730">Wenn dieses Argument ausgelassen wird, wird der Standardname der Mail-Kontos verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-730">If this argument is omitted, the default mail account name is used.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="76817-731">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-731">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-732">Das Kennwort für das E-Mail-Konto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-732">The mail account password.</span>
          </span>
          <span data-ttu-id="76817-733">Dieses Argument wird in Microsoft Exchange ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-733">This argument is ignored in Microsoft Exchange.</span>
          </span>
        </param>
        <param name="DownloadNewMail">
          <span data-ttu-id="76817-734">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-734">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-735">Beim Wert <b>True</b> werden neue Nachrichten sofort heruntergeladen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-735">
              <b>True</b> to download new mail immediately.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-p258">Meldet sich bei MAPI Mail oder Microsoft Exchange an und stellt eine Mail-Sitzung her. Wenn Microsoft Mail noch nicht ausgeführt wird, müssen Sie diese Methode zum Herstellen einer Mail-Sitzung verwenden, bevor die Funktionen zum Verteilen oder Weiterleiten von Dokumenten eingesetzt werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-p258">Logs in to MAPI Mail or Microsoft Exchange and establishes a mail session. If Microsoft Mail isn't already running, you must use this method to establish a mail session before mail or document routing functions can be used.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="76817-738">
            <para>Microsoft Excel abmeldet Mail-Sitzungen zuvor, nachgewiesen bevor Sie versuchen, eine neue Sitzung herzustellen.</para>
            <para>, Um auf das System Default Mail-Sitzung standardsitzung, den Namen und das Kennwort Parameter weglassen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-738">
              <para>Microsoft Excel logs off any mail sessions it previously established before attempting to establish the new session.</para>
              <para>To piggyback on the system default mail session, omit both the name and password parameters.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailSession">
      <MemberSignature Language="C#" Value="public object MailSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MailSession" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MailSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailSession As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MailSession { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-739">Gibt die Nummer der MAPI-Mail-Sitzung als hexadezimale Zeichenfolge (falls eine aktive Sitzung vorhanden ist), oder gibt <b>Null</b> zurück, wenn keine Sitzung vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-739">Returns the MAPI mail session number as a hexadecimal string (if there's an active session), or returns <b>Null</b> if there's no session.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-740">
            <para>Diese Eigenschaft gilt nur für Mail-Sitzungen, die von Microsoft Excel (er wird nicht die Nummer einer Mail-Sitzung für Microsoft Mail zurückgegeben) erstellt.</para>
            <para>Dieser Eigenschaft wird nicht auf PowerTalk-Mail-Systemen verwendet.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-740">
              <para>This property applies only to mail sessions created by Microsoft Excel (it doesn't return a mail session number for Microsoft Mail).</para>
              <para>This property isn't used on PowerTalk mail systems.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MailSystem">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlMailSystem MailSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlMailSystem MailSystem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MailSystem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MailSystem As XlMailSystem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlMailSystem MailSystem { Microsoft::Office::Interop::Excel::XlMailSystem get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(971)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(971)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlMailSystem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-741">Gibt das e-Mail-System, das auf dem Hostcomputer installiert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-741">Returns the mail system that's installed on the host machine.</span>
          </span>
          <span data-ttu-id="76817-742">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlMailSystem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-742">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlMailSystem" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-743">
            <para>
              <b>XlMailSystem</b> kann eine der folgenden <b>XlMailSystem</b> -Konstanten sein:</para>
            <para>
              <b>XlMAPI</b>
            </para>
            <para>
              <b>XlNoMailSystem</b>
            </para>
            <para>
              <b>XlPowerTalk</b>
            </para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-743">
              <para>
                <b>XlMailSystem</b> can be one of these <b>XlMailSystem</b> constants:</para>
              <para>
                <b>xlMAPI</b>
              </para>
              <para>
                <b>xlNoMailSystem</b>
              </para>
              <para>
                <b>xlPowerTalk</b>
              </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPaperSize">
      <MemberSignature Language="C#" Value="public bool MapPaperSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MapPaperSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MapPaperSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MapPaperSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MapPaperSize { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1959)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-744">
            <b>True,</b> Wenn Dokumente, die für das Standardpapierformat eines anderen Land/Region (z. B. A4) formatiert werden automatisch angepasst, sodass sie auf das Standardpapierformat (z. B. Letter) von Ihrem Land/Ihrer Region ordnungsgemäß gedruckt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-744">
              <b>True</b> if documents formatted for the standard paper size of another country/region (for example, A4) are automatically adjusted so that they're printed correctly on the standard paper size (for example, Letter) of your country/region.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MathCoprocessorAvailable">
      <MemberSignature Language="C#" Value="public bool MathCoprocessorAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MathCoprocessorAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MathCoprocessorAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MathCoprocessorAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MathCoprocessorAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(367)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(367)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-745">
            <b>True,</b> Wenn ein mathematischer Koprozessor verfügbar ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-745">
              <b>True</b> if a math coprocessor is available.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxChange">
      <MemberSignature Language="C#" Value="public double MaxChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxChange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MaxChange" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxChange As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxChange { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-746">Zurückgeben oder Festlegen der maximalen Änderung zwischen jeder Iteration wie Microsoft Excel Zirkelbezüge aufgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-746">Returns or sets the maximum amount of change between each iteration as Microsoft Excel resolves circular references.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-747">
            <para>Die <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxIterations" /> -Eigenschaft festgelegt wird, die maximale Anzahl von Iterationen, die Microsoft Excel beim Auflösen von Zirkularbezügen verwenden können.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-747">
              <para>The <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxIterations" /> property sets the maximum number of iterations that Microsoft Excel can use when resolving circular references.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxIterations">
      <MemberSignature Language="C#" Value="public int MaxIterations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxIterations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MaxIterations" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxIterations As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxIterations { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-748">Gibt zurück oder legt die maximale Anzahl von Iterationen, die Microsoft Excel verwenden können, um einen Zirkelverweis zu beheben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-748">Returns or sets the maximum number of iterations that Microsoft Excel can use to resolve a circular reference.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-749">
            <para>Die <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxChange" /> -Eigenschaft festgelegt wird, das maximale Ausmaß der Änderung zwischen beim Microsoft Excel Auflösen von Zirkularbezügen für jede Iteration.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-749">
              <para>The <see cref="P:Microsoft.Office.Interop.Excel._Application.MaxChange" /> property sets the maximum amount of change between each iteration when Microsoft Excel is resolving circular references.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasurementUnit">
      <MemberSignature Language="C#" Value="public int MeasurementUnit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MeasurementUnit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MeasurementUnit" />
      <MemberSignature Language="VB.NET" Value="Public Property MeasurementUnit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MeasurementUnit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2375)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-750">Gibt die Maßeinheit an, die in der Anwendung verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-750">Specifies the measurement unit used in the application.</span>
          </span>
          <span data-ttu-id="76817-751">Lese-Schreib- <b>Integer</b> -Wert entspricht den Konstanten in der <see cref="T:Microsoft.Office.Interop.Excel.XlMeasurementUnits" /> Enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-751">Read/write <b>Integer</b> value corresponding to the constants in the <see cref="T:Microsoft.Office.Interop.Excel.XlMeasurementUnits" /> enumeration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-752">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-752">
              <b>Integer</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryFree">
      <MemberSignature Language="C#" Value="public int MemoryFree { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryFree" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryFree" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryFree As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryFree { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(370)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(370)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-753">Gibt die Menge des Arbeitsspeichers, die für Microsoft Excel in Byte verwendet weiterhin verfügbar ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-753">Returns the amount of memory that's still available for Microsoft Excel to use, in bytes.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryTotal">
      <MemberSignature Language="C#" Value="public int MemoryTotal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryTotal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryTotal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryTotal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryTotal { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-754">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-754">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryUsed">
      <MemberSignature Language="C#" Value="public int MemoryUsed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MemoryUsed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MemoryUsed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryUsed As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MemoryUsed { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(372)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(372)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-755">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-755">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MenuBars MenuBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MenuBars MenuBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MenuBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MenuBars As MenuBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MenuBars ^ MenuBars { Microsoft::Office::Interop::Excel::MenuBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(589)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(589)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MenuBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-756">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-756">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeInstances">
      <MemberSignature Language="C#" Value="public bool MergeInstances { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MergeInstances" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MergeInstances" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeInstances As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MergeInstances { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-757">True, wenn mehrere Instanzen der Anwendung in einer einzigen Instanz zusammengeführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-757">True to merge multiple instances of the application into a single instance.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Modules Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Modules Modules" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Modules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modules As Modules" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Modules ^ Modules { Microsoft::Office::Interop::Excel::Modules ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Modules</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-758">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-758">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseAvailable">
      <MemberSignature Language="C#" Value="public bool MouseAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MouseAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MouseAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MouseAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MouseAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-759">
            <b>True,</b> Wenn keine Maus verfügbar ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-759">
              <b>True</b> if a mouse is available.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveAfterReturn">
      <MemberSignature Language="C#" Value="public bool MoveAfterReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MoveAfterReturn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveAfterReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MoveAfterReturn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(374)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-760">
            <b>True,</b> Wenn die aktive Zelle verschoben werden, sobald die eingeben (RÜCKGABE) gedrückt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-760">
              <b>True</b> if the active cell will be moved as soon as the ENTER (RETURN) key is pressed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-761">
            <para>Verwendung der <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturnDirection" /> Eigenschaft, um anzugeben, in dem die Richtung die aktive Zelle verschoben werden.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-761">
              <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturnDirection" /> property to specify the direction in which the active cell is to be moved.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveAfterReturnDirection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDirection MoveAfterReturnDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDirection MoveAfterReturnDirection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturnDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveAfterReturnDirection As XlDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDirection MoveAfterReturnDirection { Microsoft::Office::Interop::Excel::XlDirection get(); void set(Microsoft::Office::Interop::Excel::XlDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1144)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-762">Zurückgeben oder festlegen die Richtung, in der die aktive Zelle beim Drücken der EINGABETASTE verschoben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-762">Returns or sets the direction in which the active cell is moved when the user presses ENTER.</span>
          </span>
          <span data-ttu-id="76817-763">Lese-/Schreibzugriff <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-763">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-764">
            <para>
              <b>XlDirection</b> kann eine der folgenden <b>XlDirection</b> -Konstanten sein:</para>
            <para>
              <b>XlDown</b>
            </para>
            <para>
              <b>XlToLeft</b>
            </para>
            <para>
              <b>XlToRight</b>
            </para>
            <para>
              <b>XlUp</b>
            </para>
            <para>Wenn das <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturn" /> -Eigenschaft ist <b>"false"</b>, die Markierung nicht verschoben, unabhängig davon, wie <b>MoveAfterReturnDirection</b> -Eigenschaft ist festgelegt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-764">
              <para>
                <b>XlDirection</b> can be one of these <b>XlDirection</b> constants:</para>
              <para>
                <b>xlDown</b>
              </para>
              <para>
                <b>xlToLeft</b>
              </para>
              <para>
                <b>xlToRight</b>
              </para>
              <para>
                <b>xlUp</b>
              </para>
              <para>If the <see cref="P:Microsoft.Office.Interop.Excel._Application.MoveAfterReturn" /> property is <b>False</b>, the selection doesn’t move at all, regardless of how the <b>MoveAfterReturnDirection</b> property is set.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiThreadedCalculation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.MultiThreadedCalculation MultiThreadedCalculation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.MultiThreadedCalculation MultiThreadedCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.MultiThreadedCalculation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MultiThreadedCalculation As MultiThreadedCalculation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::MultiThreadedCalculation ^ MultiThreadedCalculation { Microsoft::Office::Interop::Excel::MultiThreadedCalculation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2391)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.MultiThreadedCalculation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-765">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" /> -Objekt, das die Einstellungen in Multithreaded neuberechnung steuert, die in Excel 2007 neu sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-765">Returns a <see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" /> object that controls the multi-threaded recalculation settings that are new in Excel 2007.</span>
          </span>
          <span data-ttu-id="76817-766">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-766">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.MultiThreadedCalculation" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-767">Gibt den Namen des Objekts zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-767">Returns the name of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Names Names { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Names Names" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Names" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Names As Names" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Names ^ Names { Microsoft::Office::Interop::Excel::Names ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Names</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-768">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Names" /> -Auflistung, die alle Namen in der aktiven Arbeitsmappe darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-768">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the names in the active workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkTemplatesPath">
      <MemberSignature Language="C#" Value="public string NetworkTemplatesPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NetworkTemplatesPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.NetworkTemplatesPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NetworkTemplatesPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NetworkTemplatesPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-769">Gibt den Netzwerkpfad zurück, in dem Vorlagen gespeichert sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-769">Returns the network path where templates are stored.</span>
          </span>
          <span data-ttu-id="76817-770">Wenn der Netzwerkpfad nicht vorhanden ist, gibt diese Eigenschaft eine leere Zeichenfolge zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-770">If the network path doesn’t exist, this property returns an empty string.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.NewFile NewWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.NewFile NewWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.NewWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewWorkbook As NewFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::NewFile ^ NewWorkbook { Microsoft::Office::Core::NewFile ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1565)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1565)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.NewFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-771">Gibt ein <b>NewFile</b> -Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-771">Returns a <b>NewFile</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextLetter">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook NextLetter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook NextLetter() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.NextLetter" />
      <MemberSignature Language="VB.NET" Value="Public Function NextLetter () As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Workbook ^ NextLetter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(972)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76817-p264">Sie haben für ein Visual Basic-Schlüsselwort Hilfe angefordert, das nur auf dem Macintosh verwendet wird. Weitere Informationen zu diesem Schlüsselwort finden Sie in der Sprachverzeichnishilfe zu Microsoft Office Macintosh Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-p264">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ODBCErrors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ODBCErrors ODBCErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ODBCErrors ODBCErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ODBCErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ODBCErrors As ODBCErrors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ODBCErrors ^ ODBCErrors { Microsoft::Office::Interop::Excel::ODBCErrors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1203)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1203)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ODBCErrors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-774">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> -Auflistung, die alle ODBC-Fehler durch die neuesten Abfragetabelle oder den PivotTable-Bericht Vorgang enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-774">Returns an <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> collection that contains all the ODBC errors generated by the most recent query table or PivotTable report operation.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-775">
            <para>Wenn es mehrere Abfragen gleichzeitig, ausgeführt wird die <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> -Auflistung enthält die ODBC-Fehler der Abfrage, die zuletzt beendet wurde.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-775">
              <para>If there’s more than one query running at the same time, the <see cref="T:Microsoft.Office.Interop.Excel.ODBCErrors" /> collection contains the ODBC errors from the query that’s finished last.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ODBCTimeout">
      <MemberSignature Language="C#" Value="public int ODBCTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ODBCTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ODBCTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ODBCTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ODBCTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1204)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-776">Zurückgeben oder Festlegen der ODBC-Abfrage eine zeitliche Begrenzung in Sekunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-776">Returns or sets the ODBC query time limit in seconds.</span>
          </span>
          <span data-ttu-id="76817-777">Der Standardwert ist 45 Sekunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-777">The default value is 45 seconds.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-778">
            <para>Der Wert 0 (null) gibt zeitliche Begrenzung auf unendlich.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-778">
              <para>The value 0 (zero) indicates an indefinite time limit.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEDBErrors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.OLEDBErrors OLEDBErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.OLEDBErrors OLEDBErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OLEDBErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OLEDBErrors As OLEDBErrors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::OLEDBErrors ^ OLEDBErrors { Microsoft::Office::Interop::Excel::OLEDBErrors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1794)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1794)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.OLEDBErrors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-779">Gibt die <see cref="T:Microsoft.Office.Interop.Excel.OLEDBErrors" /> -Auflistung, die von der letzten OLE DB-Abfrage zurückgegebene Fehlerinformationen darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-779">Returns the <see cref="T:Microsoft.Office.Interop.Excel.OLEDBErrors" /> collection, which represents the error information returned by the most recent OLE DB query.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCalculate">
      <MemberSignature Language="C#" Value="public string OnCalculate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnCalculate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnCalculate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnCalculate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnCalculate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-780">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-780">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnData">
      <MemberSignature Language="C#" Value="public string OnData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnData" />
      <MemberSignature Language="VB.NET" Value="Public Property OnData As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnData { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(629)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-781">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-781">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="public string OnDoubleClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnDoubleClick" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Property OnDoubleClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnDoubleClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(628)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-782">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-782">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntry">
      <MemberSignature Language="C#" Value="public string OnEntry { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnEntry" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnEntry" />
      <MemberSignature Language="VB.NET" Value="Public Property OnEntry As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnEntry { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(627)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-783">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-783">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKey">
      <MemberSignature Language="C#" Value="public void OnKey (string Key, object Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnKey([in]string Key, [in]object Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnKey(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnKey (Key As String, Optional Procedure As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(626)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key" Type="System.String" />
        <Parameter Name="Procedure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Key">
          <span data-ttu-id="76817-784">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-784">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="76817-785">Eine Zeichenfolge, die die zu drückende Taste angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-785">A string indicating the key to be pressed.</span>
          </span>
        </param>
        <param name="Procedure">
          <span data-ttu-id="76817-786">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-786">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-787">Eine Zeichenfolge, die den Namen der Prozedur, die ausgeführt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-787">A string indicating the name of the procedure to be run.</span>
          </span>
          <span data-ttu-id="76817-788">Wenn <paramref name="Procedure" /> ist "" (leeren Text), passiert nichts, wenn <paramref name="Key" /> gedrückt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-788">If <paramref name="Procedure" /> is "" (empty text), nothing happens when <paramref name="Key" /> is pressed.</span>
          </span>
          <span data-ttu-id="76817-789">In Form von <b>OnKey</b> ändert die normale Bedeutung von Tastenanschlägen in Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-789">This form of <b>OnKey</b> changes the normal result of keystrokes in Microsoft Excel.</span>
          </span>
          <span data-ttu-id="76817-790">Wenn <paramref name="Procedure" /> weggelassen wird, <paramref name="Key" /> kehrt er zum normalen Ergebnisses in Microsoft Excel und eine beliebige Taste, die spezielle Aufgaben, die mit früheren <b>OnKey</b> -Methoden deaktiviert sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-790">If <paramref name="Procedure" /> is omitted, <paramref name="Key" /> reverts to its normal result in Microsoft Excel, and any special key assignments made with previous <b>OnKey</b> methods are cleared.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-791">Führt die angegebene Prozedur aus, wenn eine bestimmte Taste oder Tastenkombination gedrückt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-791">Runs a specified procedure when a particular key or key combination is pressed.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="76817-792">
            <para>Die <paramref name="Key" /> -Argument kann eine einzelne Taste kombiniert mit ALT, STRG oder UMSCHALT oder eine beliebige Kombination dieser Schlüssel angeben. Jeden Schlüssel ist durch eine oder mehrere Zeichen dargestellt, wie "a" für das Zeichen ein, oder "{ENTER}" für die EINGABETASTE.</para>
            <para>Zeichen an, die angezeigt werden, wenn Sie den entsprechenden Schlüssel (eingeben oder Registerkarte, beispielsweise), drücken Sie die in der folgenden Tabelle aufgeführten Codes verwenden. Jeder Code in der Tabelle steht für eine Taste auf der Tastatur.</para>
            <list type="table">
              <item>
                <term>RÜCKTASTE</term>
                <description>{BACKSPACE} oder {BS}</description>
              </item>
              <item>
                <term>UNTERBRECHEN</term>
                <description>{UNTERBRECHEN}</description>
              </item>
              <item>
                <term>Feststelltaste</term>
                <description>{CAPSLOCK}</description>
              </item>
              <item>
                <term>Löschen</term>
                <description>{KLAR}</description>
              </item>
              <item>
                <term>ENTF</term>
                <description>{ DELETE} oder {DEL}</description>
              </item>
              <item>
                <term>Nach-unten-</term>
                <description>{nach unten}</description>
              </item>
              <item>
                <term>END</term>
                <description>{END}</description>
              </item>
              <item>
                <term>EINGABETASTE</term>
                <description>~ (Tilde)</description>
              </item>
              <item>
                <term>EINGABETASTE (Zehnertastatur)</term>
                <description>{ENTER}</description>
              </item>
              <item>
                <term>ESC</term>
                <description>{ESCAPE} oder {ESC}</description>
              </item>
              <item>
                <term>F1 bis F15</term>
                <description>{F1} bis {F15}</description>
              </item>
              <item>
                <term>Hilfe</term>
                <description>-Hilfe {}</description>
              </item>
              <item>
                <term>Startseite</term>
                <description>{HOME}</description>
              </item>
              <item>
                <term>INS</term>
                <description>{Einfügen}</description>
              </item>
              <item>
                <term>Pfeil nach links</term>
                <description>{LEFT}</description>
              </item>
              <item>
                <term>NUM-Taste</term>
                <description>{NUMLOCK}</description>
              </item>
              <item>
                <description>{Bild-ab}</description> - 
              <term>Bild-ab</term></item>
              <item>
                <term>Bild-auf</term>
                <description>{Bild-auf}</description>
              </item>
              <item>
                <description>{RETURN}</description>
                <term>zurückgeben</term>
              </item>
              <item>
                <term>Pfeil nach rechts</term>
                <description>{RIGHT}</description>
              </item>
              <item>
                <term>Rollen-Taste</term>
                <description>{SCROLLLOCK}</description>
              </item>
              <item>
                <term>Registerkarte</term>
                <description>{TAB}</description>
              </item>
              <item>
                <term>Pfeil nach oben</term>
                <description>{UP}</description>
              </item>
            </list>
            <para>Können Sie auch können Tastenkombinationen mit UMSCHALT und/oder STRG und/oder ALT angeben. Verwenden Sie zum Angeben eines Schlüssels in Kombination mit einer oder mehreren anderen Schlüssel in der folgenden Tabelle.</para>
            <list type="table">
              <item>
                <term>UMSCHALT</term>
                <description>+ (Pluszeichen)</description>
              </item>
              <item>
                <term>STRG</term>
                <description>^ (Caretzeichen)</description>
              </item>
              <item>
                <term>ALT</term>
                <description>% (Prozentzeichen)</description>
              </item>
            </list>
            <para>Zuweisen eine Prozedur zu eines der Sonderzeichen (+, ^, % usw.), schließen Sie das Zeichen in geschweifte Klammern gesetzt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-792">
              <para>The <paramref name="Key" /> argument can specify any single key combined with ALT, CTRL, or SHIFT, or any combination of these keys. Each key is represented by one or more characters, such as "a" for the character a, or "{ENTER}" for the ENTER key.</para>
              <para>To specify characters that aren't displayed when you press the corresponding key (ENTER or TAB, for example), use the codes listed in the following table. Each code in the table represents one key on the keyboard.</para>
              <list type="table">
                <item>
                  <term>BACKSPACE</term>
                  <description>{BACKSPACE} or {BS}</description>
                </item>
                <item>
                  <term>BREAK</term>
                  <description>{BREAK}</description>
                </item>
                <item>
                  <term>CAPS LOCK</term>
                  <description>{CAPSLOCK}</description>
                </item>
                <item>
                  <term>CLEAR</term>
                  <description>{CLEAR}</description>
                </item>
                <item>
                  <term>DELETE or DEL</term>
                  <description>{DELETE} or {DEL}</description>
                </item>
                <item>
                  <term>DOWN ARROW</term>
                  <description>{DOWN}</description>
                </item>
                <item>
                  <term>END</term>
                  <description>{END}</description>
                </item>
                <item>
                  <term>ENTER</term>
                  <description>~ (tilde)</description>
                </item>
                <item>
                  <term>ENTER (numeric keypad)</term>
                  <description>{ENTER}</description>
                </item>
                <item>
                  <term>ESC</term>
                  <description>{ESCAPE} or {ESC}</description>
                </item>
                <item>
                  <term>F1 through F15</term>
                  <description>{F1} through {F15}</description>
                </item>
                <item>
                  <term>HELP</term>
                  <description>{HELP}</description>
                </item>
                <item>
                  <term>HOME</term>
                  <description>{HOME}</description>
                </item>
                <item>
                  <term>INS</term>
                  <description>{INSERT}</description>
                </item>
                <item>
                  <term>LEFT ARROW</term>
                  <description>{LEFT}</description>
                </item>
                <item>
                  <term>NUM LOCK</term>
                  <description>{NUMLOCK}</description>
                </item>
                <item>
                  <term>PAGE DOWN</term>
                  <description>{PGDN}</description>
                </item>
                <item>
                  <term>PAGE UP</term>
                  <description>{PGUP}</description>
                </item>
                <item>
                  <term>RETURN</term>
                  <description>{RETURN}</description>
                </item>
                <item>
                  <term>RIGHT ARROW</term>
                  <description>{RIGHT}</description>
                </item>
                <item>
                  <term>SCROLL LOCK</term>
                  <description>{SCROLLLOCK}</description>
                </item>
                <item>
                  <term>TAB</term>
                  <description>{TAB}</description>
                </item>
                <item>
                  <term>UP ARROW</term>
                  <description>{UP}</description>
                </item>
              </list>
              <para>You can also specify keys combined with SHIFT and/or CTRL and/or ALT. To specify a key combined with another key or keys, use the following table.</para>
              <list type="table">
                <item>
                  <term>SHIFT</term>
                  <description>+ (plus sign)</description>
                </item>
                <item>
                  <term>CTRL</term>
                  <description>^ (caret)</description>
                </item>
                <item>
                  <term>ALT</term>
                  <description>% (percent sign)</description>
                </item>
              </list>
              <para>To assign a procedure to one of the special characters (+, ^, %, and so on), enclose the character in braces.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRepeat">
      <MemberSignature Language="C#" Value="public void OnRepeat (string Text, string Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRepeat([in]string Text, [in]string Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnRepeat (Text As String, Procedure As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnRepeat(System::String ^ Text, System::String ^ Procedure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(769)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="Procedure" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text">
          <span data-ttu-id="76817-793">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-793">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="76817-794">Der Text, der mit dem Befehl Wiederholen (Menü Bearbeiten) angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-794">The text that appears with the Repeat command (Edit menu).</span>
          </span>
        </param>
        <param name="Procedure">
          <span data-ttu-id="76817-795">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-795">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="76817-796">Der Name der Prozedur, die ausgeführt wird, wenn der Benutzer den Befehl Wiederholen (Menü Bearbeiten) auswählt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-796">The name of the procedure that will be run when you choose the Repeat command (Edit menu).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-797">Legt den Text des Menübefehls Wiederholen und den Namen der Prozedur fest, die ausgeführt wird, wenn der Benutzer den Befehl Wiederholen (Menü Bearbeiten) wählt, nachdem die Prozedur ausgeführt worden ist, die diese Eigenschaft festlegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-797">Sets the Repeat menu item and the name of the procedure that will run if you choose the Repeat command (Edit menu) after running the procedure that sets this property.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="76817-798">
            <para>Falls eine Prozedur die <b>OnRepeat</b> -Methode nicht verwendet, wiederholt der Befehl wiederholen die Prozedur, die zuletzt ausgeführt wurde.</para>
            <para>Muss die Prozedur die <b>OnRepeat</b> verwenden und <see cref="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)" /> Methoden Nachname, um zu verhindern, dass wiederholen oder Rückgängigmachen Verfahren durch nachfolgende Aktionen in der Prozedur überschrieben werden.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-798">
              <para>If a procedure doesn’t use the <b>OnRepeat</b> method, the Repeat command repeats the procedure that was run most recently.</para>
              <para>The procedure must use the <b>OnRepeat</b> and <see cref="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)" /> methods last, to prevent the repeat and undo procedures from being overwritten by subsequent actions in the procedure.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-799">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-799">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-800">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-800">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTime">
      <MemberSignature Language="C#" Value="public void OnTime (object EarliestTime, string Procedure, object LatestTime, object Schedule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnTime([in]object EarliestTime, [in]string Procedure, [in]object LatestTime, [in]object Schedule) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnTime(System.Object,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnTime (EarliestTime As Object, Procedure As String, Optional LatestTime As Object, Optional Schedule As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(624)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EarliestTime" Type="System.Object" />
        <Parameter Name="Procedure" Type="System.String" />
        <Parameter Name="LatestTime" Type="System.Object" />
        <Parameter Name="Schedule" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EarliestTime">
          <span data-ttu-id="76817-801">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-801">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-802">Die Zeit, zu der diese Prozedur ausgeführt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-802">The time when you want this procedure to be run.</span>
          </span>
        </param>
        <param name="Procedure">
          <span data-ttu-id="76817-803">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-803">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="76817-804">Der Name der auszuführenden Prozedur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-804">The name of the procedure to be run.</span>
          </span>
        </param>
        <param name="LatestTime">
          <span data-ttu-id="76817-805">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-805">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-806">Der letzte Zeitpunkt, an dem die Prozedur ausgeführt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-806">The latest time at which the procedure can be run.</span>
          </span>
          <span data-ttu-id="76817-807">Beispielsweise wenn <paramref name="LatestTime" /> auf festgelegt ist <paramref name="EarliestTime" /> + 30 und Microsoft Excel nicht im bereit, kopieren, Ausschneiden oder Find-Modus unter <paramref name="EarliestTime" /> , da eine andere Prozedur ausgeführt wird, wartet Microsoft Excel 30 Sekunden für die Durchführung der ersten Prozedur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-807">For example, if <paramref name="LatestTime" /> is set to <paramref name="EarliestTime" /> + 30 and Microsoft Excel is not in Ready, Copy, Cut, or Find mode at <paramref name="EarliestTime" /> because another procedure is running, Microsoft Excel will wait 30 seconds for the first procedure to complete.</span>
          </span>
          <span data-ttu-id="76817-808">Wenn Microsoft Excel innerhalb von 30 Sekunden nicht im Ready-Modus ist, wird die Prozedur nicht ausgeführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-808">If Microsoft Excel is not in Ready mode within 30 seconds, the procedure won’t be run.</span>
          </span>
          <span data-ttu-id="76817-809">Wenn dieses Argument ausgelassen wird, wird Microsoft Excel warten, bis die Prozedur ausgeführt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-809">If this argument is omitted, Microsoft Excel will wait until the procedure can be run.</span>
          </span>
        </param>
        <param name="Schedule">
          <span data-ttu-id="76817-810">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-810">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-811">
            <b>True</b> , wenn eine neue <b>OnTime</b> -Prozedur zu planen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-811">
              <b>True</b> to schedule a new <b>OnTime</b> procedure.</span>
          </span>
          <span data-ttu-id="76817-812">
            <b>False</b> , wenn ein zuvor festgelegter deaktivieren Verfahren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-812">
              <b>False</b> to clear a previously set procedure.</span>
          </span>
          <span data-ttu-id="76817-813">Der Standardwert ist <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-813">The default value is <b>True</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-814">Bewirkt, dass eine Prozedur zu einem bestimmten Zeitpunkt in der Zukunft (entweder zu einer bestimmten Zeit oder nachdem eine bestimmte Zeitspanne vergangen ist) ausgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-814">Schedules a procedure to be run at a specified time in the future (either at a specific time of day or after a specific amount of time has passed).</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="76817-815">
            <para>Verwenden Sie Now+TimeValue(time) so planen Sie etwas ausgeführt werden, wenn eine bestimmte Zeitspanne (von jetzt an gezählt) abgelaufen ist. Verwenden Sie TimeValue(time) so planen Sie etwas zu einem bestimmten Zeitpunkt ausgeführt werden.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-815">
              <para>Use Now+TimeValue(time) to schedule something to be run when a specific amount of time (counting from now) has elapsed. Use TimeValue(time) to schedule something to be run a specific time.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUndo">
      <MemberSignature Language="C#" Value="public void OnUndo (string Text, string Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnUndo([in]string Text, [in]string Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.OnUndo(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnUndo (Text As String, Procedure As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnUndo(System::String ^ Text, System::String ^ Procedure);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="Procedure" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Text">
          <span data-ttu-id="76817-816">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-816">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="76817-817">Der Text, der mit dem Befehl Rückgängig (Menü Bearbeiten) angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-817">The text that appears with the Undo command (Edit menu).</span>
          </span>
        </param>
        <param name="Procedure">
          <span data-ttu-id="76817-818">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-818">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="76817-819">Der Name der Prozedur, die ausgeführt wird, wenn der Benutzer den Befehl Rückgängig (Menü Bearbeiten) auswählt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-819">The name of the procedure that’s run when you choose the Undo command (Edit menu).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-820">Legt den Text des Befehls Rückgängig und den Namen der Prozedur fest, die ausgeführt wird, wenn der Benutzer den Befehl Rückgängig (Menü Bearbeiten) wählt, nachdem die Prozedur ausgeführt worden ist, die diese Eigenschaft festlegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-820">Sets the text of the Undo and the name of the procedure that’s run if you choose the Undo command (Edit menu) after running the procedure that sets this property.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="76817-821">
            <para>Falls eine Prozedur die <b>OnUndo</b> -Methode nicht verwendet, wird der Befehl Rückgängig deaktiviert.</para>
            <para>Das Verfahren verwenden, muss die <see cref="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)" /> und <b>OnUndo am Schluss aufrufen</b> Methoden letzten, um zu verhindern, dass wiederholen oder Rückgängigmachen Verfahren durch nachfolgende Aktionen in der Prozedur überschrieben werden.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-821">
              <para>If a procedure doesn’t use the <b>OnUndo</b> method, the Undo command is disabled.</para>
              <para>The procedure must use the <see cref="M:Microsoft.Office.Interop.Excel._Application.OnRepeat(System.String,System.String)" /> and <b>OnUndo</b> methods last, to prevent the repeat and undo procedures from being overwritten by subsequent actions in the procedure.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWindow">
      <MemberSignature Language="C#" Value="public string OnWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OnWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property OnWindow As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnWindow { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-822">Zurückgeben oder Festlegen der Name der Prozedur, die ausgeführt wird, wenn ein Fenster aktivieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-822">Returns or sets the name of the procedure that’s run whenever you activate a window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-823">
            <para>Von dieser Eigenschaft angegebene Prozedur wird nicht ausgeführt werden, wenn andere Prozeduren wechseln, um das Fenster oder ein Befehl So wechseln Sie zu einem Fenster über einen DDE-Kanal empfangen wird. Stattdessen das Verfahren reagiert auf Benutzeraktionen, wie das Klicken auf ein Fenster mit der Maus aus, klicken auf Gehe zu im Menü Bearbeiten usw..</para>
            <para>Weist ein Arbeitsblatt oder eine Makrovorlage ein Auto_aktivieren- oder Auto_deaktivieren-Makro festgelegt, werden diese Makros von der <b>OnWindow</b> -Eigenschaft angegebene Prozedur ausgeführt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-823">
              <para>The procedure specified by this property isn’t run when other procedures switch to the window or when a command to switch to a window is received through a DDE channel. Instead, the procedure responds to the user's actions, such as clicking a window with the mouse, clicking Go To on the Edit menu, and so on.</para>
              <para>If a worksheet or macro sheet has an Auto_Activate or Auto_Deactivate macro defined for it, those macros will be run after the procedure specified by the <b>OnWindow</b> property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OperatingSystem">
      <MemberSignature Language="C#" Value="public string OperatingSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OperatingSystem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OperatingSystem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OperatingSystem As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OperatingSystem { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(375)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-824">Gibt die Anzahl Name und Version des aktuellen Betriebssystems, beispielsweise "Windows 4.00 (32-Bit)" oder "Macintosh 7.00".</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-824">Returns the name and version number of the current operating system, for example, "Windows (32-bit) 4.00" or "Macintosh 7.00".</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrganizationName">
      <MemberSignature Language="C#" Value="public string OrganizationName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrganizationName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.OrganizationName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrganizationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrganizationName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-825">Gibt den Namen der registrierten Organisation zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-825">Returns the registered organization name.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Parent { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-826">Gibt das übergeordnete Objekt für das angegebene Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-826">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-827">Gibt den vollständigen Pfad zu der Anwendung, ohne das abschließende Trennzeichen und den Namen der Anwendung zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-827">Returns the complete path to the application, excluding the final separator and name of the application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public string PathSeparator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathSeparator { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-828">Gibt das Pfadtrennzeichen ("\").</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-828">Returns the path separator character ("\").</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableSelection">
      <MemberSignature Language="C#" Value="public bool PivotTableSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PivotTableSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PivotTableSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property PivotTableSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PivotTableSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1205)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-829">
            <b>True,</b> Wenn der PivotTable-Berichten die strukturierte Auswahl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-829">
              <b>True</b> if PivotTable reports use structured selection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousSelections">
      <MemberSignature Language="C#" Value="public object PreviousSelections[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PreviousSelections(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PreviousSelections(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousSelections(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PreviousSelections[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="76817-830">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-830">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-831">Die Indexnummer (von 1 bis 4) des vorherigen Bereichs oder Namens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-831">The index number (from 1 to 4) of the previous range or name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-832">Gibt ein Array der letzten vier Bereiche oder Namen ausgewählt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-832">Returns an array of the last four ranges or names selected.</span>
          </span>
          <span data-ttu-id="76817-833">Jedes Element im Array ist ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-833">Each element in the array is a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-834">
            <para>Jedes Mal Sie zu einem Bereich oder einer Zelle mit dem Feld Name oder den Befehl Gehe zu (Menü Bearbeiten), oder jedes Mal ein Makro ruft die <see cref="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)" /> -Methode, der zuvor markierte Bereich dieses Array als Elementnummer 1 hinzugefügt wird und die anderen Elemente im Array nach unten verschoben werden.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-834">
              <para>Each time you go to a range or cell by using the Name box or the Go To command (Edit menu), or each time a macro calls the <see cref="M:Microsoft.Office.Interop.Excel._Application.Goto(System.Object,System.Object)" /> method, the previous range is added to this array as element number 1, and the other items in the array are moved down.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintCommunication">
      <MemberSignature Language="C#" Value="public bool PrintCommunication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintCommunication" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintCommunication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintCommunication { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2776)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-835">Ruft ab oder legt fest, ob die Kommunikation mit dem Drucker aktiviert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-835">Gets or sets whether communication with the printer is turned on.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-836">
            <b>true,</b> Wenn die Kommunikation mit dem Drucker aktiviert ist. anderenfalls <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-836">
              <b>true</b> if communication with the printer is turned on; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="76817-837">
            <para>
              <b>Boolean</b> Lese-/Schreibzugriff.</para>
            <para>Set der <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> -Eigenschaft auf <b>false</b> , um die Ausführung des Codes zu beschleunigen, mit dem PageSetup-Eigenschaften festgelegt. Legen Sie die <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> -Eigenschaft auf <b>true fest,</b> nachdem Eigenschaften festlegen, die alle commit PageSetup Befehle zwischengespeichert.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-837">
              <para>
                <b>boolean</b> Read/write.</para>
              <para>Set the <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> property to <b>false</b> to speed up the execution of code that sets PageSetup properties. Set the <see cref="P:Microsoft.Office.Interop.Excel._Application.PrintCommunication" /> property to <b>true</b> after setting properties to commit all cached PageSetup commands.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProductCode">
      <MemberSignature Language="C#" Value="public string ProductCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ProductCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductCode As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductCode { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1798)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1798)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-838">Gibt den global eindeutigen Bezeichner (GUID) für Microsoft Excel zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-838">Returns the globally unique identifier (GUID) for Microsoft Excel.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PromptForSummaryInfo">
      <MemberSignature Language="C#" Value="public bool PromptForSummaryInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PromptForSummaryInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.PromptForSummaryInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property PromptForSummaryInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PromptForSummaryInfo { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1062)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-839">
            <b>True,</b> Wenn Microsoft Excel zusammenfassende Informationen fragt bei der ersten Dateien gespeichert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-839">
              <b>True</b> if Microsoft Excel asks for summary information when files are first saved.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectedViewWindows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ProtectedViewWindows ProtectedViewWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ProtectedViewWindows ProtectedViewWindows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ProtectedViewWindows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectedViewWindows As ProtectedViewWindows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ProtectedViewWindows ^ ProtectedViewWindows { Microsoft::Office::Interop::Excel::ProtectedViewWindows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2783)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ProtectedViewWindows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-840">Dient zum Abrufen einer <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> Auflistung, die alle Fenster mit geschützter Ansicht darstellen, die in der Anwendung geöffnet sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-840">Gets a <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> collection that represents all the Protected View windows that are open in the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-841">Eine <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> Auflistung, die alle Fenster mit geschützter Ansicht darstellen, die in der Anwendung geöffnet sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-841">A <see cref="T:Microsoft.Office.Interop.Excel.ProtectedViewWindows" /> collection that represents all the Protected View windows that are open in the application.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="76817-842">
            <para>Schreibgeschützt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-842">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickAnalysis">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.QuickAnalysis QuickAnalysis { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.QuickAnalysis QuickAnalysis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.QuickAnalysis" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QuickAnalysis As QuickAnalysis" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::QuickAnalysis ^ QuickAnalysis { Microsoft::Office::Interop::Excel::QuickAnalysis ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2995)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2995)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.QuickAnalysis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-843">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.QuickAnalysis" /> -Objekt, das das Schnellanalyse für die Anwendung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-843">Returns a <see cref="T:Microsoft.Office.Interop.Excel.QuickAnalysis" /> object that represents the Quick Analysis options of the application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Quit">
      <MemberSignature Language="C#" Value="public void Quit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Quit() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Quit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Quit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Quit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(302)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76817-844">Beendet Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-844">Quits Microsoft Excel.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="76817-845">
            <para>Wenn noch nicht gespeicherte Arbeitsmappen geöffnet sind, wenn Sie diese Methode verwenden, zeigt Microsoft Excel einem Dialogfeld gefragt, ob Sie die Änderungen zu speichern möchten. Sie können verhindern, dass dies vor dem Verwenden der <b>Quit</b> -Methode alle Arbeitsmappen speichern oder durch Festlegen der <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> -Eigenschaft auf <b>false festgelegt</b>. Wenn diese Eigenschaft auf <b>False</b>festgelegt ist, nicht Microsoft Excel das Dialogfeld angezeigt wird, wenn Sie mit nicht gespeicherten Arbeitsmappen beenden; Es wird beendet, ohne sie zu speichern.</para>
            <para>Wenn Sie festlegen, die <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" /> -Eigenschaft einer Arbeitsmappe auf <b>true fest,</b> ohne die Arbeitsmappe zu speichern, auf den Datenträger, Microsoft Excel ohne Aufforderung zum Speichern der Arbeitsmappe beendet.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-845">
              <para>If unsaved workbooks are open when you use this method, Microsoft Excel displays a dialog box asking whether you want to save the changes. You can prevent this by saving all workbooks before using the <b>Quit</b> method or by setting the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property to <b>False</b>. When this property is <b>False</b>, Microsoft Excel doesn’t display the dialog box when you quit with unsaved workbooks; it quits without saving them.</para>
              <para>If you set the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" /> property for a workbook to <b>True</b> without saving the workbook to the disk, Microsoft Excel will quit without asking you to save the workbook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Quitting">
      <MemberSignature Language="C#" Value="public bool Quitting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Quitting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Quitting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Quitting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Quitting { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2780)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-846">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-846">Reserved for internal use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-847">Gibt <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-847">Returns <see cref="T:System.Boolean" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range[object Cell1, object Cell2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Range(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Range(Cell1 As Object, Optional Cell2 As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Range[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ Cell1, System::Object ^ Cell2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cell1" Type="System.Object" />
        <Parameter Name="Cell2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Cell1">
          <span data-ttu-id="76817-848">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-848">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-849">Der Name des Bereichs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-849">The name of the range.</span>
          </span>
          <span data-ttu-id="76817-850">Dies muss eine A1-Bezugsart in der Sprache des Makros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-850">This must be an A1-style reference in the language of the macro.</span>
          </span>
          <span data-ttu-id="76817-851">Sie können den Bereichsoperator (Doppelpunkt), der Schnittmengenoperator (ein Leerzeichen) oder der union-Operator (Komma) enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-851">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span>
          </span>
          <span data-ttu-id="76817-852">Es kann auch Dollarzeichen enthalten werden, jedoch ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-852">It can also include dollar signs, but they’re ignored.</span>
          </span>
          <span data-ttu-id="76817-853">Sie können einen lokalen, definierten Namen in einem beliebigen Teil des Bereichs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-853">You can use a local defined name in any part of the range.</span>
          </span>
          <span data-ttu-id="76817-854">Wenn Sie einen Namen verwenden, wird davon ausgegangen, dass der Name in der Sprache des Makros werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-854">If you use a name, the name is assumed to be in the language of the macro.</span>
          </span>
        </param>
        <param name="Cell2">
          <span data-ttu-id="76817-855">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-855">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-856">Die Zelle in der linken oberen und unteren rechten Ecke des Bereichs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-856">The cell in the upper-left and lower-right corner of the range.</span>
          </span>
          <span data-ttu-id="76817-857">Kann ein <b>Range</b> -Objekt, das eine einzelne Zelle, eine ganze Spalte oder eine ganze Zeile enthält, oder es kann eine Zeichenfolge, die den Namen einer einzelne Zelle in der Sprache des Makros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-857">Can be a <b>Range</b> object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-858">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> -Objekt, das eine Zelle oder einen Zellbereich darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-858">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-859">
            <para>Die Eigenschaft ist relativ zu der <b>Range</b> -Objekt. Beispielsweise, wenn die Auswahl Zelle C3 befindet, klicken Sie dann Selection.Range("B1") Zelle D3 zurück, da es relativ zur das zurückgegebene <b>Range</b> -Objekt ist die <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> Eigenschaft. Andererseits, gibt der Code ActiveSheet.Range("B1") immer die Zelle B1 zurück.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-859">
              <para>The property is relative to the <b>Range</b> object. For example, if the selection is cell C3, then Selection.Range("B1") returns cell D3 because it’s relative to the <b>Range</b> object returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> property. On the other hand, the code ActiveSheet.Range("B1") always returns cell B1.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ready">
      <MemberSignature Language="C#" Value="public bool Ready { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Ready" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Ready" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ready As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Ready { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1932)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1932)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-860">Gibt <b>True</b> zurück, wenn die Microsoft Excel-Anwendung bereit ist. <b>False,</b> Wenn die Excel-Anwendung nicht bereit ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-860">Returns <b>True</b> when the Microsoft Excel application is ready; <b>False</b> when the Excel application is not ready.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecentFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.RecentFiles RecentFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.RecentFiles RecentFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RecentFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecentFiles As RecentFiles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::RecentFiles ^ RecentFiles { Microsoft::Office::Interop::Excel::RecentFiles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1202)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1202)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.RecentFiles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-861">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.RecentFiles" /> -Auflistung, die die Liste der zuletzt verwendeten Dateien.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-861">Returns a <see cref="T:Microsoft.Office.Interop.Excel.RecentFiles" /> collection that represents the list of recently used files.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordMacro">
      <MemberSignature Language="C#" Value="public void RecordMacro (object BasicCode, object XlmCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordMacro([in]object BasicCode, [in]object XlmCode) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.RecordMacro(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RecordMacro (Optional BasicCode As Object, Optional XlmCode As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="BasicCode" Type="System.Object" />
        <Parameter Name="XlmCode" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="BasicCode">
          <span data-ttu-id="76817-862">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-862">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-863">Eine Zeichenfolge, die den Visual Basic-Code, der erfasst wird angibt, wenn der Makrorekorder in ein Visual Basic-Modul aufzeichnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-863">A string that specifies the Visual Basic code that will be recorded if the macro recorder is recording into a Visual Basic module.</span>
          </span>
          <span data-ttu-id="76817-864">Die Zeichenfolge wird in einer Zeile aufgezeichnet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-864">The string will be recorded on one line.</span>
          </span>
          <span data-ttu-id="76817-865">Wenn die Zeichenfolge einen Wagenrücklauf (ASCII-Zeichen 10 oder Chr$(10) im Code) enthält, wird es auf mehr als eine Zeile aufgezeichnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-865">If the string contains a carriage return (ASCII character 10, or Chr$(10) in code), it will be recorded on more than one line.</span>
          </span>
        </param>
        <param name="XlmCode">
          <span data-ttu-id="76817-866">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-866">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-867">Dieses Argument wird ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-867">This argument is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-868">Zeichnet Code auf, wenn der Makrorekorder aktiviert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-868">Records code if the macro recorder is on.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="76817-869">
            <para>Die <b>RecordMacro</b> -Methode kann nicht in das aktive Modul aufzeichnen (das Modul, in dem die <b>RecordMacro</b> -Methode befindet).</para>
            <para>Können die Aufzeichnung verhindern (z. B., wenn der Benutzer den Dialog abbricht), rufen Sie diese Funktion mit zwei leeren Zeichenfolgen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-869">
              <para>The <b>RecordMacro</b> method cannot record into the active module (the module in which the <b>RecordMacro</b> method exists).</para>
              <para>To prevent recording (for example, if the user cancels your dialog box), call this function with two empty strings.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordRelative">
      <MemberSignature Language="C#" Value="public bool RecordRelative { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecordRelative" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RecordRelative" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecordRelative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecordRelative { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(379)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-870">
            <b>True,</b> Wenn Makros mit relativen Bezügen aufgezeichnet werden. <b>"False"</b> Wenn Aufzeichnung absolut ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-870">
              <b>True</b> if macros are recorded using relative references; <b>False</b> if recording is absolute.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ReferenceStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ReferenceStyle As XlReferenceStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlReferenceStyle ReferenceStyle { Microsoft::Office::Interop::Excel::XlReferenceStyle get(); void set(Microsoft::Office::Interop::Excel::XlReferenceStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlReferenceStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-871">Gibt zurück oder legt fest, wie Microsoft Excel Zellbezüge sowie Zeilen- und Spaltenköpfe im A1 oder Z1S1-Bezugsart angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-871">Returns or sets how Microsoft Excel displays cell references and row and column headings in either A1 or R1C1 reference style.</span>
          </span>
          <span data-ttu-id="76817-872">Lese-/Schreibzugriff <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-872">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-873">
            <para>
              <b>XlReferenceStyle</b> kann eine der folgenden <b>XlReferenceStyle</b> -Konstanten sein:</para>
            <para>
              <b>xlA1</b>
            </para>
            <para>
              <b>xlR1C1</b>
            </para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-873">
              <para>
                <b>XlReferenceStyle</b> can be one of these <b>XlReferenceStyle</b> constants:</para>
              <para>
                <b>xlA1</b>
              </para>
              <para>
                <b>xlR1C1</b>
              </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisteredFunctions">
      <MemberSignature Language="C#" Value="public object RegisteredFunctions[object Index1, object Index2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RegisteredFunctions(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RegisteredFunctions(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegisteredFunctions(Optional Index1 As Object, Optional Index2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RegisteredFunctions[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ Index1, System::Object ^ Index2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(775)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index1" Type="System.Object" />
        <Parameter Name="Index2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index1">
          <span data-ttu-id="76817-874">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-874">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-875">Der Name der DLL oder Code-Ressource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-875">The name of the DLL or code resource.</span>
          </span>
        </param>
        <param name="Index2">
          <span data-ttu-id="76817-876">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-876">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-877">Der Name der Funktion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-877">The name of the function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-878">Gibt Informationen zu Funktionen in beiden Dynamic Link Libraries (DLLs) oder code-Ressourcen, die mit dem Makrofunktionen REGISTER oder Register registriert wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-878">Returns information about functions in either dynamic-link libraries (DLLs) or code resources that were registered with the REGISTER or REGISTER.ID macro functions.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-879">
            <para>, Wenn Sie die folgenden Argumente nicht angeben, gibt diese Eigenschaft ein Array, das eine Liste aller registrierten Funktionen enthält. Jede Zeile in der Matrix enthält Informationen über eine einzige Funktion, wie in der folgenden Tabelle dargestellt.</para>
            <list type="table">
              <item>
                <term>1</term>
                <description>der Name der DLL oder Code-Ressource</description>
              </item>
              <item>
                <term>2</term>
                <description>den Namen der Prozedur in der DLL oder Code-Ressource</description>
              </item>
              <item>
                <term>3</term>
                <description>Zeichenfolgen, die die Datentypen der return Werte und die Anzahl und Datentypen der angeben die Argumente</description>
              </item>
            </list>
            <para>Wenn keine registrierten Funktionen vorhanden sind, gibt diese Eigenschaft <b>Null</b>zurück.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-879">
              <para>If you don’t specify these arguments, this property returns an array that contains a list of all registered functions. Each row in the array contains information about a single function, as shown in the following table.</para>
              <list type="table">
                <item>
                  <term>1</term>
                  <description>The name of the DLL or code resource</description>
                </item>
                <item>
                  <term>2</term>
                  <description>The name of the procedure in the DLL or code resource</description>
                </item>
                <item>
                  <term>3</term>
                  <description>Strings specifying the data types of the return values and the number and data types of the arguments</description>
                </item>
              </list>
              <para>If there are no registered functions, this property returns <b>Null</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterXLL">
      <MemberSignature Language="C#" Value="public bool RegisterXLL (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterXLL([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.RegisterXLL(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterXLL (Filename As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RegisterXLL(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(30)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="76817-880">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-880">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="76817-881">Der Name der zu ladenden XLL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-881">Specifies the name of the XLL to be loaded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-882">Lädt eine XLL-Coderessource und registriert automatisch die darin enthaltenen Funktionen und Befehle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-882">Loads an XLL code resource and automatically registers the functions and commands contained in the resource.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="76817-883">
            <para>Diese Methode gibt zurück <b>true,</b> Falls die Coderessource erfolgreich geladen wird. die Methode andernfalls zurückgibt <b>"false"</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-883">
              <para>This method returns <b>True</b> if the code resource is successfully loaded; otherwise, the method returns <b>False</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Repeat">
      <MemberSignature Language="C#" Value="public void Repeat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Repeat() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Repeat" />
      <MemberSignature Language="VB.NET" Value="Public Sub Repeat ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Repeat();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(301)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76817-884">Wiederholt die letzte Aktion des Benutzers-Schnittstelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-884">Repeats the last user interface action.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="76817-885">
            <para>Diese Methode wird nur die letzte Aktion des Benutzers vor dem Ausführen der Prozedur wiederholt. Es muss die erste Zeile in der Prozedur.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-885">
              <para>This method repeats only the last action taken by the user before running the procedure. It must be the first line in the procedure.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CellFormat ReplaceFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CellFormat ReplaceFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ReplaceFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplaceFormat As CellFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CellFormat ^ ReplaceFormat { Microsoft::Office::Interop::Excel::CellFormat ^ get(); void set(Microsoft::Office::Interop::Excel::CellFormat ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1935)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CellFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-886">Legt die Ersetzungskriterien zum Ersetzen Zellformate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-886">Sets the replacement criteria to use in replacing cell formats.</span>
          </span>
          <span data-ttu-id="76817-887">Dieses Kriterium wird dann in ein nachfolgender Aufruf verwendet die <see cref="M:Microsoft.Office.Interop.Excel.Range.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> -Methode des der <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-887">The replacement criteria is then used in a subsequent call to the <see cref="M:Microsoft.Office.Interop.Excel.Range.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTipWizard">
      <MemberSignature Language="C#" Value="public void ResetTipWizard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetTipWizard() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.ResetTipWizard" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetTipWizard ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetTipWizard();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(928)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76817-p287">Setzt den Verteiler zurück, sodass erneut Routing mit dem gleichen Verteiler (mit der gleichen Empfängerliste und den gleichen Übermittlungsinformationen) eingeleitet werden kann. Das Routing muss abgeschlossen sein, bevor Sie diese Methode verwenden. Die Anwendung dieser Methode unter anderen Voraussetzungen führt zu einem Fehler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-p287">Resets the routing slip so that a new routing can be initiated with the same slip (using the same recipient list and delivery information). The routing must be completed before you use this method. Using this method at other times causes an error.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <example>
          <span data-ttu-id="76817-891">
            <para>In diesem Beispiel wird den Verteiler für Book1.xls zurückgesetzt, wenn routing abgeschlossen wurde.</para>
            <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-891">
              <para>This example resets the routing slip for Book1.xls if routing has been completed.</para>
              <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="76817-892">
            <para>In diesem Beispiel wird den Verteiler für Book1.xls zurückgesetzt, wenn routing abgeschlossen wurde.</para>
            <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-892">
              <para>This example resets the routing slip for Book1.xls if routing has been completed.</para>
              <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="76817-893">
            <para>In diesem Beispiel wird den Verteiler für Book1.xls zurückgesetzt, wenn routing abgeschlossen wurde.</para>
            <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-893">
              <para>This example resets the routing slip for Book1.xls if routing has been completed.</para>
              <code>&lt;span class="label"&gt;With Workbooks("BOOK1.XLS").RoutingSlip     If .Status = xlRoutingComplete Then         .&lt;/span&gt;
&lt;i&gt;Reset&lt;/i&gt;
&lt;span class="label"&gt;Else         MsgBox "Cannot reset routing; not yet complete"     End If End With&lt;/span&gt;</code>
            </span>
          </span>
        </example>
      </Docs>
    </Member>
    <Member MemberName="RollZoom">
      <MemberSignature Language="C#" Value="public bool RollZoom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RollZoom" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RollZoom" />
      <MemberSignature Language="VB.NET" Value="Public Property RollZoom As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RollZoom { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1206)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-894">
            <b>True,</b> Wenn die IntelliMouse vergrößert, statt einen Bildlauf durchzuführen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-894">
              <b>True</b> if the IntelliMouse zooms instead of scrolling.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Rows { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-895">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> -Objekt, das alle Zeilen des aktiven Arbeitsblatts darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-895">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the rows on the active worksheet.</span>
          </span>
          <span data-ttu-id="76817-896">Wenn das aktive Dokument kein Arbeitsblatt ist, schlägt die <b>Rows</b> -Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-896">If the active document isn’t a worksheet, the <b>Rows</b> property fails.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-897">
            <para>Wenn ein <b>Range</b> -Objekt zugewiesen, die eine Mehrfachauswahl ist, gibt diese Eigenschaft Zeilen aus dem ersten Bereich des Bereichs. Das <b>Range</b> -Objekt besitzt zwei Bereiche beispielsweise – a1: B2 und C3: D4 – Selection.Rows.Count 2, nicht 4 zurück. Testen Sie zur Verwendung dieser Eigenschaft für einen Bereich, die möglicherweise eine Mehrfachauswahl enthalten, <b>Areas.Count</b> , um festzustellen, ob der Bereich eine Mehrfachauswahl ist. Wenn dies der Fall, Schleife auf jeden Teil des Bereichs.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-897">
              <para>When applied to a <b>Range</b> object that’s a multiple selection, this property returns rows from only the first area of the range. For example, if the <b>Range</b> object has two areas — A1:B2 and C3:D4 — Selection.Rows.Count returns 2, not 4. To use this property on a range that may contain a multiple selection, test <b>Areas.Count</b> to determine whether the range is a multiple selection. If it is, loop over each area in the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RTD">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.RTD RTD { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.RTD RTD" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.RTD" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RTD As RTD" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::RTD ^ RTD { Microsoft::Office::Interop::Excel::RTD ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1963)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1963)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.RTD</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-898">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.RTD" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-898">Returns an <see cref="T:Microsoft.Office.Interop.Excel.RTD" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public object Run (object Macro, object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Run([in]object Macro, [in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Run (Optional Macro As Object, Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(259)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Macro" Type="System.Object" />
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Macro">
          <span data-ttu-id="76817-899">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-899">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-900">Das Makro auszuführen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-900">The macro to run.</span>
          </span>
          <span data-ttu-id="76817-901">Dies kann entweder eine Zeichenfolge mit dem Makronamen ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> -Objekt zurück, der angibt, in dem die Funktion ist, oder eine Register-ID für eine registrierte DLL (XLL)-Funktion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-901">This can be either a string with the macro name, a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object indicating where the function is, or a register ID for a registered DLL (XLL) function.</span>
          </span>
          <span data-ttu-id="76817-902">Wenn eine Zeichenfolge verwendet wird, wird die Zeichenfolge im Kontext des aktiven Blatts ausgewertet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-902">If a string is used, the string will be evaluated in the context of the active sheet.</span>
          </span>
        </param>
        <param name="Arg1">
          <span data-ttu-id="76817-903">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-903">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-904">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-904">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg2">
          <span data-ttu-id="76817-905">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-905">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-906">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-906">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg3">
          <span data-ttu-id="76817-907">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-907">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-908">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-908">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg4">
          <span data-ttu-id="76817-909">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-909">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-910">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-910">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg5">
          <span data-ttu-id="76817-911">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-911">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-912">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-912">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg6">
          <span data-ttu-id="76817-913">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-913">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-914">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-914">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg7">
          <span data-ttu-id="76817-915">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-915">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-916">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-916">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg8">
          <span data-ttu-id="76817-917">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-917">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-918">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-918">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg9">
          <span data-ttu-id="76817-919">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-919">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-920">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-920">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg10">
          <span data-ttu-id="76817-921">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-921">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-922">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-922">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg11">
          <span data-ttu-id="76817-923">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-923">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-924">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-924">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg12">
          <span data-ttu-id="76817-925">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-925">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-926">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-926">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg13">
          <span data-ttu-id="76817-927">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-927">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-928">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-928">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg14">
          <span data-ttu-id="76817-929">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-929">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-930">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-930">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg15">
          <span data-ttu-id="76817-931">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-931">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-932">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-932">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg16">
          <span data-ttu-id="76817-933">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-933">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-934">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-934">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg17">
          <span data-ttu-id="76817-935">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-935">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-936">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-936">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg18">
          <span data-ttu-id="76817-937">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-937">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-938">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-938">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg19">
          <span data-ttu-id="76817-939">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-939">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-940">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-940">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg20">
          <span data-ttu-id="76817-941">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-941">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-942">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-942">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg21">
          <span data-ttu-id="76817-943">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-943">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-944">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-944">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg22">
          <span data-ttu-id="76817-945">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-945">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-946">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-946">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg23">
          <span data-ttu-id="76817-947">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-947">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-948">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-948">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg24">
          <span data-ttu-id="76817-949">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-949">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-950">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-950">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg25">
          <span data-ttu-id="76817-951">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-951">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-952">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-952">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg26">
          <span data-ttu-id="76817-953">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-953">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-954">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-954">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg27">
          <span data-ttu-id="76817-955">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-955">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-956">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-956">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg28">
          <span data-ttu-id="76817-957">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-957">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-958">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-958">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg29">
          <span data-ttu-id="76817-959">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-959">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-960">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-960">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <param name="Arg30">
          <span data-ttu-id="76817-961">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-961">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-962">Die Argumente, die an die Funktion übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-962">The arguments that should be passed to the function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-963">Führt ein Makro oder eine Funktion aufruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-963">Runs a macro or calls a function.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="76817-964">
            <para>Sie diese Methode benannte Argumenten verwendet werden können. Argumente müssen nach Position übergeben werden.</para>
            <b>Ausführen</b>
            <para>-Methode gibt den Rückgabewert des aufgerufenen Makros zurück. Objekte, die als Argumente an das Makro übergeben werden in Werte konvertiert (durch Anwenden der <see cref="P:Microsoft.Office.Interop.Excel._Application.Value" /> -Eigenschaft auf das Objekt). Dies bedeutet, dass Sie Objekte an Makros weiterzuleiten können nicht mithilfe der Methode <b>ausgeführt</b> .</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-964">
              <para>You cannot use named arguments with this method. Arguments must be passed by position.</para>
              <para>The <b>Run</b> method returns whatever the called macro returns. Objects passed as arguments to the macro are converted to values (by applying the <see cref="P:Microsoft.Office.Interop.Excel._Application.Value" /> property to the object). This means that you cannot pass objects to macros by using the <b>Run</b> method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Save(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (Optional Filename As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(283)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <summary>
          <span data-ttu-id="76817-965">Speichert Änderungen in der angegebenen Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-965">Saves changes to the specified workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="76817-966">
            <para>Verwenden, um eine Arbeitsmappendatei zu öffnen, die <see cref="&quot;M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String" /> -Methode.</para>
            <para />
            <para>Festlegen, um eine Arbeitsmappe als gespeichert zu markieren ohne diese auf einen Datenträger geschrieben wird, dessen <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.SaveData" /> -Eigenschaft auf <b>True</b>.</para>
            <para />
            <para>Beim ersten einer Arbeitsmappe speichern verwenden Sie die <see cref="&quot;M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object" /> -Methode, um einen Namen für die Datei anzugeben.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-966">
              <para>To open a workbook file, use the <see cref="&quot;M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String" /> method.</para>
              <para />
              <para>To mark a workbook as saved without writing it to a disk, set its <see cref="P:Microsoft.Office.Interop.Excel._QueryTable.SaveData" /> property to <b>True</b>.</para>
              <para />
              <para>The first time you save a workbook, use the <see cref="&quot;M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object" /> method to specify a name for the file.</para>
              <para />
            </span>
          </span>
        </remarks>
        <example>
          <span data-ttu-id="76817-967">
            <para>In diesem Beispiel wird die aktive Arbeitsmappe gespeichert.</para>
            <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
            <para>In diesem Beispiel werden alle geöffneten Arbeitsmappen gespeichert, und klicken Sie dann Microsoft Excel geschlossen.</para>
            <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-967">
              <para>This example saves the active workbook.</para>
              <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
              <para>This example saves all open workbooks and then closes Microsoft Excel.</para>
              <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="76817-968">
            <para>In diesem Beispiel wird die aktive Arbeitsmappe gespeichert.</para>
            <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
            <para>In diesem Beispiel werden alle geöffneten Arbeitsmappen gespeichert, und klicken Sie dann Microsoft Excel geschlossen.</para>
            <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-968">
              <para>This example saves the active workbook.</para>
              <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
              <para>This example saves all open workbooks and then closes Microsoft Excel.</para>
              <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="76817-969">
            <para>In diesem Beispiel wird die aktive Arbeitsmappe gespeichert.</para>
            <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
            <para>In diesem Beispiel werden alle geöffneten Arbeitsmappen gespeichert, und klicken Sie dann Microsoft Excel geschlossen.</para>
            <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-969">
              <para>This example saves the active workbook.</para>
              <code>&lt;span class="label"&gt;ActiveWorkbook.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;</code>
              <para>This example saves all open workbooks and then closes Microsoft Excel.</para>
              <code>&lt;span class="label"&gt;For Each w In Application.Workbooks     w.&lt;/span&gt;
&lt;i&gt;Save&lt;/i&gt;
&lt;span class="label"&gt;Next w Application.Quit&lt;/span&gt;</code>
            </span>
          </span>
        </example>
      </Docs>
    </Member>
    <Member MemberName="SaveISO8601Dates">
      <MemberSignature Language="C#" Value="public bool SaveISO8601Dates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveISO8601Dates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SaveISO8601Dates" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveISO8601Dates As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveISO8601Dates { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2786)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-970">Dieses Objekt, dieses Mitglied oder diese Aufzählung ist veraltet und kann nicht in Ihrem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-970">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveWorkspace">
      <MemberSignature Language="C#" Value="public void SaveWorkspace (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveWorkspace([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SaveWorkspace(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveWorkspace (Optional Filename As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(212)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <summary>
          <span data-ttu-id="76817-971">Dieses Objekt, dieses Mitglied oder diese Aufzählung ist veraltet und kann nicht in Ihrem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-971">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenUpdating">
      <MemberSignature Language="C#" Value="public bool ScreenUpdating { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScreenUpdating" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ScreenUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Property ScreenUpdating As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScreenUpdating { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-972">
            <b>True,</b> Wenn die bildschirmaktualisierung aktiviert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-972">
              <b>True</b> if screen updating is turned on.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-973">
            <para>Turn-Bildschirm aktualisieren aus, um den Code zu beschleunigen. Nicht möglich, finden Sie unter was vom Code ausgeführt wird, jedoch werden schneller ausgeführt werden kann.</para>
            <para>Denken Sie daran, die <b>ScreenUpdating</b> -Eigenschaft auf <b>True</b> festgelegt, der Code am Ende des.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-973">
              <para>Turn screen updating off to speed up your code. You won't be able to see what the code is doing, but it will run faster.</para>
              <para>Remember to set the <b>ScreenUpdating</b> property back to <b>True</b> when your code ends.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selection">
      <MemberSignature Language="C#" Value="public object Selection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Selection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Selection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Selection As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Selection { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(147)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(147)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-974">Gibt das ausgewählte Objekt im aktiven Fenster zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-974">Returns the selected object in the active window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-975">
            <para>Der Typ des zurückgegebenen Objekts hängt von der aktuellen Auswahl (beispielsweise, wenn eine Zelle ausgewählt ist, gibt diese Eigenschaft eine <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt). Die <b>Selection</b> -Eigenschaft gibt <b>Nothing zurück</b> , wenn nichts markiert ist.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-975">
              <para>The returned object type depends on the current selection (for example, if a cell is selected, this property returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object). The <b>Selection</b> property returns <b>Nothing</b> if nothing is selected.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendKeys">
      <MemberSignature Language="C#" Value="public void SendKeys (object Keys, object Wait);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendKeys([in]object Keys, [in]object Wait) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SendKeys(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendKeys (Keys As Object, Optional Wait As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(383)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Keys" Type="System.Object" />
        <Parameter Name="Wait" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Keys">
          <span data-ttu-id="76817-976">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-976">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-977">Die Taste oder Tastenkombination, die Sie an die Anwendung als Text senden möchten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-977">The key or key combination you want to send to the application as text.</span>
          </span>
        </param>
        <param name="Wait">
          <span data-ttu-id="76817-978">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-978">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-979">
            <b>True</b> , wenn Microsoft Excel die Schlüssel verarbeitet werden, bevor Zurückgeben der Steuerung an das Makro warten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-979">
              <b>True</b> to have Microsoft Excel wait for the keys to be processed before returning control to the macro.</span>
          </span>
          <span data-ttu-id="76817-980">
            <b>"False"</b> (oder weggelassen) weiterhin das Makro ausführen, ohne warten auf die Schlüssel verarbeitet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-980">
              <b>False</b> (or omitted) to continue running the macro without waiting for the keys to be processed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-981">Sendet Tastenanschläge an die aktive Anwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-981">Sends keystrokes to the active application.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="76817-982">
            <para>Diese Methode platziert Tastenanschläge in einem wichtigen Puffer. In einigen Fällen müssen Sie diese Methode aufrufen, bevor Sie die Methode aufrufen, die die Tastaturbefehle verwendet werden soll. Beispielsweise um ein Kennwort an ein Dialogfeld zu senden, Sie müssen die <b>SendKeys</b> -Methode aufrufen, bevor Sie das Dialogfeld anzuzeigen.</para>
            <para>Der <paramref name="Keys" /> -Argument kann eine einzelne Taste oder eine beliebige Taste, die in Kombination mit ALT, STRG oder UMSCHALT (oder eine beliebige Kombination dieser Tasten) angeben. Jeden Schlüssel ist durch eine oder mehrere Zeichen dargestellt, wie "a" für das Zeichen ein, oder "{ENTER}" für die EINGABETASTE.</para>
            <para>An Zeichen, die angezeigt werden, wenn Sie den entsprechenden Schlüssel (beispielsweise eingeben oder Registerkarte), drücken Sie die in der folgenden Tabelle aufgeführten Codes verwenden. Jeder Code in der Tabelle steht für eine Taste auf der Tastatur.</para>
            <list type="table">
              <item>
                <term>RÜCKTASTE</term>
                <description>{BACKSPACE} oder {BS}</description>
              </item>
              <item>
                <term>UNTERBRECHEN</term>
                <description>{UNTERBRECHEN}</description>
              </item>
              <item>
                <term>Feststelltaste</term>
                <description>{CAPSLOCK}</description>
              </item>
              <item>
                <term>Löschen</term>
                <description>{KLAR}</description>
              </item>
              <item>
                <term>Entfernen oder ENTF</term>
                <description>{DELETE} oder {DEL}</description>
              </item>
              <item>
                <term>Pfeil nach unten</term>
                <description>{nach unten}</description>
              </item>
              <item>
                <term>END</term>
                <description>{END}</description>
              </item>
              <item>
                <term>EINGABETASTE</term>
                <description>~ (Tilde)</description>
              </item>
              <item>
                <term>EINGABETASTE (Zehnertastatur)</term>
                <description>{ENTER}</description>
              </item>
              <item>
                <term>ESC</term>
                <description>{ESCAPE} oder {ESC}</description>
              </item>
              <item>
                <term>F1 bis F15</term>
                <description>{F1} bis {F15}</description>
              </item>
              <item>
                <term>Hilfe</term>
                <description>-Hilfe {}</description>
              </item>
              <item>
                <term>Startseite</term>
                <description>{HOME}</description>
              </item>
              <item>
                <term>INS</term>
                <description>{Einfügen}</description>
              </item>
              <item>
                <term>Pfeil nach links</term>
                <description>{LEFT}</description>
              </item>
              <item>
                <term>NUM-Taste</term>
                <description>{NUMLOCK}</description>
              </item>
              <item>
                <description>{Bild-ab}</description> - 
              <term>Bild-ab</term></item>
              <item>
                <term>Bild-auf</term>
                <description>{Bild-auf}</description>
              </item>
              <item>
                <description>{RETURN}</description>
                <term>zurückgeben</term>
              </item>
              <item>
                <term>Pfeil nach rechts</term>
                <description>{RIGHT}</description>
              </item>
              <item>
                <term>Rollen-Taste</term>
                <description>{SCROLLLOCK}</description>
              </item>
              <item>
                <term>Registerkarte</term>
                <description>{TAB}</description>
              </item>
              <item>
                <term>Pfeil nach oben</term>
                <description>{UP}</description>
              </item>
            </list>
            <para>Können Sie auch können Tastenkombinationen mit UMSCHALT und/oder STRG und/oder ALT angeben. Verwenden Sie zum Angeben eines Schlüssels in Kombination mit einer oder mehreren anderen Schlüssel in der folgenden Tabelle.</para>
            <list type="table">
              <item>
                <term>UMSCHALT</term>
                <description>+ (Pluszeichen)</description>
              </item>
              <item>
                <term>STRG</term>
                <description>^ (Caretzeichen)</description>
              </item>
              <item>
                <term>ALT</term>
                <description>% (Prozentzeichen)</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-982">
              <para>This method places keystrokes in a key buffer. In some cases, you must call this method before you call the method that will use the keystrokes. For example, to send a password to a dialog box, you must call the <b>SendKeys</b> method before you display the dialog box.</para>
              <para>The <paramref name="Keys" /> argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys). Each key is represented by one or more characters, such as "a" for the character a, or "{ENTER}" for the ENTER key.</para>
              <para>To specify characters that aren't displayed when you press the corresponding key (for example, ENTER or TAB), use the codes listed in the following table. Each code in the table represents one key on the keyboard.</para>
              <list type="table">
                <item>
                  <term>BACKSPACE</term>
                  <description>{BACKSPACE} or {BS}</description>
                </item>
                <item>
                  <term>BREAK</term>
                  <description>{BREAK}</description>
                </item>
                <item>
                  <term>CAPS LOCK</term>
                  <description>{CAPSLOCK}</description>
                </item>
                <item>
                  <term>CLEAR</term>
                  <description>{CLEAR}</description>
                </item>
                <item>
                  <term>DELETE or DEL</term>
                  <description>{DELETE} or {DEL}</description>
                </item>
                <item>
                  <term>DOWN ARROW</term>
                  <description>{DOWN}</description>
                </item>
                <item>
                  <term>END</term>
                  <description>{END}</description>
                </item>
                <item>
                  <term>ENTER</term>
                  <description>~ (tilde)</description>
                </item>
                <item>
                  <term>ENTER (numeric keypad)</term>
                  <description>{ENTER}</description>
                </item>
                <item>
                  <term>ESC</term>
                  <description>{ESCAPE} or {ESC}</description>
                </item>
                <item>
                  <term>F1 through F15</term>
                  <description>{F1} through {F15}</description>
                </item>
                <item>
                  <term>HELP</term>
                  <description>{HELP}</description>
                </item>
                <item>
                  <term>HOME</term>
                  <description>{HOME}</description>
                </item>
                <item>
                  <term>INS</term>
                  <description>{INSERT}</description>
                </item>
                <item>
                  <term>LEFT ARROW</term>
                  <description>{LEFT}</description>
                </item>
                <item>
                  <term>NUM LOCK</term>
                  <description>{NUMLOCK}</description>
                </item>
                <item>
                  <term>PAGE DOWN</term>
                  <description>{PGDN}</description>
                </item>
                <item>
                  <term>PAGE UP</term>
                  <description>{PGUP}</description>
                </item>
                <item>
                  <term>RETURN</term>
                  <description>{RETURN}</description>
                </item>
                <item>
                  <term>RIGHT ARROW</term>
                  <description>{RIGHT}</description>
                </item>
                <item>
                  <term>SCROLL LOCK</term>
                  <description>{SCROLLLOCK}</description>
                </item>
                <item>
                  <term>TAB</term>
                  <description>{TAB}</description>
                </item>
                <item>
                  <term>UP ARROW</term>
                  <description>{UP}</description>
                </item>
              </list>
              <para>You can also specify keys combined with SHIFT and/or CTRL and/or ALT. To specify a key combined with another key or keys, use the following table.</para>
              <list type="table">
                <item>
                  <term>SHIFT</term>
                  <description>+ (plus sign)</description>
                </item>
                <item>
                  <term>CTRL</term>
                  <description>^ (caret)</description>
                </item>
                <item>
                  <term>ALT</term>
                  <description>% (percent sign)</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultChart">
      <MemberSignature Language="C#" Value="public void SetDefaultChart (object FormatName, object Gallery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultChart([in]object FormatName, [in]object Gallery) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SetDefaultChart(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefaultChart (Optional FormatName As Object, Optional Gallery As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(219)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FormatName" Type="System.Object" />
        <Parameter Name="Gallery" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="FormatName">
          <span data-ttu-id="76817-983">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-983">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-984">Gibt den Namen eines benutzerdefinierten AutoFormats.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-984">Specifies the name of a custom autoformat.</span>
          </span>
          <span data-ttu-id="76817-985">Dieser Name kann eine Zeichenfolge, die ein benutzerdefiniertes AutoFormat sein, oder es kann sein, die spezielle Konstante <b>XlBuiltIn</b> an, der die integrierte Diagrammvorlage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-985">This name can be a string naming a custom autoformat, or it can be the special constant <b>xlBuiltIn</b> to specify the built-in chart template.</span>
          </span>
        </param>
        <param name="Gallery">
          <span data-ttu-id="76817-986">Optionales-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-986">Optional Object.</span>
          </span>
          <span data-ttu-id="76817-987">Gibt den Namen eines Katalogs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-987">Specifies the name of a gallery.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-988">Gibt den Namen der Diagrammvorlage an, der Microsoft Excel beim Erstellen neuer Diagramme verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-988">Specifies the name of the chart template that Microsoft Excel will use when creating new charts.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharePointVersion">
      <MemberSignature Language="C#" Value="public int SharePointVersion (string bstrUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SharePointVersion([in]string bstrUrl) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.SharePointVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SharePointVersion (bstrUrl As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int SharePointVersion(System::String ^ bstrUrl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2392)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bstrUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bstrUrl">
          <span data-ttu-id="76817-989">Die URL der zu prüfenden Website.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-989">The URL of site to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-990">Gibt die Nummer der Version von SharePoint Foundation-Instanzen zurück, die auf der Website mit der angegebenen URL ausgeführt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-990">Returns the version number of SharePoint Foundation instances running at site for the specified URL.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76817-991">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-991">
              <b>Integer</b>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Sheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Sheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Sheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Sheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-992">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> -Auflistung, die alle Blätter in der aktiven Arbeitsmappe darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-992">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the sheets in the active workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetsInNewWorkbook">
      <MemberSignature Language="C#" Value="public int SheetsInNewWorkbook { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SheetsInNewWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SheetsInNewWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public Property SheetsInNewWorkbook As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SheetsInNewWorkbook { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(993)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-993">Zurückgeben oder festlegen die Anzahl der Blätter, die automatisch von Microsoft Excel in eine neue Arbeitsmappe eingefügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-993">Returns or sets the number of sheets that Microsoft Excel automatically inserts into new workbooks.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShortcutMenus">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Menu ShortcutMenus[int Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Menu ShortcutMenus(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShortcutMenus(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShortcutMenus(Index As Integer) As Menu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Menu ^ ShortcutMenus[int] { Microsoft::Office::Interop::Excel::Menu ^ get(int Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(776)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Menu</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="76817-994">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-994">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowChartTipNames">
      <MemberSignature Language="C#" Value="public bool ShowChartTipNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowChartTipNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowChartTipNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowChartTipNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowChartTipNames { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1207)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-995">
            <b>True,</b> Wenn in Diagrammen Diagrammtippnamen angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-995">
              <b>True</b> if charts show chart tip names.</span>
          </span>
          <span data-ttu-id="76817-996">Der Standardwert ist <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-996">The default value is <b>True</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowChartTipValues">
      <MemberSignature Language="C#" Value="public bool ShowChartTipValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowChartTipValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowChartTipValues" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowChartTipValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowChartTipValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1208)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-997">
            <b>True,</b> Wenn in Diagrammen Diagrammtippwerte angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-997">
              <b>True</b> if charts show chart tip values.</span>
          </span>
          <span data-ttu-id="76817-998">Der Standardwert ist <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-998">The default value is <b>True</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDevTools">
      <MemberSignature Language="C#" Value="public bool ShowDevTools { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowDevTools" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowDevTools" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowDevTools As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowDevTools { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2378)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-999">Zurückgeben oder Festlegen einer <b>vom Typ Boolean</b> , der angibt, ob die Registerkarte Entwicklertools auf dem Menüband angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-999">Returns or sets a <b>Boolean</b> that represents whether the Developer tab is displayed in the Ribbon.</span>
          </span>
          <span data-ttu-id="76817-1000">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1000">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-1001">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1001">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="76817-1002">
            <para>Diese Eigenschaft entspricht der Registerkarte "Entwicklertools" in das Menüband-Kontrollkästchen im Dialogfeld Excel-Optionen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1002">
              <para>This property corresponds to the Show Developer tab in the Ribbon check box in the Excel Options dialog box.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowMenuFloaties">
      <MemberSignature Language="C#" Value="public bool ShowMenuFloaties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowMenuFloaties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowMenuFloaties" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowMenuFloaties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowMenuFloaties { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2377)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1003">Zurückgeben oder Festlegen einer <b>vom Typ Boolean</b> , der angibt, ob Minisymbolleisten angezeigt, wenn der Benutzer im Arbeitsmappenfenster klickt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1003">Returns or sets a <b>Boolean</b> that represents whether to display Mini toolbars when the user right-clicks in the workbook window.</span>
          </span>
          <span data-ttu-id="76817-1004">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1004">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-1005">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1005">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowQuickAnalysis">
      <MemberSignature Language="C#" Value="public bool ShowQuickAnalysis { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowQuickAnalysis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowQuickAnalysis" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowQuickAnalysis As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowQuickAnalysis { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2994)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1006">Steuert, ob die kontextbezogene Benutzeroberfläche Schnellanalyse Auswahl angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1006">Controls whether the Quick Analysis contextual user interface is displayed on selection.</span>
          </span>
          <span data-ttu-id="76817-1007">
            <b>TRUE</b> bedeutet, dass die Schnellanalyse Schaltfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1007">
              <b>TRUE</b> means the Quick Analysis button will show.</span>
          </span>
          <span data-ttu-id="76817-1008">Entspricht den Optionen anzeigen Schnellanalyse Auswahl das Kontrollkästchen befindet sich in der Datei im Menü, <b>Optionen, Excel-Optionen</b>, und klicken Sie dann auf Allgemein-Registerkarte Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1008">Corresponds to the Show Quick Analysis options on selection checkbox located in the File menu, <b>Options, Excel Options</b>, and then General tab. Read/Write.</span>
          </span>
          <span data-ttu-id="76817-1009">
            <b>Boolean</b> (<b>Bool</b> in c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1009">
              <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowSelectionFloaties">
      <MemberSignature Language="C#" Value="public bool ShowSelectionFloaties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowSelectionFloaties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowSelectionFloaties" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowSelectionFloaties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowSelectionFloaties { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2376)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1010">Zurückgeben oder Festlegen einer <b>vom Typ Boolean</b> , der darstellt, ob Minisymbolleisten angezeigt werden, wenn ein Benutzer Text auswählt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1010">Returns or sets a <b>Boolean</b> that represents whether Mini toolbars displays when a user selects text.</span>
          </span>
          <span data-ttu-id="76817-1011">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1011">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-1012">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1012">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="76817-1013">
            <para>Entspricht dem Minisymbolleiste für die Kontrollkästchen für die Auswahl im Dialogfeld Excel-Optionen anzeigen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1013">
              <para>Corresponds with the Show MiniBar on selection check box in the Excel Options dialog box.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowStartupDialog">
      <MemberSignature Language="C#" Value="public bool ShowStartupDialog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowStartupDialog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowStartupDialog" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowStartupDialog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowStartupDialog { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1960)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1014">Gibt <b>True</b> (Standard) zurück, wenn der Aufgabenbereich Neue Arbeitsmappe für eine Microsoft Excel-Anwendung angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1014">Returns <b>True</b> (default) when the New Workbook task pane appears for a Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowToolTips">
      <MemberSignature Language="C#" Value="public bool ShowToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowToolTips" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowToolTips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1015">
            <b>True,</b> wenn QuickInfos aktiviert sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1015">
              <b>True</b> if ToolTips are turned on.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowWindowsInTaskbar">
      <MemberSignature Language="C#" Value="public bool ShowWindowsInTaskbar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowWindowsInTaskbar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ShowWindowsInTaskbar" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowWindowsInTaskbar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowWindowsInTaskbar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1016">Dieses Objekt, dieses Mitglied oder diese Aufzählung ist veraltet und kann nicht in Ihrem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1016">This object, member, or enumeration is deprecated and is not intended to be used in your code.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtColors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtColors SmartArtColors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtColors SmartArtColors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtColors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtColors As SmartArtColors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtColors ^ SmartArtColors { Microsoft::Office::Core::SmartArtColors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2774)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtColors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1017">Dient zum Abrufen des Satz von Formatvorlagen Farbe, die derzeit in der Anwendung geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1017">Gets the set of color styles that are currently loaded in the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-1018">Der Satz von farbformatvorlagen, die derzeit in der Anwendung geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1018">The set of color styles that are currently loaded in the application.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="76817-1019">
            <para>Schreibgeschützt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1019">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtLayouts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtLayouts SmartArtLayouts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtLayouts SmartArtLayouts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtLayouts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtLayouts As SmartArtLayouts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtLayouts ^ SmartArtLayouts { Microsoft::Office::Core::SmartArtLayouts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2772)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtLayouts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1020">Ruft den Satz von SmartArt-Layouts, die derzeit in der Anwendung geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1020">Gets the set of SmartArt layouts that are currently loaded in the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-1021">Der Satz von SmartArt-Layouts, die derzeit in der Anwendung geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1021">The set of SmartArt layouts that are currently loaded in the application.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="76817-1022">
            <para>Schreibgeschützt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1022">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartArtQuickStyles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartArtQuickStyles SmartArtQuickStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartArtQuickStyles SmartArtQuickStyles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartArtQuickStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartArtQuickStyles As SmartArtQuickStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartArtQuickStyles ^ SmartArtQuickStyles { Microsoft::Office::Core::SmartArtQuickStyles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2773)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartArtQuickStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1023">Ruft den Satz von SmartArt-Schnellformatvorlagen die derzeit in der Anwendung geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1023">Gets the set of SmartArt quick styles which are currently loaded in the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-1024">Der Satz von SmartArt-Schnellformatvorlagen die derzeit in der Anwendung geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1024">The set of SmartArt quick styles which are currently loaded in the application.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="76817-1025">
            <para>Schreibgeschützt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1025">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagRecognizers">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTagRecognizers SmartTagRecognizers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTagRecognizers SmartTagRecognizers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SmartTagRecognizers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTagRecognizers As SmartTagRecognizers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTagRecognizers ^ SmartTagRecognizers { Microsoft::Office::Interop::Excel::SmartTagRecognizers ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1956)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1956)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTagRecognizers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1026">Gibt eine <see cref="T:Microsoft.Office.Interop.Excel.SmartTagRecognizers" /> Auflistung für eine Anwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1026">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTagRecognizers" /> collection for an application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Speech">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Speech Speech { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Speech Speech" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Speech" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Speech As Speech" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Speech ^ Speech { Microsoft::Office::Interop::Excel::Speech ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1958)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1958)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Speech</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1027">Gibt eine <see cref="T:Microsoft.Office.Interop.Excel.Speech" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1027">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Speech" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellingOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SpellingOptions SpellingOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SpellingOptions SpellingOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.SpellingOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpellingOptions As SpellingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SpellingOptions ^ SpellingOptions { Microsoft::Office::Interop::Excel::SpellingOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1957)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1957)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SpellingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1028">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.SpellingOptions" /> -Objekt, das die Rechtschreiboptionen der Anwendung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1028">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SpellingOptions" /> object that represents the spelling options of the application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardFont">
      <MemberSignature Language="C#" Value="public string StandardFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardFont" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StandardFont" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardFont As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StandardFont { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1029">Gibt zurück oder legt den Namen der Standardschriftart.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1029">Returns or sets the name of the standard font.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-1030">
            <para>Wenn Sie die Standardschriftart mit dieser Eigenschaft ändern, wird nicht die Änderung wirksam, bis Sie Microsoft Excel erneut starten.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1030">
              <para>If you change the standard font by using this property, the change doesn't take effect until you restart Microsoft Excel.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardFontSize">
      <MemberSignature Language="C#" Value="public double StandardFontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 StandardFontSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StandardFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardFontSize As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double StandardFontSize { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1031">Gibt zurück oder legt den Schriftgrad in Punkt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1031">Returns or sets the standard font size, in points.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-1032">
            <para>Wenn Sie den Schriftgrad mit dieser Eigenschaft ändern, wird nicht die Änderung wirksam, bis Sie Microsoft Excel erneut starten.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1032">
              <para>If you change the standard font size by using this property, the change doesn't take effect until you restart Microsoft Excel.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartupPath">
      <MemberSignature Language="C#" Value="public string StartupPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartupPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StartupPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartupPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartupPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1033">Gibt den vollständigen Pfad des Startordners ohne das abschließende Trennzeichen zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1033">Returns the complete path of the startup folder excluding the final separator.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatusBar">
      <MemberSignature Language="C#" Value="public object StatusBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object StatusBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.StatusBar" />
      <MemberSignature Language="VB.NET" Value="Public Property StatusBar As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ StatusBar { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1034">Gibt zurück oder legt den Text in der Statusleiste angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1034">Returns or sets the text in the status bar.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-1035">
            <para>Diese Eigenschaft gibt <b>False</b> zurück, wenn Microsoft Excel die Steuerung der Statusleiste angezeigt wird. Zum Wiederherstellen des Standard-Statusleistentext die-Eigenschaft auf <b>False</b>festgelegt; Dies funktioniert, auch wenn die Statusleiste ausgeblendet ist.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1035">
              <para>This property returns <b>False</b> if Microsoft Excel has control of the status bar. To restore the default status bar text, set the property to <b>False</b>; this works even if the status bar is hidden.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Support">
      <MemberSignature Language="C#" Value="public object Support (object Object, int ID, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Support([in]object Object, [in]int32 ID, [in]object arg) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Support(System.Object,System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2255)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Object" Type="System.Object" />
        <Parameter Name="ID" Type="System.Int32" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Object">To be added.</param>
        <param name="ID">To be added.</param>
        <param name="arg">To be added.</param>
        <summary>
          <span data-ttu-id="76817-1036">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1036">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatesPath">
      <MemberSignature Language="C#" Value="public string TemplatesPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TemplatesPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TemplatesPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemplatesPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TemplatesPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(381)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1037">Der lokale Pfad zurückgegeben, auf dem Vorlagen gespeichert sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1037">Returns the local path where templates are stored.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ThisCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range ThisCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThisCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThisCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ ThisCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1962)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1962)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1038">Gibt die Zelle die benutzerdefinierte Funktion aus als aufgerufen wird eine <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1038">Returns the cell the user-defined function is being called from as a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-1039">
            <para>Benutzer sollten nicht auf Eigenschaften oder Methoden auf das <b>Range</b> -Objekt in der benutzerdefinierten Funktion zugreifen. Benutzer können das <b>Range</b> -Objekt zur späteren Verwendung zwischenspeichern und zusätzliche Aktionen auszuführen, wenn die erneute Berechnung abgeschlossen ist.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1039">
              <para>Users should not access properties or methods on the <b>Range</b> object when inside the user-defined function. Users can cache the <b>Range</b> object for later use and perform additional actions when the recalculation is finished.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisWorkbook">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook ThisWorkbook { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook ThisWorkbook" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThisWorkbook" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThisWorkbook As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ ThisWorkbook { Microsoft::Office::Interop::Excel::Workbook ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1040">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> -Objekt, das die Arbeitsmappe darstellt, in dem das aktuelle Makro ausgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1040">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object that represents the workbook where the current macro code is running.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-1041">
            <para>Verwenden Sie diese Eigenschaft verweisen auf die Arbeitsmappe, die den Makrocode enthält. <b>ThisWorkbook</b> ist die einzige Möglichkeit, eine Arbeitsmappe-Add-in von innerhalb des Add-ins selbst zu verweisen. Die <b>ActiveWorkbook</b> -Eigenschaft zurück nicht die Add-in Arbeitsmappe. Es gibt die Arbeitsmappe, die das Add-in aufruft. Die <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> -Eigenschaft kann fehlschlagen, da den Namen der Arbeitsmappe wahrscheinlich geändert, wenn Sie das Add-in erstellt gibt <b>ThisWorkbook</b> immer die Arbeitsmappe, in dem der Code ausgeführt wird.</para>
            <para>Diese Eigenschaft kann nur aus verwendet werden in Excel. Sie können sie eine Arbeitsmappe aus einer anderen Anwendung zuzugreifen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1041">
              <para>Use this property to refer to the workbook that contains your macro code. <b>ThisWorkbook</b> is the only way to refer to an add-in workbook from inside the add-in itself. The <b>ActiveWorkbook</b> property doesn't return the add-in workbook; it returns the workbook that's calling the add-in. The <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> property may fail, because the workbook name probably changed when you created the add-in. <b>ThisWorkbook</b> always returns the workbook in which the code is running.</para>
              <para>This property can be used only from inside Excel. You cannot use it to access a workbook from any other application.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThousandsSeparator">
      <MemberSignature Language="C#" Value="public string ThousandsSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThousandsSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.ThousandsSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property ThousandsSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThousandsSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1810)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1042">Legt fest oder gibt das Zeichen für das Tausendertrennzeichen verwendet Trennzeichen als <b>Zeichenfolge</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1042">Sets or returns the character used for the thousands separator as a <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Toolbars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Toolbars Toolbars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Toolbars Toolbars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Toolbars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Toolbars As Toolbars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Toolbars ^ Toolbars { Microsoft::Office::Interop::Excel::Toolbars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(552)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(552)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Toolbars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1043">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1043">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1044">Der Abstand in Punkt vom oberen Rand des Bildschirms zum oberen Rand des Hauptfensters von Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1044">The distance, in points, from the top edge of the screen to the top edge of the main Microsoft Excel window.</span>
          </span>
          <span data-ttu-id="76817-1045">Wenn das Anwendungsfenster minimiert ist, steuert diese Eigenschaft die Position des Fenstersymbols (überall auf dem Bildschirm).</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1045">If the application window is minimized, this property controls the position of the window icon (anywhere on the screen).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionMenuKey">
      <MemberSignature Language="C#" Value="public string TransitionMenuKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransitionMenuKey" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionMenuKey" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionMenuKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransitionMenuKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(310)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1046">Zurückgeben oder Festlegen der Microsoft Excel Menü- oder Hilfetaste, das in der Regel "/".</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1046">Returns or sets the Microsoft Excel menu or help key, which is usually "/".</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionMenuKeyAction">
      <MemberSignature Language="C#" Value="public int TransitionMenuKeyAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TransitionMenuKeyAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionMenuKeyAction" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionMenuKeyAction As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TransitionMenuKeyAction { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(311)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1047">Zurückgeben oder festlegen die Aktion beim Microsoft Excel-Menü-Taste gedrückt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1047">Returns or sets the action taken when the Microsoft Excel menu key is pressed.</span>
          </span>
          <span data-ttu-id="76817-1048">Entweder <b>XlExcelMenus</b> oder <b>XlLotusHelp</b>kann sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1048">Can be either <b>xlExcelMenus</b> or <b>xlLotusHelp</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionNavigKeys">
      <MemberSignature Language="C#" Value="public bool TransitionNavigKeys { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransitionNavigKeys" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.TransitionNavigKeys" />
      <MemberSignature Language="VB.NET" Value="Public Property TransitionNavigKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransitionNavigKeys { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(312)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1049">
            <b>True,</b> Wenn Alternative Bewegungstasten aktiv sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1049">
              <b>True</b> if transition navigation keys are active.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UILanguage">
      <MemberSignature Language="C#" Value="public int UILanguage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UILanguage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UILanguage" />
      <MemberSignature Language="VB.NET" Value="Public Property UILanguage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int UILanguage { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1050">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1050">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Undo() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(303)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76817-1051">Hebt die letzte Aktion des Benutzers-Schnittstelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1051">Cancels the last user interface action.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="76817-1052">
            <para>Diese Methode macht nur die letzte Aktion des Benutzers vor dem Ausführen der Prozedur. Es muss die erste Zeile in der Prozedur.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1052">
              <para>This method undoes only the last action taken by the user before running the procedure. It must be the first line in the procedure.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Union (Microsoft.Office.Interop.Excel.Range Arg1, Microsoft.Office.Interop.Excel.Range Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range Union([in]class Microsoft.Office.Interop.Excel.Range Arg1, [in]class Microsoft.Office.Interop.Excel.Range Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Union(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.Range,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (Arg1 As Range, Arg2 As Range, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(779)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg2" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">
          <span data-ttu-id="76817-1053">
            <b>Range</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1053">Required <b>Range</b>.</span>
          </span>
          <span data-ttu-id="76817-1054">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1054">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg2">
          <span data-ttu-id="76817-1055">
            <b>Range</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1055">Required <b>Range</b>.</span>
          </span>
          <span data-ttu-id="76817-1056">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1056">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg3">
          <span data-ttu-id="76817-1057">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1057">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1058">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1058">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg4">
          <span data-ttu-id="76817-1059">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1059">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1060">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1060">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg5">
          <span data-ttu-id="76817-1061">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1061">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1062">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1062">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg6">
          <span data-ttu-id="76817-1063">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1063">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1064">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1064">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg7">
          <span data-ttu-id="76817-1065">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1065">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1066">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1066">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg8">
          <span data-ttu-id="76817-1067">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1067">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1068">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1068">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg9">
          <span data-ttu-id="76817-1069">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1069">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1070">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1070">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg10">
          <span data-ttu-id="76817-1071">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1071">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1072">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1072">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg11">
          <span data-ttu-id="76817-1073">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1073">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1074">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1074">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg12">
          <span data-ttu-id="76817-1075">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1075">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1076">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1076">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg13">
          <span data-ttu-id="76817-1077">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1077">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1078">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1078">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg14">
          <span data-ttu-id="76817-1079">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1079">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1080">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1080">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg15">
          <span data-ttu-id="76817-1081">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1081">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1082">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1082">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg16">
          <span data-ttu-id="76817-1083">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1083">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1084">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1084">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg17">
          <span data-ttu-id="76817-1085">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1085">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1086">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1086">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg18">
          <span data-ttu-id="76817-1087">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1087">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1088">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1088">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg19">
          <span data-ttu-id="76817-1089">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1089">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1090">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1090">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg20">
          <span data-ttu-id="76817-1091">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1091">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1092">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1092">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg21">
          <span data-ttu-id="76817-1093">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1093">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1094">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1094">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg22">
          <span data-ttu-id="76817-1095">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1095">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1096">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1096">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg23">
          <span data-ttu-id="76817-1097">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1097">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1098">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1098">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg24">
          <span data-ttu-id="76817-1099">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1099">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1100">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1100">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg25">
          <span data-ttu-id="76817-1101">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1101">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1102">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1102">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg26">
          <span data-ttu-id="76817-1103">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1103">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1104">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1104">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg27">
          <span data-ttu-id="76817-1105">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1105">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1106">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1106">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg28">
          <span data-ttu-id="76817-1107">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1107">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1108">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1108">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg29">
          <span data-ttu-id="76817-1109">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1109">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1110">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1110">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <param name="Arg30">
          <span data-ttu-id="76817-1111">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1111">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1112">Es müssen mindestens zwei <b>Range</b> -Objekte angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1112">At least two <b>Range</b> objects must be specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-1113">Gibt die Vereinigung von mindestens zwei Bereichen zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1113">Returns the union of two or more ranges.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsableHeight">
      <MemberSignature Language="C#" Value="public double UsableHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UsableHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsableHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsableHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double UsableHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1114">Gibt die maximale Höhe des Speicherplatzes, der ein Fenster im Bereich Anwendungsfensters, die in Punkt belegen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1114">Returns the maximum height of the space that a window can occupy in the application window area, in points.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsableWidth">
      <MemberSignature Language="C#" Value="public double UsableWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UsableWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsableWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsableWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double UsableWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1115">Gibt die maximale Breite des Speicherplatzes, der ein Fenster im Bereich Anwendungsfensters in Punkt belegen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1115">Returns the maximum width of the space that a window can occupy in the application window area in points.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseClusterConnector">
      <MemberSignature Language="C#" Value="public bool UseClusterConnector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseClusterConnector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" />
      <MemberSignature Language="VB.NET" Value="Public Property UseClusterConnector As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseClusterConnector { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2778)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1116">Ruft ab oder legt fest, ob in Microsoft Excel benutzerdefinierte Funktionen in XLL-add-ins auf einem Computecluster ausgeführt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1116">Gets or sets whether Microsoft Excel allows user-defined functions in XLL add-ins to be run on a compute cluster.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-1117">
            <b>true,</b> Wenn Excel benutzerdefinierte Funktionen in XLL-add-ins auf einem Computecluster ausgeführt werden kann. anderenfalls <b>false</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1117">
              <b>true</b> if Excel allows user-defined functions in XLL add-ins to be run on a compute cluster; otherwise, <b>false</b>.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="76817-1118">
            <para>Lese-/Schreibzugriff.</para>
            <para>
              <b>true,</b> Wenn Excel benutzerdefinierte Funktionen in XLL-add-ins auf einem Computecluster ausgeführt werden kann, andernfalls <b>false</b>. Die Einstellung der der <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> -Eigenschaft entspricht der zulassen benutzerdefinierte XLL-Funktionen zur Ausführung in einer Compute Cluster unter das Kontrollkästchen Formeln in der Kategorie erweitert im Dialogfeld Excel-Optionen.</para>
            <para>
              <b>Hinweis</b>: zum Aktivieren der <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> Eigenschaft müssen Sie einen Clusterconnector High Performance Computing (HPC) installieren. Einen Clusterconnector können Sie clustersichere XLL-Funktionen Remote auf einem HPC-Cluster zur Verbesserung der Leistung ausgeführt.</para>
            <para>Nach dem Festlegen der <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> -Eigenschaft der <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> -Eigenschaft an der HPC-Cluster zu verwendende Verbinder.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1118">
              <para>Read/write.</para>
              <para>
                <b>true</b> if Excel allows user-defined functions in XLL add-ins to be run on a compute cluster; otherwise <b>false</b>. The setting of the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property corresponds to the Allow user-defined XLL functions to run on a compute cluster check box under Formulas in the Advanced category of the Excel Options dialog box.</para>
              <para>
                <b>Note</b>: To enable the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property you must install a High Performance Computing (HPC) Cluster Connector. A Cluster Connector enables you to run cluster-safe XLL functions remotely on an HPC cluster for increased performance.</para>
              <para>After setting the <see cref="P:Microsoft.Office.Interop.Excel._Application.UseClusterConnector" /> property, use the <see cref="P:Microsoft.Office.Interop.Excel._Application.ClusterConnector" /> property to specify the HPC Cluster Connector to use.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsedObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.UsedObjects UsedObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.UsedObjects UsedObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UsedObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsedObjects As UsedObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::UsedObjects ^ UsedObjects { Microsoft::Office::Interop::Excel::UsedObjects ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1936)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1936)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.UsedObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1119">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.UsedObjects" /> -Objekt, Objekte, die in einer Arbeitsmappe darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1119">Returns a <see cref="T:Microsoft.Office.Interop.Excel.UsedObjects" /> object representing objects allocated in a workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserControl">
      <MemberSignature Language="C#" Value="public bool UserControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UserControl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserControl" />
      <MemberSignature Language="VB.NET" Value="Public Property UserControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UserControl { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1120">
            <b>True,</b> Wenn die Anwendung sichtbar ist oder wenn erstellt oder vom Benutzer gestartet wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1120">
              <b>True</b> if the application is visible or if it was created or started by the user.</span>
          </span>
          <span data-ttu-id="76817-1121">
            <b>False,</b> Wenn Sie erstellt oder die Anwendung programmgesteuert mithilfe der <b>CreateObject</b> oder <b>GetObject</b> -Funktionen und die Anwendung gestartet wird ausgeblendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1121">
              <b>False</b> if you created or started the application programmatically by using the <b>CreateObject</b> or <b>GetObject</b> functions and the application is hidden.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-1122">
            <para>Wenn für ein Objekt die <b>UserControl</b> -Eigenschaft <b>False</b> ist, wird dieses Objekt freigegeben, wenn der letzte programmtechnische Bezug auf das Objekt freigegeben wird. Wenn diese Eigenschaft auf <b>False</b>festgelegt ist, beendet Microsoft Excel, wenn das letzte Objekt in der Sitzung freigegeben wird.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1122">
              <para>When the <b>UserControl</b> property is <b>False</b> for an object, that object is released when the last programmatic reference to the object is released. If this property is <b>False</b>, Microsoft Excel quits when the last object in the session is released.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserLibraryPath">
      <MemberSignature Language="C#" Value="public string UserLibraryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserLibraryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserLibraryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLibraryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserLibraryPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1799)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1799)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1123">Gibt den Pfad zum Speicherort auf dem Computer des Benutzers, auf dem die COM-add-ins installiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1123">Returns the path to the location on the user’s computer where the COM add-ins are installed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1124">Gibt zurück oder legt den Namen des aktuellen Benutzers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1124">Returns or sets the name of the current user.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSystemSeparators">
      <MemberSignature Language="C#" Value="public bool UseSystemSeparators { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSystemSeparators" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.UseSystemSeparators" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSystemSeparators As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSystemSeparators { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1961)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1125">
            <b>"True"</b> (Standard), wenn die Systemtrennzeichen von Microsoft Excel aktiviert sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1125">
              <b>True</b> (default) if the system separators of Microsoft Excel are enabled.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1126">Gibt "Microsoft Excel" zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1126">Returns "Microsoft Excel".</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBE">
      <MemberSignature Language="C#" Value="public Microsoft.Vbe.Interop.VBE VBE { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Vbe.Interop.VBE VBE" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.VBE" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBE As VBE" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Vbe::Interop::VBE ^ VBE { Microsoft::Vbe::Interop::VBE ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1211)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1211)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Vbe.Interop.VBE</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1127">Gibt ein <b>VBE</b> -Objekt, das den Visual Basic-Editor darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1127">Returns a <b>VBE</b> object that represents the Visual Basic Editor.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1128">Gibt die Versionsnummer von Microsoft Excel zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1128">Returns the Microsoft Excel version number.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1129">Bestimmt, ob das Objekt sichtbar ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1129">Determines whether the object is visible.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Volatile">
      <MemberSignature Language="C#" Value="public void Volatile (object Volatile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Volatile([in]object Volatile) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Volatile(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Volatile (Optional Volatile As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(788)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Volatile" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Volatile">
          <span data-ttu-id="76817-1130">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1130">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1131">
            <b>True</b> , wenn die Funktion als veränderlich zu kennzeichnen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1131">
              <b>True</b> to mark the function as volatile.</span>
          </span>
          <span data-ttu-id="76817-1132">
            <b>False</b> , wenn die Funktion als nicht veränderlich zu kennzeichnen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1132">
              <b>False</b> to mark the function as nonvolatile.</span>
          </span>
          <span data-ttu-id="76817-1133">Der Standardwert ist <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1133">The default value is <b>True</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-p364">Kennzeichnet eine benutzerdefinierte Funktion als veränderlich. Solche Funktionen werden immer neu berechnet, wenn in einer beliebigen Zelle des Arbeitsblatts eine Berechnung durchgeführt wird. Nicht veränderliche Funktionen werden nur dann neu berechnet, wenn sich die Eingabevariablen ändern. Diese Methode wird in der Regel in einer benutzerdefinierten Funktion zur Berechnung einer Arbeitsblattzelle verwendet, andernfalls hat sie keine Auswirkung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-p364">Marks a user-defined function as volatile. A volatile function must be recalculated whenever calculation occurs in any cells on the worksheet. A nonvolatile function is recalculated only when the input variables change. This method has no effect if it's not inside a user-defined function used to calculate a worksheet cell.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (object Time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Wait([in]object Time) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Application.Wait(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (Time As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(System::Object ^ Time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1770)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Time" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Time">
          <span data-ttu-id="76817-1138">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1138">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="76817-1139">Der Zeitpunkt, an dem das Makro in Microsoft Excel-Datumsformat fortgesetzt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1139">The time at which you want the macro to resume in Microsoft Excel date format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76817-p366">Hält ein Makro bis zu einer angegebenen Zeit an, das ausgeführt wird. Gibt <b>True</b> zurück, wenn die angegebene Zeit erreicht wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-p366">Pauses a running macro until a specified time. Returns <b>True</b> if the specified time has arrived.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="76817-1142">
            <para>
              <b>Wichtig</b>: die <b>Wait</b> -Methode hält alle Aktivitäten zu Microsoft Excel und möglicherweise verhindern, dass Sie Ausführen anderer Vorgänge auf Ihrem Computer, während <b>Warten</b> ausgeführt wird. Allerdings Hintergrundprozesse, z. B. Drucken und Neuberechnen fortgesetzt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1142">
              <para>
                <b>Important</b>: The <b>Wait</b> method suspends all Microsoft Excel activity and may prevent you from performing other operations on your computer while <b>Wait</b> is in effect. However, background processes such as printing and recalculation continue.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WarnOnFunctionNameConflict">
      <MemberSignature Language="C#" Value="public bool WarnOnFunctionNameConflict { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WarnOnFunctionNameConflict" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict" />
      <MemberSignature Language="VB.NET" Value="Public Property WarnOnFunctionNameConflict As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WarnOnFunctionNameConflict { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2382)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1143">Die <see cref="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict" /> -Eigenschaft, bei Festlegung auf <b>"true"</b>, gibt eine Warnung aus, wenn ein Entwickler versucht, eine neue Funktion mit einem vorhandenen Funktionsnamen zu erstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1143">The <see cref="P:Microsoft.Office.Interop.Excel._Application.WarnOnFunctionNameConflict" /> property, when set to <b>True</b>, raises an alert if a developer tries to create a new function using an existing function name.</span>
          </span>
          <span data-ttu-id="76817-1144">
            <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1144">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76817-1145">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1145">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Watches">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Watches Watches { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Watches Watches" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Watches" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Watches As Watches" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Watches ^ Watches { Microsoft::Office::Interop::Excel::Watches ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1939)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1939)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Watches</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1146">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Watches" /> -Objekt, das einen Bereich, der protokolliert wird, wenn das Arbeitsblatt neu berechnet wird darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1146">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Watches" /> object representing a range which is tracked when the worksheet is recalculated.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1147">Der Abstand in Punkt vom linken Rand des Anwendungsfensters zum rechten Rand.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1147">The distance, in points, from the left edge of the application window to its right edge.</span>
          </span>
          <span data-ttu-id="76817-1148">Wenn das Fenster minimiert wird, wird diese Eigenschaft ist schreibgeschützt und gibt die Breite des Fenstersymbols zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1148">If the window is minimized, this property is read-only and returns the width of the window icon.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Windows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Windows Windows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Windows Windows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Windows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Windows As Windows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Windows ^ Windows { Microsoft::Office::Interop::Excel::Windows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Windows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1149">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> -Auflistung, die alle Fenster der aktiven Arbeitsmappe darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1149">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection that represents all the windows in all the workbooks.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-1150">
            <para>Diese Eigenschaft gibt eine Auflistung sichtbarer und ausgeblendeter Fenster zurück.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1150">
              <para>This property returns a collection of both visible and hidden windows.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsForPens">
      <MemberSignature Language="C#" Value="public bool WindowsForPens { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WindowsForPens" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WindowsForPens" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WindowsForPens As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WindowsForPens { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(395)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1151">
            <b>True,</b> Wenn der Computer unter Microsoft Windows für Pen Computing ausgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1151">
              <b>True</b> if the computer is running under Microsoft Windows for Pen Computing.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlWindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlWindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As XlWindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlWindowState WindowState { Microsoft::Office::Interop::Excel::XlWindowState get(); void set(Microsoft::Office::Interop::Excel::XlWindowState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlWindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1152">Gibt zurück oder legt den Zustand des Fensters fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1152">Returns or sets the state of the window.</span>
          </span>
          <span data-ttu-id="76817-1153">Lese-/Schreibzugriff <see cref="T:Microsoft.Office.Interop.Excel.XlWindowState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1153">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlWindowState" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-1154">
            <para>
              <b>XlWindowState</b> kann eine der folgenden <b>XlWindowState</b> -Konstanten sein:</para>
            <para>
              <b>XlMaximized</b>
            </para>
            <para>
              <b>XlNormal</b>
            </para>
            <para>
              <b>XlMinimized</b>
            </para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1154">
              <para>
                <b>XlWindowState</b> can be one of these <b>XlWindowState</b> constants:</para>
              <para>
                <b>xlMaximized</b>
              </para>
              <para>
                <b>xlNormal</b>
              </para>
              <para>
                <b>xlMinimized</b>
              </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Workbooks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbooks Workbooks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbooks Workbooks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Workbooks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Workbooks As Workbooks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbooks ^ Workbooks { Microsoft::Office::Interop::Excel::Workbooks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(572)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(572)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbooks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1155">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Workbooks" /> -Auflistung, die alle geöffneten Arbeitsmappen darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1155">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbooks" /> collection that represents all the open workbooks.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-1156">
            <para>Die von der <b>Arbeitsmappen</b> -Eigenschaft zurückgegebene Auflistung schließt open-add-ins, da es sich eine Art ausgeblendete Arbeitsmappe handelt. Sie können, jedoch eine einzelne geöffnete Add-in zurückgeben, wenn Sie den Dateinamen kennen. Workbooks("OSCAR.xla") gibt gibt beispielsweise das geöffnete Add-in "Oscar.xla" als ein <b>Workbook</b> -Objekt namens zurück.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1156">
              <para>The collection returned by the <b>Workbooks</b> property doesn’t include open add-ins, which are a special kind of hidden workbook. You can, however, return a single open add-in if you know the file name. For example, Workbooks("Oscar.xla") will return the open add-in named "Oscar.xla" as a <b>Workbook</b> object.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorksheetFunction">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WorksheetFunction WorksheetFunction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WorksheetFunction WorksheetFunction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.WorksheetFunction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorksheetFunction As WorksheetFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WorksheetFunction ^ WorksheetFunction { Microsoft::Office::Interop::Excel::WorksheetFunction ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1440)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1440)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WorksheetFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1157">Gibt die <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1157">Returns the <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Worksheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Worksheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Worksheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Application.Worksheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Worksheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Worksheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76817-1158">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> -Auflistung, die alle Arbeitsblätter in der aktiven Arbeitsmappe darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1158">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the worksheets in the active workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="76817-1159">
            <para>Diese Eigenschaft gibt keine Makrovorlagen zurück; Verwenden Sie die <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4MacroSheets" /> Eigenschaft oder die <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4IntlMacroSheets" /> Eigenschaft, um diese Blätter zurückzugeben.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="76817-1159">
              <para>This property doesn’t return macro sheets; use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4MacroSheets" /> property or the <see cref="P:Microsoft.Office.Interop.Excel._Application.Excel4IntlMacroSheets" /> property to return those sheets.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>