<Type Name="Range" FullName="Microsoft.Office.Interop.Excel.Range">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b8435c17b649304d5fae3920a40103ffa541f441" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50010703" /></Metadata><TypeSignature Language="C#" Value="public interface Range : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Range implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Range" />
  <TypeSignature Language="VB.NET" Value="Public Interface Range&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Range : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020846-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="370a5-101">Stellt eine Zelle, eine Zeile, eine Spalte, eine Auswahl von Zellen aus einem oder mehreren zusammenhängenden Zellblöcken oder einen 3D-Bereich dar.</span><span class="sxs-lookup"><span data-stu-id="370a5-101">Represents a cell, a row, a column, a selection of cells containing one or more contiguous blocks of cells, or a 3-D range.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public object this[object RowIndex, object ColumnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object _Default(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range._Default(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property _Default(Optional RowIndex As Object, Optional ColumnIndex As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ RowIndex, System::Object ^ ColumnIndex); void set(System::Object ^ RowIndex, System::Object ^ ColumnIndex, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowIndex" Type="System.Object" />
        <Parameter Name="ColumnIndex" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowIndex">To be added.</param>
        <param name="ColumnIndex">To be added.</param>
        <summary><span data-ttu-id="370a5-102">Für interne Zwecke vorbehalten. </span><span class="sxs-lookup"><span data-stu-id="370a5-102">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PasteSpecial">
      <MemberSignature Language="C#" Value="public object _PasteSpecial (Microsoft.Office.Interop.Excel.XlPasteType Paste = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, object SkipBlanks, object Transpose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _PasteSpecial([in]valuetype Microsoft.Office.Interop.Excel.XlPasteType Paste, [in]valuetype Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation, [in]object SkipBlanks, [in]object Transpose) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range._PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType,Microsoft.Office.Interop.Excel.XlPasteSpecialOperation,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _PasteSpecial (Optional Paste As XlPasteType = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Optional Operation As XlPasteSpecialOperation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, Optional SkipBlanks As Object, Optional Transpose As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1027)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Paste" Type="Microsoft.Office.Interop.Excel.XlPasteType" />
        <Parameter Name="Operation" Type="Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" />
        <Parameter Name="SkipBlanks" Type="System.Object" />
        <Parameter Name="Transpose" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Paste">To be added.</param>
        <param name="Operation">To be added.</param>
        <param name="SkipBlanks">To be added.</param>
        <param name="Transpose">To be added.</param>
        <summary><span data-ttu-id="370a5-103">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="370a5-103">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public object _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary><span data-ttu-id="370a5-104">Für interne Zwecke vorbehalten.</span><span class="sxs-lookup"><span data-stu-id="370a5-104">Reserved for internal use.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public object Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-105">Aktiviert eine einzelne Zelle, die sich innerhalb der aktuellen Markierung befinden muss.</span><span class="sxs-lookup"><span data-stu-id="370a5-105">Activates a single cell, which must be inside the current selection.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-106">Verwenden Sie die Methode, um einen Zellbereich <see cref="M:Microsoft.Office.Interop.Excel.Range.Select" /> auszuwählen.</span><span class="sxs-lookup"><span data-stu-id="370a5-106">To select a range of cells, use the <see cref="M:Microsoft.Office.Interop.Excel.Range.Select" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddComment">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Comment AddComment (object Text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Comment AddComment([in]object Text) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AddComment(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddComment (Optional Text As Object) As Comment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1389)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Comment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text"><span data-ttu-id="370a5-107">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-107">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-108">Der Kommentartext.</span><span class="sxs-lookup"><span data-stu-id="370a5-108">The comment text.</span></span></param>
        <summary><span data-ttu-id="370a5-109">Fügt dem Bereich einen Kommentar hinzu.</span><span class="sxs-lookup"><span data-stu-id="370a5-109">Adds a comment to the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIndent">
      <MemberSignature Language="C#" Value="public object AddIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AddIndent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.AddIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property AddIndent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AddIndent { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-110">Bestimmt, ob Text automatisch eingezogen wird, wenn die Textausrichtung in einer Zelle horizontal oder vertikal auf die gleiche Verteilung festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-110">Determines if text is automatically indented when the text alignment in a cell is set to equal distribution either horizontally or vertically.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-111">Diese Eigenschaft gibt <b>True</b> zurück, wenn Text automatisch eingezogen wird, wenn die Textausrichtung in einer Zelle horizontal oder vertikal auf die gleiche Verteilung festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-111">This property returns <b>True</b> if text is automatically indented when the text alignment in a cell is set to equal distribution either horizontally or vertically.</span></span></para>
          <para><span data-ttu-id="370a5-112">Um die Textausrichtung auf die gleiche Verteilung zu setzen, können Sie die Eigenschaft auf <see cref="P:Microsoft.Office.Interop.Excel.Range.VerticalAlignment" /> <b>xlVAlignDistributed</b> festlegen, wenn der Wert der Eigenschaft xlVertical ist, und Sie können die Eigenschaft auf <see cref="P:Microsoft.Office.Interop.Excel.Range.Orientation" /> <b></b> <see cref="P:Microsoft.Office.Interop.Excel.Range.HorizontalAlignment" /> <b>xlHAlignDistributed</b> festlegen, wenn der Wert der Orientation -Eigenschaft <b>xlHorizontal</b>ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-112">To set text alignment to equal distribution, you can set the <see cref="P:Microsoft.Office.Interop.Excel.Range.VerticalAlignment" /> property to <b>xlVAlignDistributed</b> when the value of the <see cref="P:Microsoft.Office.Interop.Excel.Range.Orientation" /> property is <b>xlVertical</b>, and you can set the <see cref="P:Microsoft.Office.Interop.Excel.Range.HorizontalAlignment" /> property to <b>xlHAlignDistributed</b> when the value of the Orientation property is <b>xlHorizontal</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public string Address[object RowAbsolute, object ColumnAbsolute, Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, object External, object RelativeTo] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Address(object, object, valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle, object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address(Optional RowAbsolute As Object, Optional ColumnAbsolute As Object, Optional ReferenceStyle As XlReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, Optional External As Object, Optional RelativeTo As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Address[System::Object ^, System::Object ^, Microsoft::Office::Interop::Excel::XlReferenceStyle, System::Object ^, System::Object ^] { System::String ^ get(System::Object ^ RowAbsolute, System::Object ^ ColumnAbsolute, Microsoft::Office::Interop::Excel::XlReferenceStyle ReferenceStyle, System::Object ^ External, System::Object ^ RelativeTo); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(236)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(236)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowAbsolute" Type="System.Object" />
        <Parameter Name="ColumnAbsolute" Type="System.Object" />
        <Parameter Name="ReferenceStyle" Type="Microsoft.Office.Interop.Excel.XlReferenceStyle" />
        <Parameter Name="External" Type="System.Object" />
        <Parameter Name="RelativeTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowAbsolute"><span data-ttu-id="370a5-113">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-113">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-114"><b>True</b>, um den Zeilenteil des Bezugs als absoluter Bezug zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="370a5-114"><b>True</b> to return the row part of the reference as an absolute reference.</span></span> <span data-ttu-id="370a5-115">Der Standardwert ist <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-115">The default value is <b>True</b>.</span></span></param>
        <param name="ColumnAbsolute"><span data-ttu-id="370a5-116">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-116">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-117"><b>True</b>, um den Spaltenteil des Bezugs als absoluter Bezug zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="370a5-117"><b>True</b> to return the column part of the reference as an absolute reference.</span></span> <span data-ttu-id="370a5-118">Der Standardwert ist <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-118">The default value is <b>True</b>.</span></span></param>
        <param name="ReferenceStyle"><span data-ttu-id="370a5-119">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-119">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span></span></param>
        <param name="External"><span data-ttu-id="370a5-120">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-120">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-121"><b>True,</b> um einen externen Verweis zurück zu geben; <b>False,</b> um einen lokalen Verweis zurückzukehren.</span><span class="sxs-lookup"><span data-stu-id="370a5-121"><b>True</b> to return an external reference; <b>False</b> to return a local reference.</span></span> <span data-ttu-id="370a5-122">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-122">The default value is <b>False</b>.</span></span></param>
        <param name="RelativeTo"><span data-ttu-id="370a5-123">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-123">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-124">Wenn <paramref name="RowAbsolute" /> der Wert <paramref name="ColumnAbsolute" /> <b>"False"</b>und <paramref name="ReferenceStyle" /> <b>"xlR1C1"</b>ist, müssen Sie einen Ausgangspunkt für den relativen Bezug verwenden.</span><span class="sxs-lookup"><span data-stu-id="370a5-124">If <paramref name="RowAbsolute" /> and <paramref name="ColumnAbsolute" /> are <b>False</b>, and <paramref name="ReferenceStyle" /> is <b>xlR1C1</b>, you must include a starting point for the relative reference.</span></span> <span data-ttu-id="370a5-125">Dieses Argument ist ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, das den Anfangspunkt definiert.</span><span class="sxs-lookup"><span data-stu-id="370a5-125">This argument is a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that defines the starting point.</span></span></param>
        <summary><span data-ttu-id="370a5-126">Gibt den Bereichsbezug zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-126">Returns the range reference.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-127">Wenn der Bezug mehr als eine Zelle enthält und <paramref name="RowAbsolute" /> auf alle Zeilen und Spalten angewendet <paramref name="ColumnAbsolute" /> wird.</span><span class="sxs-lookup"><span data-stu-id="370a5-127">If the reference contains more than one cell, <paramref name="RowAbsolute" /> and <paramref name="ColumnAbsolute" /> apply to all rows and columns.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddressLocal">
      <MemberSignature Language="C#" Value="public string AddressLocal[object RowAbsolute, object ColumnAbsolute, Microsoft.Office.Interop.Excel.XlReferenceStyle ReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, object External, object RelativeTo] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AddressLocal(object, object, valuetype Microsoft.Office.Interop.Excel.XlReferenceStyle, object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.AddressLocal(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddressLocal(Optional RowAbsolute As Object, Optional ColumnAbsolute As Object, Optional ReferenceStyle As XlReferenceStyle = Microsoft.Office.Interop.Excel.XlReferenceStyle.xlA1, Optional External As Object, Optional RelativeTo As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AddressLocal[System::Object ^, System::Object ^, Microsoft::Office::Interop::Excel::XlReferenceStyle, System::Object ^, System::Object ^] { System::String ^ get(System::Object ^ RowAbsolute, System::Object ^ ColumnAbsolute, Microsoft::Office::Interop::Excel::XlReferenceStyle ReferenceStyle, System::Object ^ External, System::Object ^ RelativeTo); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(437)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(437)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowAbsolute" Type="System.Object" />
        <Parameter Name="ColumnAbsolute" Type="System.Object" />
        <Parameter Name="ReferenceStyle" Type="Microsoft.Office.Interop.Excel.XlReferenceStyle" />
        <Parameter Name="External" Type="System.Object" />
        <Parameter Name="RelativeTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowAbsolute"><span data-ttu-id="370a5-128">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-128">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-129"><b>True</b>, um den Zeilenteil des Bezugs als absoluter Bezug zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="370a5-129"><b>True</b> to return the row part of the reference as an absolute reference.</span></span> <span data-ttu-id="370a5-130">Der Standardwert ist <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-130">The default value is <b>True</b>.</span></span></param>
        <param name="ColumnAbsolute"><span data-ttu-id="370a5-131">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-131">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-132"><b>True</b>, um den Spaltenteil des Bezugs als absoluter Bezug zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="370a5-132"><b>True</b> to return the column part of the reference as an absolute reference.</span></span> <span data-ttu-id="370a5-133">Der Standardwert ist <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-133">The default value is <b>True</b>.</span></span></param>
        <param name="ReferenceStyle"><span data-ttu-id="370a5-134">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-134">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlReferenceStyle" />.</span></span></param>
        <param name="External"><span data-ttu-id="370a5-135">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-135">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-136"><b>True</b>, um einen externen Bezug zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="370a5-136"><b>True</b> to return an external reference.</span></span> <span data-ttu-id="370a5-137"><b>False</b>, um einen lokalen Bezug zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="370a5-137"><b>False</b> to return a local reference.</span></span> <span data-ttu-id="370a5-138">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-138">The default value is <b>False</b>.</span></span></param>
        <param name="RelativeTo"><span data-ttu-id="370a5-139">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-139">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-140">Wenn <paramref name="RowAbsolute" /> beide auf <paramref name="ColumnAbsolute" /> <b>"False"</b> und <paramref name="ReferenceStyle" /> <b>"xlR1C1"</b>festgelegt sind, müssen Sie einen Ausgangspunkt für den relativen Bezug verwenden.</span><span class="sxs-lookup"><span data-stu-id="370a5-140">If <paramref name="RowAbsolute" /> and <paramref name="ColumnAbsolute" /> are both set to <b>False</b> and <paramref name="ReferenceStyle" /> is set to <b>xlR1C1</b>, you must include a starting point for the relative reference.</span></span> <span data-ttu-id="370a5-141">Dieses Argument ist ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, das den Ausgangspunkt für den Verweis definiert.</span><span class="sxs-lookup"><span data-stu-id="370a5-141">This argument is a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that defines the starting point for the reference.</span></span></param>
        <summary><span data-ttu-id="370a5-142">Gibt den Bereichsbezug für den angegebenen Bereich in der Sprache des Benutzers zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-142">Returns the range reference for the specified range in the language of the user.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-143">Wenn der Bezug mehr als eine Zelle enthält und auf alle Zeilen <paramref name="RowAbsolute" /> bzw. alle Spalten angewendet <paramref name="ColumnAbsolute" /> wird.</span><span class="sxs-lookup"><span data-stu-id="370a5-143">If the reference contains more than one cell, <paramref name="RowAbsolute" /> and <paramref name="ColumnAbsolute" /> apply to all rows and all columns, respectively.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvancedFilter">
      <MemberSignature Language="C#" Value="public object AdvancedFilter (Microsoft.Office.Interop.Excel.XlFilterAction Action, object CriteriaRange, object CopyToRange, object Unique);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AdvancedFilter([in]valuetype Microsoft.Office.Interop.Excel.XlFilterAction Action, [in]object CriteriaRange, [in]object CopyToRange, [in]object Unique) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AdvancedFilter(Microsoft.Office.Interop.Excel.XlFilterAction,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AdvancedFilter (Action As XlFilterAction, Optional CriteriaRange As Object, Optional CopyToRange As Object, Optional Unique As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(876)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Action" Type="Microsoft.Office.Interop.Excel.XlFilterAction" />
        <Parameter Name="CriteriaRange" Type="System.Object" />
        <Parameter Name="CopyToRange" Type="System.Object" />
        <Parameter Name="Unique" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Action"><span data-ttu-id="370a5-144"><see cref="T:Microsoft.Office.Interop.Excel.XlFilterAction" />Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="370a5-144">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFilterAction" />.</span></span> <span data-ttu-id="370a5-145">Dies kann eine der folgenden <b>XlFilterAction -Konstanten</b> sein:<b>xlFilterCopy</b><b>xlFilterInPlace</b></span><span class="sxs-lookup"><span data-stu-id="370a5-145">Can be one of the following <b>XlFilterAction</b> constants:<b>xlFilterCopy</b><b>xlFilterInPlace</b></span></span></param>
        <param name="CriteriaRange"><span data-ttu-id="370a5-146">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-146">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-147">Der Kriterienbereich.</span><span class="sxs-lookup"><span data-stu-id="370a5-147">The criteria range.</span></span> <span data-ttu-id="370a5-148">Wenn dieses Argument ausgelassen wird, gibt es keine Kriterien.</span><span class="sxs-lookup"><span data-stu-id="370a5-148">If this argument is omitted, there are no criteria.</span></span></param>
        <param name="CopyToRange"><span data-ttu-id="370a5-149">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-149">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-150">Der Zielbereich für die kopierten Zeilen, wenn Aktion <paramref name="xlFilterCopy" /> ist .</span><span class="sxs-lookup"><span data-stu-id="370a5-150">The destination range for the copied rows if Action is <paramref name="xlFilterCopy" />.</span></span> <span data-ttu-id="370a5-151">Andernfalls wird dieses Argument ignoriert.</span><span class="sxs-lookup"><span data-stu-id="370a5-151">Otherwise, this argument is ignored.</span></span></param>
        <param name="Unique"><span data-ttu-id="370a5-152">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-152">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-153"><b>True,</b> um nur eindeutige Datensätze zu filtern; <b>False,</b> wenn alle Datensätze gefiltert werden, die den Kriterien entsprechen.</span><span class="sxs-lookup"><span data-stu-id="370a5-153"><b>True</b> to filter unique records only; <b>False</b> to filter all records that meet the criteria.</span></span> <span data-ttu-id="370a5-154">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-154">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="370a5-155">Filtert oder kopiert Daten aus einer Liste auf Grundlage eines Kriterienbereichs.</span><span class="sxs-lookup"><span data-stu-id="370a5-155">Filters or copies data from a list based on a criteria range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-156">Wenn die ursprüngliche Auswahl eine einzelne Zelle ist, wird der aktuelle Bereich dieser Zelle verwendet.</span><span class="sxs-lookup"><span data-stu-id="370a5-156">If the initial selection is a single cell, that cell's current region is used.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocateChanges">
      <MemberSignature Language="C#" Value="public void AllocateChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AllocateChanges() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AllocateChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllocateChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllocateChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2855)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-157">Führt einen Rückschreibevorgang für alle bearbeiteten Zellen in einem auf einer OLAP-Datenquelle basierenden Bereich aus.</span><span class="sxs-lookup"><span data-stu-id="370a5-157">Performs a writeback operation for all edited cells in a range based on an OLAP data source.</span></span></summary>
        <remarks><para><span data-ttu-id="370a5-158">Die Methode führt eine UPDATE -CUBE-Anweisung für alle Änderungen aus, die im Bereich vorgenommen wurden, seit der letzte Vorgang <see cref="M:Microsoft.Office.Interop.Excel.Range.AllocateChanges" /> für angewendete Änderungen ausgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="370a5-158">The <see cref="M:Microsoft.Office.Interop.Excel.Range.AllocateChanges" /> method will execute an UPDATE CUBE statement for all changes made in the range since the last apply changes operation was committed.</span></span> <span data-ttu-id="370a5-159">Diese Methode erzeugt einen Laufzeitfehler, wenn sie für einen Bereich ausgeführt wird, die nicht auf einer OLAP-Datenquelle basiert.</span><span class="sxs-lookup"><span data-stu-id="370a5-159">This method generates a run-time error if it is executed on a range based on a non-OLAP data source.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowEdit">
      <MemberSignature Language="C#" Value="public bool AllowEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEdit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.AllowEdit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowEdit { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2020)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2020)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-160">Bestimmt, ob der Bereich in einem geschützten Arbeitsblatt bearbeitet werden kann.</span><span class="sxs-lookup"><span data-stu-id="370a5-160">Determines if the range can be edited on a protected worksheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-161">Diese Eigenschaft gibt <b>True zurück,</b> wenn der Bereich in einem geschützten Arbeitsblatt bearbeitet werden kann.</span><span class="sxs-lookup"><span data-stu-id="370a5-161">This property returns <b>True</b> if the range can be edited on a protected worksheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-162">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> Objekt zurück, das die Microsoft Excel-Anwendung darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-162">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyNames">
      <MemberSignature Language="C#" Value="public object ApplyNames (object Names, object IgnoreRelativeAbsolute, object UseRowColumnNames, object OmitColumn, object OmitRow, Microsoft.Office.Interop.Excel.XlApplyNamesOrder Order = Microsoft.Office.Interop.Excel.XlApplyNamesOrder.xlRowThenColumn, object AppendLast);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ApplyNames([in]object Names, [in]object IgnoreRelativeAbsolute, [in]object UseRowColumnNames, [in]object OmitColumn, [in]object OmitRow, [in]valuetype Microsoft.Office.Interop.Excel.XlApplyNamesOrder Order, [in]object AppendLast) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ApplyNames(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlApplyNamesOrder,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyNames (Optional Names As Object, Optional IgnoreRelativeAbsolute As Object, Optional UseRowColumnNames As Object, Optional OmitColumn As Object, Optional OmitRow As Object, Optional Order As XlApplyNamesOrder = Microsoft.Office.Interop.Excel.XlApplyNamesOrder.xlRowThenColumn, Optional AppendLast As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(441)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Names" Type="System.Object" />
        <Parameter Name="IgnoreRelativeAbsolute" Type="System.Object" />
        <Parameter Name="UseRowColumnNames" Type="System.Object" />
        <Parameter Name="OmitColumn" Type="System.Object" />
        <Parameter Name="OmitRow" Type="System.Object" />
        <Parameter Name="Order" Type="Microsoft.Office.Interop.Excel.XlApplyNamesOrder" />
        <Parameter Name="AppendLast" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Names"><span data-ttu-id="370a5-163">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-163">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-164">Ein Array mit den Namen, die zugewiesen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-164">An array of the names to be applied.</span></span> <span data-ttu-id="370a5-165">Wenn Sie dieses Argument nicht angeben, werden dem Bereich alle Namen des Arbeitsblatts zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="370a5-165">If this argument is omitted, all names on the sheet are applied to the range.</span></span></param>
        <param name="IgnoreRelativeAbsolute"><span data-ttu-id="370a5-166">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-166">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-167"><b>True,</b> um Verweise durch Namen zu ersetzen, unabhängig von den Bezugstypen der Namen oder Verweise; <b>False,</b> um absolute Bezüge nur durch absolute Namen, relative Bezüge nur durch relative Namen und gemischte Bezüge nur durch gemischte Namen zu ersetzen.</span><span class="sxs-lookup"><span data-stu-id="370a5-167"><b>True</b> to replace references with names, regardless of the reference types of either the names or references; <b>False</b> to replace absolute references only with absolute names, relative references only with relative names, and mixed references only with mixed names.</span></span> <span data-ttu-id="370a5-168">Der Standardwert ist <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-168">The default value is <b>True</b>.</span></span></param>
        <param name="UseRowColumnNames"><span data-ttu-id="370a5-169">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-169">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-170"><b>True,</b> um die Namen von Zeilen- und Spaltenbereichen zu verwenden, die den angegebenen Bereich enthalten, wenn namen für den Bereich nicht gefunden werden können; <b>False,</b> wenn die Argumente <paramref name="OmitColumn" /> ignoriert <paramref name="OmitRow" /> werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-170"><b>True</b> to use the names of row and column ranges that contain the specified range if names for the range cannot be found; <b>False</b> to ignore the <paramref name="OmitColumn" /> and <paramref name="OmitRow" /> arguments.</span></span> <span data-ttu-id="370a5-171">Der Standardwert ist <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-171">The default value is <b>True</b>.</span></span></param>
        <param name="OmitColumn"><span data-ttu-id="370a5-172">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-172">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-173">Beim Wert <b>True</b> wird der gesamte Bezug durch den zeilenorientierten Namen ersetzt.</span><span class="sxs-lookup"><span data-stu-id="370a5-173"><b>True</b> to replace the entire reference with the row-oriented name.</span></span> <span data-ttu-id="370a5-174">Der spaltenorientierte Name kann nur ausgelassen werden, sofern sich die Zelle, auf die der Bezug besteht, in derselben Spalte wie die Formel und in einem zeilenorientierten benannten Bereich befindet.</span><span class="sxs-lookup"><span data-stu-id="370a5-174">The column-oriented name can be omitted only if the referenced cell is in the same column as the formula and is within a row-oriented named range.</span></span> <span data-ttu-id="370a5-175">Der Standardwert ist <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-175">The default value is <b>True</b>.</span></span></param>
        <param name="OmitRow"><span data-ttu-id="370a5-176">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-176">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-177">Beim Wert <b>True</b> wird der gesamte Bezug durch den spaltenorientierten Namen ersetzt.</span><span class="sxs-lookup"><span data-stu-id="370a5-177"><b>True</b> to replace the entire reference with the column-oriented name.</span></span> <span data-ttu-id="370a5-178">Der zeilenorientierte Name kann nur ausgelassen werden, sofern sich die Zelle, auf die der Bezug besteht, in derselben Zeile wie die Formel und in einem spaltenorientierten benannten Bereich befindet.</span><span class="sxs-lookup"><span data-stu-id="370a5-178">The row-oriented name can be omitted only if the referenced cell is in the same row as the formula and is within a column-oriented named range.</span></span> <span data-ttu-id="370a5-179">Der Standardwert ist <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-179">The default value is <b>True</b>.</span></span></param>
        <param name="Order"><span data-ttu-id="370a5-180">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlApplyNamesOrder" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-180">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlApplyNamesOrder" />.</span></span> <span data-ttu-id="370a5-181">Legt fest, welcher Bereichsname zuerst aufgeführt wird, wenn ein Zellbezug durch einen zeilenorientierten und spaltenorientierten Bereichsnamen ersetzt wird.</span><span class="sxs-lookup"><span data-stu-id="370a5-181">Determines which range name is listed first when a cell reference is replaced by a row-oriented and column-oriented range name.</span></span> <span data-ttu-id="370a5-182">Dies kann eine der folgenden <b>XlApplyNamesOrder-Konstanten</b> sein:<b>xlColumnThenRow</b><b>xlRowThenColumn </b><paramref name="default" /></span><span class="sxs-lookup"><span data-stu-id="370a5-182">Can be one of these <b>XlApplyNamesOrder</b> constants:<b>xlColumnThenRow</b><b>xlRowThenColumn </b><paramref name="default" /></span></span></param>
        <param name="AppendLast"><span data-ttu-id="370a5-183">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-183">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-184"><b>True,</b> um die Definitionen der Namen in und auch die Definitionen der Nachnamen <paramref name="Names" /> zu ersetzen, die definiert wurden; <b>False,</b> um nur die Definitionen der Namen zu <paramref name="Names" /> ersetzen.</span><span class="sxs-lookup"><span data-stu-id="370a5-184"><b>True</b> to replace the definitions of the names in <paramref name="Names" /> and also replace the definitions of the last names that were defined; <b>False</b> to replace the definitions of the names in <paramref name="Names" /> only.</span></span> <span data-ttu-id="370a5-185">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-185">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="370a5-186">Weist den Zellen im angegebenen Bereich Namen zu.</span><span class="sxs-lookup"><span data-stu-id="370a5-186">Applies names to the cells in the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-187">Sie können die <b>Arrayfunktion</b> verwenden, um die Liste der Namen für das Argument zu <paramref name="Names" /> erstellen.</span><span class="sxs-lookup"><span data-stu-id="370a5-187">You can use the <b>Array</b> function to create the list of names for the <paramref name="Names" /> argument.</span></span></para>
          <para><span data-ttu-id="370a5-188">Mit Cells.ApplyNames können Sie die Namen auf das gesamte Arbeitsblatt anwenden.</span><span class="sxs-lookup"><span data-stu-id="370a5-188">If you want to apply names to the entire sheet, use Cells.ApplyNames.</span></span></para>
          <para><span data-ttu-id="370a5-189">Sie können Namen nicht "unapply" verwenden. um Namen zu löschen, verwenden Sie die <see cref="M:Microsoft.Office.Interop.Excel.Name.Delete" /> Methode.</span><span class="sxs-lookup"><span data-stu-id="370a5-189">You cannot "unapply" names; to delete names, use the <see cref="M:Microsoft.Office.Interop.Excel.Name.Delete" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyOutlineStyles">
      <MemberSignature Language="C#" Value="public object ApplyOutlineStyles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ApplyOutlineStyles() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ApplyOutlineStyles" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyOutlineStyles () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ApplyOutlineStyles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(448)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-190">Wendet auf den angegebenen Bereich eine Formatvorlage für eine Gliederung an.</span><span class="sxs-lookup"><span data-stu-id="370a5-190">Applies outlining styles to the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Areas">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Areas Areas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Areas Areas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Areas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Areas As Areas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Areas ^ Areas { Microsoft::Office::Interop::Excel::Areas ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(568)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(568)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Areas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-191">Gibt eine <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> Auflistung zurück, die alle Bereiche in einer Mehrfachauswahl darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-191">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> collection that represents all the ranges in a multiple-area selection.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-192">Bei einer einzelnen Auswahl gibt die <b>Areas</b> -Eigenschaft eine Auflistung zurück, die ein Objekt enthält – das ursprüngliche <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt selbst.</span><span class="sxs-lookup"><span data-stu-id="370a5-192">For a single selection, the <b>Areas</b> property returns a collection that contains one object — the original <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object itself.</span></span> <span data-ttu-id="370a5-193">Bei einer Mehrfachmarkierung gibt die <b>Areas</b> -Eigenschaft eine Auflistung zurück, die jeweils ein Objekt für jeden markierten Bereich enthält.</span><span class="sxs-lookup"><span data-stu-id="370a5-193">For a multiple-area selection, the <b>Areas</b> property returns a collection that contains one object for each selected area.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoComplete">
      <MemberSignature Language="C#" Value="public string AutoComplete (string String);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string AutoComplete([in]string String) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoComplete(System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ AutoComplete(System::String ^ String);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1185)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="String" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="String"><span data-ttu-id="370a5-194"><b>String</b> erforderlich.</span><span class="sxs-lookup"><span data-stu-id="370a5-194">Required <b>String</b>.</span></span> <span data-ttu-id="370a5-195">Die Zeichenfolge, die vervollständigt werden soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-195">The string to complete.</span></span></param>
        <summary><span data-ttu-id="370a5-196">Gibt eine AutoComplete-Übereinstimmung aus der Liste zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-196">Returns an AutoComplete match from the list.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-197">Besteht keine Übereinstimmung, oder stimmt mehr als ein Listeneintrag mit der zu ergänzenden Zeichenfolge überein, gibt die Methode eine leere Zeichenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-197">If there’s no AutoComplete match or if more than one entry in the list matches the string to complete, this method returns an empty string.</span></span></para>
          <para><span data-ttu-id="370a5-198">Diese Methode funktioniert auch, wenn AutoComplete deaktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-198">This method works even if the AutoComplete feature is disabled.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFill">
      <MemberSignature Language="C#" Value="public object AutoFill (Microsoft.Office.Interop.Excel.Range Destination, Microsoft.Office.Interop.Excel.XlAutoFillType Type = Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillDefault);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFill([in]class Microsoft.Office.Interop.Excel.Range Destination, [in]valuetype Microsoft.Office.Interop.Excel.XlAutoFillType Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFill(Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.XlAutoFillType)" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFill (Destination As Range, Optional Type As XlAutoFillType = Microsoft.Office.Interop.Excel.XlAutoFillType.xlFillDefault) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(449)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="Microsoft.Office.Interop.Excel.Range" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlAutoFillType" />
      </Parameters>
      <Docs>
        <param name="Destination"><span data-ttu-id="370a5-199">Erforderliches <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt.</span><span class="sxs-lookup"><span data-stu-id="370a5-199">Required <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span> <span data-ttu-id="370a5-200">Die auszufüllenden Zellen.</span><span class="sxs-lookup"><span data-stu-id="370a5-200">The cells to be filled.</span></span> <span data-ttu-id="370a5-201">Das Ziel muss den Quellbereich einschließen.</span><span class="sxs-lookup"><span data-stu-id="370a5-201">The destination must include the source range.</span></span></param>
        <param name="Type"><span data-ttu-id="370a5-202">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFillType" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-202">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFillType" />.</span></span> <span data-ttu-id="370a5-203">Gibt den Fülltyp an.</span><span class="sxs-lookup"><span data-stu-id="370a5-203">Specifies the fill type.</span></span> <span data-ttu-id="370a5-204">Dies kann eine der folgenden <b>XlAutoFillType-Konstanten</b> sein:<b>xlFillDays</b><b>xlFillFormats</b><b>xlFillSeries</b><b>xlFillWeekdays</b><b>xlGrowthTrend</b><b>xlFillCopy</b><b>xlFillDefault</b> <paramref name="default" /> <b>xlFillMonths</b><b>xlFillValues xlFillYears</b><b></b><b>xlLinearTrend</b>Wenn dieses Argument <b>xlFillDefault</b> ist oder weggelassen wird, wählt Microsoft Excel basierend auf dem Quellbereich den am besten geeigneten Fülltyp aus.</span><span class="sxs-lookup"><span data-stu-id="370a5-204">Can be one of these <b>XlAutoFillType</b> constants:<b>xlFillDays</b><b>xlFillFormats</b><b>xlFillSeries</b><b>xlFillWeekdays</b><b>xlGrowthTrend</b><b>xlFillCopy</b><b>xlFillDefault</b><paramref name="default" /><b>xlFillMonths</b><b>xlFillValues</b><b>xlFillYears</b><b>xlLinearTrend</b>If this argument is <b>xlFillDefault</b> or omitted, Microsoft Excel selects the most appropriate fill type, based on the source range.</span></span></param>
        <summary><span data-ttu-id="370a5-205">Füllt die Zellen im angegebenen Bereich automatisch aus.</span><span class="sxs-lookup"><span data-stu-id="370a5-205">Performs an autofill on the cells in the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilter">
      <MemberSignature Language="C#" Value="public object AutoFilter (object Field, object Criteria1, Microsoft.Office.Interop.Excel.XlAutoFilterOperator Operator = Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlAnd, object Criteria2, object VisibleDropDown);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFilter([in]object Field, [in]object Criteria1, [in]valuetype Microsoft.Office.Interop.Excel.XlAutoFilterOperator Operator, [in]object Criteria2, [in]object VisibleDropDown) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFilter(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlAutoFilterOperator,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFilter (Optional Field As Object, Optional Criteria1 As Object, Optional Operator As XlAutoFilterOperator = Microsoft.Office.Interop.Excel.XlAutoFilterOperator.xlAnd, Optional Criteria2 As Object, Optional VisibleDropDown As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(793)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Field" Type="System.Object" />
        <Parameter Name="Criteria1" Type="System.Object" />
        <Parameter Name="Operator" Type="Microsoft.Office.Interop.Excel.XlAutoFilterOperator" />
        <Parameter Name="Criteria2" Type="System.Object" />
        <Parameter Name="VisibleDropDown" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Field"><span data-ttu-id="370a5-206">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-206">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-207">Der Ganzzahloffset des Felds, auf dem der Filter basieren soll (von der linken Seite der Liste ist das Feld ganz links eins).</span><span class="sxs-lookup"><span data-stu-id="370a5-207">The integer offset of the field on which you want to base the filter (from the left of the list; the leftmost field is field one).</span></span></param>
        <param name="Criteria1"><span data-ttu-id="370a5-208">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-208">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-209">Die Kriterien (eine Zeichenfolge, z. B. "101").</span><span class="sxs-lookup"><span data-stu-id="370a5-209">The criteria (a string; for example, "101").</span></span> <span data-ttu-id="370a5-210">Verwenden Sie "=", um leere Felder zu suchen, oder verwenden Sie " " zum Suchen nach nicht &lt; &gt; leeren Feldern.</span><span class="sxs-lookup"><span data-stu-id="370a5-210">Use "=" to find blank fields, or use "&lt;&gt;" to find nonblank fields.</span></span> <span data-ttu-id="370a5-211">Wenn dieses Argument nicht angegeben wird, ist das Kriterium <b>"All".</b></span><span class="sxs-lookup"><span data-stu-id="370a5-211">If this argument is omitted, the criteria is <b>All</b>.</span></span> <span data-ttu-id="370a5-212">Wenn <paramref name="Operator" /> <b>xlTop10Items</b>ist, gibt die Anzahl der Elemente an (z. B. <paramref name="Criteria1" /> "10").</span><span class="sxs-lookup"><span data-stu-id="370a5-212">If <paramref name="Operator" /> is <b>xlTop10Items</b>, <paramref name="Criteria1" /> specifies the number of items (for example, "10").</span></span></param>
        <param name="Operator"><span data-ttu-id="370a5-213">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFilterOperator" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-213">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlAutoFilterOperator" />.</span></span> <span data-ttu-id="370a5-214">Dies kann eine der folgenden <b>XlAutoFilterOperator</b> -Konstanten sein:<b>xlAnd</b> <paramref name="default" /> <b>xlBottom10Items</b><b>xlBottom10Percent</b><b>xlOr xlTop10Items</b><b></b><b>xlTop10Percent</b>Verwenden Sie <b>xlAnd</b> und <b>xlOr</b> mit und zum Erstellen zusammengesetzter <paramref name="Criteria1" /> <paramref name="Criteria2" /> Kriterien.</span><span class="sxs-lookup"><span data-stu-id="370a5-214">Can be one of the following <b>XlAutoFilterOperator</b> constants:<b>xlAnd</b><paramref name="default" /><b>xlBottom10Items</b><b>xlBottom10Percent</b><b>xlOr</b><b>xlTop10Items</b><b>xlTop10Percent</b>Use <b>xlAnd</b> and <b>xlOr</b> with <paramref name="Criteria1" /> and <paramref name="Criteria2" /> to construct compound criteria.</span></span></param>
        <param name="Criteria2"><span data-ttu-id="370a5-215">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-215">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-216">Das zweite Kriterium (eine Zeichenfolge).</span><span class="sxs-lookup"><span data-stu-id="370a5-216">The second criteria (a string).</span></span> <span data-ttu-id="370a5-217">Wird mit Criteria1 und Operator verwendet, um ein Verbundkriterium zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="370a5-217">Used with Criteria1 and Operator to construct compound criteria.</span></span></param>
        <param name="VisibleDropDown"><span data-ttu-id="370a5-218">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-218">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-219"><b>True,</b> um den #A0 für das gefilterte Feld anzeigen; <b>False,</b> um den Dropdownpfeil "AutoFilter" für das gefilterte Feld auszublenden.</span><span class="sxs-lookup"><span data-stu-id="370a5-219"><b>True</b> to display the AutoFilter drop-down arrow for the filtered field; <b>False</b> to hide the AutoFilter drop-down arrow for the filtered field.</span></span> <span data-ttu-id="370a5-220">Der Wert ist standardmäßig auf <b>True</b> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="370a5-220"><b>True</b> by default.</span></span></param>
        <summary><span data-ttu-id="370a5-221">Filtert eine Liste mithilfe von AutoFilter.</span><span class="sxs-lookup"><span data-stu-id="370a5-221">Filters a list using the AutoFilter.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-222">Wenden Sie <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilter" /> die Eigenschaft auf ein Objekt <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> an, um ein Objekt <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> zurückzukehren.</span><span class="sxs-lookup"><span data-stu-id="370a5-222">Apply the <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.AutoFilter" /> property to a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object to return an <see cref="T:Microsoft.Office.Interop.Excel.AutoFilter" /> object.</span></span></para>
          <para><span data-ttu-id="370a5-223">Wenn Sie alle Argumente auslassen, wechselt diese Methode einfach die Anzeige der „AutoFilter“-Dropdownpfeile im angegebenen Bereich.</span><span class="sxs-lookup"><span data-stu-id="370a5-223">If you omit all the arguments, this method simply toggles the display of the AutoFilter drop-down arrows in the specified range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFit">
      <MemberSignature Language="C#" Value="public object AutoFit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFit() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFit" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFit () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AutoFit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(237)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-224">Ändert die Breite der Spalten oder die Höhe der Zeilen in dem jeweiligen Bereich, um sie optimal anzupassen.</span><span class="sxs-lookup"><span data-stu-id="370a5-224">Changes the width of the columns in the range or the height of the rows in the range to achieve the best fit.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-225">Der Ausdruck muss eine Zeile oder ein Zeilenbereich oder eine Spalte oder ein Spaltenbereich sein.</span><span class="sxs-lookup"><span data-stu-id="370a5-225">The expression must be a row or a range of rows, or a column or a range of columns.</span></span> <span data-ttu-id="370a5-226">Andernfalls verursacht diese Methode einen Fehler.</span><span class="sxs-lookup"><span data-stu-id="370a5-226">Otherwise, this method generates an error.</span></span></para>
          <para><span data-ttu-id="370a5-227">Eine Spaltenbreiteneinheit ist gleich der Breite eines Zeichens in der Standardformatvorlage.</span><span class="sxs-lookup"><span data-stu-id="370a5-227">One unit of column width is equal to the width of one character in the Normal style.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormat">
      <MemberSignature Language="C#" Value="public object AutoFormat (Microsoft.Office.Interop.Excel.XlRangeAutoFormat Format = Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic1, object Number, object Font, object Alignment, object Border, object Pattern, object Width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoFormat([in]valuetype Microsoft.Office.Interop.Excel.XlRangeAutoFormat Format, [in]object Number, [in]object Font, [in]object Alignment, [in]object Border, [in]object Pattern, [in]object Width) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoFormat(Microsoft.Office.Interop.Excel.XlRangeAutoFormat,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoFormat (Optional Format As XlRangeAutoFormat = Microsoft.Office.Interop.Excel.XlRangeAutoFormat.xlRangeAutoFormatClassic1, Optional Number As Object, Optional Font As Object, Optional Alignment As Object, Optional Border As Object, Optional Pattern As Object, Optional Width As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(114)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlRangeAutoFormat" />
        <Parameter Name="Number" Type="System.Object" />
        <Parameter Name="Font" Type="System.Object" />
        <Parameter Name="Alignment" Type="System.Object" />
        <Parameter Name="Border" Type="System.Object" />
        <Parameter Name="Pattern" Type="System.Object" />
        <Parameter Name="Width" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Format"><span data-ttu-id="370a5-228">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-228">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlRangeAutoFormat" />.</span></span> <span data-ttu-id="370a5-229">Die angegebenen AutoFormat.Some of the <b>XlRangeAutoFormat</b> constants may not be available to you, depending on the language support (US English, for example), that you've selected or installed.</span><span class="sxs-lookup"><span data-stu-id="370a5-229">The specified AutoFormat.Some of the <b>XlRangeAutoFormat</b> constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span></span></param>
        <param name="Number"><span data-ttu-id="370a5-230">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-230">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-231"><b>True,</b> um Zahlenformate in das AutoFormat zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="370a5-231"><b>True</b> to include number formats in the AutoFormat.</span></span> <span data-ttu-id="370a5-232">Der Standardwert ist <b>True.</b></span><span class="sxs-lookup"><span data-stu-id="370a5-232">The default value is <b>True.</b></span></span></param>
        <param name="Font"><span data-ttu-id="370a5-233">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-233">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-234"><b>True,</b> um Schriftartformate in das AutoFormat zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="370a5-234"><b>True</b> to include font formats in the AutoFormat.</span></span> <span data-ttu-id="370a5-235">Der Standardwert ist <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-235">The default value is <b>True</b>.</span></span></param>
        <param name="Alignment"><span data-ttu-id="370a5-236">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-236">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-237"><b>True,</b> um die Ausrichtung in das AutoFormat ein- und zu schließen.</span><span class="sxs-lookup"><span data-stu-id="370a5-237"><b>True</b> to include alignment in the AutoFormat.</span></span> <span data-ttu-id="370a5-238">Der Standardwert ist <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-238">The default value is <b>True</b>.</span></span></param>
        <param name="Border"><span data-ttu-id="370a5-239">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-239">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-240"><b>True</b> , um Rahmenformate in das AutoFormat zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="370a5-240"><b>True</b> to include border formats in the AutoFormat.</span></span> <span data-ttu-id="370a5-241">Der Standardwert ist <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-241">The default value is <b>True</b>.</span></span></param>
        <param name="Pattern"><span data-ttu-id="370a5-242">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-242">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-243"><b>True,</b> um Musterformate in das AutoFormat zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="370a5-243"><b>True</b> to include pattern formats in the AutoFormat.</span></span> <span data-ttu-id="370a5-244">Der Standardwert ist <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-244">The default value is <b>True</b>.</span></span></param>
        <param name="Width"><span data-ttu-id="370a5-245">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-245">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-246"><b>True</b> , wenn spaltenbreite und Zeilenhöhe in das AutoFormat enthalten.</span><span class="sxs-lookup"><span data-stu-id="370a5-246"><b>True</b> to include column width and row height in the AutoFormat.</span></span> <span data-ttu-id="370a5-247">Der Standardwert ist <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-247">The default value is <b>True</b>.</span></span></param>
        <summary><span data-ttu-id="370a5-248">Formatiert den angegebenen Bereich automatisch in einem vordefinierten Format.</span><span class="sxs-lookup"><span data-stu-id="370a5-248">Automatically formats the specified range, using a predefined format.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-249">Wenn es sich bei dem Bereich um eine einzelne Zelle handelt, formatiert diese Methode auch den aktiven Bereich, der die Zelle umzingt.</span><span class="sxs-lookup"><span data-stu-id="370a5-249">If the range is a single cell, this method also formats the active region surrounding the cell.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoOutline">
      <MemberSignature Language="C#" Value="public object AutoOutline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AutoOutline() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.AutoOutline" />
      <MemberSignature Language="VB.NET" Value="Public Function AutoOutline () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AutoOutline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1036)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-250">Erstellt automatisch eine Gliederung für den angegebenen Bereich.</span><span class="sxs-lookup"><span data-stu-id="370a5-250">Automatically creates an outline for the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-251">Handelt es sich bei dem Bereich um eine einzelne Zelle, so erstellt Microsoft Excel eine Gliederung für das gesamte Blatt.</span><span class="sxs-lookup"><span data-stu-id="370a5-251">If the range is a single cell, Microsoft Excel creates an outline for the entire sheet.</span></span> <span data-ttu-id="370a5-252">Die neue Gliederung ersetzt jegliche bestehende Gliederung.</span><span class="sxs-lookup"><span data-stu-id="370a5-252">The new outline replaces any existing outline.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderAround">
      <MemberSignature Language="C#" Value="public object BorderAround (object LineStyle, Microsoft.Office.Interop.Excel.XlBorderWeight Weight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, object Color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BorderAround([in]object LineStyle, [in]valuetype Microsoft.Office.Interop.Excel.XlBorderWeight Weight, [in]valuetype Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex, [in]object Color) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.BorderAround(System.Object,Microsoft.Office.Interop.Excel.XlBorderWeight,Microsoft.Office.Interop.Excel.XlColorIndex,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BorderAround (Optional LineStyle As Object, Optional Weight As XlBorderWeight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Optional ColorIndex As XlColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, Optional Color As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1067)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="LineStyle" Type="System.Object" />
        <Parameter Name="Weight" Type="Microsoft.Office.Interop.Excel.XlBorderWeight" />
        <Parameter Name="ColorIndex" Type="Microsoft.Office.Interop.Excel.XlColorIndex" />
        <Parameter Name="Color" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="LineStyle"><span data-ttu-id="370a5-253">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLineStyle" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-253">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLineStyle" />.</span></span> <span data-ttu-id="370a5-254">Die Linienart für den Rahmen.</span><span class="sxs-lookup"><span data-stu-id="370a5-254">The line style for the border.</span></span> <span data-ttu-id="370a5-255">Dies kann eine der folgenden <b>XlLineStyle</b> -Konstanten sein:<b>xlContinuous</b> <paramref name="default" /> <b>xlDash xlDashDot</b><b>xlDashDotDot</b><b>xlDot xlDouble</b><b></b><b>xlLineStlyeNone</b><b>xlSlantDashDot</b><b></b><b>xlLineStlyeNone</b></span><span class="sxs-lookup"><span data-stu-id="370a5-255">Can be one of the following <b>XlLineStyle</b> constants:<b>xlContinuous</b><paramref name="default" /><b>xlDash</b><b>xlDashDot</b><b>xlDashDotDot</b><b>xlDot</b><b>xlDouble</b><b>xlLineStlyeNone</b><b>xlSlantDashDot</b><b>xlLineStlyeNone</b></span></span></param>
        <param name="Weight"><span data-ttu-id="370a5-256">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlBorderWeight" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-256">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlBorderWeight" />.</span></span> <span data-ttu-id="370a5-257">Die Rahmenstärke.</span><span class="sxs-lookup"><span data-stu-id="370a5-257">The border weight.</span></span> <span data-ttu-id="370a5-258">Dies kann eine der folgenden <b>XlBorderWeight -Konstanten</b> sein:<b>xlHairline</b><b>xlMedium</b><b>xlThick</b><b>xlThin</b><paramref name="default" /></span><span class="sxs-lookup"><span data-stu-id="370a5-258">Can be one of the following <b>XlBorderWeight</b> constants:<b>xlHairline</b><b>xlMedium</b><b>xlThick</b><b>xlThin</b><paramref name="default" /></span></span></param>
        <param name="ColorIndex"><span data-ttu-id="370a5-259">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-259">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />.</span></span> <span data-ttu-id="370a5-260">Die Rahmenfarbe als Farbindex in der aktuellen Farbpalette oder als <b>XlColorIndex</b>-Konstante.</span><span class="sxs-lookup"><span data-stu-id="370a5-260">The border color, as an index into the current color palette or as an <b>XlColorIndex</b> constant.</span></span> <span data-ttu-id="370a5-261">Dies kann eine der folgenden <b> XlColorIndex -Konstanten</b> sein:<b>xlColorIndexAutomatic</b> <paramref name="default" /> <b>xlColorIndexNone</b></span><span class="sxs-lookup"><span data-stu-id="370a5-261">Can be one of the following <b>XlColorIndex</b> constants:<b>xlColorIndexAutomatic</b><paramref name="default" /><b>xlColorIndexNone</b></span></span></param>
        <param name="Color"><span data-ttu-id="370a5-262">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-262">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-263">Die Rahmenfarbe als RGB-Wert (Rot, Grün, Blau).</span><span class="sxs-lookup"><span data-stu-id="370a5-263">The border color, as an RGB value.</span></span></param>
        <summary><span data-ttu-id="370a5-264">Fügt einem Bereich einen Rahmen hinzu und legt die <see cref="P:Microsoft.Office.Interop.Excel.Border.Color" /> Eigenschaften für den neuen Rahmen <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" /> <see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" /> fest.</span><span class="sxs-lookup"><span data-stu-id="370a5-264">Adds a border to a range and sets the <see cref="P:Microsoft.Office.Interop.Excel.Border.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Border.LineStyle" />, and <see cref="P:Microsoft.Office.Interop.Excel.Border.Weight" /> properties for the new border.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-265">Sie müssen entweder <paramref name="ColorIndex" /> oder , aber nicht <paramref name="Color" /> beides angeben.</span><span class="sxs-lookup"><span data-stu-id="370a5-265">You must specify either <paramref name="ColorIndex" /> or <paramref name="Color" />, but not both.</span></span></para>
          <para><span data-ttu-id="370a5-266">Sie können entweder <paramref name="LineStyle" /> oder , aber nicht <paramref name="Weight" /> beides angeben.</span><span class="sxs-lookup"><span data-stu-id="370a5-266">You can specify either <paramref name="LineStyle" /> or <paramref name="Weight" />, but not both.</span></span> <span data-ttu-id="370a5-267">Wenn Sie keines der Argumente angeben, verwendet Microsoft Excel die Standardlinienart und -stärke.</span><span class="sxs-lookup"><span data-stu-id="370a5-267">If you don't specify either argument, Microsoft Excel uses the default line style and weight.</span></span></para>
          <para><span data-ttu-id="370a5-268">Diese Methode zieht eine Kontur um den gesamten Bereich, ohne ihn auszufüllen.</span><span class="sxs-lookup"><span data-stu-id="370a5-268">This method outlines the entire range without filling it in.</span></span> <span data-ttu-id="370a5-269">Zum Festlegen der Rahmen aller Zellen müssen Sie die Eigenschaften und eigenschaften für die <see cref="P:Microsoft.Office.Interop.Excel.Borders.Color" /> <see cref="P:Microsoft.Office.Interop.Excel.Borders.LineStyle" /> Borders <see cref="P:Microsoft.Office.Interop.Excel.Borders.Weight" /> -Auflistung festlegen.</span><span class="sxs-lookup"><span data-stu-id="370a5-269">To set the borders of all the cells, you must set the <see cref="P:Microsoft.Office.Interop.Excel.Borders.Color" />, <see cref="P:Microsoft.Office.Interop.Excel.Borders.LineStyle" />, and <see cref="P:Microsoft.Office.Interop.Excel.Borders.Weight" /> properties for the Borders collection.</span></span> <span data-ttu-id="370a5-270">Um den Rahmen zu löschen, legen Sie für alle Zellen des Bereichs die <b>LineStyle</b> -Eigenschaft auf <b>LineStylexlLineStyleNone</b> fest.</span><span class="sxs-lookup"><span data-stu-id="370a5-270">To clear the border, you must set the <b>LineStyle</b> property to <b>xlLineStyleNone</b> for all the cells in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderAround2">
      <MemberSignature Language="C#" Value="public object BorderAround2 (object LineStyle, Microsoft.Office.Interop.Excel.XlBorderWeight Weight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, object Color, object ThemeColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BorderAround2([in]object LineStyle, [in]valuetype Microsoft.Office.Interop.Excel.XlBorderWeight Weight, [in]valuetype Microsoft.Office.Interop.Excel.XlColorIndex ColorIndex, [in]object Color, [in]object ThemeColor) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.BorderAround2(System.Object,Microsoft.Office.Interop.Excel.XlBorderWeight,Microsoft.Office.Interop.Excel.XlColorIndex,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BorderAround2 (Optional LineStyle As Object, Optional Weight As XlBorderWeight = Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Optional ColorIndex As XlColorIndex = Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, Optional Color As Object, Optional ThemeColor As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2771)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="LineStyle" Type="System.Object" />
        <Parameter Name="Weight" Type="Microsoft.Office.Interop.Excel.XlBorderWeight" />
        <Parameter Name="ColorIndex" Type="Microsoft.Office.Interop.Excel.XlColorIndex" />
        <Parameter Name="Color" Type="System.Object" />
        <Parameter Name="ThemeColor" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="LineStyle">To be added.</param>
        <param name="Weight">To be added.</param>
        <param name="ColorIndex">To be added.</param>
        <param name="Color">To be added.</param>
        <param name="ThemeColor">To be added.</param>
        <summary><span data-ttu-id="370a5-271">Für die interne Verwendung reserviert.</span><span class="sxs-lookup"><span data-stu-id="370a5-271">Reserved for internal use.</span></span></summary>
        <returns><span data-ttu-id="370a5-272">Gibt <see cref="T:System.Object" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-272">Returns <see cref="T:System.Object" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Borders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Borders Borders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Borders Borders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Borders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Borders As Borders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Borders ^ Borders { Microsoft::Office::Interop::Excel::Borders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Borders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-273">Gibt eine Auflistung zurück, die die Rahmen einer Formatvorlage oder eines Zellbereichs darstellt (einschließlich eines Bereichs, der als Teil eines <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> bedingten Formats definiert ist).</span><span class="sxs-lookup"><span data-stu-id="370a5-273">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> collection that represents the borders of a style or a range of cells (including a range defined as part of a conditional format).</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calculate">
      <MemberSignature Language="C#" Value="public object Calculate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Calculate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Calculate" />
      <MemberSignature Language="VB.NET" Value="Public Function Calculate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Calculate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(279)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-274">Berechnet einen angegebenen Zellbereich auf einem Arbeitsblatt.</span><span class="sxs-lookup"><span data-stu-id="370a5-274">Calculates a specified range of cells on a worksheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateRowMajorOrder">
      <MemberSignature Language="C#" Value="public object CalculateRowMajorOrder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CalculateRowMajorOrder() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CalculateRowMajorOrder" />
      <MemberSignature Language="VB.NET" Value="Public Function CalculateRowMajorOrder () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CalculateRowMajorOrder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2364)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-275">Berechnet einen angegebenen Zellbereich.</span><span class="sxs-lookup"><span data-stu-id="370a5-275">Calculates a specfied range of cells.</span></span></summary>
        <returns><span data-ttu-id="370a5-276"><b>Objekt</b></span><span class="sxs-lookup"><span data-stu-id="370a5-276"><b>Object</b></span></span></returns>
        <remarks><para><span data-ttu-id="370a5-277">Die Methode berechnet den angegebenen Bereich zellweise von der oberen linken Ecke bis zur unteren rechten Ecke <see cref="M:Microsoft.Office.Interop.Excel.Range.CalculateRowMajorOrder" /> in zeilenweiser Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="370a5-277">The <see cref="M:Microsoft.Office.Interop.Excel.Range.CalculateRowMajorOrder" /> method calculates the specified range range cell-by-cell, from its top left corner to its to bottom right corner in row-major order.</span></span> <span data-ttu-id="370a5-278">Dieser Prozess entspricht jenem, der bereits in Excel 2000 und früheren Versionen zur Berechnung eines Bereichs verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="370a5-278">This is the same process that is used  by  Excel 2000 and earlier versions to calculate a range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Cells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Cells { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(238)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-279">Gibt ein <b>Range</b>-Objekt zurück, das die Zellen im angegebenen Bereich darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-279">Returns a <b>Range</b> object that represents the cells in the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Characters">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Characters Characters[object Start, object Length] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Characters Characters(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Characters(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Characters(Optional Start As Object, Optional Length As Object) As Characters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Characters ^ Characters[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Characters ^ get(System::Object ^ Start, System::Object ^ Length); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(603)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(603)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Characters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Object" />
        <Parameter Name="Length" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Start"><span data-ttu-id="370a5-280">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-280">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-281">The first character to be returned.</span><span class="sxs-lookup"><span data-stu-id="370a5-281">The first character to be returned.</span></span> <span data-ttu-id="370a5-282">If this argument is either 1 or omitted, this property returns a range of characters starting with the first character.</span><span class="sxs-lookup"><span data-stu-id="370a5-282">If this argument is either 1 or omitted, this property returns a range of characters starting with the first character.</span></span></param>
        <param name="Length"><span data-ttu-id="370a5-283">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-283">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-284">Die Anzahl der zurückzugebenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="370a5-284">The number of characters to be returned.</span></span> <span data-ttu-id="370a5-285">Wenn dieses Argument nicht angegeben wird, gibt diese Eigenschaft den Rest der Zeichenfolge zurück (alles nach dem <paramref name="Start" /> Zeichen).</span><span class="sxs-lookup"><span data-stu-id="370a5-285">If this argument is omitted, this property returns the remainder of the string (everything after the <paramref name="Start" /> character).</span></span></param>
        <summary><span data-ttu-id="370a5-286">Gibt ein Objekt zurück, das einen Bereich von Zeichen innerhalb des <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> Objekttexts darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-286">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> object that represents a range of characters within the object text.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-287">Mit dem <b>Characters</b> -Objekt können Sie Zeichen innerhalb einer Zeichenfolge formatieren.</span><span class="sxs-lookup"><span data-stu-id="370a5-287">You can use the <b>Characters</b> object to format characters within a text string.</span></span></para>
          <para><span data-ttu-id="370a5-288">Das <b>Characters</b>-Objekt ist keine Auflistung.</span><span class="sxs-lookup"><span data-stu-id="370a5-288">The <b>Characters</b> object isn't a collection.</span></span></para>
          <para><span data-ttu-id="370a5-289">Für das <see cref="T:Microsoft.Office.Interop.Excel.TextFrame" /> Objekt ist <see cref="M:Microsoft.Office.Interop.Excel.TextFrame.Characters(System.Object,System.Object)" /> dies eine Methode.</span><span class="sxs-lookup"><span data-stu-id="370a5-289">For the <see cref="T:Microsoft.Office.Interop.Excel.TextFrame" /> object, <see cref="M:Microsoft.Office.Interop.Excel.TextFrame.Characters(System.Object,System.Object)" /> is a method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSpelling">
      <MemberSignature Language="C#" Value="public object CheckSpelling (object CustomDictionary, object IgnoreUppercase, object AlwaysSuggest, object SpellLang);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CheckSpelling([in]object CustomDictionary, [in]object IgnoreUppercase, [in]object AlwaysSuggest, [in]object SpellLang) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CheckSpelling(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSpelling (Optional CustomDictionary As Object, Optional IgnoreUppercase As Object, Optional AlwaysSuggest As Object, Optional SpellLang As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(505)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CustomDictionary" Type="System.Object" />
        <Parameter Name="IgnoreUppercase" Type="System.Object" />
        <Parameter Name="AlwaysSuggest" Type="System.Object" />
        <Parameter Name="SpellLang" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="CustomDictionary"><span data-ttu-id="370a5-290">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-290">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-291">Eine Zeichenfolge, mit der der Dateiname des Benutzerwörterbuchs angegeben wird, in dem ein Wort gesucht werden soll, das nicht im Standardwörterbuch zu finden ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-291">A string that indicates the file name of the custom dictionary to be examined if the word isn't found in the main dictionary.</span></span> <span data-ttu-id="370a5-292">Wenn Sie dieses Argument nicht angeben, wird das momentan angegebene Wörterbuch verwendet.</span><span class="sxs-lookup"><span data-stu-id="370a5-292">If this argument is omitted, the currently specified dictionary is used.</span></span></param>
        <param name="IgnoreUppercase"><span data-ttu-id="370a5-293">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-293">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-294"><b>True,</b> wenn Wörter in Microsoft Excel ignoriert werden, die alle in Großbuchstaben stehen; <b>False,</b> wenn Wörter in Microsoft Excel in Großbuchstaben überprüft werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-294"><b>True</b> to have Microsoft Excel ignore words that are all uppercase; <b>False</b> to have Microsoft Excel check words that are all uppercase.</span></span> <span data-ttu-id="370a5-295">Wenn Sie dieses Argument nicht angeben, wird die aktuelle Einstellung verwendet.</span><span class="sxs-lookup"><span data-stu-id="370a5-295">If this argument is omitted, the current setting will be used.</span></span></param>
        <param name="AlwaysSuggest"><span data-ttu-id="370a5-296">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-296">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-297"><b>"True",</b> wenn in Microsoft Excel eine Liste vorgeschlagener alternativer Schreibweisen angezeigt wird, wenn eine falsche Rechtschreibung gefunden wird. <b>False,</b> wenn Microsoft Excel angehalten wird, während Sie die richtige Rechtschreibung eingeben.</span><span class="sxs-lookup"><span data-stu-id="370a5-297"><b>True</b> to have Microsoft Excel display a list of suggested alternate spellings when an incorrect spelling is found; <b>False</b> to have Microsoft Excel pause while you input the correct spelling.</span></span> <span data-ttu-id="370a5-298">Wenn Sie dieses Argument nicht angeben, wird die aktuelle Einstellung verwendet.</span><span class="sxs-lookup"><span data-stu-id="370a5-298">If this argument is omitted, the current setting will be used.</span></span></param>
        <param name="SpellLang"><span data-ttu-id="370a5-299">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-299">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-300">Die Sprache des verwendeten Wörterbuchs.</span><span class="sxs-lookup"><span data-stu-id="370a5-300">The language of the dictionary being used.</span></span> <span data-ttu-id="370a5-301">Dies kann einer der von der Eigenschaft <b>verwendeten MsoLanguageID-Werte</b> <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> sein.</span><span class="sxs-lookup"><span data-stu-id="370a5-301">Can be one of the <b>MsoLanguageID</b> values used by the <see cref="P:Microsoft.Office.Core.LanguageSettings.LanguageID(Microsoft.Office.Core.MsoAppLanguageID)" /> property.</span></span></param>
        <summary><span data-ttu-id="370a5-302">Prüft die Rechtschreibung eines Objekts.</span><span class="sxs-lookup"><span data-stu-id="370a5-302">Checks the spelling of an object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-303">Bei dieser Methode wird kein Wert zurückgegeben; es wird das Dialogfeld Rechtschreibung in Microsoft Excel angezeigt.</span><span class="sxs-lookup"><span data-stu-id="370a5-303">This method has no return value; Microsoft Excel displays the Spelling dialog box.</span></span></para>
          <para><span data-ttu-id="370a5-304">Verwenden Sie diese Methode für ein Objekt, um Kopfzeilen, Fußzeilen und Objekte in einem Arbeitsblatt zu <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> überprüfen.</span><span class="sxs-lookup"><span data-stu-id="370a5-304">To check headers, footers, and objects on a worksheet, use this method on a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object.</span></span></para>
          <para><span data-ttu-id="370a5-305">Verwenden Sie diese Methode zusammen mit dem von der Eigenschaft zurückgegebenen Objekt, um nur Zellen und Notizen zu <see cref="P:Microsoft.Office.Interop.Excel.Range.Cells" /> überprüfen.</span><span class="sxs-lookup"><span data-stu-id="370a5-305">To check only cells and notes, use this method with the object returned by the <see cref="P:Microsoft.Office.Interop.Excel.Range.Cells" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public object Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clear() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Function Clear () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-306">Löscht das gesamte Objekt.</span><span class="sxs-lookup"><span data-stu-id="370a5-306">Clears the entire object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearComments">
      <MemberSignature Language="C#" Value="public void ClearComments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearComments() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearComments" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearComments ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearComments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1390)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-307">Löscht alle Zellkommentare aus dem angegebenen Bereich.</span><span class="sxs-lookup"><span data-stu-id="370a5-307">Clears all cell comments from the specified range.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearContents">
      <MemberSignature Language="C#" Value="public object ClearContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearContents() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearContents" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearContents () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearContents();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(113)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-308">Löscht die Formeln aus dem Bereich.</span><span class="sxs-lookup"><span data-stu-id="370a5-308">Clears the formulas from the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-309">Mit dieser Methode werden die Daten aus einem Diagramm entfernt, die Formatierung bleibt jedoch erhalten.</span><span class="sxs-lookup"><span data-stu-id="370a5-309">This method clears the data from a chart but leaves the formatting.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFormats">
      <MemberSignature Language="C#" Value="public object ClearFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearFormats() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearFormats () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearFormats();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-310">Löscht die Formatierung des Objekts.</span><span class="sxs-lookup"><span data-stu-id="370a5-310">Clears the formatting of the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearHyperlinks">
      <MemberSignature Language="C#" Value="public void ClearHyperlinks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearHyperlinks() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearHyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearHyperlinks ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearHyperlinks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2854)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-311">Entfernt alle Hyperlinks aus dem angegebenen Bereich.</span><span class="sxs-lookup"><span data-stu-id="370a5-311">Removes all hyperlinks from the specified range.</span></span></summary>
        <remarks><para><span data-ttu-id="370a5-312">Das Aufrufen der Methode für den angegebenen Bereich entspricht der Verwendung des Befehls "Hyperlinks löschen" aus der Dropdownliste "Löschen" im Abschnitt "Bearbeiten" der Registerkarte <see cref="M:Microsoft.Office.Interop.Excel.Range.ClearHyperlinks" /> "Start". Es werden nur Hyperlinks entfernt. Alle anderen Zellinhalte, z. B. Text und Formatierung, sind davon nicht betroffen.</span><span class="sxs-lookup"><span data-stu-id="370a5-312">Calling the <see cref="M:Microsoft.Office.Interop.Excel.Range.ClearHyperlinks" /> method on the specified range is equivalent to using the Clear Hyperlinks command from the Clear drop-down list in the Editing section of the Home tab. Only hyperlinks will be removed; all other cell content, such as text and formatting will be unaffected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearNotes">
      <MemberSignature Language="C#" Value="public object ClearNotes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearNotes() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearNotes" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearNotes () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearNotes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(239)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-313">Löscht Notizen und Audionotizen aus allen Zellen des angegebenen Bereichs.</span><span class="sxs-lookup"><span data-stu-id="370a5-313">Clears notes and sound notes from all the cells in the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutline">
      <MemberSignature Language="C#" Value="public object ClearOutline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearOutline() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ClearOutline" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearOutline () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearOutline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1037)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-314">Entfernt die Gliederung für den angegebenen Bereich.</span><span class="sxs-lookup"><span data-stu-id="370a5-314">Clears the outline for the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public int Column { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Column" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Column" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Column As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Column { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(240)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(240)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-315">Gibt die erste Spalte am Anfang des angegebenen Bereichs als Zahl zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-315">Returns the number of the first column in the first area in the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-316">Spalte A entspricht dem Rückgabewert 1, Spalte B dem Wert 2 usw.</span><span class="sxs-lookup"><span data-stu-id="370a5-316">Column A returns 1, column B returns 2, and so on.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnDifferences">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ColumnDifferences (object Comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range ColumnDifferences([in]object Comparison) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ColumnDifferences(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ColumnDifferences (Comparison As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Range ^ ColumnDifferences(System::Object ^ Comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(510)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Comparison" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Comparison"><span data-ttu-id="370a5-317">Required <b>-Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-317">Required <b>Object</b>.</span></span> <span data-ttu-id="370a5-318">Eine einzelne Zelle, die mit dem angegebenen Bereich zu vergleichen ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-318">A single cell to compare to the specified range.</span></span></param>
        <summary><span data-ttu-id="370a5-319">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das alle Zellen darstellt, deren Inhalt von der Vergleichszelle in den einzelnen Spalten abhing.</span><span class="sxs-lookup"><span data-stu-id="370a5-319">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells whose contents are different from the comparison cell in each column.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Columns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Columns { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(241)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-320">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das die Spalten im angegebenen Bereich darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-320">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the columns in the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-321">Wenn diese Eigenschaft auf ein <b>Range</b>-Objekt angewendet wird, das eine Mehrfachmarkierung enthält, gibt sie lediglich die Spalten aus dem ersten Teil des Bereichs zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-321">When applied to a <b>Range</b> object that's a multiple-area selection, this property returns columns from only the first area of the range.</span></span> <span data-ttu-id="370a5-322">Wenn das #A0 beispielsweise zwei Bereiche hat – A1:B2 und C3:D4 – gibt die Eigenschaft 2 und nicht <b></b> <see cref="P:Microsoft.Office.Interop.Excel.Range.Count" /> 4 zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-322">For example, if the <b>Range</b> object has two areas — A1:B2 and C3:D4 — the <see cref="P:Microsoft.Office.Interop.Excel.Range.Count" /> property returns 2, not 4.</span></span> <span data-ttu-id="370a5-323">Wenn Sie diese Eigenschaft für einen Bereich verwenden möchten, der eine Mehrfachauswahl enthalten kann, testen Sie die Eigenschaft des Objekts, um festzustellen, ob der Bereich mehr <see cref="P:Microsoft.Office.Interop.Excel.Areas.Count" /> <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> als einen Bereich enthält.</span><span class="sxs-lookup"><span data-stu-id="370a5-323">To use this property on a range that may contain a multiple-area selection, test the <see cref="P:Microsoft.Office.Interop.Excel.Areas.Count" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Areas" /> object to determine whether the range contains more than one area.</span></span> <span data-ttu-id="370a5-324">If it does, loop over each area in the range.</span><span class="sxs-lookup"><span data-stu-id="370a5-324">If it does, loop over each area in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidth">
      <MemberSignature Language="C#" Value="public object ColumnWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ColumnWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ColumnWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnWidth As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ColumnWidth { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(242)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(242)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(242)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-325">Gibt die Breite aller Spalten im angegebenen Bereich zurück oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="370a5-325">Returns or sets the width of all columns in the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-p155">Eine Einheit der Spaltenbreite entspricht der Breite eines Zeichens im Format Normal. Für proportionale Schriftarten wird die Breite des Zeichens 0 (Null) verwendet.</span><span class="sxs-lookup"><span data-stu-id="370a5-p155">One unit of column width is equal to the width of one character in the Normal style. For proportional fonts, the width of the character 0 (zero) is used.</span></span></para>
          <para><span data-ttu-id="370a5-328">Verwenden Sie <see cref="P:Microsoft.Office.Interop.Excel.Range.Width" /> die Eigenschaft, um die Breite einer Spalte in Punkt zurückzukehren.</span><span class="sxs-lookup"><span data-stu-id="370a5-328">Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Width" /> property to return the width of a column in points.</span></span></para>
          <para><span data-ttu-id="370a5-p156">Besitzen alle Spalten in dem Bereich dieselbe Breite, so gibt die <b>ColumnWidth</b>-Eigenschaft diese Breite zurück. Sind die Spalten unterschiedlich breit, so gibt die Eigenschaft <b>Null</b> zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-p156">If all columns in the range have the same width, the <b>ColumnWidth</b> property returns the width. If columns in the range have different widths, this property returns <b>Null</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Comment Comment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Comment Comment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Comment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comment As Comment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Comment ^ Comment { Microsoft::Office::Interop::Excel::Comment ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(910)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(910)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Comment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-331">Gibt ein Objekt zurück, das den Kommentar darstellt, der der Zelle <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> in der oberen linken Ecke des Bereichs zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-331">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> object that represents the comment associated with the cell in the upper-left corner of the range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Consolidate">
      <MemberSignature Language="C#" Value="public object Consolidate (object Sources, object Function, object TopRow, object LeftColumn, object CreateLinks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Consolidate([in]object Sources, [in]object Function, [in]object TopRow, [in]object LeftColumn, [in]object CreateLinks) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Consolidate(System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Consolidate (Optional Sources As Object, Optional Function As Object, Optional TopRow As Object, Optional LeftColumn As Object, Optional CreateLinks As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(482)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sources" Type="System.Object" />
        <Parameter Name="Function" Type="System.Object" />
        <Parameter Name="TopRow" Type="System.Object" />
        <Parameter Name="LeftColumn" Type="System.Object" />
        <Parameter Name="CreateLinks" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Sources"><span data-ttu-id="370a5-332">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-332">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-333">Gibt die Quellen der Konsolidierung als ein Array von Textbezügen als Zeichenfolge in der Z1S1-Bezugsart an.</span><span class="sxs-lookup"><span data-stu-id="370a5-333">The sources of the consolidation as an array of text reference strings in R1C1-style notation.</span></span> <span data-ttu-id="370a5-334">Die Bezüge müssen den vollständigen Pfad der zu konsolidierenden Blätter enthalten.</span><span class="sxs-lookup"><span data-stu-id="370a5-334">The references must include the full path of sheets to be consolidated.</span></span></param>
        <param name="Function"><span data-ttu-id="370a5-335">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-335">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" />.</span></span> <span data-ttu-id="370a5-336">Kann eine der folgenden <b>XlConsilidationFunction -Konstanten</b> sein:<b>xlAverage</b> <paramref name="default" /> <b>xlCount</b><b>xlCountNums</b><b>xlMax</b><b>xlMin</b><b>xlProduct</b><b>xlStDev</b><b>xlStDevP</b><b>xlSum</b><b>xlVarP</b><b></b></span><span class="sxs-lookup"><span data-stu-id="370a5-336">Can be one of the following <b>XlConsilidationFunction</b> constants:<b>xlAverage</b><paramref name="default" /><b>xlCount</b><b>xlCountNums</b><b>xlMax</b><b>xlMin</b><b>xlProduct</b><b>xlStDev</b><b>xlStDevP</b><b>xlSum</b><b>xlVar</b><b>xlVarP</b></span></span></param>
        <param name="TopRow"><span data-ttu-id="370a5-337">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-337">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-338"><b>True,</b> um Daten basierend auf Spaltentiteln in der obersten Zeile der Konsolidierungsbereiche zu konsolidieren; <b>False,</b> um Daten nach Position zu konsolidieren.</span><span class="sxs-lookup"><span data-stu-id="370a5-338"><b>True</b> to consolidate data based on column titles in the top row of the consolidation ranges; <b>False</b> to consolidate data by position.</span></span> <span data-ttu-id="370a5-339">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-339">The default value is <b>False</b>.</span></span></param>
        <param name="LeftColumn"><span data-ttu-id="370a5-340">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-340">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-341"><b>True,</b> um Daten basierend auf Zeilentiteln in der linken Spalte der Konsolidierungsbereiche zu konsolidieren; <b>False,</b> um Daten nach Position zu konsolidieren.</span><span class="sxs-lookup"><span data-stu-id="370a5-341"><b>True</b> to consolidate data based on row titles in the left column of the consolidation ranges; <b>False</b> to consolidate data by position.</span></span> <span data-ttu-id="370a5-342">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-342">The default value is <b>False</b>.</span></span></param>
        <param name="CreateLinks"><span data-ttu-id="370a5-343">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-343">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-344"><b>True,</b> wenn für die Konsolidierung Arbeitsblattverknüpfungen verwendet werden; <b>False,</b> wenn die Daten von der Konsolidierung kopiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-344"><b>True</b> to have the consolidation use worksheet links; <b>False</b> to have the consolidation copy the data.</span></span> <span data-ttu-id="370a5-345">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-345">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="370a5-346">Konsolidiert Daten aus mehreren Bereichen verschiedener Arbeitblätter zu einem einzigen Bereich in einem einzelnen Arbeitsblatt.</span><span class="sxs-lookup"><span data-stu-id="370a5-346">Consolidates data from multiple ranges on multiple worksheets into a single range on a single worksheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public object Copy (object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Copy([in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Copy(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy (Optional Destination As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination"><span data-ttu-id="370a5-347">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-347">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-348">Gibt den neuen Bereich an, in den der angegebene Bereich kopiert wird.</span><span class="sxs-lookup"><span data-stu-id="370a5-348">Specifies the new range to which the specified range will be copied.</span></span> <span data-ttu-id="370a5-349">Fehlt dieses Argument, kopiert Microsoft Excel den Bereich in die Zwischenablage.</span><span class="sxs-lookup"><span data-stu-id="370a5-349">If this argument is omitted, Microsoft Excel copies the range to the Clipboard.</span></span></param>
        <summary><span data-ttu-id="370a5-350">Kopiert den Bereich in den angegebenen Bereich oder in die Zwischenablage.</span><span class="sxs-lookup"><span data-stu-id="370a5-350">Copies the range to the specified range or to the Clipboard.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFromRecordset">
      <MemberSignature Language="C#" Value="public int CopyFromRecordset (object Data, object MaxRows, object MaxColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CopyFromRecordset([in]object Data, [in]object MaxRows, [in]object MaxColumns) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CopyFromRecordset(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyFromRecordset (Data As Object, Optional MaxRows As Object, Optional MaxColumns As Object) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1152)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Data" Type="System.Object" />
        <Parameter Name="MaxRows" Type="System.Object" />
        <Parameter Name="MaxColumns" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Data"><span data-ttu-id="370a5-351">Required <b>-Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-351">Required <b>Object</b>.</span></span> <span data-ttu-id="370a5-352">Das <b>Recordset</b>-Objekt, das in den Bereich kopiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-352">The <b>Recordset</b> object to copy into the range.</span></span></param>
        <param name="MaxRows"><span data-ttu-id="370a5-353">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-353">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-354">Die maximale Anzahl von Datensätzen, die in das Arbeitsblatt kopiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-354">The maximum number of records to copy onto the worksheet.</span></span> <span data-ttu-id="370a5-355">Wenn Sie dieses Argument nicht angeben, werden alle Datensätze im <b>Recordset</b>-Objekt kopiert.</span><span class="sxs-lookup"><span data-stu-id="370a5-355">If this argument is omitted, all the records in the <b>Recordset</b> object are copied.</span></span></param>
        <param name="MaxColumns"><span data-ttu-id="370a5-356">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-356">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-357">Die maximale Anzahl von in das Arbeitsblatt zu kopierenden Feldern.</span><span class="sxs-lookup"><span data-stu-id="370a5-357">The maximum number of fields to copy onto the worksheet.</span></span> <span data-ttu-id="370a5-358">Wenn Sie dieses Argument nicht angeben, werden alle Felder im <b>Recordset</b>-Objekt kopiert.</span><span class="sxs-lookup"><span data-stu-id="370a5-358">If this argument is omitted, all the fields in the <b>Recordset</b> object are copied.</span></span></param>
        <summary><span data-ttu-id="370a5-359">Kopiert den Inhalt eines ADO- oder DAO-<b>Recordset</b>-Objekts in ein Arbeitsblatt, wobei an der linken oberen Ecke des angegebenen Bereichs begonnen wird.</span><span class="sxs-lookup"><span data-stu-id="370a5-359">Copies the contents of an ADO or DAO <b>Recordset</b> object onto a worksheet, beginning at the upper-left corner of the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-360">Enthält das <b>Recordset</b>-Objekt Felder mit OLE-Objekten, schlägt diese Methode fehl.</span><span class="sxs-lookup"><span data-stu-id="370a5-360">If the <b>Recordset</b> object contains fields with OLE objects in them, this method fails.</span></span></para>
          <para><span data-ttu-id="370a5-361">Das Kopieren beginnt mit der aktuellen Zeile des <b>Recordset</b>-Objekts.</span><span class="sxs-lookup"><span data-stu-id="370a5-361">Copying begins at the current row of the <b>Recordset</b> object.</span></span> <span data-ttu-id="370a5-362">Nach dem Kopieren hat die <b>EOF</b>-Eigenschaft des <b>Recordset</b>-Objekts den Wert <b>True</b>True.</span><span class="sxs-lookup"><span data-stu-id="370a5-362">After copying is completed, the <b>EOF</b> property of the <b>Recordset</b> object is <b>True</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyPicture">
      <MemberSignature Language="C#" Value="public object CopyPicture (Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CopyPicture([in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]valuetype Microsoft.Office.Interop.Excel.XlCopyPictureFormat Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CopyPicture(Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlCopyPictureFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyPicture (Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional Format As XlCopyPictureFormat = Microsoft.Office.Interop.Excel.XlCopyPictureFormat.xlPicture) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(213)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />
      </Parameters>
      <Docs>
        <param name="Appearance"><span data-ttu-id="370a5-363">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-363">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPictureAppearance" />.</span></span> <span data-ttu-id="370a5-364">Gibt an, wie das Bild kopiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-364">Specifies how the picture should be copied.</span></span> <span data-ttu-id="370a5-365">Dies kann eine der folgenden <b>XlCopyPictureFormat -Konstanten</b> sein:<b>xlBitmap</b><b>xlPicture</b><paramref name="default" /></span><span class="sxs-lookup"><span data-stu-id="370a5-365">Can be one of the following <b>XlCopyPictureFormat</b> constants:<b>xlBitmap</b><b>xlPicture</b><paramref name="default" /></span></span></param>
        <param name="Format"><span data-ttu-id="370a5-366">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-366">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlCopyPictureFormat" />.</span></span> <span data-ttu-id="370a5-367">Das Bildformat.</span><span class="sxs-lookup"><span data-stu-id="370a5-367">The format of the picture.</span></span> <span data-ttu-id="370a5-368">Dies kann eine der folgenden <b>XlPictureAppearance -Konstanten</b> sein:<b>xlPrinter</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-368">Can be one of the following <b>XlPictureAppearance</b> constants:<b>xlPrinter</b>.</span></span> <span data-ttu-id="370a5-369">Das Bild wird so kopiert, wie es beim Drucken angezeigt wird. <b>xlScreen</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-369">The picture is copied as it will look when it's printed.<b>xlScreen</b><paramref name="default" />.</span></span> <span data-ttu-id="370a5-370">Das Bild wird so kopiert, dass es seiner Darstellung auf dem Bildschirm so weit wie möglich entspricht.</span><span class="sxs-lookup"><span data-stu-id="370a5-370">The picture is copied to resemble its display on the screen as closely as possible.</span></span></param>
        <summary><span data-ttu-id="370a5-371">Kopiert das ausgewählte Objekt als Bild in die Zwischenablage.</span><span class="sxs-lookup"><span data-stu-id="370a5-371">Copies the selected object to the Clipboard as a picture.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-372">Gibt die Anzahl der Objekte in der Auflistung zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-372">Returns the number of objects in the collection.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CountLarge">
      <MemberSignature Language="C#" Value="public object CountLarge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CountLarge" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.CountLarge" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CountLarge As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CountLarge { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2499)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2499)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-373">Zählt den größten Wert in einem bestimmten Wertebereich.</span><span class="sxs-lookup"><span data-stu-id="370a5-373">Counts the largest value in a given Range of values.</span></span> <span data-ttu-id="370a5-374">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="370a5-374">Read-only.</span></span></summary>
        <value><span data-ttu-id="370a5-375"><b>Objekt</b></span><span class="sxs-lookup"><span data-stu-id="370a5-375"><b>Object</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNames">
      <MemberSignature Language="C#" Value="public object CreateNames (object Top, object Left, object Bottom, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateNames([in]object Top, [in]object Left, [in]object Bottom, [in]object Right) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CreateNames(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNames (Optional Top As Object, Optional Left As Object, Optional Bottom As Object, Optional Right As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(457)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Top" Type="System.Object" />
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Bottom" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Top"><span data-ttu-id="370a5-376">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-376">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-377">Beim Wert <b>True</b> werden die Namen aufgrund der Beschriftungen in der obersten Zeile erstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-377"><b>True</b> to create names by using labels in the top row.</span></span> <span data-ttu-id="370a5-378">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-378">The default value is <b>False</b>.</span></span></param>
        <param name="Left"><span data-ttu-id="370a5-379">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-379">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-380">Beim Wert <b>True</b> werden die Namen aufgrund der Beschriftungen in der linken Spalte erstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-380"><b>True</b> to create names by using labels in the left column.</span></span> <span data-ttu-id="370a5-381">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-381">The default value is <b>False</b>.</span></span></param>
        <param name="Bottom"><span data-ttu-id="370a5-382">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-382">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-383">Beim Wert <b>True</b> werden die Namen aufgrund der Beschriftungen in der untersten Zeile erstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-383"><b>True</b> to create names by using labels in the bottom row.</span></span> <span data-ttu-id="370a5-384">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-384">The default value is <b>False</b>.</span></span></param>
        <param name="Right"><span data-ttu-id="370a5-385">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-385">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-386">Beim Wert <b>True</b> werden die Namen aufgrund der Beschriftungen in der rechten Spalte erstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-386"><b>True</b> to create names by using labels in the right column.</span></span> <span data-ttu-id="370a5-387">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-387">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="370a5-388">Diese Methode übernimmt Beschriftungen des Arbeitsblatts als Namen für den angegebenen Bereich.</span><span class="sxs-lookup"><span data-stu-id="370a5-388">Creates names in the specified range, based on text labels in the sheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-389">Wenn Sie keins von , , oder angeben, erraten Microsoft Excel die Position der Beschriftungen, basierend auf der Form des <paramref name="Top" /> <paramref name="Left" /> <paramref name="Bottom" /> <paramref name="Right" /> angegebenen Bereichs.</span><span class="sxs-lookup"><span data-stu-id="370a5-389">If you don’t specify one of <paramref name="Top" />, <paramref name="Left" />, <paramref name="Bottom" />, or <paramref name="Right" />, Microsoft Excel guesses the location of the text labels, based on the shape of the specified range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePublisher">
      <MemberSignature Language="C#" Value="public object CreatePublisher (object Edition, Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, object ContainsPICT, object ContainsBIFF, object ContainsRTF, object ContainsVALU);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreatePublisher([in]object Edition, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]object ContainsPICT, [in]object ContainsBIFF, [in]object ContainsRTF, [in]object ContainsVALU) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.CreatePublisher(System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePublisher (Optional Edition As Object, Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional ContainsPICT As Object, Optional ContainsBIFF As Object, Optional ContainsRTF As Object, Optional ContainsVALU As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(458)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.Object" />
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="ContainsPICT" Type="System.Object" />
        <Parameter Name="ContainsBIFF" Type="System.Object" />
        <Parameter Name="ContainsRTF" Type="System.Object" />
        <Parameter Name="ContainsVALU" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Edition"><span data-ttu-id="370a5-390">Dieser Parameter ist nur für Macintosh gedacht und sollte nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-390">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="Appearance"><span data-ttu-id="370a5-391">Dieser Parameter ist nur für Macintosh gedacht und sollte nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-391">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="ContainsPICT"><span data-ttu-id="370a5-392">Dieser Parameter ist nur für Macintosh gedacht und sollte nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-392">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="ContainsBIFF"><span data-ttu-id="370a5-393">Dieser Parameter ist nur für Macintosh gedacht und sollte nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-393">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="ContainsRTF"><span data-ttu-id="370a5-394">Dieser Parameter ist nur für Macintosh gedacht und sollte nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-394">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="ContainsVALU"><span data-ttu-id="370a5-395">Dieser Parameter ist nur für Macintosh gedacht und sollte nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-395">This parameter is for Macintosh only and should not be used.</span></span></param>
        <summary><span data-ttu-id="370a5-396">Sie haben Hilfe zu einem Schlüsselwort angefordert, das nur auf dem Macintosh verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="370a5-396">You have requested Help for a keyword used only on the Macintosh.</span></span> <span data-ttu-id="370a5-397">Weitere Informationen zu diesem Schlüsselwort finden Sie in der Sprachverzeichnishilfe zu Microsoft Office Macintosh Edition.</span><span class="sxs-lookup"><span data-stu-id="370a5-397">For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-398">Gibt einen ganzzahligen 32-Bit-Wert zurück, der die Anwendung angibt, in der dieses Objekt erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="370a5-398">Returns a 32-bit integer that indicates the application in which this object was created.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-399">Wenn das angegebene Objekt in Microsoft Excel erstellt wurde, gibt diese Eigenschaft die Zeichenfolge XCEL zurück, die der Hexadezimalzahl 5843454C entspricht.</span><span class="sxs-lookup"><span data-stu-id="370a5-399">If the specified object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span></para>
          <para><span data-ttu-id="370a5-400">Die <b>Creator</b>-Eigenschaft wurde speziell für den Einsatz in Microsoft Excel für den Macintosh geschaffen, wo jede Anwendung einen Urhebercode aus vier Zeichen besitzt.</span><span class="sxs-lookup"><span data-stu-id="370a5-400">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="370a5-401">Der Urhebercode für Microsoft Excel lautet "XCEL".</span><span class="sxs-lookup"><span data-stu-id="370a5-401">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentArray">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range CurrentArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range CurrentArray" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.CurrentArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentArray As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ CurrentArray { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(501)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(501)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-402">Wenn die angegebene Zelle Teil eines Arrays ist, wird ein Objekt zurückgegeben, <see cref="T:Microsoft.Office.Interop.Excel.Range" /> das das gesamte Array darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-402">If the specified cell is part of an array, returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the entire array.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentRegion">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range CurrentRegion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range CurrentRegion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.CurrentRegion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentRegion As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ CurrentRegion { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(243)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(243)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-403">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das den aktuellen Bereich darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-403">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the current region.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-404">Bei dem aktuellen Bereich handelt es sich um einen Bereich, der aus einer beliebigen Kombination von leeren Zeilen und Spalten besteht.</span><span class="sxs-lookup"><span data-stu-id="370a5-404">The current region is a range bounded by any combination of blank rows and blank columns.</span></span></para>
          <para><span data-ttu-id="370a5-405">Diese Eigenschaft ist nützlich für viele Vorgänge, die die Auswahl automatisch erweitern, um den gesamten aktuellen Bereich, z. B. die Methode, <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFormat(Microsoft.Office.Interop.Excel.XlRangeAutoFormat,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> zu enthalten.</span><span class="sxs-lookup"><span data-stu-id="370a5-405">This property is useful for many operations that automatically expand the selection to include the entire current region, such as the <see cref="M:Microsoft.Office.Interop.Excel.Range.AutoFormat(Microsoft.Office.Interop.Excel.XlRangeAutoFormat,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method.</span></span></para>
          <para><span data-ttu-id="370a5-406">Diese Eigenschaft kann nicht für ein geschütztes Arbeitsblatt verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-406">This property cannot be used on a protected worksheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public object Cut (object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Cut([in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Cut(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Cut (Optional Destination As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(565)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination"><span data-ttu-id="370a5-407">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-407">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-408">Der Bereich, in den das Objekt eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-408">The range where the object should be pasted.</span></span> <span data-ttu-id="370a5-409">Wenn Sie dieses Argument nicht angeben, wird das ausgeschnittene Objekt in der Zwischenablage gespeichert.</span><span class="sxs-lookup"><span data-stu-id="370a5-409">If this argument is omitted, the object is cut to the Clipboard.</span></span></param>
        <summary><span data-ttu-id="370a5-410">Schneidet das Objekt aus, legt es in die Zwischenablage oder fügt es an einer angegebenen Stelle ein.</span><span class="sxs-lookup"><span data-stu-id="370a5-410">Cuts the object to the Clipboard or pastes it into a specified destination.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-411">Der ausgeschnittene Bereich muss aus angrenzenden Zellen bestehen.</span><span class="sxs-lookup"><span data-stu-id="370a5-411">The cut range must be made up of adjacent cells.</span></span></para>
          <para><span data-ttu-id="370a5-412">Es können nur eingebettete Diagramme ausgeschnitten werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-412">Only embedded charts can be cut.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSeries">
      <MemberSignature Language="C#" Value="public object DataSeries (object Rowcol, Microsoft.Office.Interop.Excel.XlDataSeriesType Type = Microsoft.Office.Interop.Excel.XlDataSeriesType.xlDataSeriesLinear, Microsoft.Office.Interop.Excel.XlDataSeriesDate Date = Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlDay, object Step, object Stop, object Trend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DataSeries([in]object Rowcol, [in]valuetype Microsoft.Office.Interop.Excel.XlDataSeriesType Type, [in]valuetype Microsoft.Office.Interop.Excel.XlDataSeriesDate Date, [in]object Step, [in]object Stop, [in]object Trend) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.DataSeries(System.Object,Microsoft.Office.Interop.Excel.XlDataSeriesType,Microsoft.Office.Interop.Excel.XlDataSeriesDate,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DataSeries (Optional Rowcol As Object, Optional Type As XlDataSeriesType = Microsoft.Office.Interop.Excel.XlDataSeriesType.xlDataSeriesLinear, Optional Date As XlDataSeriesDate = Microsoft.Office.Interop.Excel.XlDataSeriesDate.xlDay, Optional Step As Object, Optional Stop As Object, Optional Trend As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(464)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Rowcol" Type="System.Object" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataSeriesType" />
        <Parameter Name="Date" Type="Microsoft.Office.Interop.Excel.XlDataSeriesDate" />
        <Parameter Name="Step" Type="System.Object" />
        <Parameter Name="Stop" Type="System.Object" />
        <Parameter Name="Trend" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Rowcol"><span data-ttu-id="370a5-413">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-413">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-414">Dies kann <b>die XlRows-</b> oder <b>xlColumns-Konstante</b> sein, damit die Datenreihe in Zeilen oder Spalten eingegeben wird.</span><span class="sxs-lookup"><span data-stu-id="370a5-414">Can be the <b>xlRows</b> or <b>xlColumns</b> constant to have the data series entered in rows or columns, respectively.</span></span> <span data-ttu-id="370a5-415">Wenn Sie dieses Argument nicht angeben, werden Größe und Form des Bereichs verwendet.</span><span class="sxs-lookup"><span data-stu-id="370a5-415">If this argument is omitted, the size and shape of the range is used.</span></span></param>
        <param name="Type"><span data-ttu-id="370a5-416">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesType" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-416">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesType" />.</span></span> <span data-ttu-id="370a5-417">Dies kann eine der folgenden <b>XlDataSeriesType -Konstanten</b> sein:<b>xlAutoFill</b><b>xlDataSeriesLinear</b> <paramref name="default" /> <b>xlChronological</b><b>xlGrowth</b></span><span class="sxs-lookup"><span data-stu-id="370a5-417">Can be one of the following <b>XlDataSeriesType</b> constants:<b>xlAutoFill</b><b>xlDataSeriesLinear</b><paramref name="default" /><b>xlChronological</b><b>xlGrowth</b></span></span></param>
        <param name="Date"><span data-ttu-id="370a5-418">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesDate" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-418">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataSeriesDate" />.</span></span> <span data-ttu-id="370a5-419">Wenn das Argument Type <b>xlChronological</b>ist, gibt das <b>Argument Date</b> die Schrittdatumseinheit an.</span><span class="sxs-lookup"><span data-stu-id="370a5-419">If the Type argument is <b>xlChronological</b>, the <b>Date</b> argument indicates the step date unit.</span></span> <span data-ttu-id="370a5-420">Dies kann eine der folgenden <b>XlDataSeriesDate-Konstanten</b> sein:<b>xlDay</b> <paramref name="default" /> <b>xlWeekday</b><b>xlMonth</b><b>xlYear</b></span><span class="sxs-lookup"><span data-stu-id="370a5-420">Can be one of the following <b>XlDataSeriesDate</b> constants:<b>xlDay</b><paramref name="default" /><b>xlWeekday</b><b>xlMonth</b><b>xlYear</b></span></span></param>
        <param name="Step"><span data-ttu-id="370a5-421">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-421">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-422">Das Inkrement für die Reihe.</span><span class="sxs-lookup"><span data-stu-id="370a5-422">The step value for the series.</span></span> <span data-ttu-id="370a5-423">Der Standardwert ist 1.</span><span class="sxs-lookup"><span data-stu-id="370a5-423">The default value is 1.</span></span></param>
        <param name="Stop"><span data-ttu-id="370a5-424">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-424">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-425">Der Endwert der Reihe.</span><span class="sxs-lookup"><span data-stu-id="370a5-425">The stop value for the series.</span></span> <span data-ttu-id="370a5-426">Wenn Sie dieses Argument nicht angeben, wird der Bereich in Microsoft Excel bis zum Ende mit Daten aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="370a5-426">If this argument is omitted, Microsoft Excel fills to the end of the range.</span></span></param>
        <param name="Trend"><span data-ttu-id="370a5-427">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-427">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-428"><b>True,</b> um einen linearen Trend oder Wachstumstrend zu erstellen; <b>False,</b> um eine Standarddatenreihe zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="370a5-428"><b>True</b> to create a linear trend or growth trend; <b>False</b> to create a standard data series.</span></span> <span data-ttu-id="370a5-429">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-429">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="370a5-430">Erstellt im angegebenen Bereich eine Datenreihe.</span><span class="sxs-lookup"><span data-stu-id="370a5-430">Creates a data series in the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public object Delete (object Shift);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Delete([in]object Shift) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Delete(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (Optional Shift As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Shift" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Shift"><span data-ttu-id="370a5-431">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-431">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-432">Gibt an, wie Zellen so verschoben werden, dass sie gelöschte Zellen ersetzen.</span><span class="sxs-lookup"><span data-stu-id="370a5-432">Specifies how to shift cells to replace deleted cells.</span></span> <span data-ttu-id="370a5-433">Dies kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlDeleteShiftDirection" /> Konstanten sein: <b>xlShiftToLeft</b> oder <b>xlShiftUp</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-433">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlDeleteShiftDirection" /> constants: <b>xlShiftToLeft</b> or <b>xlShiftUp</b>.</span></span> <span data-ttu-id="370a5-434">Wenn dieses Argument nicht angegeben ist, wird die Entscheidung von Microsoft Excel anhand der Bereichsform getroffen.</span><span class="sxs-lookup"><span data-stu-id="370a5-434">If this argument is omitted, Microsoft Excel decides based on the shape of the range.</span></span></param>
        <summary><span data-ttu-id="370a5-435">Löscht das Objekt.</span><span class="sxs-lookup"><span data-stu-id="370a5-435">Deletes the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Dependents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Dependents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Dependents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dependents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Dependents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(543)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(543)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-436">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das den Bereich darstellt, der alle abhängigen Zellen enthält.</span><span class="sxs-lookup"><span data-stu-id="370a5-436">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing all the dependents of a cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-437">Dabei kann es sich um eine Mehrfachauswahl (eine Vereinigung mehrerer <b>Range</b>-Objekte) handeln, falls mehrere Zellen abhängig sind.</span><span class="sxs-lookup"><span data-stu-id="370a5-437">This can be a multiple selection (a union of <b>Range</b> objects) if there’s more than one dependent.</span></span></para>
          <para><span data-ttu-id="370a5-438">Die <b>Dependents</b>-Eigenschaft funktioniert nur für das aktive Blatt und kann keine Remoteverweise nachverfolgen.</span><span class="sxs-lookup"><span data-stu-id="370a5-438">The <b>Dependents</b> property only works on the active sheet and can not trace remote references.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogBox">
      <MemberSignature Language="C#" Value="public object DialogBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DialogBox() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.DialogBox" />
      <MemberSignature Language="VB.NET" Value="Public Function DialogBox () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DialogBox();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(245)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-439">Zeigt ein Dialogfeld an, das durch eine Definitionstabelle für ein Dialogfeld in einer Makrovorlage aus der Version 4.0 von Microsoft Excel definiert wurde.</span><span class="sxs-lookup"><span data-stu-id="370a5-439">Displays a dialog box defined by a dialog box definition table on a Microsoft Excel 4.0 macro sheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-440">Diese Methode gibt die Nummer des ausgewählten Steuerelements zurück oder <b>false,</b> wenn der Benutzer auf die Schaltfläche "Abbrechen" klickt.</span><span class="sxs-lookup"><span data-stu-id="370a5-440">This method returns the number of the chosen control, or returns <b>False</b> if the user clicks the Cancel button.</span></span></para>
          <para><span data-ttu-id="370a5-441">Das zurückgegebene Objekt muss auf eine Dialogfelddefinitionstabelle in einem <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Microsoft Excel 4.0-Makroblatt verweisen.</span><span class="sxs-lookup"><span data-stu-id="370a5-441">The returned <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object must refer to a dialog box definition table on a Microsoft Excel 4.0 macro sheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectDependents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range DirectDependents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range DirectDependents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.DirectDependents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectDependents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ DirectDependents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(545)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(545)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-442">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das den Bereich darstellt, der alle direkten Abhängigen einer Zelle enthält.</span><span class="sxs-lookup"><span data-stu-id="370a5-442">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing all the direct dependents of a cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-443">Dabei kann es sich um eine Mehrfachauswahl (eine Vereinigung mehrerer <b>Range</b>-Objekte) handeln, falls mehrere Zellen abhängig sind.</span><span class="sxs-lookup"><span data-stu-id="370a5-443">This can be a multiple selection (a union of <b>Range</b> objects) if there’s more than one dependent.</span></span></para>
          <para><span data-ttu-id="370a5-444">Die <b>Direct Dependents</b>-Eigenschaft funktioniert nur für das aktive Blatt und kann keine Remoteverweise nachverfolgen.</span><span class="sxs-lookup"><span data-stu-id="370a5-444">The <b>Direct Dependents</b> property only works on the active sheet and can not trace remote references.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectPrecedents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range DirectPrecedents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range DirectPrecedents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.DirectPrecedents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectPrecedents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ DirectPrecedents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(546)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(546)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-445">Gibt ein Objekt zurück, das den Bereich darstellt, der alle direkten Vorgänger <see cref="T:Microsoft.Office.Interop.Excel.Range" /> einer Zelle enthält.</span><span class="sxs-lookup"><span data-stu-id="370a5-445">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range containing all the direct precedents of a cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-446">Die <b>DirectPrecedents</b>-Eigenschaft funktioniert nur für das aktive Blatt und kann keine Remoteverweise nachverfolgen.</span><span class="sxs-lookup"><span data-stu-id="370a5-446">The <b>DirectPrecedents</b> property only works on the active sheet and can not trace remote references.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Dirty">
      <MemberSignature Language="C#" Value="public void Dirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dirty() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Dirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dirty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2014)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-447">Bestimmt einen Bereich, der bei der nächsten Neuberechnung erneut berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-447">Designates a range to be recalculated when the next recalculation occurs.</span></span></summary>
        <remarks><para><span data-ttu-id="370a5-448">Die Methode erzwingt die Neuberechnung des angegebenen Bereichs für Zellen, die von Microsoft Excel als neu berechnet <see cref="M:Microsoft.Office.Interop.Excel.Range.Calculate" /> werden müssen.</span><span class="sxs-lookup"><span data-stu-id="370a5-448">The <see cref="M:Microsoft.Office.Interop.Excel.Range.Calculate" /> method forces the specified range to be recalculated, for cells that Microsoft Excel understands as needing recalculation.</span></span></para>
          <para><span data-ttu-id="370a5-449">Wenn sich die Anwendung im manuellen Berechnungsmodus befindet, wird Excel mithilfe der Methode angewiesen, die angegebene Zelle zu identifizieren, <see cref="M:Microsoft.Office.Interop.Excel.Range.Dirty" /> die neu berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-449">If the application is in manual calculation mode, using the <see cref="M:Microsoft.Office.Interop.Excel.Range.Dirty" /> method instructs Excel to identify the specified cell to be recalculated.</span></span> <span data-ttu-id="370a5-450">Wenn sich die Anwendung im automatischen Berechnungsmodus befindet, weist die Verwendung der <b>Dirty</b> -Methode Excel an, eine Neuberechnung durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="370a5-450">If the application is in automatic calculation mode, using the <b>Dirty</b> method instructs Excel to perform a recalculation.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscardChanges">
      <MemberSignature Language="C#" Value="public void DiscardChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscardChanges() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.DiscardChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub DiscardChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DiscardChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2856)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-451">Verwirft alle Änderungen in den bearbeiteten Zellen des Bereichs.</span><span class="sxs-lookup"><span data-stu-id="370a5-451">Discards all changes in the edited cells of the range.</span></span></summary>
        <remarks><para><span data-ttu-id="370a5-452">Für einen Bereich, der auf einer OLAP-Datenquelle basiert, entfernt diese Methode alle in die Zellen eingegebenen Werte und Formeln und führt dann einen Aktualisierungsvorgang aus, um die neuesten Werte aus der Datenquelle abzurufen.</span><span class="sxs-lookup"><span data-stu-id="370a5-452">For a range based on an OLAP data source, this method removes all values and formulas entered in the cells, and then runs an update operation to retrieve the latest values from the data source.</span></span> <span data-ttu-id="370a5-453">Sie legt den Datenquellenwert auf einen Nullverweis (Nothing in Visual Basic) für alle bearbeiteten Wertzellen fest und führt außerdem eine ROLLBACK TRANSACTION -Anweisung für den OLAP-Server aus.</span><span class="sxs-lookup"><span data-stu-id="370a5-453">It sets the data source value to a null reference (Nothing in Visual Basic) for all value cells that are edited, and also executes a ROLLBACK TRANSACTION statement against the OLAP server.</span></span> <span data-ttu-id="370a5-454">Bei Bereichen, die auf Nicht-OLAP-Datenquellen basieren, werden mit dieser Methode einfach alle bearbeiteten Zellen geräumt.</span><span class="sxs-lookup"><span data-stu-id="370a5-454">For ranges based on non-OLAP data sources, this method simply clears all edited cells.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DisplayFormat DisplayFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DisplayFormat DisplayFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.DisplayFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayFormat As DisplayFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DisplayFormat ^ DisplayFormat { Microsoft::Office::Interop::Excel::DisplayFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(666)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(666)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DisplayFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-455">Ruft ein <see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" /> Objekt ab, das die Anzeigeeinstellungen für den angegebenen Bereich darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-455">Gets a <see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" /> object that represents the display settings for the specified range.</span></span></summary>
        <value><span data-ttu-id="370a5-456">Ein <see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" /> Objekt, das die Anzeigeeinstellungen für den angegebenen Bereich darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-456">A <see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" /> object that represents the display settings for the specified range.</span></span></value>
        <remarks><para><span data-ttu-id="370a5-457">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="370a5-457">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EditionOptions">
      <MemberSignature Language="C#" Value="public object EditionOptions (Microsoft.Office.Interop.Excel.XlEditionType Type, Microsoft.Office.Interop.Excel.XlEditionOptionsOption Option, object Name, object Reference, Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Microsoft.Office.Interop.Excel.XlPictureAppearance ChartSize = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, object Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EditionOptions([in]valuetype Microsoft.Office.Interop.Excel.XlEditionType Type, [in]valuetype Microsoft.Office.Interop.Excel.XlEditionOptionsOption Option, [in]object Name, [in]object Reference, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance Appearance, [in]valuetype Microsoft.Office.Interop.Excel.XlPictureAppearance ChartSize, [in]object Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.EditionOptions(Microsoft.Office.Interop.Excel.XlEditionType,Microsoft.Office.Interop.Excel.XlEditionOptionsOption,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlPictureAppearance,Microsoft.Office.Interop.Excel.XlPictureAppearance,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function EditionOptions (Type As XlEditionType, Option As XlEditionOptionsOption, Optional Name As Object, Optional Reference As Object, Optional Appearance As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional ChartSize As XlPictureAppearance = Microsoft.Office.Interop.Excel.XlPictureAppearance.xlScreen, Optional Format As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1131)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlEditionType" />
        <Parameter Name="Option" Type="Microsoft.Office.Interop.Excel.XlEditionOptionsOption" />
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="Reference" Type="System.Object" />
        <Parameter Name="Appearance" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="ChartSize" Type="Microsoft.Office.Interop.Excel.XlPictureAppearance" />
        <Parameter Name="Format" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="370a5-458">Dieser Parameter ist nur für Macintosh gedacht und sollte nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-458">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="Option"><span data-ttu-id="370a5-459">Dieser Parameter ist nur für Macintosh gedacht und sollte nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-459">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="Name"><span data-ttu-id="370a5-460">Dieser Parameter ist nur für Macintosh gedacht und sollte nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-460">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="Reference"><span data-ttu-id="370a5-461">Dieser Parameter ist nur für Macintosh gedacht und sollte nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-461">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="Appearance"><span data-ttu-id="370a5-462">Dieser Parameter ist nur für Macintosh gedacht und sollte nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-462">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="ChartSize"><span data-ttu-id="370a5-463">Dieser Parameter ist nur für Macintosh gedacht und sollte nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-463">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="Format"><span data-ttu-id="370a5-464">Dieser Parameter ist nur für Macintosh gedacht und sollte nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-464">This parameter is for Macintosh only and should not be used.</span></span></param>
        <summary><span data-ttu-id="370a5-465">Sie haben Hilfe zu einem Schlüsselwort angefordert, das nur auf dem Macintosh verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="370a5-465">You have requested Help for a keyword used only on the Macintosh.</span></span> <span data-ttu-id="370a5-466">Weitere Informationen zu diesem Schlüsselwort finden Sie in der Sprachverzeichnishilfe zu Microsoft Office Macintosh Edition.</span><span class="sxs-lookup"><span data-stu-id="370a5-466">For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range End[Microsoft.Office.Interop.Excel.XlDirection Direction] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range End(valuetype Microsoft.Office.Interop.Excel.XlDirection)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.End(Microsoft.Office.Interop.Excel.XlDirection)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property End(Direction As XlDirection) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ End[Microsoft::Office::Interop::Excel::XlDirection] { Microsoft::Office::Interop::Excel::Range ^ get(Microsoft::Office::Interop::Excel::XlDirection Direction); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(500)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Direction" Type="Microsoft.Office.Interop.Excel.XlDirection" />
      </Parameters>
      <Docs>
        <param name="Direction"><span data-ttu-id="370a5-467"><see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="370a5-467">Required <see cref="T:Microsoft.Office.Interop.Excel.XlDirection" />.</span></span> <span data-ttu-id="370a5-468">Die Richtung, in die gewechselt werden soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-468">The direction in which to move.</span></span></param>
        <summary><span data-ttu-id="370a5-469">Gibt ein Objekt zurück, das die Zelle am Ende des Bereichs <see cref="T:Microsoft.Office.Interop.Excel.Range" /> darstellt, der den Quellbereich enthält.</span><span class="sxs-lookup"><span data-stu-id="370a5-469">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the cell at the end of the region that contains the source range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-470">Äquivalent zum Drücken von ENDE-TASTE+NACH-OBEN-TASTE, ENDE-TASTE+NACH-UNTEN-TASTE, ENDE-TASTE+NACH-LINKS-TASTE oder ENDE-TASTE+NACH-RECHTS-TASTE.</span><span class="sxs-lookup"><span data-stu-id="370a5-470">Equivalent to pressing END+UP ARROW, END+DOWN ARROW, END+LEFT ARROW, or END+RIGHT ARROW.</span></span> </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EntireColumn">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range EntireColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range EntireColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.EntireColumn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntireColumn As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ EntireColumn { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(246)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(246)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-471">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das die gesamte Spalte (oder spalten) darstellt, die den angegebenen Bereich enthält.</span><span class="sxs-lookup"><span data-stu-id="370a5-471">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the entire column (or columns) that contains the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntireRow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range EntireRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range EntireRow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.EntireRow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntireRow As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ EntireRow { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(247)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(247)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-472">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das die gesamte Zeile (oder zeilen) darstellt, die den angegebenen Bereich enthält.</span><span class="sxs-lookup"><span data-stu-id="370a5-472">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the entire row (or rows) that contains the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Errors Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Errors Errors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As Errors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Errors ^ Errors { Microsoft::Office::Interop::Excel::Errors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2015)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2015)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Errors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-473">Ermöglicht dem Benutzer den Zugriff auf Optionen für die Fehlerüberprüfung.</span><span class="sxs-lookup"><span data-stu-id="370a5-473">Allows the user to access error checking options.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-474">Verweisen Sie <see cref="T:Microsoft.Office.Interop.Excel.Errors" /> auf das Objekt, um eine Liste der Indexwerte anzuzeigen, die optionen für die Fehlerüberprüfung zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="370a5-474">Reference the <see cref="T:Microsoft.Office.Interop.Excel.Errors" /> object to view a list of index values associated with error checking options.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, [in]object Filename, [in]object Quality, [in]object IncludeDocProperties, [in]object IgnorePrintAreas, [in]object From, [in]object To, [in]object OpenAfterPublish, [in]object FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (Type As XlFixedFormatType, Optional Filename As Object, Optional Quality As Object, Optional IncludeDocProperties As Object, Optional IgnorePrintAreas As Object, Optional From As Object, Optional To As Object, Optional OpenAfterPublish As Object, Optional FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="370a5-475">Erforderlich <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatType" /> Der Typ des Dateiformats, in das exportiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-475">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatType" /> The type of file format to export to.</span></span></param>
        <param name="Filename"><span data-ttu-id="370a5-476">Optionales <b>Objekt</b> Der Dateiname der zu speichernde Datei.</span><span class="sxs-lookup"><span data-stu-id="370a5-476">Optional <b>Object</b> The file name of the file to be saved.</span></span> <span data-ttu-id="370a5-477">Sie können einen vollständigen Pfad hinzufügen oder short_Excel2007 datei im aktuellen Ordner speichern.</span><span class="sxs-lookup"><span data-stu-id="370a5-477">You can include a full path, or short_Excel2007 saves the file in the current folder.</span></span></param>
        <param name="Quality"><span data-ttu-id="370a5-478">Optionales <b>Objekt</b> in der Regel als <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-478">Optional <b>Object</b> Typically formatted as a <see cref="T:Microsoft.Office.Interop.Excel.XlFixedFormatQuality" />.</span></span> <span data-ttu-id="370a5-479">Gibt die Qualität der veröffentlichten Datei an.</span><span class="sxs-lookup"><span data-stu-id="370a5-479">Specifies the quality of the published file.</span></span></param>
        <param name="IncludeDocProperties"><span data-ttu-id="370a5-480">Optionales <b>Objekt</b> auf <b>"True"</b> festgelegt, um die Dokumenteigenschaften zu enthalten; andernfalls <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-480">Optional <b>Object</b> set to <b>True</b> to include the document properties; otherwise <b>False</b>.</span></span></param>
        <param name="IgnorePrintAreas"><span data-ttu-id="370a5-481">Optionales <b>Objekt</b> auf <b>"True"</b> festgelegt, um alle Druckbereiche zu ignorieren, die beim Veröffentlichen festgelegt wurden; andernfalls <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-481">Optional <b>Object</b> set to <b>True</b> to ignore any print areas set when publishing; otherwise <b>False</b>.</span></span></param>
        <param name="From"><span data-ttu-id="370a5-482">Optionales <b>Objekt</b> Die Nummer der Seite, auf der mit der Veröffentlichung beginnen soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-482">Optional <b>Object</b> The number of the page at which to start publishing.</span></span> <span data-ttu-id="370a5-483">Wenn dieses Argument nicht angegeben wird, beginnt die Veröffentlichung am Anfang.</span><span class="sxs-lookup"><span data-stu-id="370a5-483">If this argument is omitted, publishing starts at the beginning.</span></span></param>
        <param name="To"><span data-ttu-id="370a5-484">Optionales <b>Objekt</b> Die Nummer der letzten zu veröffentlichende Seite.</span><span class="sxs-lookup"><span data-stu-id="370a5-484">Optional <b>Object</b> The number of the last page to publish.</span></span> <span data-ttu-id="370a5-485">Wenn Sie dieses Argument nicht angeben, wird bis zur letzten Seite veröffentlicht.</span><span class="sxs-lookup"><span data-stu-id="370a5-485">If this argument is omitted, publishing ends with the last page.</span></span></param>
        <param name="OpenAfterPublish"><span data-ttu-id="370a5-486">Optionales <b>Objekt</b> auf <b>"True"</b> festgelegt, um die Datei nach der Veröffentlichung im Viewer anzeigen zu lassen. andernfalls <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-486">Optional <b>Object</b> set to <b>True</b> to display the file in the viewer after it is published; otherwise <b>False</b>.</span></span></param>
        <param name="FixedFormatExtClassPtr"><span data-ttu-id="370a5-487">Optionaler <b>Objektzeiger</b> auf die <b>FixedFormatExt-Klasse.</b></span><span class="sxs-lookup"><span data-stu-id="370a5-487">Optional <b>Object</b> Pointer to the <b>FixedFormatExt</b> class.</span></span></param>
        <summary><span data-ttu-id="370a5-488">Exportiert in eine Datei mit dem angegebenen Format.</span><span class="sxs-lookup"><span data-stu-id="370a5-488">Exports to a file of the specified format.</span></span></summary>
        <remarks><para><span data-ttu-id="370a5-p192">Diese Methode unterstützt außerdem das Initialisieren eines Add-Ins, um eine Datei in eine Datei mit einem festen Format zu exportieren. In Excel wird beispielsweise eine Dateiformatkonvertierung ausgeführt, wenn Konverter vorhanden sind. Die Konvertierung wird normalerweise vom Benutzer initiiert.</span><span class="sxs-lookup"><span data-stu-id="370a5-p192">This method also supports initializing an add-in to export a file to a fixed-format file. For example, Excel will perform file format conversion if the converters are  present. The conversion is usually initiated by the user.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FillDown">
      <MemberSignature Language="C#" Value="public object FillDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillDown() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillDown" />
      <MemberSignature Language="VB.NET" Value="Public Function FillDown () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillDown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(248)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-492">Füllt die Zellen eines Bereichs beginnend mit der oder den oberste(n) Zellen nach unten hin auf.</span><span class="sxs-lookup"><span data-stu-id="370a5-492">Fills down from the top cell or cells in the specified range to the bottom of the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-493">Dabei werden der Inhalt und die Formatierung der Zelle(n) in der obersten Zeile eines Bereichs in alle anderen Zeilen des Bereichs kopiert.</span><span class="sxs-lookup"><span data-stu-id="370a5-493">The contents and formatting of the cell or cells in the top row of a range are copied into the rest of the rows in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FillLeft">
      <MemberSignature Language="C#" Value="public object FillLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillLeft() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillLeft" />
      <MemberSignature Language="VB.NET" Value="Public Function FillLeft () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillLeft();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(249)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-494">Füllt die Zellen eines Bereichs beginnend mit der oder den rechten Zelle(n) bis zum linken Ende auf.</span><span class="sxs-lookup"><span data-stu-id="370a5-494">Fills left from the rightmost cell or cells in the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-495">Dabei werden der Inhalt und die Formatierung der Zelle(n) in der rechten Spalte eines Bereichs in alle anderen Spalten des Bereichs kopiert.</span><span class="sxs-lookup"><span data-stu-id="370a5-495">The contents and formatting of the cell or cells in the rightmost column of a range are copied into the rest of the columns in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FillRight">
      <MemberSignature Language="C#" Value="public object FillRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillRight() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillRight" />
      <MemberSignature Language="VB.NET" Value="Public Function FillRight () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillRight();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(250)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-496">Füllt die Zellen eines Bereichs beginnend mit der oder den linken Zelle(n) bis zum rechten Ende auf.</span><span class="sxs-lookup"><span data-stu-id="370a5-496">Fills right from the leftmost cell or cells in the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-497">Dabei wird der Inhalt und die Formatierung der Zelle(n) in der linken Spalte eines Bereichs in alle anderen Spalten des Bereichs kopiert.</span><span class="sxs-lookup"><span data-stu-id="370a5-497">The contents and formatting of the cell or cells in the leftmost column of a range are copied into the rest of the columns in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FillUp">
      <MemberSignature Language="C#" Value="public object FillUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FillUp() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FillUp" />
      <MemberSignature Language="VB.NET" Value="Public Function FillUp () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FillUp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(251)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-498">Füllt die Zellen eines Bereichs beginnend mit der oder den unteren Zelle(n) nach oben hin auf.</span><span class="sxs-lookup"><span data-stu-id="370a5-498">Fills up from the bottom cell or cells in the specified range to the top of the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-499">Dabei wird der Inhalt und die Formatierung der Zelle(n) in der untersten Zeile eines Bereichs in alle anderen Zeilen des Bereichs kopiert.</span><span class="sxs-lookup"><span data-stu-id="370a5-499">The contents and formatting of the cell or cells in the bottom row of a range are copied into the rest of the rows in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Find (object What, object After, object LookIn, object LookAt, object SearchOrder, Microsoft.Office.Interop.Excel.XlSearchDirection SearchDirection = Microsoft.Office.Interop.Excel.XlSearchDirection.xlNext, object MatchCase, object MatchByte, object SearchFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range Find([in]object What, [in]object After, [in]object LookIn, [in]object LookAt, [in]object SearchOrder, [in]valuetype Microsoft.Office.Interop.Excel.XlSearchDirection SearchDirection, [in]object MatchCase, [in]object MatchByte, [in]object SearchFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (What As Object, Optional After As Object, Optional LookIn As Object, Optional LookAt As Object, Optional SearchOrder As Object, Optional SearchDirection As XlSearchDirection = Microsoft.Office.Interop.Excel.XlSearchDirection.xlNext, Optional MatchCase As Object, Optional MatchByte As Object, Optional SearchFormat As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(398)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
        <Parameter Name="LookIn" Type="System.Object" />
        <Parameter Name="LookAt" Type="System.Object" />
        <Parameter Name="SearchOrder" Type="System.Object" />
        <Parameter Name="SearchDirection" Type="Microsoft.Office.Interop.Excel.XlSearchDirection" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="MatchByte" Type="System.Object" />
        <Parameter Name="SearchFormat" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="What"><span data-ttu-id="370a5-500">Required <b>-Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-500">Required <b>Object</b>.</span></span> <span data-ttu-id="370a5-501">Der Inhalt, nach dem gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-501">The data to search for.</span></span> <span data-ttu-id="370a5-502">Dabei kann es sich um eine Zeichenfolge oder einen beliebigen Microsoft Excel-Datentyp handeln.</span><span class="sxs-lookup"><span data-stu-id="370a5-502">Can be a string or any Microsoft Excel data type.</span></span></param>
        <param name="After"><span data-ttu-id="370a5-503">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-503">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-504">Die Zelle, nach der mit der Suche begonnen werden soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-504">The cell after which you want the search to begin.</span></span> <span data-ttu-id="370a5-505">Dies entspricht der Position der aktiven Zelle, wenn eine Suche über die Benutzeroberfläche durchgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="370a5-505">This corresponds to the position of the active cell when a search is done from the user interface.</span></span> <span data-ttu-id="370a5-506">Beachten Sie, dass <b>After</b> eine einzelne Zelle im Bereich sein muss.</span><span class="sxs-lookup"><span data-stu-id="370a5-506">Note that <b>After</b> must be a single cell in the range.</span></span> <span data-ttu-id="370a5-507">Denken Sie daran, dass die Suche mit dieser Zelle beginnt. Die angegebene Zelle wird erst durchsucht, wenn die Methode wieder <paramref name="after" /> in diese Zelle umschließt.</span><span class="sxs-lookup"><span data-stu-id="370a5-507">Remember that the search begins <paramref name="after" /> this cell; the specified cell isn’t searched until the method wraps back around to this cell.</span></span> <span data-ttu-id="370a5-508">Wenn Sie dieses Argument nicht angeben, beginnt die Suche nach der Zelle in der oberen linken Ecke des Bereichs.</span><span class="sxs-lookup"><span data-stu-id="370a5-508">If you don’t specify this argument, the search starts after the cell in the upper-left corner of the range.</span></span></param>
        <param name="LookIn"><span data-ttu-id="370a5-509">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-509">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-510">Der Typ der Informationen.</span><span class="sxs-lookup"><span data-stu-id="370a5-510">The type of information.</span></span></param>
        <param name="LookAt"><span data-ttu-id="370a5-511">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-511">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-512">Dies kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> Konstanten sein: <b>xlWhole</b> oder <b>xlPart</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-512">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> constants: <b>xlWhole</b> or <b>xlPart</b>.</span></span></param>
        <param name="SearchOrder"><span data-ttu-id="370a5-513">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-513">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-514">Dies kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> Konstanten sein: <b>xlByRows</b> oder <b>xlByColumns</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-514">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> constants: <b>xlByRows</b> or <b>xlByColumns</b>.</span></span></param>
        <param name="SearchDirection"><span data-ttu-id="370a5-515">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSearchDirection" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-515">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSearchDirection" />.</span></span> <span data-ttu-id="370a5-516">Die Suchrichtung.</span><span class="sxs-lookup"><span data-stu-id="370a5-516">The search direction.</span></span> <span data-ttu-id="370a5-517">Dies kann eine der folgenden XlSearchDirection-Konstanten sein:<b>xlNext</b> <paramref name="default" /> <b>xlPrevious</b></span><span class="sxs-lookup"><span data-stu-id="370a5-517">Can be one of these XlSearchDirection constants:<b>xlNext</b><paramref name="default" /><b>xlPrevious</b></span></span></param>
        <param name="MatchCase"><span data-ttu-id="370a5-518">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-518">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-519">Mit <b>True</b> wird die Groß- und Kleinschreibung bei der Suche berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="370a5-519"><b>True</b> to make the search case sensitive.</span></span> <span data-ttu-id="370a5-520">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-520">The default value is <b>False</b>.</span></span></param>
        <param name="MatchByte"><span data-ttu-id="370a5-521">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-521">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-522">Wird nur verwendet, wenn Sie die Unterstützung für Doppel-Byte-Sprachen ausgewählt oder installiert haben.</span><span class="sxs-lookup"><span data-stu-id="370a5-522">Used only if you’ve selected or installed double-byte language support.</span></span> <span data-ttu-id="370a5-523"><b>True,</b> wenn Doppel-Byte-Zeichen nur mit Doppel-Byte-Zeichen übereinstimmen; <b>False,</b> wenn Doppel-Byte-Zeichen mit ihren Einzel-Byte-Entsprechungen übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="370a5-523"><b>True</b> to have double-byte characters match only double-byte characters; <b>False</b> to have double-byte characters match their single-byte equivalents.</span></span></param>
        <param name="SearchFormat"><span data-ttu-id="370a5-524">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-524">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-525">Das Format für die Suche.</span><span class="sxs-lookup"><span data-stu-id="370a5-525">The search format.</span></span></param>
        <summary><span data-ttu-id="370a5-526">Sucht bestimmte Informationen in einem Bereich und gibt ein Objekt zurück, das <see cref="T:Microsoft.Office.Interop.Excel.Range" /> die erste Zelle darstellt, in der diese Informationen gefunden werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-526">Finds specific information in a range and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the first cell where that information is found.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-527">Diese Methode gibt <b>Nothing</b> zurück, wenn keine Übereinstimmung gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="370a5-527">This method returns <b>Nothing</b> if no match is found.</span></span></para>
          <para><span data-ttu-id="370a5-528">Diese Methode wirkt sich nicht auf die Auswahl oder die aktive Zelle aus.</span><span class="sxs-lookup"><span data-stu-id="370a5-528">This method doesn’t affect the selection or the active cell.</span></span></para>
          <para><span data-ttu-id="370a5-529">Die Einstellungen für , und werden jedes Mal <paramref name="LookIn" /> <paramref name="LookAt" /> <paramref name="SearchOrder" /> <paramref name="MatchByte" /> gespeichert, wenn Sie diese Methode verwenden.</span><span class="sxs-lookup"><span data-stu-id="370a5-529">The settings for <paramref name="LookIn" />, <paramref name="LookAt" />, <paramref name="SearchOrder" />, and <paramref name="MatchByte" /> are saved each time you use this method.</span></span> <span data-ttu-id="370a5-530">Falls Sie beim nächsten Aufruf dieser Methode keine Werte für die Argumente angeben, werden die gespeicherten Werte verwendet.</span><span class="sxs-lookup"><span data-stu-id="370a5-530">If you don’t specify values for these arguments the next time you call the method, the saved values are used.</span></span> <span data-ttu-id="370a5-531">Das Festlegen dieser Argumente ändert die Einstellungen im Dialogfeld Suchen, und durch Ändern der Einstellungen im Dialogfeld Suchen werden die gespeicherten Werte geändert, die verwendet werden, wenn Sie die Argumente auslassen.</span><span class="sxs-lookup"><span data-stu-id="370a5-531">Setting these arguments changes the settings in the Find dialog box, and changing the settings in the Find dialog box changes the saved values that are used if you omit the arguments.</span></span> <span data-ttu-id="370a5-532">Um Probleme zu vermeiden, legen Sie diese Argumente jedes Mal explizit fest, wenn Sie diese Methode verwenden.</span><span class="sxs-lookup"><span data-stu-id="370a5-532">To avoid problems, set these arguments explicitly each time you use this method.</span></span></para>
          <para><span data-ttu-id="370a5-533">Sie können die <see cref="M:Microsoft.Office.Interop.Excel.Range.FindNext(System.Object)" /> <see cref="M:Microsoft.Office.Interop.Excel.Range.FindPrevious(System.Object)" /> Und-Methoden verwenden, um die Suche zu wiederholen.</span><span class="sxs-lookup"><span data-stu-id="370a5-533">You can use the <see cref="M:Microsoft.Office.Interop.Excel.Range.FindNext(System.Object)" /> and <see cref="M:Microsoft.Office.Interop.Excel.Range.FindPrevious(System.Object)" /> methods to repeat the search.</span></span></para>
          <para><span data-ttu-id="370a5-p203">Erreicht die Suche das Ende des angegebenen Suchbereichs, beginnt sie erneut am Anfang dieses Bereichs. Um zu verhindern, dass der Bereich erneut durchsucht wird, speichern Sie die Adresse der zuerst gefundenen Zelle, und vergleichen Sie dann jede nachfolgend gefundene Zelladresse mit dieser gespeicherten Adresse.</span><span class="sxs-lookup"><span data-stu-id="370a5-p203">When the search reaches the end of the specified search range, it wraps around to the beginning of the range. To stop a search when this wraparound occurs, save the address of the first found cell, and then test each successive found-cell address against this saved address.</span></span></para>
          <para><span data-ttu-id="370a5-536">Wenn Sie bei der Suche von Zellen ein komplexeres Suchmuster verwenden wollen, können Sie eine <b>For Each...Next</b>-Anweisung mit dem <b>Like</b>-Operator verwenden.</span><span class="sxs-lookup"><span data-stu-id="370a5-536">To find cells that match more complicated patterns, use a <b>For Each...Next</b> statement with the <b>Like</b> operator.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FindNext">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range FindNext (object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range FindNext([in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FindNext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNext (Optional After As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(399)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="After"><span data-ttu-id="370a5-537">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-537">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-538">Die Zelle, nach der mit der Suche begonnen werden soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-538">The cell after which you want to search.</span></span> <span data-ttu-id="370a5-539">Dies entspricht der Position der aktiven Zelle, wenn eine Suche über die Benutzeroberfläche durchgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="370a5-539">This corresponds to the position of the active cell when a search is done from the user interface.</span></span> <span data-ttu-id="370a5-540">Beachten <paramref name="After" /> Sie, dass es sich um eine einzelne Zelle im Bereich sein muss.</span><span class="sxs-lookup"><span data-stu-id="370a5-540">Note that <paramref name="After" /> must be a single cell in the range.</span></span> <span data-ttu-id="370a5-541">Denken Sie daran, dass die Suche mit dieser Zelle beginnt. Die angegebene Zelle wird erst durchsucht, wenn die Methode wieder <paramref name="after" /> in diese Zelle umschließt.</span><span class="sxs-lookup"><span data-stu-id="370a5-541">Remember that the search begins <paramref name="after" /> this cell; the specified cell isn’t searched until the method wraps back around to this cell.</span></span> <span data-ttu-id="370a5-542">Wenn dieses Argument nicht angegeben wird, beginnt die Suche nach der Zelle in der oberen linken Ecke des Bereichs.</span><span class="sxs-lookup"><span data-stu-id="370a5-542">If this argument isn’t specified, the search starts after the cell in the upper-left corner of the range.</span></span></param>
        <summary><span data-ttu-id="370a5-543">Setzt eine Suche fort, die mit der Methode begonnen <see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> wurde.</span><span class="sxs-lookup"><span data-stu-id="370a5-543">Continues a search that was begun with the <see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> method.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-544">Sucht die nächste Zelle, die denselben Bedingungen entspricht, und gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das diese Zelle darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-544">Finds the next cell that matches those same conditions and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents that cell.</span></span></para>
          <para><span data-ttu-id="370a5-545">Diese Methode wirkt sich nicht auf die Auswahl oder die aktive Zelle aus.</span><span class="sxs-lookup"><span data-stu-id="370a5-545">This method doesn’t affect the selection or the active cell.</span></span></para>
          <para><span data-ttu-id="370a5-p205">Erreicht die Suche das Ende des angegebenen Suchbereichs, beginnt sie erneut am Anfang dieses Bereichs. Um zu verhindern, dass der Bereich erneut durchsucht wird, speichern Sie die Adresse der zuerst gefundenen Zelle, und vergleichen Sie dann jede nachfolgend gefundene Zelladresse mit dieser gespeicherten Adresse.</span><span class="sxs-lookup"><span data-stu-id="370a5-p205">When the search reaches the end of the specified search range, it wraps around to the beginning of the range. To stop a search when this wraparound occurs, save the address of the first found cell, and then test each successive found-cell address against this saved address.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FindPrevious">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range FindPrevious (object After);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range FindPrevious([in]object After) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FindPrevious(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindPrevious (Optional After As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(400)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="After"><span data-ttu-id="370a5-548">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-548">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-549">Das Argument gibt die Zelle an, von der aus rückwärts gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-549">The cell before which you want to search.</span></span> <span data-ttu-id="370a5-550">Dies entspricht der Position der aktiven Zelle, wenn eine Suche über die Benutzeroberfläche durchgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="370a5-550">This corresponds to the position of the active cell when a search is done from the user interface.</span></span> <span data-ttu-id="370a5-551">Beachten <paramref name="After" /> Sie, dass es sich um eine einzelne Zelle im Bereich sein muss.</span><span class="sxs-lookup"><span data-stu-id="370a5-551">Note that <paramref name="After" /> must be a single cell in the range.</span></span> <span data-ttu-id="370a5-552">Denken Sie daran, dass die Suche mit dieser Zelle beginnt. Die angegebene Zelle wird erst durchsucht, wenn die Methode wieder <paramref name="before" /> in diese Zelle umschließt.</span><span class="sxs-lookup"><span data-stu-id="370a5-552">Remember that the search begins <paramref name="before" /> this cell; the specified cell isn’t searched until the method wraps back around to this cell.</span></span> <span data-ttu-id="370a5-553">Wenn dieses Argument nicht angegeben wird, beginnt die Suche vor der linken oberen Zelle des Bereichs.</span><span class="sxs-lookup"><span data-stu-id="370a5-553">If this argument isn’t specified, the search starts before the upper-left cell in the range.</span></span></param>
        <summary><span data-ttu-id="370a5-554">Setzt eine Suche fort, die mit der Methode begonnen <see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> wurde.</span><span class="sxs-lookup"><span data-stu-id="370a5-554">Continues a search that was begun with the <see cref="M:Microsoft.Office.Interop.Excel.Range.Find(System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSearchDirection,System.Object,System.Object,System.Object)" /> method.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-555">Sucht die vorherige Zelle, die dieselben Bedingungen erfüllt, und gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das diese Zelle darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-555">Finds the previous cell that matches those same conditions and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents that cell.</span></span></para>
          <para><span data-ttu-id="370a5-556">Diese Methode wirkt sich nicht auf die Auswahl oder die aktive Zelle aus.</span><span class="sxs-lookup"><span data-stu-id="370a5-556">This method doesn’t affect the selection or the active cell.</span></span></para>
          <para><span data-ttu-id="370a5-p207">Erreicht die Suche den Anfang des angegebenen Suchbereichs, beginnt sie erneut am Ende dieses Bereichs. Um zu verhindern, dass der Bereich erneut durchsucht wird, speichern Sie die Adresse der zuerst gefundenen Zelle, und vergleichen Sie dann jede nachfolgend gefundene Zelladresse mit dieser gespeicherten.</span><span class="sxs-lookup"><span data-stu-id="370a5-p207">When the search reaches the beginning of the specified search range, it wraps around to the end of the range. To stop a search when this wraparound occurs, save the address of the first found cell, and then test each successive found-cell address against this saved address.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FlashFill">
      <MemberSignature Language="C#" Value="public void FlashFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FlashFill() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FlashFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub FlashFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FlashFill();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2996)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-559">TRUE gibt an, dass das Excel Flash Fill -Feature aktiviert und aktiv ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-559">TRUE indicates that the Excel Flash Fill feature has been enabled and active.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Font ^ Font { Microsoft::Office::Interop::Excel::Font ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-560">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Font" /> Objekt zurück, das die Schriftart des angegebenen Objekts darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-560">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatConditions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.FormatConditions FormatConditions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.FormatConditions FormatConditions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormatConditions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormatConditions As FormatConditions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::FormatConditions ^ FormatConditions { Microsoft::Office::Interop::Excel::FormatConditions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1392)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.FormatConditions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-561">Gibt eine <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> Auflistung zurück, die alle bedingten Formate für den angegebenen Bereich darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-561">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection that represents all the conditional formats for the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula">
      <MemberSignature Language="C#" Value="public object Formula { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Formula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Formula" />
      <MemberSignature Language="VB.NET" Value="Public Property Formula As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Formula { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-562">Gibt zurück oder legt die Formel des Objekts in der A1-Schreibweise und in der Sprache des Makros.</span><span class="sxs-lookup"><span data-stu-id="370a5-562">Returns or sets the object's formula in A1-style notation and in the language of the macro.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-563">Diese Eigenschaft ist für OLAP-Datenquellen nicht verfügbar.</span><span class="sxs-lookup"><span data-stu-id="370a5-563">This property is not available for OLAP data sources.</span></span></para>
          <para><span data-ttu-id="370a5-564">Wenn die Zelle eine Konstante enthält, gibt die Eigenschaft die Konstante zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-564">If the cell contains a constant, this property returns the constant.</span></span> <span data-ttu-id="370a5-565">Wenn die Zelle leer ist, gibt diese <b>Formula</b>-Eigenschaft eine leere Zeichenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-565">If the cell is empty, this <b>Formula</b> property returns an empty string.</span></span> <span data-ttu-id="370a5-566">Wenn die Zelle eine Formel enthält, gibt die <b>Formula</b>-Eigenschaft die Formel als Zeichenfolge in dem Format zurück, in dem sie in der Bearbeitungsleiste angezeigt werden würde (einschließlich des Gleichheitszeichens).</span><span class="sxs-lookup"><span data-stu-id="370a5-566">If the cell contains a formula, the <b>Formula</b> property returns the formula as a string in the same format that would be displayed in the formula bar (including the equal sign).</span></span></para>
          <para><span data-ttu-id="370a5-p209">Wenn Sie den Wert oder die Formel einer Zelle in ein Datum umwandeln, überprüft Microsoft Excel, ob die Zelle bereits mit einem Datums- oder Zeitformat formatiert ist. Ist das nicht der Fall, so wird das Zahlenformat in das kurze Standard-Datumsformat geändert.</span><span class="sxs-lookup"><span data-stu-id="370a5-p209">If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, Microsoft Excel changes the number format to the default short date number format.</span></span></para>
          <para><span data-ttu-id="370a5-569">Wenn es sich bei dem Bereich um einen ein- oder zweidimensionalen Bereich handelt, können Sie die Formel auf ein Array mit denselben Dimensionen festlegen.</span><span class="sxs-lookup"><span data-stu-id="370a5-569">If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions.</span></span> <span data-ttu-id="370a5-570">Auf ähnliche Weise können Sie die Formel in ein Basisarray setzen.</span><span class="sxs-lookup"><span data-stu-id="370a5-570">Similarly, you can put the formula into a Basic array.</span></span></para>
          <para><span data-ttu-id="370a5-571">Beim Festlegen der Formel für einen Bereich mit mehreren Zellen wird die Formel in alle Zellen des Bereichs eingetragen.</span><span class="sxs-lookup"><span data-stu-id="370a5-571">Setting the formula for a multiple-cell range fills all cells in the range with the formula.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaArray">
      <MemberSignature Language="C#" Value="public object FormulaArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaArray" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaArray" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaArray As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaArray { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(586)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(586)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(586)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-572">Gibt eine Arrayformel für einen Bereich zurück oder legt sie an.</span><span class="sxs-lookup"><span data-stu-id="370a5-572">Returns or sets the array formula of a range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-573">Diese Eigenschaft gibt eine einzelne Formel oder ein Array zurück (oder kann auf diese festgelegt werden).</span><span class="sxs-lookup"><span data-stu-id="370a5-573">This property returns (or can be set to) a single formula or an array.</span></span></para>
          <para><span data-ttu-id="370a5-574">Wenn der angegebene Bereich keine Arrayformel enthält, gibt diese Eigenschaft <b>Null zurück.</b></span><span class="sxs-lookup"><span data-stu-id="370a5-574">If the specified range doesn't contain an array formula, this property returns <b>Null</b>.</span></span></para>
          <para><span data-ttu-id="370a5-575">Wenn Sie diese Eigenschaft zum Eingeben einer Arrayformel verwenden, muss die Formel die R1C1-Bezugsart und nicht die Bezugsart A1 verwenden (siehe das zweite Beispiel).</span><span class="sxs-lookup"><span data-stu-id="370a5-575">If you use this property to enter an array formula, the formula must use the R1C1 reference style, not the A1 reference style (see the second example).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaHidden">
      <MemberSignature Language="C#" Value="public object FormulaHidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaHidden" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaHidden" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaHidden As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaHidden { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-576">Bestimmt, ob die Formel ausgeblendet wird, wenn das Arbeitsblatt geschützt ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-576">Determines if the formula will be hidden when the worksheet is protected.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-577">Diese Eigenschaft gibt <b>True zurück,</b> wenn die Formel ausgeblendet wird, wenn das Arbeitsblatt geschützt ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-577">This property returns <b>True</b> if the formula will be hidden when the worksheet is protected.</span></span> <span data-ttu-id="370a5-578">Es gibt <b>Null zurück,</b> wenn der angegebene Bereich einige Zellen mit <b>FormulaHidden</b> gleich <b>True</b> und einige Zellen mit <b>FormulaHidden</b> gleich <b>False enthält.</b></span><span class="sxs-lookup"><span data-stu-id="370a5-578">It returns <b>Null</b> if the specified range contains some cells with <b>FormulaHidden</b> equal to <b>True</b> and some cells with <b>FormulaHidden</b> equal to <b>False</b>.</span></span></para>
          <para><span data-ttu-id="370a5-579">Verwechseln Sie diese Eigenschaft nicht mit der <see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" /> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="370a5-579">Don’t confuse this property with the <see cref="P:Microsoft.Office.Interop.Excel.Range.Hidden" /> property.</span></span> <span data-ttu-id="370a5-580">Die Formel wird nicht ausgeblendet, wenn die Arbeitsmappe, aber nicht das Arbeitsblatt geschützt ist, sondern nur, wenn das Arbeitsblatt geschützt ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-580">The formula will not be hidden if the workbook is protected and the worksheet is not, but only if the worksheet is protected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaLabel">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFormulaLabel FormulaLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFormulaLabel FormulaLabel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaLabel" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaLabel As XlFormulaLabel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFormulaLabel FormulaLabel { Microsoft::Office::Interop::Excel::XlFormulaLabel get(); void set(Microsoft::Office::Interop::Excel::XlFormulaLabel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1380)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFormulaLabel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-581">Gibt den Typ der Formelbeschriftung für den angegebenen Bereich zurück oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="370a5-581">Returns or sets the formula label type for the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-582">Der Rückgabewert dieser Eigenschaft kann <b>xlNone</b> sein, wenn der Bereich keine Beschriftungen enthält, oder eine der folgenden <b>XlFormulaLabel-Konstanten:</b></span><span class="sxs-lookup"><span data-stu-id="370a5-582">The return value of this property can be <b>xlNone</b> if the range contains no labels, or one of the following <b>XlFormulaLabel</b> constants:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="370a5-583">
                <b>xlColumnLabels</b>
              </span><span class="sxs-lookup"><span data-stu-id="370a5-583">
                <b>xlColumnLabels</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="370a5-584">
                <b>xlMixedLabels</b>
              </span><span class="sxs-lookup"><span data-stu-id="370a5-584">
                <b>xlMixedLabels</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="370a5-585">
                <b>xlNoLabels</b>
              </span><span class="sxs-lookup"><span data-stu-id="370a5-585">
                <b>xlNoLabels</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="370a5-586">
                <b>xlRowLabels</b>
              </span><span class="sxs-lookup"><span data-stu-id="370a5-586">
                <b>xlRowLabels</b>
              </span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaLocal">
      <MemberSignature Language="C#" Value="public object FormulaLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaLocal As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaLocal { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-587">Gibt zurück oder legt die Formel für das Objekt unter Verwendung der A1-Bezugsart in der Sprache des Benutzers.</span><span class="sxs-lookup"><span data-stu-id="370a5-587">Returns or sets the formula for the object, using A1-style references in the language of the user.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-p213">Wenn die Zelle eine Konstante enthält, gibt diese Eigenschaft eine Konstante zurück. Ist die Zelle leer, wird eine leere Zeichenfolge zurückgegeben. Enthält die Zelle eine Formel, wird diese als Zeichenfolge zurückgegeben, und zwar in dem gleichen Format, in dem sie in der Bearbeitungsleiste angezeigt würde (einschließlich Gleichheitszeichen).</span><span class="sxs-lookup"><span data-stu-id="370a5-p213">If the cell contains a constant, this property returns that constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</span></span></para>
          <para><span data-ttu-id="370a5-p214">Wenn Sie für den Wert oder die Formel einer Zelle ein Datum festlegen, prüft Microsoft Excel, ob die Zelle bereits mit einem der Datums- oder Zeitformate formatiert wurde. Ist dies nicht der Fall, wird das Zahlenformat in das Standardzahlenformat für kurze Datumsangaben geändert.</span><span class="sxs-lookup"><span data-stu-id="370a5-p214">If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</span></span></para>
          <para><span data-ttu-id="370a5-593">Wenn es sich bei dem Bereich um einen ein- oder zweidimensionalen Bereich handelt, können Sie die Formel auf ein Array mit denselben Dimensionen festlegen.</span><span class="sxs-lookup"><span data-stu-id="370a5-593">If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions.</span></span> <span data-ttu-id="370a5-594">Auf ähnliche Weise können Sie die Formel in ein Array setzen.</span><span class="sxs-lookup"><span data-stu-id="370a5-594">Similarly, you can put the formula into an array.</span></span></para>
          <para><span data-ttu-id="370a5-595">Durch das Festlegen einer Formel eines mehrere Zellen umfassenden Bereichs werden alle Zellen des Bereichs mit der Formel aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="370a5-595">Setting the formula of a multiple-cell range fills all cells in the range with the formula.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaR1C1">
      <MemberSignature Language="C#" Value="public object FormulaR1C1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaR1C1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaR1C1" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaR1C1 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaR1C1 { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-596">Gibt die Formel für das Objekt in R1C1-Schreibweise in der Sprache des Makros zurück oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="370a5-596">Returns or sets the formula for the object, using R1C1-style notation in the language of the macro.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-p216">Wenn die Zelle eine Konstante enthält, gibt diese Eigenschaft eine Konstante zurück. Ist die Zelle leer, wird eine leere Zeichenfolge zurückgegeben. Enthält die Zelle eine Formel, wird diese als Zeichenfolge zurückgegeben, und zwar in dem gleichen Format, in dem sie in der Bearbeitungsleiste angezeigt würde (einschließlich Gleichheitszeichen).</span><span class="sxs-lookup"><span data-stu-id="370a5-p216">If the cell contains a constant, this property returns the constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</span></span></para>
          <para><span data-ttu-id="370a5-p217">Wenn Sie für den Wert oder die Formel einer Zelle ein Datum festlegen, prüft Microsoft Excel, ob die Zelle bereits mit einem der Datums- oder Zeitformate formatiert wurde. Ist dies nicht der Fall, wird das Zahlenformat in das Standardzahlenformat für kurze Datumsangaben geändert.</span><span class="sxs-lookup"><span data-stu-id="370a5-p217">If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</span></span></para>
          <para><span data-ttu-id="370a5-602">Wenn es sich bei dem Bereich um einen ein- oder zweidimensionalen Bereich handelt, können Sie die Formel auf ein Array mit denselben Dimensionen festlegen.</span><span class="sxs-lookup"><span data-stu-id="370a5-602">If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions.</span></span> <span data-ttu-id="370a5-603">Auf ähnliche Weise können Sie die Formel in ein Array setzen.</span><span class="sxs-lookup"><span data-stu-id="370a5-603">Similarly, you can put the formula into an array.</span></span></para>
          <para><span data-ttu-id="370a5-604">Durch das Festlegen einer Formel eines mehrere Zellen umfassenden Bereichs werden alle Zellen des Bereichs mit der Formel aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="370a5-604">Setting the formula of a multiple-cell range fills all cells in the range with the formula.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaR1C1Local">
      <MemberSignature Language="C#" Value="public object FormulaR1C1Local { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaR1C1Local" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.FormulaR1C1Local" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaR1C1Local As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaR1C1Local { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-605">Gibt zurück oder legt die Formel für das Objekt unter Verwendung der Z1S1-Schreibweise in der Sprache des Benutzers.</span><span class="sxs-lookup"><span data-stu-id="370a5-605">Returns or sets the formula for the object, using R1C1-style notation in the language of the user.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-p219">Wenn die Zelle eine Konstante enthält, gibt diese Eigenschaft eine Konstante zurück. Ist die Zelle leer, wird eine leere Zeichenfolge zurückgegeben. Enthält die Zelle eine Formel, wird diese als Zeichenfolge zurückgegeben, und zwar in dem gleichen Format, in dem sie in der Bearbeitungsleiste angezeigt würde (einschließlich Gleichheitszeichen).</span><span class="sxs-lookup"><span data-stu-id="370a5-p219">If the cell contains a constant, this property returns that constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</span></span></para>
          <para><span data-ttu-id="370a5-p220">Wenn Sie für den Wert oder die Formel einer Zelle ein Datum festlegen, prüft Microsoft Excel, ob die Zelle bereits mit einem der Datums- oder Zeitformate formatiert wurde. Ist dies nicht der Fall, wird das Zahlenformat in das Standardzahlenformat für kurze Datumsangaben geändert.</span><span class="sxs-lookup"><span data-stu-id="370a5-p220">If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</span></span></para>
          <para><span data-ttu-id="370a5-611">Wenn es sich bei dem Bereich um einen ein- oder zweidimensionalen Bereich handelt, können Sie die Formel auf ein Array mit denselben Dimensionen festlegen.</span><span class="sxs-lookup"><span data-stu-id="370a5-611">If the range is a one- or two-dimensional range, you can set the formula to an array of the same dimensions.</span></span> <span data-ttu-id="370a5-612">Auf ähnliche Weise können Sie die Formel in ein Array setzen.</span><span class="sxs-lookup"><span data-stu-id="370a5-612">Similarly, you can put the formula into an array.</span></span></para>
          <para><span data-ttu-id="370a5-613">Durch das Festlegen einer Formel eines mehrere Zellen umfassenden Bereichs werden alle Zellen des Bereichs mit der Formel aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="370a5-613">Setting the formula of a multiple-cell range fills all cells in the range with the formula.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="FunctionWizard">
      <MemberSignature Language="C#" Value="public object FunctionWizard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FunctionWizard() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.FunctionWizard" />
      <MemberSignature Language="VB.NET" Value="Public Function FunctionWizard () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FunctionWizard();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(571)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-614">Aktiviert den Funktions-Assistenten für die linke obere Zelle des Bereichs.</span><span class="sxs-lookup"><span data-stu-id="370a5-614">Starts the Function Wizard for the upper-left cell of the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GoalSeek">
      <MemberSignature Language="C#" Value="public bool GoalSeek (object Goal, Microsoft.Office.Interop.Excel.Range ChangingCell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GoalSeek([in]object Goal, [in]class Microsoft.Office.Interop.Excel.Range ChangingCell) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.GoalSeek(System.Object,Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Function GoalSeek (Goal As Object, ChangingCell As Range) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GoalSeek(System::Object ^ Goal, Microsoft::Office::Interop::Excel::Range ^ ChangingCell);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(472)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Goal" Type="System.Object" />
        <Parameter Name="ChangingCell" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Goal"><span data-ttu-id="370a5-615">Required <b>-Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-615">Required <b>Object</b>.</span></span> <span data-ttu-id="370a5-616">Der Wert, der in dieser Zelle zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-616">The value you want returned in this cell.</span></span></param>
        <param name="ChangingCell"><span data-ttu-id="370a5-617"><see cref="T:Microsoft.Office.Interop.Excel.Range" />Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="370a5-617">Required <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span></span> <span data-ttu-id="370a5-618">In diesem Argument wird die Zelle angegeben, die zum Erreichen des gewünschten Zielwerts geändert werden soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-618">Specifies which cell should be changed to achieve the target value.</span></span></param>
        <summary><span data-ttu-id="370a5-619">Berechnet die Werte, die zum Erreichen eines bestimmten Ziels notwendig sind.</span><span class="sxs-lookup"><span data-stu-id="370a5-619">Calculates the values necessary to achieve a specific goal.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-620">Handelt es sich bei dem Ziel um ein Ergebnis, das von einer Formel zurückgegeben werden soll, so berechnet diese Methode einen Wert, der beim Einsetzen in die Formel zum gewünschten Ergebnis führt.</span><span class="sxs-lookup"><span data-stu-id="370a5-620">If the goal is an amount returned by a formula, this calculates a value that, when supplied to your formula, causes the formula to return the number you want.</span></span></para>
          <para><span data-ttu-id="370a5-621">Diese Methode gibt <b>True zurück,</b> wenn die Zielsuche erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-621">This method returns <b>True</b> if the goal seek is successful.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public object Group (object Start, object End, object By, object Periods);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Group([in]object Start, [in]object End, [in]object By, [in]object Periods) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Group(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Group (Optional Start As Object, Optional End As Object, Optional By As Object, Optional Periods As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(46)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Object" />
        <Parameter Name="End" Type="System.Object" />
        <Parameter Name="By" Type="System.Object" />
        <Parameter Name="Periods" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Start"><span data-ttu-id="370a5-622">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-622">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-623">Der erste in die Gruppe aufzunehmende Wert.</span><span class="sxs-lookup"><span data-stu-id="370a5-623">The first value to be grouped.</span></span> <span data-ttu-id="370a5-624">Wenn dieses Argument nicht angegeben wird oder den Wert <b>True</b> aufweist, wird der erste Wert im Feld verwendet.</span><span class="sxs-lookup"><span data-stu-id="370a5-624">If this argument is omitted or <b>True</b>, the first value in the field is used.</span></span></param>
        <param name="End"><span data-ttu-id="370a5-625">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-625">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-626">Der letzte in die Gruppe aufzunehmende Wert.</span><span class="sxs-lookup"><span data-stu-id="370a5-626">The last value to be grouped.</span></span> <span data-ttu-id="370a5-627">Wenn dieses Argument nicht angegeben wird oder den Wert <b>True</b> besitzt, wird der letzte Wert im Feld verwendet.</span><span class="sxs-lookup"><span data-stu-id="370a5-627">If this argument is omitted or <b>True</b>, the last value in the field is used.</span></span></param>
        <param name="By"><span data-ttu-id="370a5-628">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-628">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-629">Wenn es sich um ein numerisches Feld handelt, gibt dieses Argument die Größe jeder Gruppe an.</span><span class="sxs-lookup"><span data-stu-id="370a5-629">If the field is numeric, this argument specifies the size of each group.</span></span> <span data-ttu-id="370a5-630">Wenn das Feld ein Datum ist, gibt dieses Argument die Anzahl der Tage in jeder Gruppe an, wenn Element 4 im Array True ist und alle anderen Elemente <paramref name="Periods" /> <b>False sind.</b> <b></b></span><span class="sxs-lookup"><span data-stu-id="370a5-630">If the field is a date, this argument specifies the number of days in each group if element 4 in the <paramref name="Periods" /> array is <b>True</b> and all the other elements are <b>False</b>.</span></span> <span data-ttu-id="370a5-631">Andernfalls wird dieses Argument ignoriert.</span><span class="sxs-lookup"><span data-stu-id="370a5-631">Otherwise, this argument is ignored.</span></span> <span data-ttu-id="370a5-632">Wird dieses Argument nicht angegeben, wird von Microsoft Excel eine Standardgröße der Gruppe verwendet.</span><span class="sxs-lookup"><span data-stu-id="370a5-632">If this argument is omitted, Microsoft Excel automatically chooses a default group size.</span></span></param>
        <param name="Periods"><span data-ttu-id="370a5-633">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-633">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-634">Ein Array von booleschen Werten, die den Zeitraum für die Gruppe angeben, wie in der folgenden Tabelle dargestellt. Wenn ein Element im Array <b>"True"</b>ist, wird eine Gruppe für die entsprechende Zeit erstellt. Wenn das Element <b>"False"</b>ist, wird keine Gruppe erstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-634">An array of Boolean values that specify the period for the group, as shown in the following table.If an element in the array is <b>True</b>, a group is created for the corresponding time; if the element is <b>False</b>, no group is created.</span></span> <span data-ttu-id="370a5-635">Wenn das Feld kein Datumsfeld ist, wird dieses Argument ignoriert.</span><span class="sxs-lookup"><span data-stu-id="370a5-635">If the field isn’t a date field, this argument is ignored.</span></span></param>
        <summary><span data-ttu-id="370a5-636">Wenn das Objekt eine einzelne Zelle im Datenbereich eines PivotTable-Felds darstellt, führt die Group -Methode numerische oder <see cref="T:Microsoft.Office.Interop.Excel.Range" /> datumsbasierte Gruppierungen in diesem Feld <b></b> aus.</span><span class="sxs-lookup"><span data-stu-id="370a5-636">When the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object represents a single cell in a PivotTable field’s data range, the <b>Group</b> method performs numeric or date-based grouping in that field.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-637">Das <b>Range</b>-Objekt muss eine einzelne Zelle im Datenbereich des PivotTable-Felds sein.</span><span class="sxs-lookup"><span data-stu-id="370a5-637">The <b>Range</b> object must be a single cell in the PivotTable field’s data range.</span></span> <span data-ttu-id="370a5-638">Wenn Sie versuchen, diese Methode auf mehrere Zellen anzuwenden, tritt ein Fehler auf, es wird jedoch keine Fehlermeldung angezeigt.</span><span class="sxs-lookup"><span data-stu-id="370a5-638">If you attempt to apply this method to more than one cell, it will fail but will not display an error message.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HasArray">
      <MemberSignature Language="C#" Value="public object HasArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HasArray" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.HasArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasArray As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HasArray { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(266)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(266)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-639">Bestimmt, ob die angegebene Zelle Teil einer Arrayformel ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-639">Determines if the specified cell is part of an array formula.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-640">Diese Eigenschaft gibt <b>True zurück,</b> wenn die angegebene Zelle Teil einer Arrayformel ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-640">This property returns <b>True</b> if the specified cell is part of an array formula.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFormula">
      <MemberSignature Language="C#" Value="public object HasFormula { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HasFormula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.HasFormula" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFormula As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HasFormula { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(267)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(267)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-641">Bestimmt, ob alle Zellen im Bereich Formeln enthalten.</span><span class="sxs-lookup"><span data-stu-id="370a5-641">Determines if all cells in the range contain formulas.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-642">Diese Eigenschaft gibt <b>True zurück,</b> wenn alle Zellen im Bereich Formeln enthalten, <b>"False",</b> wenn keine der Zellen im Bereich eine Formel enthält, und <b>andernfalls Null.</b></span><span class="sxs-lookup"><span data-stu-id="370a5-642">This property returns <b>True</b> if all cells in the range contain formulas, <b>False</b> if none of the cells in the range contains a formula, and <b>Null</b> otherwise.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public object Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Height" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Height As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Height { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-643">Die Höhe des Bereichs.</span><span class="sxs-lookup"><span data-stu-id="370a5-643">The height of the range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hidden">
      <MemberSignature Language="C#" Value="public object Hidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Hidden" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Hidden" />
      <MemberSignature Language="VB.NET" Value="Public Property Hidden As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Hidden { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(268)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(268)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(268)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-644">Bestimmt, ob die Zeilen oder Spalten ausgeblendet sind.</span><span class="sxs-lookup"><span data-stu-id="370a5-644">Determines if the rows or columns are hidden.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-645">Diese Eigenschaft gibt <b>True zurück,</b> wenn die Zeilen oder Spalten ausgeblendet sind.</span><span class="sxs-lookup"><span data-stu-id="370a5-645">This property returns <b>True</b> if the rows or columns are hidden.</span></span> <span data-ttu-id="370a5-646">Der angegebene Bereich muss eine ganze Zeile oder Spalte umfassen.</span><span class="sxs-lookup"><span data-stu-id="370a5-646">The specified range must span an entire column or row.</span></span></para>
          <para><span data-ttu-id="370a5-647">Verwechseln Sie diese Eigenschaft nicht mit der <see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaHidden" /> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="370a5-647">Don't confuse this property with the <see cref="P:Microsoft.Office.Interop.Excel.Range.FormulaHidden" /> property.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlignment">
      <MemberSignature Language="C#" Value="public object HorizontalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HorizontalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.HorizontalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalAlignment As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HorizontalAlignment { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-648">Zurückgeben oder festlegen die horizontale Ausrichtung für das angegebene Objekt.</span><span class="sxs-lookup"><span data-stu-id="370a5-648">Returns or sets the horizontal alignment for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Hyperlinks Hyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Hyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hyperlinks As Hyperlinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Hyperlinks ^ Hyperlinks { Microsoft::Office::Interop::Excel::Hyperlinks ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1393)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Hyperlinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-649">Gibt eine <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> Auflistung zurück, die die Hyperlinks für den Bereich darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-649">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Hyperlinks" /> collection that represents the hyperlinks for the range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ID" />
      <MemberSignature Language="VB.NET" Value="Public Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1813)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1813)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1813)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-650">Gibt die identifizierende Beschriftung für die angegebene Zelle zurück oder legt sie fest, wenn die Seite als Webseite gespeichert wird.</span><span class="sxs-lookup"><span data-stu-id="370a5-650">Returns or sets the identifying label for the specified cell when the page is saved as a Web page.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-651">Sie können eine ID-Beschriftung in anderen HTML-Dokumenten oder auf derselben Webseite als Hyperlinkverweis verwenden.</span><span class="sxs-lookup"><span data-stu-id="370a5-651">You can use an ID label as a hyperlink reference in other HTML documents or on the same Web page.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public object IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object IndentLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentLevel As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ IndentLevel { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-652">Gibt die Einzugsebene für die Zelle oder den Bereich zurück oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="370a5-652">Returns or sets the indent level for the cell or range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-653">Die Einzugsebene kann eine ganze Zahl zwischen 0 und 15 sein.</span><span class="sxs-lookup"><span data-stu-id="370a5-653">The indent level can be an integer from 0 to 15.</span></span></para>
          <para><span data-ttu-id="370a5-654">Wird diese Eigenschaft verwendet, um die Einzugsebene auf eine Zahl kleiner als 0 (null) oder größer als 15 festzulegen, führt dies zu einem Fehler.</span><span class="sxs-lookup"><span data-stu-id="370a5-654">Using this property to set the indent level to a number less than 0 (zero) or greater than 15 causes an error.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public object Insert (object Shift, object CopyOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Insert([in]object Shift, [in]object CopyOrigin) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Insert(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (Optional Shift As Object, Optional CopyOrigin As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(252)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Shift" Type="System.Object" />
        <Parameter Name="CopyOrigin" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Shift"><span data-ttu-id="370a5-655">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-655">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-656">Gibt an, wohin die Zellen verschoben werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-656">Specifies which way to shift the cells.</span></span> <span data-ttu-id="370a5-657">Dies kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlInsertShiftDirection" /> Konstanten sein: <b>xlShiftToRight</b> oder <b>xlShiftDown</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-657">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlInsertShiftDirection" /> constants: <b>xlShiftToRight</b> or <b>xlShiftDown</b>.</span></span> <span data-ttu-id="370a5-658">Wenn dieses Argument nicht angegeben ist, wird die Entscheidung von Microsoft Excel anhand der Bereichsform getroffen.</span><span class="sxs-lookup"><span data-stu-id="370a5-658">If this argument is omitted, Microsoft Excel decides based on the shape of the range.</span></span></param>
        <param name="CopyOrigin"><span data-ttu-id="370a5-659">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-659">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-660">Der Ursprung des Kopiervorgangs.</span><span class="sxs-lookup"><span data-stu-id="370a5-660">The copy origin.</span></span></param>
        <summary><span data-ttu-id="370a5-661">Fügt eine Zelle oder einen Zellbereich in das Arbeitsblatt oder die Makrovorlage ein und verschiebt die anderen Zellen entsprechend.</span><span class="sxs-lookup"><span data-stu-id="370a5-661">Inserts a cell or a range of cells into the worksheet or macro sheet and shifts other cells away to make space.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertIndent">
      <MemberSignature Language="C#" Value="public void InsertIndent (int InsertAmount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertIndent([in]int32 InsertAmount) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.InsertIndent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertIndent (InsertAmount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertIndent(int InsertAmount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1381)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="InsertAmount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="InsertAmount"><span data-ttu-id="370a5-662">Erforderliche <b>ganze Zahl</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-662">Required <b>Integer</b>.</span></span> <span data-ttu-id="370a5-663">Der Betrag, der dem aktuellen Einzug hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="370a5-663">The amount to be added to the current indent.</span></span></param>
        <summary><span data-ttu-id="370a5-664">Fügt dem angegebenen Bereich einen Einzug hinzu.</span><span class="sxs-lookup"><span data-stu-id="370a5-664">Adds an indent to the specified range.</span></span></summary>
        <remarks><para><span data-ttu-id="370a5-665">Wird diese Eigenschaft verwendet, um die Einzugsebene auf eine Zahl kleiner als 0 (Null) oder größer als 15 festzulegen, tritt ein Fehler auf.</span><span class="sxs-lookup"><span data-stu-id="370a5-665">Using this method to set the indent level to a number less than 0 (zero) or greater than 15 causes an error.</span></span></para>
          <para><span data-ttu-id="370a5-666">Verwenden Sie die <b /> <see cref="P:Microsoft.Office.Interop.Excel.Range.IndentLevel" /> Eigenschaft, um die Einzugsebene für einen Bereich zurückzukehren.</span><span class="sxs-lookup"><span data-stu-id="370a5-666">Use the<b /><see cref="P:Microsoft.Office.Interop.Excel.Range.IndentLevel" /> property to return the indent level for a range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-667">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> Objekt zurück, das den Innenbereich des angegebenen Objekts darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-667">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item[object RowIndex, object ColumnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Item(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property Item(RowIndex As Object, Optional ColumnIndex As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item[System::Object ^, System::Object ^] { System::Object ^ get(System::Object ^ RowIndex, System::Object ^ ColumnIndex); void set(System::Object ^ RowIndex, System::Object ^ ColumnIndex, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowIndex" Type="System.Object" />
        <Parameter Name="ColumnIndex" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowIndex"><span data-ttu-id="370a5-668">Required <b>-Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-668">Required <b>Object</b>.</span></span> <span data-ttu-id="370a5-669">Die Indexnummer der Zelle, auf die Sie zugreifen möchten, von links nach rechts, dann nach unten.</span><span class="sxs-lookup"><span data-stu-id="370a5-669">The index number of the cell you want to access, in order from left to right, then down.</span></span> <span data-ttu-id="370a5-670">Range.Item(1) gibt die obere linke Zelle im Bereich zurück; Range.Item(2) gibt die Zelle unmittelbar rechts neben der oberen linken Zelle zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-670">Range.Item(1) returns the upper-left cell in the range; Range.Item(2) returns the cell immediately to the right of the upper-left cell.</span></span></param>
        <param name="ColumnIndex"><span data-ttu-id="370a5-671">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-671">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-672">Eine Zahl oder eine Zeichenfolge, die die Spaltennummer der Zelle angibt, auf die Sie zugreifen möchten, beginnend mit 1 bzw. "A" für die erste Spalte des Bereichs.</span><span class="sxs-lookup"><span data-stu-id="370a5-672">A number or string that indicates the column number of the cell you want to access, starting with either 1 or "A" for the first column in the range.</span></span></param>
        <summary><span data-ttu-id="370a5-673">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das einen Bereich in einem Offset zum angegebenen Bereich darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-673">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a range at an offset to the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-674">Die <paramref name="RowIndex" /> Argumente und Argumente sind relative <paramref name="ColumnIndex" /> Offsets.</span><span class="sxs-lookup"><span data-stu-id="370a5-674">The <paramref name="RowIndex" /> and <paramref name="ColumnIndex" /> arguments are relative offsets.</span></span> <span data-ttu-id="370a5-675">Mit anderen Worten, wenn Sie eine von 1 angeben, werden Zellen in der ersten Zeile des Bereichs zurückgegeben, nicht die <paramref name="RowIndex" /> erste Zeile des Arbeitsblatts.</span><span class="sxs-lookup"><span data-stu-id="370a5-675">In other words, specifying a <paramref name="RowIndex" /> of 1 returns cells in the first row of the range, not the first row of the worksheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Justify">
      <MemberSignature Language="C#" Value="public object Justify ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Justify() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Justify" />
      <MemberSignature Language="VB.NET" Value="Public Function Justify () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Justify();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(495)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-676">Ordnet den Text in einem Bereich neu an, sodass er den Bereich gleichmäßig ausfüllt.</span><span class="sxs-lookup"><span data-stu-id="370a5-676">Rearranges the text in a range so that it fills the range evenly.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-677">Ist der Bereich nicht groß genug, so zeigt Microsoft Excel eine Meldung an, dass der Text den Bereich überschreitet.</span><span class="sxs-lookup"><span data-stu-id="370a5-677">If the range isn’t large enough, Microsoft Excel displays a message telling you that text will extend below the range.</span></span> <span data-ttu-id="370a5-678">Wenn Sie auf OK klicken, wird der Inhalt in Zellen unterhalb des markierten Bereichs durch bündig angeordneten Text ersetzt.</span><span class="sxs-lookup"><span data-stu-id="370a5-678">If you click the OK button, justified text will replace the contents in cells that extend beyond the selected range.</span></span> <span data-ttu-id="370a5-679">Um zu verhindern, dass diese Meldung angezeigt wird, legen Sie die <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> Eigenschaft auf <b>False .</b></span><span class="sxs-lookup"><span data-stu-id="370a5-679">To prevent this message from appearing, set the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property to <b>False</b>.</span></span> <span data-ttu-id="370a5-680">Der Inhalt von Zellen unterhalb des markierten Bereichs wird dann ohne Meldung durch Text ersetzt.</span><span class="sxs-lookup"><span data-stu-id="370a5-680">After you set this property, text will always replace the contents in cells below the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public object Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Left" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Left As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Left { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-681">Der Abstand zwischen dem linken Rand von Spalte A und dem linken Rand des Bereichs.</span><span class="sxs-lookup"><span data-stu-id="370a5-681">The distance from the left edge of column A to the left edge of the range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-p237">Wenn der Bereich nicht zusammenhängend ist, wird der erste Teilbereich verwendet. Wenn der Bereich mehrere Spalten breit ist, wird die linke Spalte des Bereichs verwendet.</span><span class="sxs-lookup"><span data-stu-id="370a5-p237">If the range is discontinuous, the first area is used. If the range is more than one column wide, the leftmost column in the range is used.</span></span></para>
          <para><span data-ttu-id="370a5-684">Wenn das Fenster maximiert ist, gibt diese Eigenschaft eine negative Zahl zurück, die je nach Breite des Fensterrahmens variiert.</span><span class="sxs-lookup"><span data-stu-id="370a5-684">If the window is maximized, this property returns a negative number that varies based on the width of the window border.</span></span> <span data-ttu-id="370a5-685">Wenn Sie diese Eigenschaft auf 0 (Null) festlegen, wird das Fenster etwas kleiner als bei maximiertem Anwendungsfenster.</span><span class="sxs-lookup"><span data-stu-id="370a5-685">Setting this property to 0 (zero) will make the window a tiny bit smaller than it would be if the application window were maximized.</span></span> <span data-ttu-id="370a5-686">Mit anderen Worten: Wenn diese Eigenschaft 0 (Null) ist, wird der linke Rahmen des Microsoft Excel-Hauptfensters nur noch auf dem Bildschirm angezeigt.</span><span class="sxs-lookup"><span data-stu-id="370a5-686">In other words, if this property is 0 (zero), the left border of the main Microsoft Excel window will just barely be visible on the screen.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListHeaderRows">
      <MemberSignature Language="C#" Value="public int ListHeaderRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ListHeaderRows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ListHeaderRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListHeaderRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ListHeaderRows { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1187)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1187)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-687">Gibt die Anzahl der Überschriftenzeilen für den angegebenen Bereich zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-687">Returns the number of header rows for the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-688">Bevor Sie diese Eigenschaft verwenden, verwenden Sie die Eigenschaft, <see cref="P:Microsoft.Office.Interop.Excel.Range.CurrentRegion" /> um die Grenzen des Bereichs zu finden.</span><span class="sxs-lookup"><span data-stu-id="370a5-688">Before you use this property, use the <see cref="P:Microsoft.Office.Interop.Excel.Range.CurrentRegion" /> property to find the boundaries of the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListNames">
      <MemberSignature Language="C#" Value="public object ListNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ListNames() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ListNames" />
      <MemberSignature Language="VB.NET" Value="Public Function ListNames () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ListNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(253)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-689">Fügt eine Liste aller angezeigten Namen in das Arbeitsblatt ein, beginnend mit der ersten Zelle im Bereich.</span><span class="sxs-lookup"><span data-stu-id="370a5-689">Pastes a list of all displayed names onto the worksheet, beginning with the first cell in the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-690">Mit der <see cref="P:Microsoft.Office.Interop.Excel._Application.Names" /> Eigenschaft können Sie eine Auflistung aller Namen in einem Arbeitsblatt zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="370a5-690">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Names" /> property to return a collection of all the names on a worksheet.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListObject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ListObject ListObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ListObject ListObject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ListObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListObject As ListObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ListObject ^ ListObject { Microsoft::Office::Interop::Excel::ListObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2257)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2257)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ListObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-691">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> Objekt für das Objekt oder Objekt <see cref="T:Microsoft.Office.Interop.Excel.Range" /> <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-691">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ListObject" /> object for the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object or <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationInTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlLocationInTable LocationInTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlLocationInTable LocationInTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.LocationInTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocationInTable As XlLocationInTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlLocationInTable LocationInTable { Microsoft::Office::Interop::Excel::XlLocationInTable get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(691)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(691)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlLocationInTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-692">Gibt eine Konstante zurück, die den Teil des Berichts beschreibt, der die linke obere Ecke <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> des angegebenen Bereichs enthält.</span><span class="sxs-lookup"><span data-stu-id="370a5-692">Returns a constant that describes the part of the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> report that contains the upper-left corner of the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-693">
            <b>XlLocationInTable</b> kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlLocationInTable" /> Konstanten sein:</span><span class="sxs-lookup"><span data-stu-id="370a5-693">
            <b>XlLocationInTable</b> can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLocationInTable" /> constants:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="370a5-694">
                <b>xlRowHeader</b>
              </span><span class="sxs-lookup"><span data-stu-id="370a5-694">
                <b>xlRowHeader</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="370a5-695">
                <b>xlColumnHeader</b>
              </span><span class="sxs-lookup"><span data-stu-id="370a5-695">
                <b>xlColumnHeader</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="370a5-696">
                <b>xlPageHeader</b>
              </span><span class="sxs-lookup"><span data-stu-id="370a5-696">
                <b>xlPageHeader</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="370a5-697">
                <b>xlDataHeader</b>
              </span><span class="sxs-lookup"><span data-stu-id="370a5-697">
                <b>xlDataHeader</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="370a5-698">
                <b>xlRowItem</b>
              </span><span class="sxs-lookup"><span data-stu-id="370a5-698">
                <b>xlRowItem</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="370a5-699">
                <b>xlColumnItem</b>
              </span><span class="sxs-lookup"><span data-stu-id="370a5-699">
                <b>xlColumnItem</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="370a5-700">
                <b>xlPageItem</b>
              </span><span class="sxs-lookup"><span data-stu-id="370a5-700">
                <b>xlPageItem</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="370a5-701">
                <b>xlDataItem</b>
              </span><span class="sxs-lookup"><span data-stu-id="370a5-701">
                <b>xlDataItem</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="370a5-702">
                <b>xlTableBody</b>
              </span><span class="sxs-lookup"><span data-stu-id="370a5-702">
                <b>xlTableBody</b>
              </span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Locked">
      <MemberSignature Language="C#" Value="public object Locked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Locked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Locked" />
      <MemberSignature Language="VB.NET" Value="Public Property Locked As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Locked { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-703">Bestimmt, ob das Objekt gesperrt ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-703">Determines if the object is locked.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-704">Diese Eigenschaft gibt <b>True</b> zurück, wenn das Objekt gesperrt ist, <b>False,</b> wenn das Objekt geändert werden kann, wenn das Blatt geschützt ist, und <b>Null,</b> wenn der angegebene Bereich gesperrte und nicht gesperrte Zellen enthält.</span><span class="sxs-lookup"><span data-stu-id="370a5-704">This property returns <b>True</b> if the object is locked, <b>False</b> if the object can be modified when the sheet is protected, and <b>Null</b> if the specified range contains both locked and unlocked cells.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MDX">
      <MemberSignature Language="C#" Value="public string MDX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MDX" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.MDX" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MDX As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MDX { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-705">Gibt den Namen des MDX für das angegebene Objekt <see cref="T:Microsoft.Office.Interop.Excel.Range" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-705">Returns the MDX name for the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span> <span data-ttu-id="370a5-706">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="370a5-706">Read-only.</span></span></summary>
        <value><span data-ttu-id="370a5-707">Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="370a5-707">String</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (object Across);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Merge([in]object Across) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Merge(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Merge (Optional Across As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(564)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Across" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Across"><span data-ttu-id="370a5-708">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-708">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-709">Mit  <b>True</b> werden Zellen in allen Zeilen des angegebenen Bereichs als einzelne zusammengeführte Zellen zusammengeführt.</span><span class="sxs-lookup"><span data-stu-id="370a5-709"><b>True</b> to merge cells in each row of the specified range as separate merged cells.</span></span> <span data-ttu-id="370a5-710">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-710">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="370a5-711">Erstellt eine zusammengeführte Zelle aus dem angegebenen <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt.</span><span class="sxs-lookup"><span data-stu-id="370a5-711">Creates a merged cell from the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></summary>
        <remarks><para><span data-ttu-id="370a5-712">Der Wert eines zusammengeführten Bereichs wird in der Zelle in der oberen linken Ecke des Bereichs angegeben.</span><span class="sxs-lookup"><span data-stu-id="370a5-712">The value of a merged range is specified in the cell of the range's upper-left corner.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeArea">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range MergeArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range MergeArea" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.MergeArea" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MergeArea As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ MergeArea { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1385)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1385)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-713">Gibt ein Objekt <see cref="T:Microsoft.Office.Interop.Excel.Range" /> zurück, das den zusammengeführten Bereich darstellt, der die angegebene Zelle enthält.</span><span class="sxs-lookup"><span data-stu-id="370a5-713">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the merged range containing the specified cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-714">Wenn sich die angegebene Zelle nicht in einem zusammengeführten Bereich befindet, gibt diese Eigenschaft die angegebene Zelle zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-714">If the specified cell isn’t in a merged range, this property returns the specified cell.</span></span></para>
          <para><span data-ttu-id="370a5-715">Die <b>MergeArea</b>-Eigenschaft funktioniert nur für einen einzelligen Bereich.</span><span class="sxs-lookup"><span data-stu-id="370a5-715">The <b>MergeArea</b> property only works on a single-cell range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeCells">
      <MemberSignature Language="C#" Value="public object MergeCells { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MergeCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.MergeCells" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeCells As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MergeCells { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-716">Bestimmt, ob der Bereich oder die Formatvorlage verbundene Zellen enthält.</span><span class="sxs-lookup"><span data-stu-id="370a5-716">Determines if the range or style contains merged cells.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-717">Diese Eigenschaft gibt <b>True zurück,</b> wenn der Bereich oder die Formatvorlage zusammengeführte Zellen enthält.</span><span class="sxs-lookup"><span data-stu-id="370a5-717">This property returns <b>True</b> if the range or style contains merged cells.</span></span></para>
          <para><span data-ttu-id="370a5-718">Wenn Sie einen Bereich mit zusammengeführten Zellen markieren, kann sich die resultierende Markierung von der beabsichtigten Markierung unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="370a5-718">When you select a range that contains merged cells, the resulting selection may be different from the intended selection.</span></span> <span data-ttu-id="370a5-719">Verwenden Sie <see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" /> die Eigenschaft, um die Adresse des ausgewählten Bereichs zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="370a5-719">Use the <see cref="P:Microsoft.Office.Interop.Excel.Range.Address(System.Object,System.Object,Microsoft.Office.Interop.Excel.XlReferenceStyle,System.Object,System.Object)" /> property to check the address of the selected range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public object Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Name { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-720">Gibt den Namen des Objekts zurück oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="370a5-720">Returns or sets the name of the object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-721">Der Name eines <b>Range -Objekts</b> ist ein <see cref="T:Microsoft.Office.Interop.Excel.Name" /> Objekt.</span><span class="sxs-lookup"><span data-stu-id="370a5-721">The name of a <b>Range</b> object is a <see cref="T:Microsoft.Office.Interop.Excel.Name" /> object.</span></span> <span data-ttu-id="370a5-722">Für jeden anderen Objekttyp ist der Name eine <b>Zeichenfolge</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-722">For every other type of object, the name is a <b>String</b>.</span></span></para>
          <para><span data-ttu-id="370a5-723">Die folgende Tabelle enthält Beispielwerte der <b>Name</b>-Eigenschaft und verwandter Eigenschaften. Dabei wird von einer OLAP-Datenquelle mit dem eindeutigen Namen "[Europa].[Frankreich].[Paris]" und einer Nicht-OLAP-Datenquelle mit dem Elementnamen "Paris" ausgegangen.</span><span class="sxs-lookup"><span data-stu-id="370a5-723">The following table shows example values of the <b>Name</b> property and related properties given an OLAP data source with the unique name "[Europe].[France].[Paris]" and a non-OLAP data source with the item name "Paris".</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="370a5-724">Beschriftung</span><span class="sxs-lookup"><span data-stu-id="370a5-724">Caption</span></span></term>
              <description><span data-ttu-id="370a5-725">Paris</span><span class="sxs-lookup"><span data-stu-id="370a5-725">Paris</span></span></description>
              <description><span data-ttu-id="370a5-726">Paris</span><span class="sxs-lookup"><span data-stu-id="370a5-726">Paris</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="370a5-727">Name</span><span class="sxs-lookup"><span data-stu-id="370a5-727">Name</span></span></term>
              <description><span data-ttu-id="370a5-728">[Europa].[Frankreich].[Paris] (schreibgeschützt)</span><span class="sxs-lookup"><span data-stu-id="370a5-728">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="370a5-729">Paris</span><span class="sxs-lookup"><span data-stu-id="370a5-729">Paris</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="370a5-730">SourceName</span><span class="sxs-lookup"><span data-stu-id="370a5-730">SourceName</span></span></term>
              <description><span data-ttu-id="370a5-731">[Europa].[Frankreich].[Paris] (schreibgeschützt)</span><span class="sxs-lookup"><span data-stu-id="370a5-731">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="370a5-732">(Identisch mit SQL-Eigenschaftenwert, schreibgeschützt)</span><span class="sxs-lookup"><span data-stu-id="370a5-732">(Same as SQL property value, read-only)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="370a5-733">Wert</span><span class="sxs-lookup"><span data-stu-id="370a5-733">Value</span></span></term>
              <description><span data-ttu-id="370a5-734">[Europa].[Frankreich].[Paris] (schreibgeschützt)</span><span class="sxs-lookup"><span data-stu-id="370a5-734">[Europe].[France].[Paris] (read-only)</span></span></description>
              <description><span data-ttu-id="370a5-735">Paris</span><span class="sxs-lookup"><span data-stu-id="370a5-735">Paris</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="370a5-736">Wenn Sie einen Index in der Auflistung angeben, können Sie <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> die in der folgenden Tabelle gezeigte Syntax verwenden.</span><span class="sxs-lookup"><span data-stu-id="370a5-736">When specifying an index into the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, you can use the syntax shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="370a5-737">Ausdruck. PivotItems("[Europe].[ Frankreich]. [Paris]")</span><span class="sxs-lookup"><span data-stu-id="370a5-737">expression.PivotItems("[Europe].[France].[Paris]")</span></span></term>
              <description><span data-ttu-id="370a5-738">Ausdruck. PivotItems("Paris")</span><span class="sxs-lookup"><span data-stu-id="370a5-738">expression.PivotItems("Paris")</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="370a5-739">Wenn Sie die Eigenschaft verwenden, um auf ein bestimmtes Element einer Auflistung zu verweisen, können Sie den Textindexnamen wie in der <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> folgenden Tabelle dargestellt verwenden.</span><span class="sxs-lookup"><span data-stu-id="370a5-739">When using the <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> property to reference a specific member of a collection, you can use the text index name as shown in the following table.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="370a5-740">[Europa]. [Frankreich]. [Paris]</span><span class="sxs-lookup"><span data-stu-id="370a5-740">[Europe].[France].[Paris]</span></span></term>
              <description><span data-ttu-id="370a5-741">Paris</span><span class="sxs-lookup"><span data-stu-id="370a5-741">Paris</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateArrow">
      <MemberSignature Language="C#" Value="public object NavigateArrow (object TowardPrecedent, object ArrowNumber, object LinkNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object NavigateArrow([in]object TowardPrecedent, [in]object ArrowNumber, [in]object LinkNumber) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.NavigateArrow(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function NavigateArrow (Optional TowardPrecedent As Object, Optional ArrowNumber As Object, Optional LinkNumber As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1032)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TowardPrecedent" Type="System.Object" />
        <Parameter Name="ArrowNumber" Type="System.Object" />
        <Parameter Name="LinkNumber" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="TowardPrecedent"><span data-ttu-id="370a5-742">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-742">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-743">Gibt die Navigationsrichtung an: <b>"True",</b> um zu Vorgängern zu navigieren; <b>False,</b> um zu abhängig zu navigieren.</span><span class="sxs-lookup"><span data-stu-id="370a5-743">Specifies the direction to navigate: <b>True</b> to navigate toward precedents; <b>False</b> to navigate toward dependent.</span></span></param>
        <param name="ArrowNumber"><span data-ttu-id="370a5-744">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-744">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-745">Gibt die Nummer des Spurpfeils entsprechend dem nummerierten Bezug in der Zellformel an.</span><span class="sxs-lookup"><span data-stu-id="370a5-745">Specifies the arrow number to navigate; corresponds to the numbered reference in the cell's formula.</span></span></param>
        <param name="LinkNumber"><span data-ttu-id="370a5-746">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-746">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-747">Falls es sich bei dem Pfeil um einen externen Bezugspfeil handelt, gibt dieses Argument an, welchem externen Bezug gefolgt werden soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-747">If the arrow is an external reference arrow, this argument indicates which external reference to follow.</span></span> <span data-ttu-id="370a5-748">Wenn dieses Argument nicht angegeben ist, wird dem ersten externen Bezug gefolgt.</span><span class="sxs-lookup"><span data-stu-id="370a5-748">If this argument is omitted, the first external reference is followed.</span></span></param>
        <summary><span data-ttu-id="370a5-749">Navigiert einen Spurpfeil des angegebenen Bereichs zu der oder den Vorgänger-, Nachfolger- oder fehlerverursachenden Zelle(n).</span><span class="sxs-lookup"><span data-stu-id="370a5-749">Navigates a tracer arrow for the specified range to the precedent, dependent, or error-causing cell or cells.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-750">Wählt die Vorgängerzellen, abhängigen Zellen oder Fehlerzellen aus und gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das die neue Auswahl darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-750">Selects the precedent, dependent, or error cells and returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the new selection.</span></span> <span data-ttu-id="370a5-751">Diese Methode verursacht einen Fehler, falls sie auf eine Zelle ohne sichtbare Spurpfeile angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="370a5-751">This method causes an error if it's applied to a cell without visible tracer arrows.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Next { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Next" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Next" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Next As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Next { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-752">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das die nächste Zelle darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-752">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the next cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-753">Diese Eigenschaft emuliert die TAB-TASTE, obwohl die Eigenschaft die nächste Zelle zurückgibt, ohne sie zu markieren.</span><span class="sxs-lookup"><span data-stu-id="370a5-753">This property emulates the TAB key, although the property returns the next cell without selecting it.</span></span></para>
          <para><span data-ttu-id="370a5-p247">In einem geschützten Blatt gibt diese Eigenschaft die nächste nicht gesperrte Zelle zurück. In einem ungeschützten Blatt wird immer die Zelle unmittelbar rechts von der angegebenen Zelle zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="370a5-p247">On a protected sheet, this property returns the next unlocked cell. On an unprotected sheet, this property always returns the cell immediately to the right of the specified cell.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NoteText">
      <MemberSignature Language="C#" Value="public string NoteText (object Text, object Start, object Length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string NoteText([in]object Text, [in]object Start, [in]object Length) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.NoteText(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function NoteText (Optional Text As Object, Optional Start As Object, Optional Length As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.Object" />
        <Parameter Name="Start" Type="System.Object" />
        <Parameter Name="Length" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text"><span data-ttu-id="370a5-756">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-756">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-757">Der dem Kommentar hinzuzufügende Text (maximal 255 Zeichen).</span><span class="sxs-lookup"><span data-stu-id="370a5-757">The text to add to the note (up to 255 characters).</span></span> <span data-ttu-id="370a5-758">Der Text wird beginnend an der Position eingefügt <paramref name="Start" /> und ersetzt die Zeichen der <paramref name="Length" /> vorhandenen Notiz.</span><span class="sxs-lookup"><span data-stu-id="370a5-758">The text is inserted starting at position <paramref name="Start" />, replacing <paramref name="Length" /> characters of the existing note.</span></span> <span data-ttu-id="370a5-759">Wenn dieses Argument nicht angegeben wird, gibt diese Methode für Zeichen den aktuellen Text der Notiz zurück, der an der Position <paramref name="Start" /> <paramref name="Length" /> beginnt.</span><span class="sxs-lookup"><span data-stu-id="370a5-759">If this argument is omitted, this method returns the current text of the note starting at position <paramref name="Start" />, for <paramref name="Length" /> characters.</span></span></param>
        <param name="Start"><span data-ttu-id="370a5-760">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-760">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-761">Gibt die Anfangsposition des Texts an, der festgelegt oder zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-761">The starting position for the text that’s set or returned.</span></span> <span data-ttu-id="370a5-762">Wenn dieses Argument nicht angegeben wird, beginnt diese Methode beim ersten Zeichen.</span><span class="sxs-lookup"><span data-stu-id="370a5-762">If this argument is omitted, this method starts at the first character.</span></span> <span data-ttu-id="370a5-763">Wenn Sie dem bestehenden Kommentar Text hinzufügen möchten, geben Sie eine Zahl an, die größer als die Anzahl von Zeichen des bestehenden Kommentars ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-763">To append text to the note, specify a number larger than the number of characters in the existing note.</span></span></param>
        <param name="Length"><span data-ttu-id="370a5-764">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-764">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-765">Gibt die Anzahl von Zeichen an, die festgelegt oder zurückgegeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-765">The number of characters to be set or returned.</span></span> <span data-ttu-id="370a5-766">Wenn dieses Argument nicht angegeben wird, werden die Zeichen von Microsoft Excel von der Anfangsposition bis zum Ende des Kommentars (maximal 255 Zeichen) festgelegt oder zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="370a5-766">If this argument is omitted, Microsoft Excel sets or returns characters from the starting position to the end of the note (up to 255 characters).</span></span> <span data-ttu-id="370a5-767">Wenn mehr als 255 Zeichen bis zum Ende des Hinweises liegen, gibt diese Methode <paramref name="Start" /> nur 255 Zeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-767">If there are more than 255 characters from <paramref name="Start" /> to the end of the note, this method returns only 255 characters.</span></span></param>
        <summary><span data-ttu-id="370a5-768">Gibt den mit der oberen linken Zelle des Bereichs verbundenen Zellkommentar zurück oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="370a5-768">Returns or sets the cell note associated with the cell in the upper-left corner of the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-769">Zellkommentare wurden durch Bereichskommentare ersetzt.</span><span class="sxs-lookup"><span data-stu-id="370a5-769">Cell notes have been replaced by range comments.</span></span> <span data-ttu-id="370a5-770">Weitere Informationen finden Sie unter dem <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> Objekt.</span><span class="sxs-lookup"><span data-stu-id="370a5-770">For more information, see the <see cref="T:Microsoft.Office.Interop.Excel.Comment" /> object.</span></span></para>
          <para><span data-ttu-id="370a5-771">Wenn Sie einen Kommentar hinzufügen möchten, der länger als 255 Zeichen ist, geben Sie zunächst mit dieser Methode die ersten 255 Zeichen an. Danach verwenden Sie die Methode erneut, um die restlichen Zeichen anzugeben (jeweils maximal 255).</span><span class="sxs-lookup"><span data-stu-id="370a5-771">To add a note that contains more than 255 characters, use this method once to specify the first 255 characters, and then use it again to append the remainder of the note (no more than 255 characters at a time).</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public object NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormat As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormat { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-772">Zurückgeben oder festlegen den Formatierungscode für das Objekt.</span><span class="sxs-lookup"><span data-stu-id="370a5-772">Returns or sets the format code for the object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-773">Diese Eigenschaft gibt <b>Null</b> zurück, wenn alle Zellen im angegebenen Bereich nicht dasselbe Zahlenformat aufweisen.</span><span class="sxs-lookup"><span data-stu-id="370a5-773">This property returns <b>Null</b> if all cells in the specified range don't have the same number format.</span></span></para>
          <para><span data-ttu-id="370a5-774">Der Formatierungscode ist dieselbe Zeichenfolge wie die Option Formatierungscode im Dialogfeld Zellen formatieren.</span><span class="sxs-lookup"><span data-stu-id="370a5-774">The format code is the same string as the Format Codes option in the Format Cells dialog box.</span></span> <span data-ttu-id="370a5-775">Die <b>Formatfunktion</b> verwendet andere Formatcodezeichenfolgen als <b>numberFormat und</b> <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" /> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="370a5-775">The <b>Format</b> function uses different format code strings than do the <b>NumberFormat</b> and <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" /> properties.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormatLocal">
      <MemberSignature Language="C#" Value="public object NumberFormatLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormatLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.NumberFormatLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberFormatLocal As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormatLocal { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-776">Zurückgeben oder festlegen den Formatierungscode des Objekts als Zeichenfolge in der Sprache des Benutzers.</span><span class="sxs-lookup"><span data-stu-id="370a5-776">Returns or sets the format code for the object as a string in the language of the user.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-777">Die <b>Formatfunktion</b> verwendet andere Formatcodezeichenfolgen als die <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" /> Eigenschaften <b>"NumberFormatLocal".</b></span><span class="sxs-lookup"><span data-stu-id="370a5-777">The <b>Format</b> function uses different format code strings than do the <see cref="P:Microsoft.Office.Interop.Excel.Range.NumberFormat" /> and <b>NumberFormatLocal</b> properties.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Offset[object RowOffset, object ColumnOffset] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Offset(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Offset(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset(Optional RowOffset As Object, Optional ColumnOffset As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Offset[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ RowOffset, System::Object ^ ColumnOffset); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(254)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(254)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowOffset" Type="System.Object" />
        <Parameter Name="ColumnOffset" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowOffset"><span data-ttu-id="370a5-778">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-778">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-779">Anzahl der Zeilen für den Versatz des Bereichs – positiv, negativ oder 0 (Null).</span><span class="sxs-lookup"><span data-stu-id="370a5-779">The number of rows (positive, negative, or 0 (zero)) by which the range is to be offset.</span></span> <span data-ttu-id="370a5-780">Bei positiven Werten erfolgt der Versatz nach unten, bei negativen Werten nach oben.</span><span class="sxs-lookup"><span data-stu-id="370a5-780">Positive values are offset downward, and negative values are offset upward.</span></span> <span data-ttu-id="370a5-781">Der Standardwert ist 0.</span><span class="sxs-lookup"><span data-stu-id="370a5-781">The default value is 0.</span></span></param>
        <param name="ColumnOffset"><span data-ttu-id="370a5-782">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-782">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-783">Anzahl der Spalten für den Versatz des Bereichs – positiv, negativ oder 0 (Null).</span><span class="sxs-lookup"><span data-stu-id="370a5-783">The number of columns (positive, negative, or 0 (zero)) by which the range is to be offset.</span></span> <span data-ttu-id="370a5-784">Bei positiven Werten erfolgt der Versatz nach rechts, bei negativen Werten nach links.</span><span class="sxs-lookup"><span data-stu-id="370a5-784">Positive values are offset to the right, and negative values are offset to the left.</span></span> <span data-ttu-id="370a5-785">Der Standardwert ist 0.</span><span class="sxs-lookup"><span data-stu-id="370a5-785">The default value is 0.</span></span></param>
        <summary><span data-ttu-id="370a5-786">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das einen Bereich darstellt, der vom angegebenen Bereich versetzt ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-786">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a range that’s offset from the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public object Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Orientation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Orientation { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-787">Gibt die Textausrichtung zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-787">Returns the text orientation.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-788">Dieser zurückgegebene Ausrichtungswert kann ein ganzzahliger Wert zwischen 90 und 90 Grad sein.</span><span class="sxs-lookup"><span data-stu-id="370a5-788">This returned orientation value can be an integer value from 90 to 90 degrees.</span></span></para>
          <para><span data-ttu-id="370a5-p255">Wenn diese Eigenschaft bei OLAP-Datenquellen für ein Feld in einer Hierarchie festgelegt wird, wird ebenfalls die Ausrichtung der anderen Felder in derselben Hierarchie festgelegt. Dimensionsfelder können nur in Zeilen-, Spalten- und Seitenfeldbereichen des PivotTable-Berichts angeordnet sein. Measure-Felder dagegen können nur in im Datenbereich angeordnet sein. Wird eine Hierarchie oder ein Datenfeld auf <b>xlHidden</b>eingestellt, wird die Hierarchie oder das Feld aus dem PivotTable-Bericht entfernt.</span><span class="sxs-lookup"><span data-stu-id="370a5-p255">For OLAP data sources, setting this property for one field in a hierarchy sets the orientation for the other fields in the same hierarchy. Dimension fields can only be oriented in the row, column, and page field areas of the PivotTable report. Measure fields can only be oriented in the data area. Setting a hierarchy or data field to <b>xlHidden</b> removes the hierarchy or field from the PivotTable report.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OutlineLevel">
      <MemberSignature Language="C#" Value="public object OutlineLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OutlineLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.OutlineLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property OutlineLevel As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OutlineLevel { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(271)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(271)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(271)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-793">Gibt die aktuelle Zeilen- oder Spaltengliederungsebene für die angegebene Zeile oder Spalte zurück oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="370a5-793">Returns or sets the current outline level of the specified row or column.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-794">Ebene 1 ist die äußerste Gliederungsebene.</span><span class="sxs-lookup"><span data-stu-id="370a5-794">Level one is the outermost summary level.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PageBreak">
      <MemberSignature Language="C#" Value="public int PageBreak { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageBreak" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PageBreak" />
      <MemberSignature Language="VB.NET" Value="Public Property PageBreak As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageBreak { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(255)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(255)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(255)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-795">Gibt die Position eines Seitenumbruchs zurück oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="370a5-795">Returns or sets the location of a page break.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-796">Der Rückgabewert kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlPageBreak" /> <b /> Konstanten sein:</span><span class="sxs-lookup"><span data-stu-id="370a5-796">The return value can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPageBreak" /><b />constants:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="370a5-797">
                <b>xlPageBreakAutomatic</b>
              </span><span class="sxs-lookup"><span data-stu-id="370a5-797">
                <b>xlPageBreakAutomatic</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="370a5-798">
                <b>xlPageBreakManual</b>
              </span><span class="sxs-lookup"><span data-stu-id="370a5-798">
                <b>xlPageBreakManual</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="370a5-799">
                <b>xlPageBreakNone</b>
              </span><span class="sxs-lookup"><span data-stu-id="370a5-799">
                <b>xlPageBreakNone</b>
              </span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="370a5-800">Mit dieser Eigenschaft kann zwar die Position automatischer oder manueller Seitenumbrüche zurückgegeben werden, Sie können jedoch nur manuelle Seitenumbrüche selbst festlegen (die Eigenschaft kann nur auf <b>xlPageBreakManual</b> oder <b>xlPageBreakNone</b> festgelegt werden).</span><span class="sxs-lookup"><span data-stu-id="370a5-800">This property can return the location of either automatic or manual page breaks, but it can only set the location of manual breaks (it can only be set to <b>xlPageBreakManual</b> or <b>xlPageBreakNone</b>).</span></span></para>
          <para><span data-ttu-id="370a5-801">Wenn Sie alle manuellen Seitenumbrüche aus dem Arbeitsblatt entfernen möchten, weisen Sie Cells.PageBreak den Wert <b>xlPageBreakNone</b> zu.</span><span class="sxs-lookup"><span data-stu-id="370a5-801">To remove all manual page breaks on a worksheet, set Cells.PageBreak to <b>xlPageBreakNone</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-802">Gibt das übergeordnete Objekt für das angegebene Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-802">Returns the parent object for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public object Parse (object ParseLine, object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Parse([in]object ParseLine, [in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Parse(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (Optional ParseLine As Object, Optional Destination As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(477)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ParseLine" Type="System.Object" />
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ParseLine"><span data-ttu-id="370a5-803">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-803">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-804">Eine Zeichenfolge mit linken und rechten Klammern, um anzugeben, wo die Zellen geteilt werden sollen. Beispielsweise würde "[xxx][xxx]" die ersten drei Zeichen in die erste Spalte des Zielbereichs einfügen und die nächsten drei Zeichen in die zweite Spalte einfügen. Wenn dieses Argument nicht angegeben wird, wird von Microsoft Excel erraten, wo die Spalten basierend auf dem Abstand der oberen linken Zelle im Bereich aufgeteilt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-804">A string that contains left and right brackets to indicate where the cells should be split.For example, "[xxx][xxx]" would insert the first three characters into the first column of the destination range, and it would insert the next three characters into the second column.If this argument is omitted, Microsoft Excel guesses where to split the columns based on the spacing of the top left cell in the range.</span></span> <span data-ttu-id="370a5-805">Wenn Sie einen anderen Bereich verwenden möchten, um die Analyselinie zu erraten, verwenden Sie ein <b>Range</b> -Objekt als <paramref name="ParseLine" /> Argument.</span><span class="sxs-lookup"><span data-stu-id="370a5-805">If you want to use a different range to guess the parse line, use a <b>Range</b> object as the <paramref name="ParseLine" /> argument.</span></span> <span data-ttu-id="370a5-806">Bei diesem Bereich muss es sich um eine Zelle aus dem zu analysierenden Bereich handeln.</span><span class="sxs-lookup"><span data-stu-id="370a5-806">That range must be one of the cells that's being parsed.</span></span> <span data-ttu-id="370a5-807">Das <paramref name="ParseLine" /> Argument darf nicht länger als 255 Zeichen sein, einschließlich der Klammern und Leerzeichen.</span><span class="sxs-lookup"><span data-stu-id="370a5-807">The <paramref name="ParseLine" /> argument cannot be longer than 255 characters, including the brackets and spaces.</span></span></param>
        <param name="Destination"><span data-ttu-id="370a5-808">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-808">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-809">Ein Objekt, das die obere linke Ecke des Zielbereichs <see cref="T:Microsoft.Office.Interop.Excel.Range" /> für die analysierten Daten darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-809">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the upper-left corner of the destination range for the parsed data.</span></span> <span data-ttu-id="370a5-810">Wenn Sie dieses Argument nicht angeben, wird die Analyse von Microsoft Excel direkt im angegebenen Datenbereich ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="370a5-810">If this argument is omitted, Microsoft Excel parses in place.</span></span></param>
        <summary><span data-ttu-id="370a5-811">Analysiert einen Datenbereich und teilt ihn auf mehrere Zellen auf. </span><span class="sxs-lookup"><span data-stu-id="370a5-811">Parses a range of data and breaks it into multiple cells.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-812">Verteilt den Inhalt des Bereichs, um mehrere angrenzende Spalten zu füllen.</span><span class="sxs-lookup"><span data-stu-id="370a5-812">Distributes the contents of the range to fill several adjacent columns.</span></span> <span data-ttu-id="370a5-813">Der Bereich darf nicht mehr als eine Spalte breit sein.</span><span class="sxs-lookup"><span data-stu-id="370a5-813">The range can be no more than one column wide.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteSpecial">
      <MemberSignature Language="C#" Value="public object PasteSpecial (Microsoft.Office.Interop.Excel.XlPasteType Paste = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, object SkipBlanks, object Transpose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PasteSpecial([in]valuetype Microsoft.Office.Interop.Excel.XlPasteType Paste, [in]valuetype Microsoft.Office.Interop.Excel.XlPasteSpecialOperation Operation, [in]object SkipBlanks, [in]object Transpose) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType,Microsoft.Office.Interop.Excel.XlPasteSpecialOperation,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PasteSpecial (Optional Paste As XlPasteType = Microsoft.Office.Interop.Excel.XlPasteType.xlPasteAll, Optional Operation As XlPasteSpecialOperation = Microsoft.Office.Interop.Excel.XlPasteSpecialOperation.xlPasteSpecialOperationNone, Optional SkipBlanks As Object, Optional Transpose As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1928)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Paste" Type="Microsoft.Office.Interop.Excel.XlPasteType" />
        <Parameter Name="Operation" Type="Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" />
        <Parameter Name="SkipBlanks" Type="System.Object" />
        <Parameter Name="Transpose" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Paste"><span data-ttu-id="370a5-814">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-814">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPasteType" />.</span></span> <span data-ttu-id="370a5-815">Der Teil des einzufügenden Bereichs.</span><span class="sxs-lookup"><span data-stu-id="370a5-815">The part of the range to be pasted.</span></span> <span data-ttu-id="370a5-816">Kann eine der folgenden <b> XlPasteType -Konstanten</b> sein:<b>xlPasteAll default</b><b>xlPasteAllExceptBorders</b><b>xlPasteColumnWidths</b><b>xlPasteComments</b><b>xlPasteFormats</b><b>xlPasteFormulas</b><b>XlPasteFormulasAndNumberFormats</b><b>xlPasteValidation</b><b>xlPasteValues</b><b>xlPasteValuesAndNumberFormats</b></span><span class="sxs-lookup"><span data-stu-id="370a5-816">Can be one of the following <b>XlPasteType</b> constants:<b>xlPasteAll default</b><b>xlPasteAllExceptBorders</b><b>xlPasteColumnWidths</b><b>xlPasteComments</b><b>xlPasteFormats</b><b>xlPasteFormulas</b><b>xlPasteFormulasAndNumberFormats</b><b>xlPasteValidation</b><b>xlPasteValues</b><b>xlPasteValuesAndNumberFormats</b></span></span></param>
        <param name="Operation"><span data-ttu-id="370a5-817">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-817">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPasteSpecialOperation" />.</span></span> <span data-ttu-id="370a5-818">Der Einfügevorgang.</span><span class="sxs-lookup"><span data-stu-id="370a5-818">The paste operation.</span></span> <span data-ttu-id="370a5-819">Dies kann eine der folgenden <b>XlPasteSpecialOperation-Konstanten</b> sein:<b>xlPasteSpecialOperationAdd</b><b>xlPasteSpecialOperationDivide</b><b>xlPasteSpecialOperationMultiply</b><b>xlPasteSpecialOperationNone</b> <paramref name="default" /> <b>xlPasteSpecialOperationSubtract</b></span><span class="sxs-lookup"><span data-stu-id="370a5-819">Can be one of the following <b>XlPasteSpecialOperation</b> constants:<b>xlPasteSpecialOperationAdd</b><b>xlPasteSpecialOperationDivide</b><b>xlPasteSpecialOperationMultiply</b><b>xlPasteSpecialOperationNone</b><paramref name="default" /><b>xlPasteSpecialOperationSubtract</b></span></span></param>
        <param name="SkipBlanks"><span data-ttu-id="370a5-820">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-820">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-821"><b>True,</b> wenn im Bereich in der Zwischenablage keine leeren Zellen in den Zielbereich eingefügt werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-821"><b>True</b> to not have blank cells in the range on the Clipboard pasted into the destination range.</span></span> <span data-ttu-id="370a5-822">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-822">The default value is <b>False</b>.</span></span></param>
        <param name="Transpose"><span data-ttu-id="370a5-823">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-823">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-824"><b>"True",</b> wenn Zeilen und Spalten beim Einfügen des Bereichs transponiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-824"><b>True</b> to transpose rows and columns when the range is pasted.</span></span> <span data-ttu-id="370a5-825">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-825">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="370a5-826">Fügt ein Objekt <see cref="T:Microsoft.Office.Interop.Excel.Range" /> aus der Zwischenablage in den angegebenen Bereich ein.</span><span class="sxs-lookup"><span data-stu-id="370a5-826">Pastes a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> from the Clipboard into the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Phonetic">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Phonetic Phonetic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Phonetic Phonetic" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Phonetic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Phonetic As Phonetic" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Phonetic ^ Phonetic { Microsoft::Office::Interop::Excel::Phonetic ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1391)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1391)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Phonetic</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-827">Gibt das <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> Objekt zurück, das Informationen zu einer bestimmten phonetischen Textzeichenfolge in einer Zelle enthält.</span><span class="sxs-lookup"><span data-stu-id="370a5-827">Returns the <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> object which contains information about a specific phonetic text string in a cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-828">Diese Eigenschaft bietet Kompatibilität mit früheren Versionen von Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="370a5-828">This property provides compatibility with earlier versions of Microsoft Excel.</span></span> <span data-ttu-id="370a5-829">Sie sollten <b>Phonetics</b>( ) verwenden, wobei Index die Indexnummer des phonetischen Texts ist, um <paramref name="index" /> ein einzelnes Objekt <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> zurückzukehren.</span><span class="sxs-lookup"><span data-stu-id="370a5-829">You should use <b>Phonetics</b>(<paramref name="index" />), where index is the index number of the phonetic text, to return a single <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Phonetics">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Phonetics Phonetics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Phonetics Phonetics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Phonetics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Phonetics As Phonetics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Phonetics ^ Phonetics { Microsoft::Office::Interop::Excel::Phonetics ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1811)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1811)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Phonetics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-830">Gibt die <see cref="T:Microsoft.Office.Interop.Excel.Phonetics" /> Auflistung des Bereichs zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-830">Returns the <see cref="T:Microsoft.Office.Interop.Excel.Phonetics" /> collection of the range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotCell PivotCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotCell PivotCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotCell As PivotCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotCell ^ PivotCell { Microsoft::Office::Interop::Excel::PivotCell ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2013)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2013)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-831">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" /> Objekt zurück, das eine Zelle in einem PivotTable-Bericht darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-831">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotCell" /> object that represents a cell in a PivotTable report.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotField">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotField PivotField { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotField PivotField" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotField" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotField As PivotField" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotField ^ PivotField { Microsoft::Office::Interop::Excel::PivotField ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(731)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(731)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotField</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-832">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> Objekt zurück, das das PivotTable-Feld darstellt, das die linke obere Ecke des angegebenen Bereichs enthält.</span><span class="sxs-lookup"><span data-stu-id="370a5-832">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> object that represents the PivotTable field containing the upper-left corner of the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotItem">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotItem PivotItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotItem PivotItem" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotItem As PivotItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotItem ^ PivotItem { Microsoft::Office::Interop::Excel::PivotItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(740)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(740)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-833">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> Objekt zurück, das das PivotTable-Element darstellt, das die linke obere Ecke des angegebenen Bereichs enthält.</span><span class="sxs-lookup"><span data-stu-id="370a5-833">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotItem" /> object that represents the PivotTable item containing the upper-left corner of the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotTable PivotTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotTable PivotTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PivotTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotTable As PivotTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotTable ^ PivotTable { Microsoft::Office::Interop::Excel::PivotTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(716)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(716)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-834">Gibt ein Objekt zurück, das den PivotTable-Bericht darstellt, der die linke obere Ecke des angegebenen Bereichs enthält, oder den <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> PivotTable-Bericht, der dem PivotChart-Bericht zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-834">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> object that represents the PivotTable report containing the upper-left corner of the specified range, or the PivotTable report associated with the PivotChart report.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Precedents">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Precedents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Precedents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Precedents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Precedents As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Precedents { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(544)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(544)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-835">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das alle Vorgänger einer Zelle darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-835">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the precedents of a cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-836">Dies kann eine Mehrfachauswahl <b></b> (eine Vereinigung von Range-Objekten) sein, wenn es mehrere Vorgänger gibt.</span><span class="sxs-lookup"><span data-stu-id="370a5-836">This can be a multiple selection (a union of <b>Range</b> objects) if there's more than one precedent.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefixCharacter">
      <MemberSignature Language="C#" Value="public object PrefixCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PrefixCharacter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.PrefixCharacter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrefixCharacter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PrefixCharacter { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-837">Gibt das Präfixzeichen für die Zelle zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-837">Returns the prefix character for the cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-838">Wenn die <see cref="P:Microsoft.Office.Interop.Excel._Application.TransitionNavigKeys" /> Eigenschaft <b>"False"</b>ist, ist dieses Präfix "" für eine Textbeschriftung oder leer.</span><span class="sxs-lookup"><span data-stu-id="370a5-838">If the <see cref="P:Microsoft.Office.Interop.Excel._Application.TransitionNavigKeys" /> property is <b>False</b>, this prefix character will be ' for a text label or blank.</span></span> <span data-ttu-id="370a5-839">Hat die <b>TransitionNavigKeys</b>-Eigenschaft den Wert <b>True</b>, so ist das Präfix das Zeichen ' für eine links ausgerichtete Beschriftung, " für eine rechts ausgerichtete Beschriftung, ^ für eine zentrierte Beschriftung, \ für eine wiederholte Beschriftung, oder es ist leer.</span><span class="sxs-lookup"><span data-stu-id="370a5-839">If the <b>TransitionNavigKeys</b> property is <b>True</b>, this character will be ' for a left-justified label, " for a right-justified label, ^ for a centered label, \ for a repeated label, or blank.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Previous" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Previous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Previous As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Previous { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-840">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das die vorherige Zelle darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-840">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the previous cell.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-841">Ist das Objekt ein Bereich, so emuliert diese Eigenschaft die Tastenkombination UMSCHALT+TAB. Im Gegensatz zur Tastenkombination wird jedoch die vorhergehende Zelle zurückgegeben, ohne sie zu markieren.</span><span class="sxs-lookup"><span data-stu-id="370a5-841">If the object is a range, this property emulates pressing SHIFT+TAB; unlike the key combination, however, the property returns the previous cell without selecting it.</span></span></para>
          <para><span data-ttu-id="370a5-p265">In einem geschützten Blatt gibt diese Eigenschaft die vorhergehende nicht gesperrte Zelle zurück. In einem ungeschützten Blatt wird immer die Zelle links von der angegebenen Zelle zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="370a5-p265">On a protected sheet, this property returns the previous unlocked cell. On an unprotected sheet, this property always returns the cell immediately to the left of the specified cell.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public object PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From"><span data-ttu-id="370a5-844">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-844">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-845">Die Nummer der ersten Seite, die gedruckt werden soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-845">The number of the page at which to start printing.</span></span> <span data-ttu-id="370a5-846">Wenn Sie dieses Argument nicht angeben, wird von der ersten Seite an gedruckt.</span><span class="sxs-lookup"><span data-stu-id="370a5-846">If this argument is omitted, printing starts at the beginning.</span></span></param>
        <param name="To"><span data-ttu-id="370a5-847">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-847">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-848">Die Nummer der letzten Seite, die gedruckt werden soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-848">The number of the last page to print.</span></span> <span data-ttu-id="370a5-849">Wenn Sie dieses Argument nicht angeben, wird bis zur letzten Seite gedruckt.</span><span class="sxs-lookup"><span data-stu-id="370a5-849">If this argument is omitted, printing ends with the last page.</span></span></param>
        <param name="Copies"><span data-ttu-id="370a5-850">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-850">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-851">Die Anzahl der zu druckenden Kopien.</span><span class="sxs-lookup"><span data-stu-id="370a5-851">The number of copies to print.</span></span> <span data-ttu-id="370a5-852">Wenn Sie dieses Argument nicht angeben, wird eine einzelne Kopie gedruckt.</span><span class="sxs-lookup"><span data-stu-id="370a5-852">If this argument is omitted, one copy is printed.</span></span></param>
        <param name="Preview"><span data-ttu-id="370a5-853">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-853">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-854"><b>True,</b> wenn Microsoft Excel die Druckvorschau aufrufen soll, bevor das Objekt gedruckt wird; <b>False</b> (oder nicht angegeben), um das Objekt sofort zu drucken.</span><span class="sxs-lookup"><span data-stu-id="370a5-854"><b>True</b> to have Microsoft Excel invoke print preview before printing the object; <b>False</b> (or omitted) to print the object immediately.</span></span></param>
        <param name="ActivePrinter"><span data-ttu-id="370a5-855">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-855">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-856">Legt den Namen des aktiven Druckers fest.</span><span class="sxs-lookup"><span data-stu-id="370a5-856">Sets the name of the active printer.</span></span></param>
        <param name="PrintToFile"><span data-ttu-id="370a5-857">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-857">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-858"><b>True</b> zum Drucken einer Datei.</span><span class="sxs-lookup"><span data-stu-id="370a5-858"><b>True</b> to print to a file.</span></span> <span data-ttu-id="370a5-859">Wenn <b>PrToFileName</b> nicht angegeben ist, fordert Microsoft Excel den Benutzer auf, den Namen der Ausgabedatei einzugeben.</span><span class="sxs-lookup"><span data-stu-id="370a5-859">If <b>PrToFileName</b> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span></span></param>
        <param name="Collate"><span data-ttu-id="370a5-860">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-860">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-861"><b>True</b> zum Sortieren mehrerer Kopien.</span><span class="sxs-lookup"><span data-stu-id="370a5-861"><b>True</b> to collate multiple copies.</span></span></param>
        <param name="PrToFileName"><span data-ttu-id="370a5-862">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-862">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-863">Wenn <b>PrintToFile</b> auf <b>"True"</b>festgelegt ist, gibt dieses Argument den Namen der Datei an, in die gedruckt werden soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-863">If <b>PrintToFile</b> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span></span></param>
        <summary><span data-ttu-id="370a5-864">Druckt das Objekt.</span><span class="sxs-lookup"><span data-stu-id="370a5-864">Prints the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-865">"Seiten" in den Beschreibungen von gedruckten Seiten und bezieht sich auf gedruckte Seiten, nicht auf allgemeine <paramref name="From" /> <paramref name="To" /> Seiten des Blatts oder der Arbeitsmappe.</span><span class="sxs-lookup"><span data-stu-id="370a5-865">"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages — not overall pages in the sheet or workbook.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public object PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <summary><span data-ttu-id="370a5-866">Für die interne Verwendung reserviert.</span><span class="sxs-lookup"><span data-stu-id="370a5-866">Reserved for internal use.</span></span></summary>
        <returns><span data-ttu-id="370a5-867">Gibt <see cref="T:System.Object" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-867">Returns <see cref="T:System.Object" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public object PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintPreview (Optional EnableChanges As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges"><span data-ttu-id="370a5-868"><b>True,</b> um Änderungen zu aktivieren.</span><span class="sxs-lookup"><span data-stu-id="370a5-868"><b>True</b> to enable changes.</span></span></param>
        <summary><span data-ttu-id="370a5-869">Zeigt ein Objekt so an, wie es gedruckt wird.</span><span class="sxs-lookup"><span data-stu-id="370a5-869">Shows a preview of the object as it would look when printed.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryTable">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.QueryTable QueryTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.QueryTable QueryTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.QueryTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryTable As QueryTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::QueryTable ^ QueryTable { Microsoft::Office::Interop::Excel::QueryTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1386)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1386)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.QueryTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-870">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> Objekt zurück, das die Abfragetabelle darstellt, die das angegebene Objekt <see cref="T:Microsoft.Office.Interop.Excel.Range" /> überschneidet.</span><span class="sxs-lookup"><span data-stu-id="370a5-870">Returns a <see cref="T:Microsoft.Office.Interop.Excel.QueryTable" /> object that represents the query table that intersects the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Range">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Range[object Cell1, object Cell2] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Range(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Range(System.Object,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Range[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ Cell1, System::Object ^ Cell2); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(197)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Cell1" Type="System.Object" />
        <Parameter Name="Cell2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Cell1"><span data-ttu-id="370a5-871">Required <b>-Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-871">Required <b>Object</b>.</span></span> <span data-ttu-id="370a5-872">Der Name des Bereichs.</span><span class="sxs-lookup"><span data-stu-id="370a5-872">The name of the range.</span></span> <span data-ttu-id="370a5-873">Dieser muss ein A1-Bezug in der Sprache des Makros sein.</span><span class="sxs-lookup"><span data-stu-id="370a5-873">This must be an A1-style reference in the language of the macro.</span></span> <span data-ttu-id="370a5-874">Es kann einen Bereichsoperator (ein Doppelpunkt), den Überschneidungsoperator (ein Leerzeichen) oder den Vereinigungsoperator (ein Komma) einschließen.</span><span class="sxs-lookup"><span data-stu-id="370a5-874">It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma).</span></span> <span data-ttu-id="370a5-875">Es kann auch Dollarzeichen einschließen, diese werden jedoch ignoriert.</span><span class="sxs-lookup"><span data-stu-id="370a5-875">It can also include dollar signs, but they’re ignored.</span></span> <span data-ttu-id="370a5-876">Sie können einen lokal definierten Namen in jedem Teil des Bereichs verwenden.</span><span class="sxs-lookup"><span data-stu-id="370a5-876">You can use a local defined name in any part of the range.</span></span> <span data-ttu-id="370a5-877">Bei diesem Namen wird davon ausgegangen, dass er in der Sprache des Makros vorliegt.</span><span class="sxs-lookup"><span data-stu-id="370a5-877">If you use a name, the name is assumed to be in the language of the macro.</span></span></param>
        <param name="Cell2"><span data-ttu-id="370a5-878">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-878">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-879">Die Zellen in der linken oberen und rechten unteren Ecke des Bereichs.</span><span class="sxs-lookup"><span data-stu-id="370a5-879">The cell in the upper-left and lower-right corner of the range.</span></span> <span data-ttu-id="370a5-880">Kann ein <b>Range</b>-Objekt sein, das eine einzelne Zelle (oder eine gesamte Spalte oder eine gesamte Zeile) enthält, oder kann eine Zeichenfolge sein, die eine einzelne Zelle in der Sprache des Makros bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="370a5-880">Can be a <b>Range</b> object that contains a single cell, an entire column, or entire row, or it can be a string that names a single cell in the language of the macro.</span></span></param>
        <summary><span data-ttu-id="370a5-881">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das eine Zelle oder einen Zellbereich darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-881">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents a cell or a range of cells.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-882">Diese Eigenschaft ist relativ zum <b>Range -Objekt.</b></span><span class="sxs-lookup"><span data-stu-id="370a5-882">This property is relative to the <b>Range</b> object.</span></span> <span data-ttu-id="370a5-883">Wenn die Markierung z. B. Zelle C3 ist, gibt Selection.Range("B1") Zelle D3 zurück, da sie relativ zum von der Eigenschaft zurückgegebenen <b>#A0</b> <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-883">For example, if the selection is cell C3, then Selection.Range("B1") returns cell D3 because it’s relative to the <b>Range</b> object returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> property.</span></span> <span data-ttu-id="370a5-884">Andererseits gibt ActiveSheet.Range("B1") immer Zelle B1 zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-884">On the other hand, ActiveSheet.Range("B1") always returns cell B1.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadingOrder">
      <MemberSignature Language="C#" Value="public int ReadingOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadingOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ReadingOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadingOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadingOrder { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-885">Gibt die Lesereihenfolge für das angegebene Objekt zurück oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="370a5-885">Returns or sets the reading order for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-886">Der Rückgabewert kann eine der folgenden Konstanten sein: <b>xlRTL</b> (von rechts nach links), <b>xlLTR</b> (von links nach rechts) oder <b>xlContext</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-886">The return value can be one of the following constants: <b>xlRTL</b> (right-to-left), <b>xlLTR</b> (left-to-right), or <b>xlContext</b>.</span></span></para>
          <para><span data-ttu-id="370a5-887">Einige dieser Konstanten stehen Ihnen möglicherweise abhängig von den von Ihnen ausgewählten oder installierten unterstützten Sprachen (z.B. Englisch (USA)) nicht zur Verfügung.</span><span class="sxs-lookup"><span data-stu-id="370a5-887">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you've selected or installed.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDuplicates">
      <MemberSignature Language="C#" Value="public void RemoveDuplicates (object Columns, Microsoft.Office.Interop.Excel.XlYesNoGuess Header = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveDuplicates([in]object Columns, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess Header) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.RemoveDuplicates(System.Object,Microsoft.Office.Interop.Excel.XlYesNoGuess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDuplicates (Optional Columns As Object, Optional Header As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2492)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Columns" Type="System.Object" />
        <Parameter Name="Header" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
      </Parameters>
      <Docs>
        <param name="Columns"><span data-ttu-id="370a5-888">Optionales <b>Objektarray</b> mit Indizes der Spalten, die die doppelten Informationen enthalten.</span><span class="sxs-lookup"><span data-stu-id="370a5-888">Optional <b>Object</b> Array of indexes of the columns that contain the duplicate information.</span></span>  <span data-ttu-id="370a5-889">Wenn nichts übergeben wird, wird davon ausgegangen, dass alle Spalten doppelte Informationen enthalten.</span><span class="sxs-lookup"><span data-stu-id="370a5-889">If nothing is passed then it assumes all columns contain duplicate information.</span></span></param>
        <param name="Header"><span data-ttu-id="370a5-890">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> Gibt an, ob die erste Zeile Kopfzeileninformationen enthält.</span><span class="sxs-lookup"><span data-stu-id="370a5-890">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> Specifies whether the first row contains header information.</span></span>  <span data-ttu-id="370a5-891"><see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo" /> ist der Standardwert; geben <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess" /> Sie an, ob Excel versuchen soll, die Kopfzeile zu ermitteln.</span><span class="sxs-lookup"><span data-stu-id="370a5-891"><see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo" /> is the default value; specify <see cref="F:Microsoft.Office.Interop.Excel.XlYesNoGuess.xlGuess" /> if you want Excel to attempt to determine the header.</span></span></param>
        <summary><span data-ttu-id="370a5-892">Entfernt doppelt vorhandene Werte aus einem Wertebereich.</span><span class="sxs-lookup"><span data-stu-id="370a5-892">Removes duplicate values from a range of values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSubtotal">
      <MemberSignature Language="C#" Value="public object RemoveSubtotal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RemoveSubtotal() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.RemoveSubtotal" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveSubtotal () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ RemoveSubtotal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(883)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-893">Entfernt Teilergebnisse aus einer Liste.</span><span class="sxs-lookup"><span data-stu-id="370a5-893">Removes subtotals from a list.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public bool Replace (object What, object Replacement, object LookAt, object SearchOrder, object MatchCase, object MatchByte, object SearchFormat, object ReplaceFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Replace([in]object What, [in]object Replacement, [in]object LookAt, [in]object SearchOrder, [in]object MatchCase, [in]object MatchByte, [in]object SearchFormat, [in]object ReplaceFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Replace(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (What As Object, Replacement As Object, Optional LookAt As Object, Optional SearchOrder As Object, Optional MatchCase As Object, Optional MatchByte As Object, Optional SearchFormat As Object, Optional ReplaceFormat As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(226)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="What" Type="System.Object" />
        <Parameter Name="Replacement" Type="System.Object" />
        <Parameter Name="LookAt" Type="System.Object" />
        <Parameter Name="SearchOrder" Type="System.Object" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="MatchByte" Type="System.Object" />
        <Parameter Name="SearchFormat" Type="System.Object" />
        <Parameter Name="ReplaceFormat" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="What"><span data-ttu-id="370a5-894">Required <b>-Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-894">Required <b>Object</b>.</span></span> <span data-ttu-id="370a5-895">Die Zeichenfolge, die in Microsoft Excel gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-895">The string you want Microsoft Excel to search for.</span></span></param>
        <param name="Replacement"><span data-ttu-id="370a5-896">Required <b>-Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-896">Required <b>Object</b>.</span></span> <span data-ttu-id="370a5-897">Die ersetzende Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="370a5-897">The replacement string.</span></span></param>
        <param name="LookAt"><span data-ttu-id="370a5-898">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-898">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-899">Dies kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> Konstanten sein: <b>xlWhole</b> oder <b>xlPart</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-899">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlLookAt" /> constants: <b>xlWhole</b> or <b>xlPart</b>.</span></span></param>
        <param name="SearchOrder"><span data-ttu-id="370a5-900">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-900">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-901">Dies kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> Konstanten sein: <b>xlByRows</b> oder <b>xlByColumns</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-901">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSearchOrder" /> constants: <b>xlByRows</b> or <b>xlByColumns</b>.</span></span></param>
        <param name="MatchCase"><span data-ttu-id="370a5-902">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-902">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-903">Mit <b>True</b> wird die Groß- und Kleinschreibung bei der Suche berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="370a5-903"><b>True</b> to make the search case sensitive.</span></span></param>
        <param name="MatchByte"><span data-ttu-id="370a5-904">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-904">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-905">Sie können dieses Argument nur verwenden, wenn in Microsoft Excel die Doppelbyte-Sprachunterstützung ausgewählt oder installiert wurde.</span><span class="sxs-lookup"><span data-stu-id="370a5-905">You can use this argument only if you’ve selected or installed double-byte language support in Microsoft Excel.</span></span> <span data-ttu-id="370a5-906"><b>True,</b> wenn Doppel-Byte-Zeichen nur mit Doppel-Byte-Zeichen übereinstimmen; <b>False,</b> wenn Doppel-Byte-Zeichen mit ihren Einzel-Byte-Entsprechungen übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="370a5-906"><b>True</b> to have double-byte characters match only double-byte characters; <b>False</b> to have double-byte characters match their single-byte equivalents.</span></span></param>
        <param name="SearchFormat"><span data-ttu-id="370a5-907">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-907">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-908">Das Suchformat für die Methode.</span><span class="sxs-lookup"><span data-stu-id="370a5-908">The search format for the method.</span></span></param>
        <param name="ReplaceFormat"><span data-ttu-id="370a5-909">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-909">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-910">Das Ersetzungsformat für die Methode.</span><span class="sxs-lookup"><span data-stu-id="370a5-910">The replace format for the method.</span></span></param>
        <summary><span data-ttu-id="370a5-911">Gibt einen <b>Boolean</b>Boolean-Wert zurück, der Zeichen in Zellen des angegebenen Bereichs kennzeichnet.</span><span class="sxs-lookup"><span data-stu-id="370a5-911">Returns a <b>Boolean</b> indicating characters in cells within the specified range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-912">Bei Verwendung dieser Methode wird weder die Markierung noch die aktive Zelle geändert.</span><span class="sxs-lookup"><span data-stu-id="370a5-912">Using this method doesn’t change either the selection or the active cell.</span></span></para>
          <para><span data-ttu-id="370a5-913">Die Einstellungen für , und werden jedes Mal <paramref name="LookAt" /> <paramref name="SearchOrder" /> <paramref name="MatchCase" /> <paramref name="MatchByte" /> gespeichert, wenn Sie diese Methode verwenden.</span><span class="sxs-lookup"><span data-stu-id="370a5-913">The settings for <paramref name="LookAt" />, <paramref name="SearchOrder" />, <paramref name="MatchCase" />, and <paramref name="MatchByte" /> are saved each time you use this method.</span></span> <span data-ttu-id="370a5-914">Falls Sie beim nächsten Aufruf dieser Methode keine Werte für die Argumente angeben, werden die gespeicherten Werte verwendet.</span><span class="sxs-lookup"><span data-stu-id="370a5-914">If you don’t specify values for these arguments the next time you call the method, the saved values are used.</span></span> <span data-ttu-id="370a5-915">Das Festlegen dieser Argumente ändert die Einstellungen im Dialogfeld Suchen, und durch Ändern der Einstellungen im Dialogfeld Suchen werden die gespeicherten Werte geändert, die verwendet werden, wenn Sie die Argumente auslassen.</span><span class="sxs-lookup"><span data-stu-id="370a5-915">Setting these arguments changes the settings in the Find dialog box, and changing the settings in the Find dialog box changes the saved values that are used if you omit the arguments.</span></span> <span data-ttu-id="370a5-916">Um Probleme zu vermeiden, legen Sie diese Argumente jedes Mal explizit fest, wenn Sie diese Methode verwenden.</span><span class="sxs-lookup"><span data-stu-id="370a5-916">To avoid problems, set these arguments explicitly each time you use this method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Resize[object RowSize, object ColumnSize] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Resize(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Resize(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Resize(Optional RowSize As Object, Optional ColumnSize As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Resize[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Range ^ get(System::Object ^ RowSize, System::Object ^ ColumnSize); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(256)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(256)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowSize" Type="System.Object" />
        <Parameter Name="ColumnSize" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowSize"><span data-ttu-id="370a5-917">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-917">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-918">Die Anzahl der Zeilen im neuen Bereich.</span><span class="sxs-lookup"><span data-stu-id="370a5-918">The number of rows in the new range.</span></span> <span data-ttu-id="370a5-919">Wenn dieses Argument ausgelassen wird, bleibt die Anzahl der Zeilen im Bereich unverändert.</span><span class="sxs-lookup"><span data-stu-id="370a5-919">If this argument is omitted, the number of rows in the range remains the same.</span></span></param>
        <param name="ColumnSize"><span data-ttu-id="370a5-920">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-920">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-921">Die Anzahl der Spalten im neuen Bereich.</span><span class="sxs-lookup"><span data-stu-id="370a5-921">The number of columns in the new range.</span></span> <span data-ttu-id="370a5-922">Wenn dieses Argument ausgelassen wird, bleibt die Anzahl der Spalten im Bereich unverändert.</span><span class="sxs-lookup"><span data-stu-id="370a5-922">If this argument is omitted, the number of columns in the range remains the same.</span></span></param>
        <summary><span data-ttu-id="370a5-923">Ändert die Größe des angegebenen Bereichs.</span><span class="sxs-lookup"><span data-stu-id="370a5-923">Resizes the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Row">
      <MemberSignature Language="C#" Value="public int Row { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Row" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Row" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Row As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Row { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(257)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(257)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-924">Gibt die Anzahl der ersten Zeile des ersten Bereichs im Bereich zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-924">Returns the number of the first row of the first area in the range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDifferences">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range RowDifferences (object Comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range RowDifferences([in]object Comparison) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.RowDifferences(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function RowDifferences (Comparison As Object) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Range ^ RowDifferences(System::Object ^ Comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(511)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Comparison" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Comparison"><span data-ttu-id="370a5-925">Required <b>-Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-925">Required <b>Object</b>.</span></span> <span data-ttu-id="370a5-926">Eine einzelne Zelle, die mit dem angegebenen Bereich zu vergleichen ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-926">A single cell to compare with the specified range.</span></span></param>
        <summary><span data-ttu-id="370a5-927">Gibt ein Objekt zurück, das alle Zellen darstellt, deren Inhalt sich von denen der <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Vergleichszelle in jeder Zeile unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="370a5-927">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells whose contents are different from those of the comparison cell in each row.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowHeight">
      <MemberSignature Language="C#" Value="public object RowHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RowHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.RowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property RowHeight As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RowHeight { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(272)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(272)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(272)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-928">Gibt die Höhe aller Zeilen im angegebenen Bereich in Punkt zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-928">Returns the height of all the rows in the range specified, measured in points.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-929">Diese Eigenschaft gibt <b>Null zurück,</b> wenn die Zeilen im angegebenen Bereich nicht alle dieselbe Höhe haben.</span><span class="sxs-lookup"><span data-stu-id="370a5-929">This property returns <b>Null</b> if the rows in the specified range aren’t all the same height.</span></span></para>
          <para><span data-ttu-id="370a5-930">Bei einer einzelnen Zeile entspricht der Wert der Eigenschaft dem Wert der <see cref="P:Microsoft.Office.Interop.Excel.Range.Height" /> <b>RowHeight-Eigenschaft.</b></span><span class="sxs-lookup"><span data-stu-id="370a5-930">For a single row, the value of the <see cref="P:Microsoft.Office.Interop.Excel.Range.Height" /> property is equal to the value of the <b>RowHeight</b> property.</span></span> <span data-ttu-id="370a5-931">Sie können jedoch auch die Height <b>-Eigenschaft</b> verwenden, um die Gesamthöhe eines Zellbereichs zurückzukehren.</span><span class="sxs-lookup"><span data-stu-id="370a5-931">However, you can also use the <b>Height</b> property to return the total height of a range of cells.</span></span></para>
          <para><span data-ttu-id="370a5-932">Weitere Unterschiede zwischen <b>RowHeight</b> und <b>Height</b> sind:</span><span class="sxs-lookup"><span data-stu-id="370a5-932">Other differences between <b>RowHeight</b> and <b>Height</b> include the following:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="370a5-933">
                <b>Die Höhe</b> ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="370a5-933">
                <b>Height</b> is read-only.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="370a5-934">Wenn Sie die <b>RowHeight -Eigenschaft</b> mehrerer Zeilen zurückgeben, erhalten Sie entweder die Zeilenhöhe der einzelnen Zeilen (wenn alle Zeilen die gleiche Höhe haben) oder <b>Null</b> (wenn es sich um unterschiedliche Höhen handelt).</span><span class="sxs-lookup"><span data-stu-id="370a5-934">If you return the <b>RowHeight</b> property of several rows, you will either get the row height of each of the rows (if all the rows are the same height) or <b>Null</b> (if they’re different heights).</span></span> <span data-ttu-id="370a5-935">Wenn Sie die <b>Eigenschaft Height</b> mehrerer Zeilen zurückgeben, erhalten Sie die Gesamthöhe aller Zeilen.</span><span class="sxs-lookup"><span data-stu-id="370a5-935">If you return the <b>Height</b> property of several rows, you will get the total height of all the rows.</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range Rows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ Rows { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-936">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das die Zeilen im angegebenen Bereich darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-936">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the rows in the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-937">Wenn diese Eigenschaft auf ein <b>Range</b>-Objekt angewendet wird, das eine Mehrfachmarkierung darstellt, gibt sie lediglich die Zeilen aus dem ersten Teil des Bereichs zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-937">When applied to a <b>Range</b> object that’s a multiple selection, this property returns rows from only the first area of the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public object Run (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Run([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Run(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Run (Optional Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(259)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1"><span data-ttu-id="370a5-938">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-938">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-939">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-939">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg2"><span data-ttu-id="370a5-940">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-940">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-941">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-941">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg3"><span data-ttu-id="370a5-942">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-942">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-943">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-943">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg4"><span data-ttu-id="370a5-944">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-944">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-945">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-945">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg5"><span data-ttu-id="370a5-946">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-946">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-947">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-947">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg6"><span data-ttu-id="370a5-948">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-948">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-949">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-949">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg7"><span data-ttu-id="370a5-950">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-950">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-951">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-951">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg8"><span data-ttu-id="370a5-952">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-952">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-953">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-953">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg9"><span data-ttu-id="370a5-954">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-954">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-955">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-955">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg10"><span data-ttu-id="370a5-956">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-956">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-957">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-957">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg11"><span data-ttu-id="370a5-958">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-958">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-959">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-959">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg12"><span data-ttu-id="370a5-960">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-960">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-961">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-961">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg13"><span data-ttu-id="370a5-962">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-962">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-963">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-963">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg14"><span data-ttu-id="370a5-964">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-964">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-965">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-965">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg15"><span data-ttu-id="370a5-966">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-966">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-967">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-967">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg16"><span data-ttu-id="370a5-968">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-968">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-969">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-969">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg17"><span data-ttu-id="370a5-970">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-970">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-971">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-971">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg18"><span data-ttu-id="370a5-972">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-972">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-973">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-973">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg19"><span data-ttu-id="370a5-974">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-974">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-975">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-975">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg20"><span data-ttu-id="370a5-976">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-976">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-977">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-977">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg21"><span data-ttu-id="370a5-978">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-978">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-979">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-979">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg22"><span data-ttu-id="370a5-980">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-980">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-981">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-981">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg23"><span data-ttu-id="370a5-982">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-982">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-983">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-983">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg24"><span data-ttu-id="370a5-984">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-984">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-985">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-985">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg25"><span data-ttu-id="370a5-986">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-986">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-987">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-987">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg26"><span data-ttu-id="370a5-988">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-988">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-989">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-989">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg27"><span data-ttu-id="370a5-990">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-990">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-991">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-991">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg28"><span data-ttu-id="370a5-992">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-992">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-993">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-993">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg29"><span data-ttu-id="370a5-994">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-994">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-995">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-995">The arguments that should be passed to the function.</span></span></param>
        <param name="Arg30"><span data-ttu-id="370a5-996">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-996">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-997">Die Argumente, die an die Funktion übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-997">The arguments that should be passed to the function.</span></span></param>
        <summary><span data-ttu-id="370a5-998">Führt das Microsoft Excel-Makro an der aktuellen Position aus.</span><span class="sxs-lookup"><span data-stu-id="370a5-998">Runs the Microsoft Excel macro at this location.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-999">Der Bereich muss sich in einer Makrovorlage befinden.</span><span class="sxs-lookup"><span data-stu-id="370a5-999">The range must be on a macro sheet.</span></span></para>
          <para><span data-ttu-id="370a5-1000">Benannte Argumente können mit dieser Methode nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1000">You cannot use named arguments with this method.</span></span> <span data-ttu-id="370a5-1001">Argumente müssen nach Position übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1001">Arguments must be passed by position.</span></span></para>
          <para><span data-ttu-id="370a5-1002">Die <b>Run</b>-Methode gibt zurück, was das aufgerufene Makro zurückgibt. </span><span class="sxs-lookup"><span data-stu-id="370a5-1002">The <b>Run</b> method returns whatever the called macro returns.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public object Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Select() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-1003">Markiert das Objekt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1003">Selects the object.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-1004">Verwenden Sie die Select-Methode, um eine Zelle oder einen Zellbereich auszuwählen.</span><span class="sxs-lookup"><span data-stu-id="370a5-1004">To select a cell or a range of cells, use the Select method.</span></span> <span data-ttu-id="370a5-1005">Verwenden Sie die Methode, um eine einzelne Zelle zur aktiven Zelle <see cref="M:Microsoft.Office.Interop.Excel.Range.Activate" /> zu machen.</span><span class="sxs-lookup"><span data-stu-id="370a5-1005">To make a single cell the active cell, use the <see cref="M:Microsoft.Office.Interop.Excel.Range.Activate" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerActions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Actions ServerActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Actions ServerActions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ServerActions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerActions As Actions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Actions ^ ServerActions { Microsoft::Office::Interop::Excel::Actions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2491)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2491)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Actions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-1006">Gibt die Aktionen an, die auf dem SharePoint Server für ein Objekt ausgeführt werden <see cref="T:Microsoft.Office.Interop.Excel.Range" /> können.</span><span class="sxs-lookup"><span data-stu-id="370a5-1006">Specifies the actions that can be performed on the SharePoint server for a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.Actions" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPhonetic">
      <MemberSignature Language="C#" Value="public void SetPhonetic ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPhonetic() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SetPhonetic" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPhonetic ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPhonetic();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1812)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-1007">Erstellt <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> Objekte für alle Zellen im angegebenen Bereich.</span><span class="sxs-lookup"><span data-stu-id="370a5-1007">Creates <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> objects for all the cells in the specified range.</span></span></summary>
        <remarks><para><span data-ttu-id="370a5-1008">Alle vorhandenen <b>Phonetic</b>-Objekte im angegebenen Bereich werden automatisch von den neuen Objekten, die mithilfe dieser Methode hinzugefügt werden, überschrieben (gelöscht).</span><span class="sxs-lookup"><span data-stu-id="370a5-1008">Any existing <b>Phonetic</b> objects in the specified range are automatically overwritten (deleted) by the new objects you add using this method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public object Show ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Show() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Show" />
      <MemberSignature Language="VB.NET" Value="Public Function Show () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Show();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(496)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-1009">Führt einen Bildlauf über den Inhalt des aktiven Fensters aus, um den Bereich anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="370a5-1009">Scrolls through the contents of the active window to move the range into view.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-1010">Der Bereich muss aus einer einzelnen Zelle des aktiven Dokuments bestehen.</span><span class="sxs-lookup"><span data-stu-id="370a5-1010">The range must consist of a single cell in the active document.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDependents">
      <MemberSignature Language="C#" Value="public object ShowDependents (object Remove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ShowDependents([in]object Remove) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ShowDependents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDependents (Optional Remove As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(877)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Remove" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Remove"><span data-ttu-id="370a5-1011">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1011">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1012"><b>"True",</b> wenn eine Ebene von Spurpfeilen an direkte Abhängige entfernt werden soll; <b>False,</b> um eine Ebene von Spurpfeilen zu erweitern.</span><span class="sxs-lookup"><span data-stu-id="370a5-1012"><b>True</b> to remove one level of tracer arrows to direct dependents; <b>False</b> to expand one level of tracer arrows.</span></span> <span data-ttu-id="370a5-1013">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1013">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="370a5-1014">Zeichnet Spurpfeile zu den direkten Nachfolgern des Bereichs.</span><span class="sxs-lookup"><span data-stu-id="370a5-1014">Draws tracer arrows to the direct dependents of the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDetail">
      <MemberSignature Language="C#" Value="public object ShowDetail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ShowDetail" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ShowDetail" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowDetail As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ShowDetail { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(585)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(585)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(585)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-1015">Gibt <b>True</b> zurück, wenn die Gliederung für den angegebenen Bereich erweitert wird (sodass die Details der Spalte oder Zeile sichtbar sind).</span><span class="sxs-lookup"><span data-stu-id="370a5-1015">Returns <b>True</b> if the outline is expanded for the specified range (so that the detail of the column or row is visible).</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-1016">Der angegebene Bereich muss eine einzelne Hauptspalte oder -zeile in einer Gliederung darstellen.</span><span class="sxs-lookup"><span data-stu-id="370a5-1016">The specified range must be a single summary column or row in an outline.</span></span></para>
          <para><span data-ttu-id="370a5-1017">Wenn sich der Bereich in einem PivotTable-Bericht befindet, wird diese Eigenschaft auf <b>"True"</b> festgelegt, wenn das Element Details zeigt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1017">If the range is in a PivotTable report, this property is set to <b>True</b> if the item is showing detail.</span></span></para>
          <para><span data-ttu-id="370a5-1018">Bitte beachten Sie folgende Punkte, wenn sich der angegebene Bereich nicht in einem PivotTable-Bericht befindet:</span><span class="sxs-lookup"><span data-stu-id="370a5-1018">If the specified range isn’t in a PivotTable report, the following statements are true:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="370a5-1019">Der Bereich muss sich in einer einzelnen Hauptzeile oder Hauptspalte befinden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1019">The range must be in a single summary row or column.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="370a5-1020">Diese Eigenschaft gibt <b>"False"</b> zurück, wenn eine der unter- bzw. unter nen Zeilen oder Spalten ausgeblendet ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-1020">This property returns <b>False</b> if any of the children of the row or column are hidden.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="370a5-1021">Das Festlegen dieser Eigenschaft <b>auf "True"</b> entspricht dem Anzeigen aller unter- bzw. unter- bzw. der Zusammenfassungszeile oder -spalte.</span><span class="sxs-lookup"><span data-stu-id="370a5-1021">Setting this property to <b>True</b> is equivalent to showing all the children of the summary row or column.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="370a5-1022">Das Festlegen der Eigenschaft auf <b>False</b> entspricht dem Ausblenden aller untergeordneten Zellen der Hauptzeile oder -spalte.</span><span class="sxs-lookup"><span data-stu-id="370a5-1022">Setting this property to <b>False</b> is equivalent to hiding all the children of the summary row or column.</span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="370a5-p326">Handelt es sich um einen Bereich in einem PivotTable-Bericht, kann diese Eigenschaft für mehrere Zellen gleichzeitig festgelegt werden, sofern der Bereich zusammenhängend ist. Zum Zurückgeben dieser Eigenschaft muss der Bereich eine einzelne Zelle sein.</span><span class="sxs-lookup"><span data-stu-id="370a5-p326">If the specified range is in a PivotTable report, it’s possible to set this property for more than one cell at a time if the range is contiguous. This property can be returned only if the range is a single cell.</span></span></description>
            </item>
          </list>
          <para><span data-ttu-id="370a5-1025">Diese Eigenschaft ist für OLAP-Datenquellen nicht verfügbar.</span><span class="sxs-lookup"><span data-stu-id="370a5-1025">This property isn’t available for OLAP data sources.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowErrors">
      <MemberSignature Language="C#" Value="public object ShowErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ShowErrors() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ShowErrors" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowErrors () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ShowErrors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(878)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-1026">Zeichnet Spurpfeile durch die Vorgängerstruktur zu der Zelle, die die Fehlerquelle ist, und gibt den Bereich zurück, der diese Zelle enthält.</span><span class="sxs-lookup"><span data-stu-id="370a5-1026">Draws tracer arrows through the precedents tree to the cell that’s the source of the error and returns the range that contains that cell.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPrecedents">
      <MemberSignature Language="C#" Value="public object ShowPrecedents (object Remove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ShowPrecedents([in]object Remove) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.ShowPrecedents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowPrecedents (Optional Remove As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(879)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Remove" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Remove"><span data-ttu-id="370a5-1027">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1027">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1028"><b>"True",</b> um eine Ebene von Spurpfeilen zu direkten Vorgängern zu entfernen; <b>False,</b> um eine Ebene von Spurpfeilen zu erweitern.</span><span class="sxs-lookup"><span data-stu-id="370a5-1028"><b>True</b> to remove one level of tracer arrows to direct precedents; <b>False</b> to expand one level of tracer arrows.</span></span> <span data-ttu-id="370a5-1029">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1029">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="370a5-1030">Zeichnet Spurpfeile zu den direkten Vorgängerzellen des Bereichs.</span><span class="sxs-lookup"><span data-stu-id="370a5-1030">Draws tracer arrows to the direct precedents of the range.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShrinkToFit">
      <MemberSignature Language="C#" Value="public object ShrinkToFit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ShrinkToFit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.ShrinkToFit" />
      <MemberSignature Language="VB.NET" Value="Public Property ShrinkToFit As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ShrinkToFit { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-1031">Bestimmt, ob Text automatisch verkleinert wird, um in die verfügbare Spaltenbreite zu passen.</span><span class="sxs-lookup"><span data-stu-id="370a5-1031">Determines if text automatically shrinks to fit in the available column width.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-1032">Diese Eigenschaft gibt <b>True</b> zurück, wenn Text automatisch verkleinert wird, um in die verfügbare Spaltenbreite zu passen, und <b>Null,</b> wenn diese Eigenschaft nicht auf denselben Wert für alle Zellen im angegebenen Bereich festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-1032">This property returns <b>True</b> if text automatically shrinks to fit in the available column width and <b>Null</b> if this property isn’t set to the same value for all cells in the specified range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTags">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTags SmartTags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTags SmartTags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.SmartTags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTags As SmartTags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTags ^ SmartTags { Microsoft::Office::Interop::Excel::SmartTags ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2016)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-1033">Gibt ein Objekt <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> zurück, das den Bezeichner für die angegebene Zelle darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1033">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTags" /> object representing the identifier for the specified cell.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public object Sort (object Key1, Microsoft.Office.Interop.Excel.XlSortOrder Order1 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Key2, object Type, Microsoft.Office.Interop.Excel.XlSortOrder Order2 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Key3, Microsoft.Office.Interop.Excel.XlSortOrder Order3 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Microsoft.Office.Interop.Excel.XlYesNoGuess Header = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, object OrderCustom, object MatchCase, Microsoft.Office.Interop.Excel.XlSortOrientation Orientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Microsoft.Office.Interop.Excel.XlSortMethod SortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Sort([in]object Key1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order1, [in]object Key2, [in]object Type, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order2, [in]object Key3, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order3, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess Header, [in]object OrderCustom, [in]object MatchCase, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrientation Orientation, [in]valuetype Microsoft.Office.Interop.Excel.XlSortMethod SortMethod, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Sort(System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrientation,Microsoft.Office.Interop.Excel.XlSortMethod,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sort (Optional Key1 As Object, Optional Order1 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Key2 As Object, Optional Type As Object, Optional Order2 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Key3 As Object, Optional Order3 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Header As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, Optional OrderCustom As Object, Optional MatchCase As Object, Optional Orientation As XlSortOrientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Optional SortMethod As XlSortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, Optional DataOption1 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption2 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption3 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(880)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key1" Type="System.Object" />
        <Parameter Name="Order1" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Key2" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="Order2" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Key3" Type="System.Object" />
        <Parameter Name="Order3" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Header" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
        <Parameter Name="OrderCustom" Type="System.Object" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="Orientation" Type="Microsoft.Office.Interop.Excel.XlSortOrientation" />
        <Parameter Name="SortMethod" Type="Microsoft.Office.Interop.Excel.XlSortMethod" />
        <Parameter Name="DataOption1" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption2" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption3" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
      </Parameters>
      <Docs>
        <param name="Key1"><span data-ttu-id="370a5-1034">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1034">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1035">Das erste Sortierfeld, z. B. als Text (PivotTable-Feld oder Bereichsname) oder als Objekt <see cref="T:Microsoft.Office.Interop.Excel.Range" /> ("Dept" oder Cells(1, 1).</span><span class="sxs-lookup"><span data-stu-id="370a5-1035">The first sort field, as either text (a PivotTable field or range name) or a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object ("Dept" or Cells(1, 1), for example).</span></span></param>
        <param name="Order1"><span data-ttu-id="370a5-1036">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1036">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span></span> <span data-ttu-id="370a5-1037">Die Sortierreihenfolge für das Feld oder den Bereich, das in angegeben <paramref name="Key1" /> ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-1037">The sort order for the field or range specified in <paramref name="Key1" />.</span></span> <span data-ttu-id="370a5-1038">Dies kann eine der folgenden <b>XlSortOrder -Konstanten</b> sein:<b>xlDescending</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1038">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span></span> <span data-ttu-id="370a5-1039">Sortiert <paramref name="Key1" /> in absteigender Reihenfolge.<b> xlAscending</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1039">Sorts <paramref name="Key1" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span></span> <span data-ttu-id="370a5-1040">Sortiert <paramref name="Key1" /> in aufsteigender Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="370a5-1040">Sorts <paramref name="Key1" /> in ascending order.</span></span></param>
        <param name="Key2"><span data-ttu-id="370a5-1041">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1041">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1042">Das zweite Sortierfeld, als Text (PivotTable-Feld oder Bereichsname) oder als <b>Range</b>-Objekt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1042">The second sort field, as either text (a PivotTable field or range name) or a <b>Range</b> object.</span></span> <span data-ttu-id="370a5-1043">Wenn Sie dieses Argument auslassen, gibt es kein zweites Sortierfeld.</span><span class="sxs-lookup"><span data-stu-id="370a5-1043">If you omit this argument, there’s no second sort field.</span></span> <span data-ttu-id="370a5-1044">Kann nicht zum Sortieren von PivotTable-Berichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1044">Cannot be used when sorting Pivot Table reports.</span></span></param>
        <param name="Type"><span data-ttu-id="370a5-1045">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1045">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1046">Gibt an, welche Elemente sortiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-1046">Specifies which elements are to be sorted.</span></span> <span data-ttu-id="370a5-1047">Verwenden Sie dieses Argument nur zum Sortieren von PivotTable-Berichten.</span><span class="sxs-lookup"><span data-stu-id="370a5-1047">Use this argument only when sorting PivotTable reports.</span></span> <span data-ttu-id="370a5-1048">Dies kann eine der folgenden <b>XlSortType -Konstanten</b> sein:<b>xlSortLabels</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1048">Can be one of the following <b>XlSortType</b> constants:<b>xlSortLabels</b>.</span></span> <span data-ttu-id="370a5-1049">Sortiert den PivotTable-Bericht nach Bezeichnungen. <b>xlSortValues</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1049">Sorts the PivotTable report by labels.<b>xlSortValues</b>.</span></span> <span data-ttu-id="370a5-1050">Sortiert den PivotTable-Bericht nach Werten.</span><span class="sxs-lookup"><span data-stu-id="370a5-1050">Sorts the PivotTable report by values.</span></span></param>
        <param name="Order2"><span data-ttu-id="370a5-1051">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1051">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span></span> <span data-ttu-id="370a5-1052">Die Sortierreihenfolge für das Feld oder den Bereich, das in angegeben <paramref name="Key2" /> ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-1052">The sort order for the field or range specified in <paramref name="Key2" />.</span></span> <span data-ttu-id="370a5-1053">Kann nicht zum Sortieren von PivotTable-Berichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1053">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="370a5-1054">Dies kann eine der folgenden <b>XlSortOrder -Konstanten</b> sein:<b>xlDescending</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1054">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span></span> <span data-ttu-id="370a5-1055">Sortiert <paramref name="Key2" /> in absteigender Reihenfolge.<b> xlAscending</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1055">Sorts <paramref name="Key2" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span></span> <span data-ttu-id="370a5-1056">Sortiert <paramref name="Key2" /> in aufsteigender Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="370a5-1056">Sorts <paramref name="Key2" /> in ascending order.</span></span></param>
        <param name="Key3"><span data-ttu-id="370a5-1057">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1057">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1058">Das dritte Sortierfeld, als Text (Bereichsname) oder als <b>Range</b>-Objekt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1058">The third sort field, as either text (a range name) or a <b>Range</b> object.</span></span> <span data-ttu-id="370a5-1059">Wenn Sie dieses Argument auslassen, gibt es kein drittes Sortierfeld.</span><span class="sxs-lookup"><span data-stu-id="370a5-1059">If you omit this argument, there’s no third sort field.</span></span> <span data-ttu-id="370a5-1060">Kann nicht zum Sortieren von PivotTable-Berichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1060">Cannot be used when sorting PivotTable reports.</span></span></param>
        <param name="Order3"><span data-ttu-id="370a5-1061">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1061">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span></span> <span data-ttu-id="370a5-1062">Die Sortierreihenfolge für das Feld oder den Bereich, das in angegeben <paramref name="Key3" /> ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-1062">The sort order for the field or range specified in <paramref name="Key3" />.</span></span> <span data-ttu-id="370a5-1063">Kann nicht zum Sortieren von PivotTable-Berichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1063">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="370a5-1064">Dies kann eine der folgenden <b>XlSortOrder -Konstanten</b> sein:<b>xlDescending</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1064">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span></span> <span data-ttu-id="370a5-1065">Sortiert <paramref name="Key3" /> in absteigender Reihenfolge.<b> xlAscending</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1065">Sorts <paramref name="Key3" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span></span> <span data-ttu-id="370a5-1066">Sortiert <paramref name="Key3" /> in aufsteigender Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="370a5-1066">Sorts <paramref name="Key3" /> in ascending order.</span></span></param>
        <param name="Header"><span data-ttu-id="370a5-1067">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1067">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" />.</span></span> <span data-ttu-id="370a5-1068">Gibt an, ob die erste Zeile Überschriften enthält.</span><span class="sxs-lookup"><span data-stu-id="370a5-1068">Specifies whether or not the first row contains headers.</span></span> <span data-ttu-id="370a5-1069">Kann nicht zum Sortieren von PivotTable-Berichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1069">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="370a5-1070">Dies kann eine der folgenden <b>XlYesNoGuess -Konstanten</b> sein:<b>xlGuess</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1070">Can be one of the following <b>XlYesNoGuess</b> constants:<b>xlGuess</b>.</span></span> <span data-ttu-id="370a5-1071">Lassen Sie Microsoft Excel ermitteln, ob es eine Kopfzeile gibt, und bestimmen, wo sie sich befindet, wenn sie einen gibt. <b>xlNo</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1071">Let Microsoft Excel determine whether there’s a header, and determine where it is if there is one.<b>xlNo</b><paramref name="default" />.</span></span> <span data-ttu-id="370a5-1072">(Der gesamte Bereich sollte sortiert werden). <b>xlYes</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1072">(The entire range should be sorted).<b>xlYes</b>.</span></span> <span data-ttu-id="370a5-1073">(Der gesamte Bereich sollte nicht sortiert werden).</span><span class="sxs-lookup"><span data-stu-id="370a5-1073">(The entire range should not be sorted).</span></span></param>
        <param name="OrderCustom"><span data-ttu-id="370a5-1074">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1074">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1075">Bei diesem Argument handelt es sich um einen ganzzahligen, bei 1 beginnenden Offset für die Liste der benutzerdefinierten Sortierreihenfolgen.</span><span class="sxs-lookup"><span data-stu-id="370a5-1075">This argument is a one-based integer offset to the list of custom sort orders.</span></span> <span data-ttu-id="370a5-1076">Wenn Sie dies <paramref name="OrderCustom" /> auslassen, wird eine normale Sortierung verwendet.</span><span class="sxs-lookup"><span data-stu-id="370a5-1076">If you omit <paramref name="OrderCustom" />, a normal sort is used.</span></span></param>
        <param name="MatchCase"><span data-ttu-id="370a5-1077">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1077">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1078"><b>True,</b> um eine Sortierung unter Schreibung zu machen; <b>False,</b> um eine Sortierung ohne Schreibung zu machen.</span><span class="sxs-lookup"><span data-stu-id="370a5-1078"><b>True</b> to do a case-sensitive sort; <b>False</b> to do a sort that’s not case sensitive.</span></span> <span data-ttu-id="370a5-1079">Kann nicht zum Sortieren von PivotTable-Berichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1079">Cannot be used when sorting PivotTable reports.</span></span></param>
        <param name="Orientation"><span data-ttu-id="370a5-1080">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1080">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" />.</span></span> <span data-ttu-id="370a5-1081">Die Ausrichtung der Sortierung.</span><span class="sxs-lookup"><span data-stu-id="370a5-1081">The sort orientation.</span></span> <span data-ttu-id="370a5-1082">Dies kann eine der folgenden <b>XlSortOrientation -Konstanten</b> sein:<b>xlSortRows</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1082">Can be one of the following <b>XlSortOrientation</b> constants:<b>xlSortRows</b><paramref name="default" />.</span></span> <span data-ttu-id="370a5-1083">Sortiert nach Zeile. <b>xlSortColumns</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1083">Sorts by row.<b>xlSortColumns</b>.</span></span> <span data-ttu-id="370a5-1084">Sortiert nach Spalten.</span><span class="sxs-lookup"><span data-stu-id="370a5-1084">Sorts by column.</span></span></param>
        <param name="SortMethod"><span data-ttu-id="370a5-1085">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1085">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" />.</span></span> <span data-ttu-id="370a5-1086">Die Art der Sortierung.</span><span class="sxs-lookup"><span data-stu-id="370a5-1086">The type of sort.</span></span> <span data-ttu-id="370a5-1087">Einige dieser Konstanten stehen Ihnen je nach ausgewählter oder installierter Sprachunterstützung (z. B. US-Englisch) möglicherweise nicht zur Verfügung.</span><span class="sxs-lookup"><span data-stu-id="370a5-1087">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span></span> <span data-ttu-id="370a5-1088">Dies kann eine der folgenden <b>XlSortMethod</b> -Konstanten sein:<b>xlStroke-Sortierung</b> nach der Anzahl der Striche in jedem Zeichen. <b>xlPinYin</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1088">Can be one of the following <b>XlSortMethod</b> constants:<b>xlStroke</b> Sorting by the quantity of strokes in each character.<b>xlPinYin</b><paramref name="default" />.</span></span> <span data-ttu-id="370a5-1089">Phonetische chinesische Sortierreihenfolge für Zeichen.</span><span class="sxs-lookup"><span data-stu-id="370a5-1089">Phonetic Chinese sort order for characters.</span></span></param>
        <param name="DataOption1"><span data-ttu-id="370a5-1090">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1090">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span></span> <span data-ttu-id="370a5-1091">Gibt an, wie Text in sortiert werden <paramref name="Key 1" /> soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-1091">Specifies how to sort text in <paramref name="Key 1" />.</span></span> <span data-ttu-id="370a5-1092">Kann nicht zum Sortieren von PivotTable-Berichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1092">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="370a5-1093">Dies kann eine der folgenden <b>XlSortDataOption -Konstanten</b> sein:<b>xlSortTextAsNumbers</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1093">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span></span> <span data-ttu-id="370a5-1094">Behandeln Sie Text als numerische Daten für die Sortierung. <b>xlSortNormal</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1094">Treat text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span></span> <span data-ttu-id="370a5-1095">Sortiert numerische Daten und Textdaten getrennt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1095">Sorts numeric and text data separately.</span></span></param>
        <param name="DataOption2"><span data-ttu-id="370a5-1096">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1096">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span></span> <span data-ttu-id="370a5-1097">Gibt an, wie Text in sortiert werden <paramref name="Key 2" /> soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-1097">Specifies how to sort text in <paramref name="Key 2" />.</span></span> <span data-ttu-id="370a5-1098">Kann nicht zum Sortieren von PivotTable-Berichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1098">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="370a5-1099">Dies kann eine der folgenden <b>XlSortDataOption -Konstanten</b> sein:<b>xlSortTextAsNumbers</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1099">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span></span> <span data-ttu-id="370a5-1100">Behandelt Text als numerische Daten für die Sortierung. <b>xlSortNormal</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1100">Treats text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span></span> <span data-ttu-id="370a5-1101">Sortiert numerische Daten und Textdaten getrennt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1101">Sorts numeric and text data separately.</span></span></param>
        <param name="DataOption3"><span data-ttu-id="370a5-1102">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1102">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span></span> <span data-ttu-id="370a5-1103">Gibt an, wie Text in Schlüssel 3 sortiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-1103">Specifies how to sort text in key 3.</span></span> <span data-ttu-id="370a5-1104">Kann nicht zum Sortieren von PivotTable-Berichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1104">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="370a5-1105">Dies kann eine der folgenden <b>XlSortDataOption -Konstanten</b> sein:<b>xlSortTextAsNumbers</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1105">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span></span> <span data-ttu-id="370a5-1106">Behandelt Text als numerische Daten für die Sortierung. <b>xlSortNormal</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1106">Treats text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span></span> <span data-ttu-id="370a5-1107">Sortiert numerische Daten und Textdaten getrennt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1107">Sorts numeric and text data separately.</span></span></param>
        <summary><span data-ttu-id="370a5-1108">Sortiert einen PivotTable-Bericht, einen Bereich oder den aktiven Bereich, wenn der angegebene Bereich nur eine Zelle enthält.</span><span class="sxs-lookup"><span data-stu-id="370a5-1108">Sorts a PivotTable report, a range, or the active region if the specified range contains only one cell.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-1109">Die Einstellungen für , , und werden gespeichert, für das bestimmte <paramref name="Header" /> <paramref name="Order1" /> <paramref name="Order2" /> <paramref name="Order3" /> <paramref name="OrderCustom" /> <paramref name="Orientation" /> Arbeitsblatt, jedes Mal, wenn Sie diese Methode verwenden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1109">The settings for <paramref name="Header" />, <paramref name="Order1" />, <paramref name="Order2" />, <paramref name="Order3" />, <paramref name="OrderCustom" />, and <paramref name="Orientation" /> are saved, for the particular worksheet, each time you use this method.</span></span> <span data-ttu-id="370a5-1110">Falls Sie beim nächsten Aufruf dieser Methode keine Werte für die Argumente angeben, werden die gespeicherten Werte verwendet.</span><span class="sxs-lookup"><span data-stu-id="370a5-1110">If you don’t specify values for these arguments the next time you call the method, the saved values are used.</span></span> <span data-ttu-id="370a5-1111">Legen Sie diese Argumente bei jeder Verwendung der <b>Sort -Methode</b> explizit ein, wenn Sie die gespeicherten Werte nicht verwenden möchten.</span><span class="sxs-lookup"><span data-stu-id="370a5-1111">Set these arguments explicitly each time you use <b>Sort</b> method if you choose not to use the saved values.</span></span></para>
          <para><span data-ttu-id="370a5-1112">Textzeichenfolgen, die nicht in numerische Daten konvertierbar sind, werden normal sortiert.</span><span class="sxs-lookup"><span data-stu-id="370a5-1112">Text strings which are not convertible to numeric data are sorted normally.</span></span></para>
          <para><span data-ttu-id="370a5-1113">Wenn mit der  <b>Sort</b> -Methode keine Argumente definiert werden, wird die zu sortierende Auswahl von Microsoft Excel in aufsteigender Reihenfolge sortiert.</span><span class="sxs-lookup"><span data-stu-id="370a5-1113">If no arguments are defined with the <b>Sort</b> method, Microsoft Excel will sort the selection, chosen to be sorted, in ascending order.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SortSpecial">
      <MemberSignature Language="C#" Value="public object SortSpecial (Microsoft.Office.Interop.Excel.XlSortMethod SortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, object Key1, Microsoft.Office.Interop.Excel.XlSortOrder Order1 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Type, object Key2, Microsoft.Office.Interop.Excel.XlSortOrder Order2 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, object Key3, Microsoft.Office.Interop.Excel.XlSortOrder Order3 = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Microsoft.Office.Interop.Excel.XlYesNoGuess Header = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, object OrderCustom, object MatchCase, Microsoft.Office.Interop.Excel.XlSortOrientation Orientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3 = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SortSpecial([in]valuetype Microsoft.Office.Interop.Excel.XlSortMethod SortMethod, [in]object Key1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order1, [in]object Type, [in]object Key2, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order2, [in]object Key3, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrder Order3, [in]valuetype Microsoft.Office.Interop.Excel.XlYesNoGuess Header, [in]object OrderCustom, [in]object MatchCase, [in]valuetype Microsoft.Office.Interop.Excel.XlSortOrientation Orientation, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption1, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption2, [in]valuetype Microsoft.Office.Interop.Excel.XlSortDataOption DataOption3) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SortSpecial(Microsoft.Office.Interop.Excel.XlSortMethod,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,System.Object,Microsoft.Office.Interop.Excel.XlSortOrder,Microsoft.Office.Interop.Excel.XlYesNoGuess,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSortOrientation,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption,Microsoft.Office.Interop.Excel.XlSortDataOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function SortSpecial (Optional SortMethod As XlSortMethod = Microsoft.Office.Interop.Excel.XlSortMethod.xlPinYin, Optional Key1 As Object, Optional Order1 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Type As Object, Optional Key2 As Object, Optional Order2 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Key3 As Object, Optional Order3 As XlSortOrder = Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending, Optional Header As XlYesNoGuess = Microsoft.Office.Interop.Excel.XlYesNoGuess.xlNo, Optional OrderCustom As Object, Optional MatchCase As Object, Optional Orientation As XlSortOrientation = Microsoft.Office.Interop.Excel.XlSortOrientation.xlSortRows, Optional DataOption1 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption2 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal, Optional DataOption3 As XlSortDataOption = Microsoft.Office.Interop.Excel.XlSortDataOption.xlSortNormal) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(881)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SortMethod" Type="Microsoft.Office.Interop.Excel.XlSortMethod" />
        <Parameter Name="Key1" Type="System.Object" />
        <Parameter Name="Order1" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="Key2" Type="System.Object" />
        <Parameter Name="Order2" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Key3" Type="System.Object" />
        <Parameter Name="Order3" Type="Microsoft.Office.Interop.Excel.XlSortOrder" />
        <Parameter Name="Header" Type="Microsoft.Office.Interop.Excel.XlYesNoGuess" />
        <Parameter Name="OrderCustom" Type="System.Object" />
        <Parameter Name="MatchCase" Type="System.Object" />
        <Parameter Name="Orientation" Type="Microsoft.Office.Interop.Excel.XlSortOrientation" />
        <Parameter Name="DataOption1" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption2" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
        <Parameter Name="DataOption3" Type="Microsoft.Office.Interop.Excel.XlSortDataOption" />
      </Parameters>
      <Docs>
        <param name="SortMethod"><span data-ttu-id="370a5-1114">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1114">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortMethod" />.</span></span> <span data-ttu-id="370a5-1115">Die Art der Sortierung.</span><span class="sxs-lookup"><span data-stu-id="370a5-1115">The type of sort.</span></span> <span data-ttu-id="370a5-1116">Einige dieser Konstanten stehen Ihnen je nach ausgewählter oder installierter Sprachunterstützung (z. B. US-Englisch) möglicherweise nicht zur Verfügung.</span><span class="sxs-lookup"><span data-stu-id="370a5-1116">Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</span></span> <span data-ttu-id="370a5-1117">Dies kann eine der folgenden <b>XlSortMethod -Konstanten</b> sein:<b>xlStroke</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1117">Can be one of the following <b>XlSortMethod</b> constants:<b>xlStroke</b>.</span></span> <span data-ttu-id="370a5-1118">Sortieren nach der Anzahl der Striche in jedem Zeichen. <b>xlPinYin</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1118">Sorting by the quantity of strokes in each character.<b>xlPinYin</b><paramref name="default" />.</span></span> <span data-ttu-id="370a5-1119">Phonetische chinesische Sortierreihenfolge für Zeichen.</span><span class="sxs-lookup"><span data-stu-id="370a5-1119">Phonetic Chinese sort order for characters.</span></span></param>
        <param name="Key1"><span data-ttu-id="370a5-1120">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1120">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1121">Das erste Sortierfeld, z. B. als Text (PivotTable-Feld oder Bereichsname) oder als Range-Objekt ("Dept" oder Cells(1, 1). <b></b></span><span class="sxs-lookup"><span data-stu-id="370a5-1121">The first sort field, as either text (a PivotTable field or range name) or a <b>Range</b> object ("Dept" or Cells(1, 1), for example).</span></span></param>
        <param name="Order1"><span data-ttu-id="370a5-1122">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1122">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span></span> <span data-ttu-id="370a5-1123">Die Sortierreihenfolge für das Feld oder den Bereich, das im Argument angegeben <paramref name="Key1" /> ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-1123">The sort order for the field or range specified in the <paramref name="Key1" /> argument.</span></span> <span data-ttu-id="370a5-1124">Dies kann eine der folgenden <b>XlSortOrder -Konstanten</b> sein:<b>xlDescending</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1124">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span></span> <span data-ttu-id="370a5-1125">Sortiert <paramref name="Key1" /> in absteigender Reihenfolge.<b> xlAscending</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1125">Sorts <paramref name="Key1" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span></span> <span data-ttu-id="370a5-1126">Sortiert <paramref name="Key1" /> in aufsteigender Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="370a5-1126">Sorts <paramref name="Key1" /> in ascending order.</span></span></param>
        <param name="Type"><span data-ttu-id="370a5-1127">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1127">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1128">Gibt an, welche Elemente sortiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="370a5-1128">Specifies which elements are to be sorted.</span></span> <span data-ttu-id="370a5-1129">Verwenden Sie dieses Argument nur zum Sortieren von PivotTable-Berichten.</span><span class="sxs-lookup"><span data-stu-id="370a5-1129">Use this argument only when sorting PivotTable reports.</span></span></param>
        <param name="Key2"><span data-ttu-id="370a5-1130">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1130">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1131">Das zweite Sortierfeld, als Text (PivotTable-Feld oder Bereichsname) oder als <b>Range</b>-Objekt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1131">The second sort field, as either text (a PivotTable field or range name) or a <b>Range</b> object.</span></span> <span data-ttu-id="370a5-1132">Wenn Sie dieses Argument auslassen, gibt es kein zweites Sortierfeld.</span><span class="sxs-lookup"><span data-stu-id="370a5-1132">If you omit this argument, there’s no second sort field.</span></span> <span data-ttu-id="370a5-1133">Kann nicht zum Sortieren von PivotTable-Berichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1133">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="370a5-1134">Dies kann eine der folgenden <b>XlSortType -Konstanten</b> sein:<b>xlSortLabels</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1134">Can be one of the following <b>XlSortType</b> constants:<b>xlSortLabels</b>.</span></span> <span data-ttu-id="370a5-1135">Sortiert den PivotTable-Bericht nach Bezeichnungen. <b>xlSortValues</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1135">Sorts the PivotTable report by labels.<b>xlSortValues</b>.</span></span> <span data-ttu-id="370a5-1136">Sortiert den PivotTable-Bericht nach Werten.</span><span class="sxs-lookup"><span data-stu-id="370a5-1136">Sorts the PivotTable report by values.</span></span></param>
        <param name="Order2"><span data-ttu-id="370a5-1137">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1137">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span></span> <span data-ttu-id="370a5-1138">Die Sortierreihenfolge für das Feld oder den Bereich, das im Argument angegeben <paramref name="Key2" /> ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-1138">The sort order for the field or range specified in the <paramref name="Key2" /> argument.</span></span> <span data-ttu-id="370a5-1139">Kann nicht zum Sortieren von PivotTable-Berichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1139">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="370a5-1140">Dies kann eine der folgenden <b>XlSortOrder -Konstanten</b> sein:<b>xlDescending</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1140">Can be one of the following <b>XlSortOrder</b> constants:<b>xlDescending</b>.</span></span> <span data-ttu-id="370a5-1141">Sortiert <paramref name="Key2" /> in absteigender Reihenfolge <b>xlAscending-Standard.</b></span><span class="sxs-lookup"><span data-stu-id="370a5-1141">Sorts <paramref name="Key2" /> in descending order <b>xlAscending</b> default.</span></span> <span data-ttu-id="370a5-1142">Sortiert <paramref name="Key2" /> in aufsteigender Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="370a5-1142">Sorts <paramref name="Key2" /> in ascending order.</span></span></param>
        <param name="Key3"><span data-ttu-id="370a5-1143">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1143">Optional <b>object</b>.</span></span> <span data-ttu-id="370a5-1144">Das dritte Sortierfeld, als Text (Bereichsname) oder als <b>Range</b>-Objekt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1144">The third sort field, as either text (a range name) or a <b>Range</b> object.</span></span> <span data-ttu-id="370a5-1145">Wenn Sie dieses Argument auslassen, gibt es kein drittes Sortierfeld.</span><span class="sxs-lookup"><span data-stu-id="370a5-1145">If you omit this argument, there’s no third sort field.</span></span> <span data-ttu-id="370a5-1146">Kann nicht zum Sortieren von PivotTable-Berichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1146">Cannot be used when sorting PivotTable reports.</span></span></param>
        <param name="Order3"><span data-ttu-id="370a5-1147">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1147">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrder" />.</span></span> <span data-ttu-id="370a5-1148">Die Sortierreihenfolge für das Feld oder den Bereich, das im Argument angegeben <paramref name="Key3" /> ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-1148">The sort order for the field or range specified in the <paramref name="Key3" /> argument.</span></span> <span data-ttu-id="370a5-1149">Kann nicht zum Sortieren von PivotTable-Berichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1149">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="370a5-1150">Dies kann eine der folgenden <b>XlSortOrder -Konstanten</b> sein: <b>xlDescending</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1150">Can be one of the following <b>XlSortOrder</b> constants: <b>xlDescending</b>.</span></span> <span data-ttu-id="370a5-1151">Sortiert <paramref name="Key3" /> in absteigender Reihenfolge.<b> xlAscending</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1151">Sorts <paramref name="Key3" /> in descending order.<b>xlAscending</b><paramref name="default" />.</span></span> <span data-ttu-id="370a5-1152">Sortiert <paramref name="Key3" /> in aufsteigender Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="370a5-1152">Sorts <paramref name="Key3" /> in ascending order.</span></span></param>
        <param name="Header"><span data-ttu-id="370a5-1153">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1153">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlYesNoGuess" />.</span></span> <span data-ttu-id="370a5-1154">Gibt an, ob die erste Zeile Überschriften enthält.</span><span class="sxs-lookup"><span data-stu-id="370a5-1154">Specifies whether or not the first row contains headers.</span></span> <span data-ttu-id="370a5-1155">Kann nicht zum Sortieren von PivotTable-Berichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1155">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="370a5-1156">Dies kann eine der folgenden <b>XlYesNoGuess -Konstanten</b> sein:<b>xlGuess</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1156">Can be one of the following <b>XlYesNoGuess</b> constants:<b>xlGuess</b>.</span></span> <span data-ttu-id="370a5-1157">Hiermit kann Microsoft Excel ermitteln, ob es einen Header gibt, und bestimmen, wo er sich befindet, wenn ein Header enthalten ist. <b>xlNo</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1157">Lets Microsoft Excel determine whether there’s a header, and determine where it is if there is one.<b>xlNo</b><paramref name="default" />.</span></span> <span data-ttu-id="370a5-1158">Der gesamte Bereich sollte sortiert werden. <b>xlYes</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1158">The entire range should be sorted.<b>xlYes</b>.</span></span> <span data-ttu-id="370a5-1159">Der gesamte Bereich soll nicht sortiert werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1159">The entire range should not be sorted.</span></span></param>
        <param name="OrderCustom"><span data-ttu-id="370a5-1160">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1160">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1161">Bei diesem Argument handelt es sich um einen ganzzahligen, bei 1 beginnenden Offset für die Liste der benutzerdefinierten Sortierreihenfolgen.</span><span class="sxs-lookup"><span data-stu-id="370a5-1161">This argument is a one-based integer offset to the list of custom sort orders.</span></span> <span data-ttu-id="370a5-1162">Wenn Sie <paramref name="OrderCustom" /> auslassen, wird (normale Sortierreihenfolge) verwendet.</span><span class="sxs-lookup"><span data-stu-id="370a5-1162">If you omit <paramref name="OrderCustom" />, (normal sort order) is used.</span></span></param>
        <param name="MatchCase"><span data-ttu-id="370a5-1163">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1163">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1164"><b>True,</b> um eine Sortierung unter Schreibung zu machen; <b>False,</b> um eine Sortierung ohne Schreibung zu machen.</span><span class="sxs-lookup"><span data-stu-id="370a5-1164"><b>True</b> to do a case-sensitive sort; <b>False</b> to do a sort that’s not case sensitive.</span></span> <span data-ttu-id="370a5-1165">Kann nicht zum Sortieren von PivotTable-Berichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1165">Cannot be used when sorting PivotTable reports.</span></span></param>
        <param name="Orientation"><span data-ttu-id="370a5-1166">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1166">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortOrientation" />.</span></span> <span data-ttu-id="370a5-1167">Die Ausrichtung der Sortierung.</span><span class="sxs-lookup"><span data-stu-id="370a5-1167">The sort orientation.</span></span> <span data-ttu-id="370a5-1168">Dies kann eine der folgenden <b>XlSortOrientation -Konstanten</b> sein:<b>xlSortRows</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1168">Can be one of the following <b>XlSortOrientation</b> constants:<b>xlSortRows</b><paramref name="default" />.</span></span> <span data-ttu-id="370a5-1169">Die Sortierung erfolgt nach Zeile. <b>xlSortColumns</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1169">The sort is done by row.<b>xlSortColumns</b>.</span></span> <span data-ttu-id="370a5-1170">Die Sortierung erfolgt nach Spalte.</span><span class="sxs-lookup"><span data-stu-id="370a5-1170">The sort is done by column.</span></span></param>
        <param name="DataOption1"><span data-ttu-id="370a5-1171">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1171">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span></span> <span data-ttu-id="370a5-1172">Gibt an, wie Text in sortiert werden <paramref name="Key1" /> soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-1172">Specifies how to sort text in <paramref name="Key1" />.</span></span> <span data-ttu-id="370a5-1173">Kann nicht zum Sortieren von PivotTable-Berichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1173">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="370a5-1174">Dies kann eine der folgenden <b>XlSortDataOption -Konstanten</b> sein:<b>xlSortTextAsNumbers</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1174">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span></span> <span data-ttu-id="370a5-1175">Behandelt Text als numerische Daten für die Sortierung. <b>xlSortNormal</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1175">Treats text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span></span> <span data-ttu-id="370a5-1176">Sortiert numerische Daten und Textdaten getrennt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1176">Sorts numeric and text data separately.</span></span></param>
        <param name="DataOption2"><span data-ttu-id="370a5-1177">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1177">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span></span> <span data-ttu-id="370a5-1178">Gibt an, wie Text in sortiert werden <paramref name="Key 2" /> soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-1178">Specifies how to sort text in <paramref name="Key 2" />.</span></span> <span data-ttu-id="370a5-1179">Kann nicht zum Sortieren von PivotTable-Berichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1179">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="370a5-1180">Dies kann eine der folgenden <b>XlSortDataOption -Konstanten</b> sein:<b>xlSortTextAsNumbers</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1180">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span></span> <span data-ttu-id="370a5-1181">Behandelt Text als numerische Daten für die Sortierung. <b>xlSortNormal</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1181">Treats text as numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span></span> <span data-ttu-id="370a5-1182">Sortiert numerische Daten und Textdaten getrennt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1182">Sorts numeric and text data separately.</span></span></param>
        <param name="DataOption3"><span data-ttu-id="370a5-1183">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1183">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSortDataOption" />.</span></span> <span data-ttu-id="370a5-1184">Gibt an, wie Text in sortiert werden <paramref name="Key 3" /> soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-1184">Specifies how to sort text in <paramref name="Key 3" />.</span></span> <span data-ttu-id="370a5-1185">Kann nicht zum Sortieren von PivotTable-Berichten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1185">Cannot be used when sorting PivotTable reports.</span></span> <span data-ttu-id="370a5-1186">Dies kann eine der folgenden <b>XlSortDataOption -Konstanten</b> sein:<b>xlSortTextAsNumbers</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1186">Can be one of the following <b>XlSortDataOption</b> constants:<b>xlSortTextAsNumbers</b>.</span></span> <span data-ttu-id="370a5-1187">Behandelt numerische Textdaten für die Sortierung. <b>xlSortNormal</b> <paramref name="default" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1187">Treats text numeric data for the sort.<b>xlSortNormal</b><paramref name="default" />.</span></span> <span data-ttu-id="370a5-1188">Sortiert numerische Daten und Textdaten getrennt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1188">Sorts numeric and text data separately.</span></span></param>
        <summary><span data-ttu-id="370a5-1189">Verwendet ostasiatische Sortiermethoden, um den Bereich oder einen PivotTable-Bericht zu sortieren, oder verwendet die Methode für den aktiven Bereich, wenn der Bereich nur eine Zelle enthält.</span><span class="sxs-lookup"><span data-stu-id="370a5-1189">Uses East Asian sorting methods to sort the range or a PivotTable report, or uses the method for the active region if the range contains only one cell.</span></span> <span data-ttu-id="370a5-1190">Bei Japanisch erfolgt die Sortierung beispielsweise in der Reihenfolge des Kana-Syllabus.</span><span class="sxs-lookup"><span data-stu-id="370a5-1190">For example, Japanese sorts in the order of the Kana syllabary.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-1191">Wenn mit der <b>SortSpecial</b> -Methode keine Argumente definiert sind, sortiert Microsoft Excel die zu sortierende Auswahl in aufsteigender Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="370a5-1191">If no arguments are defined with the <b>SortSpecial</b> method, Microsoft Excel will sort the selection, chosen to be sorted, in ascending order.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SoundNote">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SoundNote SoundNote { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SoundNote SoundNote" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.SoundNote" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoundNote As SoundNote" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SoundNote ^ SoundNote { Microsoft::Office::Interop::Excel::SoundNote ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(916)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(916)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SoundNote</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-1192">Diese Eigenschaft sollte nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1192">This property should not be used.</span></span> <span data-ttu-id="370a5-1193">Audionotizen wurden aus Microsoft Excel entfernt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1193">Sound notes have been removed from Microsoft Excel.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SparklineGroups">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SparklineGroups SparklineGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SparklineGroups SparklineGroups" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.SparklineGroups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SparklineGroups As SparklineGroups" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SparklineGroups ^ SparklineGroups { Microsoft::Office::Interop::Excel::SparklineGroups ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2853)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2853)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SparklineGroups</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-1194">Ruft ein <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" /> Objekt ab, das eine vorhandene Gruppe von Sparklines aus dem angegebenen Bereich darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1194">Gets a <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" /> object that represents an existing group of sparklines from the specified range.</span></span></summary>
        <value><span data-ttu-id="370a5-1195">Ein <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" /> Objekt, das eine vorhandene Gruppe von Sparklines aus dem angegebenen Bereich darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1195">A <see cref="T:Microsoft.Office.Interop.Excel.SparklineGroups" /> object that represents an existing group of sparklines from the specified range.</span></span></value>
        <remarks><para><span data-ttu-id="370a5-1196">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1196">Read-only.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (object SpeakDirection, object SpeakFormulas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Speak([in]object SpeakDirection, [in]object SpeakFormulas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Speak(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (Optional SpeakDirection As Object, Optional SpeakFormulas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2017)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SpeakDirection" Type="System.Object" />
        <Parameter Name="SpeakFormulas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SpeakDirection"><span data-ttu-id="370a5-1197">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1197">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1198">Die sprachliche Ausgaberichtung nach Zeilen oder Spalten.</span><span class="sxs-lookup"><span data-stu-id="370a5-1198">The speak direction, by rows or columns.</span></span></param>
        <param name="SpeakFormulas"><span data-ttu-id="370a5-1199">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1199">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1200">Mit <b>True</b> werden Formeln für Zellen, die Formeln enthalten, an das Sprachausgabemodul gesendet.</span><span class="sxs-lookup"><span data-stu-id="370a5-1200"><b>True</b> will cause formulas to be sent to the Text-To-Speech (TTS) engine for cells that have formulas.</span></span> <span data-ttu-id="370a5-1201">Der Wert wird gesendet, wenn die Zellen keine Formeln haben. <b>"False"</b> (Standard) verursacht, dass Werte immer an das TtS-Modul gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1201">The value is sent if the cells do not have formulas; <b>False</b> (default) will cause values to always be sent to the TTS engine.</span></span></param>
        <summary><span data-ttu-id="370a5-1202">Führt dazu, dass die Zellen des Bereichs in Zeilen- oder Spaltenreihenfolge sprachlich ausgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1202">Causes the cells of the range to be spoken in row order or column order.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpecialCells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range SpecialCells (Microsoft.Office.Interop.Excel.XlCellType Type, object Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range SpecialCells([in]valuetype Microsoft.Office.Interop.Excel.XlCellType Type, [in]object Value) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SpecialCells(Microsoft.Office.Interop.Excel.XlCellType,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpecialCells (Type As XlCellType, Optional Value As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(410)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlCellType" />
        <Parameter Name="Value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type"><span data-ttu-id="370a5-1203"><see cref="T:Microsoft.Office.Interop.Excel.XlCellType" />Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="370a5-1203">Required <see cref="T:Microsoft.Office.Interop.Excel.XlCellType" />.</span></span> <span data-ttu-id="370a5-1204">Die einzubeziehenden Zellen.</span><span class="sxs-lookup"><span data-stu-id="370a5-1204">The cells to include.</span></span> <span data-ttu-id="370a5-1205">Dies kann eine der folgenden <b>XlCellType -Konstanten</b> sein:<b>xlCellTypeAllFormatConditions</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1205">Can be one of the following <b>XlCellType</b> constants:<b>xlCellTypeAllFormatConditions</b>.</span></span> <span data-ttu-id="370a5-1206">Zellen in einem beliebigen Format. <b>xlCellTypeAllValidation</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1206">Cells of any format.<b>xlCellTypeAllValidation</b>.</span></span> <span data-ttu-id="370a5-1207">Zellen mit Überprüfungskriterien. <b>xlCellTypeBlanks</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1207">Cells having validation criteria.<b>xlCellTypeBlanks</b>.</span></span> <span data-ttu-id="370a5-1208">Leere Zellen. <b>xlCellTypeComments</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1208">Empty cells.<b>xlCellTypeComments</b>.</span></span> <span data-ttu-id="370a5-1209">Zellen mit Notizen. <b>xlCellTypeConstants</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1209">Cells containing notes.<b>xlCellTypeConstants</b>.</span></span> <span data-ttu-id="370a5-1210">Zellen, die Konstanten enthalten. <b>xlCellTypeFormulas</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1210">Cells containing constants.<b>xlCellTypeFormulas</b>.</span></span> <span data-ttu-id="370a5-1211">Zellen, die Formeln enthalten. <b>xlCellTypeLastCell</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1211">Cells containing formulas.<b>xlCellTypeLastCell</b>.</span></span> <span data-ttu-id="370a5-1212">Die letzte Zelle im verwendeten Bereich. <b>xlCellTypeSameFormatConditions</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1212">The last cell in the used range.<b>xlCellTypeSameFormatConditions</b>.</span></span> <span data-ttu-id="370a5-1213">Zellen mit demselben Format. <b>xlCellTypeSameValidation</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1213">Cells having the same format.<b>xlCellTypeSameValidation</b>.</span></span> <span data-ttu-id="370a5-1214">Zellen mit denselben Überprüfungskriterien. <b>xlCellTypeVisible</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1214">Cells having the same validation criteria.<b>xlCellTypeVisible</b>.</span></span> <span data-ttu-id="370a5-1215">Alle sichtbaren Zellen</span><span class="sxs-lookup"><span data-stu-id="370a5-1215">All visible cells.</span></span></param>
        <param name="Value"><span data-ttu-id="370a5-1216">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1216">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1217">Wenn <paramref name="Type" /> es sich entweder um <b>xlCellTypeConstants</b> oder <b>xlCellTypeFormulas</b>handelt, wird dieses Argument verwendet, um zu bestimmen, welche Zellentypen in das Ergebnis miteingef?en werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1217">If <paramref name="Type" /> is either <b>xlCellTypeConstants</b> or <b>xlCellTypeFormulas</b>, this argument is used to determine which types of cells to include in the result.</span></span> <span data-ttu-id="370a5-1218">Diese Werte können zusammen hinzugefügt werden, um mehr als einen Typ zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="370a5-1218">These values can be added together to return more than one type.</span></span> <span data-ttu-id="370a5-1219">Standardmäßig werden alle Konstanten oder Formeln unabhängig vom Typ ausgewählt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1219">The default is to select all constants or formulas, no matter what the type.</span></span> <span data-ttu-id="370a5-1220">Dies kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlSpecialCellsValue" /> Konstanten sein:<b>xlErrors</b><b>xlLogical</b><b>xlNumbers</b><b>xlTextValues</b></span><span class="sxs-lookup"><span data-stu-id="370a5-1220">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlSpecialCellsValue" /> constants:<b>xlErrors</b><b>xlLogical</b><b>xlNumbers</b><b>xlTextValues</b></span></span></param>
        <summary><span data-ttu-id="370a5-1221">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das alle Zellen darstellt, die dem angegebenen Typ und Wert entsprechen.</span><span class="sxs-lookup"><span data-stu-id="370a5-1221">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents all the cells that match the specified type and value.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public object Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Style" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Style { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-1222">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Style" /> Objekt zurück, das die Formatvorlage des angegebenen Bereichs darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1222">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Style" /> object that represents the style of the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubscribeTo">
      <MemberSignature Language="C#" Value="public object SubscribeTo (string Edition, Microsoft.Office.Interop.Excel.XlSubscribeToFormat Format = Microsoft.Office.Interop.Excel.XlSubscribeToFormat.xlSubscribeToText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SubscribeTo([in]string Edition, [in]valuetype Microsoft.Office.Interop.Excel.XlSubscribeToFormat Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.SubscribeTo(System.String,Microsoft.Office.Interop.Excel.XlSubscribeToFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubscribeTo (Edition As String, Optional Format As XlSubscribeToFormat = Microsoft.Office.Interop.Excel.XlSubscribeToFormat.xlSubscribeToText) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(481)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Edition" Type="System.String" />
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlSubscribeToFormat" />
      </Parameters>
      <Docs>
        <param name="Edition"><span data-ttu-id="370a5-1223">Dieser Parameter ist nur für Macintosh gedacht und sollte nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1223">This parameter is for Macintosh only and should not be used.</span></span></param>
        <param name="Format"><span data-ttu-id="370a5-1224">Dieser Parameter ist nur für Macintosh gedacht und sollte nicht verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1224">This parameter is for Macintosh only and should not be used.</span></span></param>
        <summary><span data-ttu-id="370a5-1225">Sie haben Hilfe zu einem Schlüsselwort angefordert, das nur auf dem Macintosh verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="370a5-1225">You have requested Help for a keyword used only on the Macintosh.</span></span> <span data-ttu-id="370a5-1226">Weitere Informationen zu diesem Schlüsselwort finden Sie in der Sprachverzeichnishilfe zu Microsoft Office Macintosh Edition.</span><span class="sxs-lookup"><span data-stu-id="370a5-1226">For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtotal">
      <MemberSignature Language="C#" Value="public object Subtotal (int GroupBy, Microsoft.Office.Interop.Excel.XlConsolidationFunction Function, object TotalList, object Replace, object PageBreaks, Microsoft.Office.Interop.Excel.XlSummaryRow SummaryBelowData = Microsoft.Office.Interop.Excel.XlSummaryRow.xlSummaryBelow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Subtotal([in]int32 GroupBy, [in]valuetype Microsoft.Office.Interop.Excel.XlConsolidationFunction Function, [in]object TotalList, [in]object Replace, [in]object PageBreaks, [in]valuetype Microsoft.Office.Interop.Excel.XlSummaryRow SummaryBelowData) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Subtotal(System.Int32,Microsoft.Office.Interop.Excel.XlConsolidationFunction,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSummaryRow)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtotal (GroupBy As Integer, Function As XlConsolidationFunction, TotalList As Object, Optional Replace As Object, Optional PageBreaks As Object, Optional SummaryBelowData As XlSummaryRow = Microsoft.Office.Interop.Excel.XlSummaryRow.xlSummaryBelow) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(882)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="GroupBy" Type="System.Int32" />
        <Parameter Name="Function" Type="Microsoft.Office.Interop.Excel.XlConsolidationFunction" />
        <Parameter Name="TotalList" Type="System.Object" />
        <Parameter Name="Replace" Type="System.Object" />
        <Parameter Name="PageBreaks" Type="System.Object" />
        <Parameter Name="SummaryBelowData" Type="Microsoft.Office.Interop.Excel.XlSummaryRow" />
      </Parameters>
      <Docs>
        <param name="GroupBy"><span data-ttu-id="370a5-1227">Erforderliche <b>ganze Zahl</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1227">Required <b>Integer</b>.</span></span> <span data-ttu-id="370a5-1228">Das Feld, nach dem gruppiert werden soll, als ganzzahliger, bei 1 beginnender Versatz (Offset).</span><span class="sxs-lookup"><span data-stu-id="370a5-1228">The field to group by, as a one-based integer offset.</span></span> <span data-ttu-id="370a5-1229">Weitere Informationen hierzu finden Sie im Beispiel.</span><span class="sxs-lookup"><span data-stu-id="370a5-1229">For more information, see the example.</span></span></param>
        <param name="Function"><span data-ttu-id="370a5-1230"><see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" />Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="370a5-1230">Required <see cref="T:Microsoft.Office.Interop.Excel.XlConsolidationFunction" />.</span></span> <span data-ttu-id="370a5-1231">Die Zwischensumme-Funktion.</span><span class="sxs-lookup"><span data-stu-id="370a5-1231">The subtotal function.</span></span> <span data-ttu-id="370a5-1232">Dies kann eine der folgenden <b>XlConsolidationFunction-Konstanten</b> sein:<b>xlAverage</b><b>xlCount</b><b>xlCountNums</b><b>xlMax</b><b>xlMin</b><b>xlProduct</b><b>xlStDev</b><b>xlStDevP</b><b>xlSum</b><b>xlUnknown</b><b>xlVar</b><b>xlVarP</b></span><span class="sxs-lookup"><span data-stu-id="370a5-1232">Can be one of the following <b>XlConsolidationFunction</b> constants:<b>xlAverage</b><b>xlCount</b><b>xlCountNums</b><b>xlMax</b><b>xlMin</b><b>xlProduct</b><b>xlStDev</b><b>xlStDevP</b><b>xlSum</b><b>xlUnknown</b><b>xlVar</b><b>xlVarP</b></span></span></param>
        <param name="TotalList"><span data-ttu-id="370a5-1233">Required <b>-Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1233">Required <b>Object</b>.</span></span> <span data-ttu-id="370a5-1234">Ein Array mit bei 1 beginnenden Feldversätzen. Diese geben die Felder an, denen die Zwischensummen hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1234">An array of 1-based field offsets, indicating the fields to which the subtotals are added.</span></span> <span data-ttu-id="370a5-1235">Weitere Informationen finden Sie im Beispiel.</span><span class="sxs-lookup"><span data-stu-id="370a5-1235">For more information, see the example.</span></span></param>
        <param name="Replace"><span data-ttu-id="370a5-1236">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1236">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1237">Mit  <b>True</b> werden bestehende Teilergebnisse ersetzt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1237"><b>True</b> to replace existing subtotals.</span></span> <span data-ttu-id="370a5-1238">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1238">The default value is <b>False</b>.</span></span></param>
        <param name="PageBreaks"><span data-ttu-id="370a5-1239">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1239">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1240">Mit  <b>True</b> wird nach jeder Gruppe ein Seitenumbruch eingefügt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1240"><b>True</b> to add page breaks after each group.</span></span> <span data-ttu-id="370a5-1241">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1241">The default value is <b>False</b>.</span></span></param>
        <param name="SummaryBelowData"><span data-ttu-id="370a5-1242">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSummaryRow" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1242">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSummaryRow" />.</span></span> <span data-ttu-id="370a5-1243">Platziert die Zusammenfassungsdaten relativ zur Zwischensumme.</span><span class="sxs-lookup"><span data-stu-id="370a5-1243">Places the summary data relative to the subtotal.</span></span> <span data-ttu-id="370a5-1244">Dies kann eine der folgenden <b>XlSummaryRow-Konstanten</b> sein:<b>xlSummaryAbove</b><b>xlSummaryBelow</b><paramref name="default" /></span><span class="sxs-lookup"><span data-stu-id="370a5-1244">Can be one of the following <b>XlSummaryRow</b> constants:<b>xlSummaryAbove</b><b>xlSummaryBelow</b><paramref name="default" /></span></span></param>
        <summary><span data-ttu-id="370a5-1245">Erstellt Teilergebnisse für den Bereich (bzw. für die aktuelle Region, wenn der Bereich nur aus einer Zelle besteht).</span><span class="sxs-lookup"><span data-stu-id="370a5-1245">Creates subtotals for the range (or the current region, if the range is a single cell).</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Summary">
      <MemberSignature Language="C#" Value="public object Summary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Summary" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Summary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Summary As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Summary { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(273)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(273)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-1246">Bestimmt, ob es sich bei dem Bereich um eine Outlining-Sammelzeile oder -spalte handelt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1246">Determines if the range is an outlining summary row or column.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-1247">Diese Eigenschaft gibt <b>True zurück,</b> wenn der Bereich eine Outlining-Sammelzeile oder -spalte ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-1247">This property returns <b>True</b> if the range is an outlining summary row or column.</span></span></para>
          <para><span data-ttu-id="370a5-1248">Der Bereich sollte eine Zeile oder Spalte sein.</span><span class="sxs-lookup"><span data-stu-id="370a5-1248">The range should be a row or a column.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public object Table (object RowInput, object ColumnInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Table([in]object RowInput, [in]object ColumnInput) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Table(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Table (Optional RowInput As Object, Optional ColumnInput As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(497)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowInput" Type="System.Object" />
        <Parameter Name="ColumnInput" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowInput"><span data-ttu-id="370a5-1249">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1249">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1250">Eine einzelne Zelle, die als Eingabe für die Zeilen der Tabelle verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="370a5-1250">A single cell to use as the row input for your table.</span></span></param>
        <param name="ColumnInput"><span data-ttu-id="370a5-1251">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1251">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1252">Eine einzelne Zelle, die als Eingabe für die Spalten der Tabelle verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="370a5-1252">A single cell to use as the column input for your table.</span></span></param>
        <summary><span data-ttu-id="370a5-1253">Erstellt eine Datentabelle basierend auf Eingabewerten und Formeln, die in einem Arbeitsblatt definiert sind.</span><span class="sxs-lookup"><span data-stu-id="370a5-1253">Creates a data table based on input values and formulas that you define on a worksheet.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-1254">Mit Datentabellen können Sie eine "Was-wäre-wenn"-Analyse durchführen. Sie können bestimmte konstante Werte im Arbeitsblatt ändern und anschließend die Auswirkung auf Werte in anderen Zellen beobachten.</span><span class="sxs-lookup"><span data-stu-id="370a5-1254">Use data tables to perform a what-if analysis by changing certain constant values on your worksheet to see how values in other cells are affected.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public object Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Text { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(138)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(138)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-1255">Gibt den Text des angegebenen Objekts zurück oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="370a5-1255">Returns or sets the text for the specified object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-1256">Für das Objekt gibt diese Eigenschaft den phonetischen Text zurück <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="370a5-1256">For the <see cref="T:Microsoft.Office.Interop.Excel.Phonetic" /> object, this property returns or sets its phonetic text.</span></span> <span data-ttu-id="370a5-1257">Sie können diese Eigenschaft nicht auf <b>Null</b>Null festlegen.</span><span class="sxs-lookup"><span data-stu-id="370a5-1257">You cannot set this property to <b>Null</b>.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TextToColumns">
      <MemberSignature Language="C#" Value="public object TextToColumns (object Destination, Microsoft.Office.Interop.Excel.XlTextParsingType DataType = Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object DecimalSeparator, object ThousandsSeparator, object TrailingMinusNumbers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object TextToColumns([in]object Destination, [in]valuetype Microsoft.Office.Interop.Excel.XlTextParsingType DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object DecimalSeparator, [in]object ThousandsSeparator, [in]object TrailingMinusNumbers) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.TextToColumns(System.Object,Microsoft.Office.Interop.Excel.XlTextParsingType,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TextToColumns (Optional Destination As Object, Optional DataType As XlTextParsingType = Microsoft.Office.Interop.Excel.XlTextParsingType.xlDelimited, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object, Optional TrailingMinusNumbers As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1040)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Destination" Type="System.Object" />
        <Parameter Name="DataType" Type="Microsoft.Office.Interop.Excel.XlTextParsingType" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
        <Parameter Name="TrailingMinusNumbers" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Destination"><span data-ttu-id="370a5-1258">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1258">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1259">Ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, das angibt, wo die Ergebnisse von Microsoft Excel angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1259">A <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that specifies where Microsoft Excel will place the results.</span></span> <span data-ttu-id="370a5-1260">Wenn der Bereich größer als eine einzelne Zelle ist, wird die Zelle links oben verwendet.</span><span class="sxs-lookup"><span data-stu-id="370a5-1260">If the range is larger than a single cell, the top left cell is used.</span></span></param>
        <param name="DataType"><span data-ttu-id="370a5-1261">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1261">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" />.</span></span> <span data-ttu-id="370a5-1262">Das Format des Texts, der in Spalten aufgeteilt werden soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-1262">The format of the text to be split into columns.</span></span> <span data-ttu-id="370a5-1263">Dies kann eine der folgenden <b>XlTextParsingType -Konstanten</b> sein:<b>xlDelimited </b> <paramref name="default" /> <b>xlFixedWidth</b></span><span class="sxs-lookup"><span data-stu-id="370a5-1263">Can be one of the following <b>XlTextParsingType</b> constants:<b>xlDelimited </b><paramref name="default" /><b>xlFixedWidth</b></span></span></param>
        <param name="TextQualifier"><span data-ttu-id="370a5-1264">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> .</span><span class="sxs-lookup"><span data-stu-id="370a5-1264">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />.</span></span> <span data-ttu-id="370a5-1265">Dies kann eine der folgenden <b>XlTextQualifier</b> -Konstanten sein:<b>xlTextQualifierDoubleQuote</b> <paramref name="default" /> <b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></span><span class="sxs-lookup"><span data-stu-id="370a5-1265">Can be one of the following <b>XlTextQualifier</b> constants:<b>xlTextQualifierDoubleQuote</b><paramref name="default" /><b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></span></span></param>
        <param name="ConsecutiveDelimiter"><span data-ttu-id="370a5-1266">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1266">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1267"><b>True</b>, wenn Microsoft Excel aufeinanderfolgende Trennzeichen als ein Trennzeichen interpretieren soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-1267"><b>True</b> to have Microsoft Excel consider consecutive delimiters as one delimiter.</span></span> <span data-ttu-id="370a5-1268">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1268">The default value is <b>False</b>.</span></span></param>
        <param name="Tab"><span data-ttu-id="370a5-1269">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1269">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1270"><b>True,</b> wenn <paramref name="DataType" /> <b>xlDelimited</b> und das Tabstoppzeichen als Trennzeichen verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-1270"><b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the tab character be a delimiter.</span></span> <span data-ttu-id="370a5-1271">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1271">The default value is <b>False</b>.</span></span></param>
        <param name="Semicolon"><span data-ttu-id="370a5-1272">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1272">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1273"><b>True,</b> wenn <paramref name="DataType" /> <b>xlDelimited</b> und das Semikolon als Trennzeichen verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-1273"><b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the semicolon be a delimiter.</span></span> <span data-ttu-id="370a5-1274">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1274">The default value is <b>False</b>.</span></span></param>
        <param name="Comma"><span data-ttu-id="370a5-1275">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1275">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1276"><b>True,</b> wenn <paramref name="DataType" /> <b>xlDelimited</b> und das Komma ein Trennzeichen sein soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-1276"><b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the comma be a delimiter.</span></span> <span data-ttu-id="370a5-1277">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1277">The default value is <b>False</b>.</span></span></param>
        <param name="Space"><span data-ttu-id="370a5-1278">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1278">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1279"><b>True,</b> wenn <paramref name="DataType" /> <b>xlDelimited</b> und das Leerzeichen als Trennzeichen verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-1279"><b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the space character be a delimiter.</span></span> <span data-ttu-id="370a5-1280">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1280">The default value is <b>False</b>.</span></span></param>
        <param name="Other"><span data-ttu-id="370a5-1281">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1281">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1282"><b>True,</b> wenn <paramref name="DataType" /> <b>xlDelimited</b> und das durch das Argument angegebene Zeichen ein <paramref name="OtherChar" /> Trennzeichen sein soll.</span><span class="sxs-lookup"><span data-stu-id="370a5-1282"><b>True</b> to have <paramref name="DataType" /> be <b>xlDelimited</b> and to have the character specified by the <paramref name="OtherChar" /> argument be a delimiter.</span></span> <span data-ttu-id="370a5-1283">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1283">The default value is <b>False</b>.</span></span></param>
        <param name="OtherChar"><span data-ttu-id="370a5-1284">Optionales <b>Objekt</b> (erforderlich, wenn <paramref name="Other" /> <b>"True" ist).</b></span><span class="sxs-lookup"><span data-stu-id="370a5-1284">Optional <b>Object</b> (required if <paramref name="Other" /> is <b>True</b>).</span></span> <span data-ttu-id="370a5-1285">Das Trennzeichen, wenn <paramref name="Other" /> true <b>ist.</b></span><span class="sxs-lookup"><span data-stu-id="370a5-1285">The delimiter character when <paramref name="Other" /> is <b>True</b>.</span></span> <span data-ttu-id="370a5-1286">Wenn mehr als ein Zeichen angegeben ist, wird nur das erste Zeichen der Zeichenfolge verwendet, und die restlichen Zeichen werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="370a5-1286">If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</span></span></param>
        <param name="FieldInfo"><span data-ttu-id="370a5-1287">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1287">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1288">Ein Array mit Analyseinformationen für die einzelnen Spalten von Daten.</span><span class="sxs-lookup"><span data-stu-id="370a5-1288">An array containing parse information for the individual columns of data.</span></span> <span data-ttu-id="370a5-1289">Die Interpretation hängt vom Wert der <paramref name="DataType" /> ab.</span><span class="sxs-lookup"><span data-stu-id="370a5-1289">The interpretation depends on the value of <paramref name="DataType" />.</span></span> <span data-ttu-id="370a5-1290">Wenn die Daten getrennt sind, ist dieses Argument ein Array von Arrays mit zwei Elementen, wobei jedes Array mit zwei Elementen die Konvertierungsoptionen für eine bestimmte Spalte angibt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1290">When the data is delimited, this argument is an array of two-element arrays, with each two-element array specifying the conversion options for a particular column.</span></span> <span data-ttu-id="370a5-1291">Das erste Element ist die Spaltennummer (1-basiert), und das zweite Element ist eine der Konstanten, die angeben, wie die <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" /> Spalte analysiert wird.</span><span class="sxs-lookup"><span data-stu-id="370a5-1291">The first element is the column number (1-based), and the second element is one of the <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" /> constants specifying how the column is parsed.</span></span> <span data-ttu-id="370a5-1292">Dies kann eine der folgenden <b>XlColumnDataType -Konstanten</b> sein:<b>xlGeneralFormat</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1292">Can be one of the following <b>XlColumnDataType</b> constants:<b>xlGeneralFormat</b>.</span></span> <span data-ttu-id="370a5-1293">Genera.</span><span class="sxs-lookup"><span data-stu-id="370a5-1293">Genera.</span></span> <span data-ttu-id="370a5-1294"><b>xlTextFormat</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1294"><b>xlTextFormat</b>.</span></span> <span data-ttu-id="370a5-1295">Text. <b>xlMDYFormat</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1295">Text.<b>xlMDYFormat</b>.</span></span> <span data-ttu-id="370a5-1296">MDY-Datum. <b>xlDMYFormat</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1296">MDY Date.<b>xlDMYFormat</b>.</span></span> <span data-ttu-id="370a5-1297">DMY-Datum. <b>xlYMDFormat</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1297">DMY Date.<b>xlYMDFormat</b>.</span></span> <span data-ttu-id="370a5-1298">YMD-Datum. <b>xlMYDFormat</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1298">YMD Date.<b>xlMYDFormat</b>.</span></span> <span data-ttu-id="370a5-1299">MYD Date. <b>xlDYMFormat</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1299">MYD Date.<b>xlDYMFormat</b>.</span></span> <span data-ttu-id="370a5-1300">DYM-Datum. <b>xlYDMFormat</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1300">DYM Date.<b>xlYDMFormat</b>.</span></span> <span data-ttu-id="370a5-1301">YDM-Datum. <b>xlEMDFormat</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1301">YDM Date.<b>xlEMDFormat</b>.</span></span> <span data-ttu-id="370a5-1302">EMD-Datum. <b>xlSkipColumn</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1302">EMD Date.<b>xlSkipColumn</b>.</span></span> <span data-ttu-id="370a5-1303">Skip Column.You can use <b>xlEMDFormat</b> only if Taiwanese language support is installed and selected.</span><span class="sxs-lookup"><span data-stu-id="370a5-1303">Skip Column.You can use <b>xlEMDFormat</b> only if Taiwanese language support is installed and selected.</span></span> <span data-ttu-id="370a5-1304">Die <b>XlEMDFormat</b> -Konstante gibt an, dass taiwanesische Zeitdaten verwendet werden. Die Spaltenbezeichner können in beliebiger Reihenfolge angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="370a5-1304">The <b>xlEMDFormat</b> constant specifies that Taiwanese era dates are being used.The column specifiers can be in any order.</span></span> <span data-ttu-id="370a5-1305">Wenn ein bestimmter Spaltenbezeichner für eine bestimmte Spalte in den Eingabedaten nicht vorhanden ist, wird die Spalte mit der Einstellung <b>"Allgemein"</b> analysiert. Wenn die Quelldaten Spalten mit fester Breite enthalten, gibt das erste Element jedes Zweielementarrays die Anfangszeichenposition in der Spalte an (als ganze Zahl; 0 (Null) ist das erste Zeichen).</span><span class="sxs-lookup"><span data-stu-id="370a5-1305">If a given column specifier is not present for a particular column in the input data, the column is parsed with the <b>General</b> setting.If the source data has fixed-width columns, the first element of each two-element array specifies the starting character position in the column (as an integer; 0 (zero) is the first character).</span></span> <span data-ttu-id="370a5-1306">Das zweite Element der zweiteiligen Matrix gibt die Analyseoption für die Spalte als eine Nummer von 1 bis 9 an, wie oben dargestellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1306">The second element of the two-element array specifies the parse option for the column as a number from 1 through 9, as listed above.</span></span></param>
        <param name="DecimalSeparator"><span data-ttu-id="370a5-1307">Optionaler <b>String</b>-Wert.</span><span class="sxs-lookup"><span data-stu-id="370a5-1307">Optional <b>String</b>.</span></span> <span data-ttu-id="370a5-1308">Das Dezimaltrennzeichen, das von Microsoft Excel beim Erkennen von Zahlen verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="370a5-1308">The decimal separator that Microsoft Excel uses when recognizing numbers.</span></span> <span data-ttu-id="370a5-1309">Als Standardeinstellung wird die Systemeinstellung verwendet.</span><span class="sxs-lookup"><span data-stu-id="370a5-1309">The default setting is the system setting.</span></span></param>
        <param name="ThousandsSeparator"><span data-ttu-id="370a5-1310">Optionaler <b>String</b>-Wert.</span><span class="sxs-lookup"><span data-stu-id="370a5-1310">Optional <b>String</b>.</span></span> <span data-ttu-id="370a5-1311">Das 1.000er-Trennzeichen, das von Excel beim Erkennen von Zahlen verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="370a5-1311">The thousands separator that Excel uses when recognizing numbers.</span></span> <span data-ttu-id="370a5-1312">Als Standardeinstellung wird die Systemeinstellung verwendet.</span><span class="sxs-lookup"><span data-stu-id="370a5-1312">The default setting is the system setting.</span></span></param>
        <param name="TrailingMinusNumbers"><span data-ttu-id="370a5-1313">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1313">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1314">Zahlen, denen ein Minuszeichen vorangestellt ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-1314">Numbers that begin with a minus character.</span></span></param>
        <summary><span data-ttu-id="370a5-1315">Analysiert eine Spalte mit Zellen, die Text enthalten, und gibt das Ergebnis in mehreren Spalten aus.</span><span class="sxs-lookup"><span data-stu-id="370a5-1315">Parses a column of cells that contain text into several columns.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-1316">In der folgenden Tabelle sind die Ergebnisse beim Importieren von Text in Excel für verschiedene Importeinstellungen gezeigt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1316">The following table shows the results of importing text into Excel for various import settings.</span></span> <span data-ttu-id="370a5-1317">Die numerischen Ergebnisse werden in der Spalte ganz rechts angezeigt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1317">Numeric results are displayed in the rightmost column.</span></span></para>
          <list type="table">
            <item>
              <term><span data-ttu-id="370a5-1318">Punkt</span><span class="sxs-lookup"><span data-stu-id="370a5-1318">Period</span></span></term>
              <description><span data-ttu-id="370a5-1319">Komma</span><span class="sxs-lookup"><span data-stu-id="370a5-1319">Comma</span></span></description>
              <description><span data-ttu-id="370a5-1320">Komma</span><span class="sxs-lookup"><span data-stu-id="370a5-1320">Comma</span></span></description>
              <description><span data-ttu-id="370a5-1321">Punkt</span><span class="sxs-lookup"><span data-stu-id="370a5-1321">Period</span></span></description>
              <description><span data-ttu-id="370a5-1322">$$$123.123,45</span><span class="sxs-lookup"><span data-stu-id="370a5-1322">123.123,45</span></span></description>
              <description><span data-ttu-id="370a5-1323">$$$123,123.45 (numerisch)</span><span class="sxs-lookup"><span data-stu-id="370a5-1323">123,123.45 (numeric)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="370a5-1324">Punkt</span><span class="sxs-lookup"><span data-stu-id="370a5-1324">Period</span></span></term>
              <description><span data-ttu-id="370a5-1325">Komma</span><span class="sxs-lookup"><span data-stu-id="370a5-1325">Comma</span></span></description>
              <description><span data-ttu-id="370a5-1326">Komma</span><span class="sxs-lookup"><span data-stu-id="370a5-1326">Comma</span></span></description>
              <description><span data-ttu-id="370a5-1327">Komma</span><span class="sxs-lookup"><span data-stu-id="370a5-1327">Comma</span></span></description>
              <description><span data-ttu-id="370a5-1328">$$$123.123,45</span><span class="sxs-lookup"><span data-stu-id="370a5-1328">123.123,45</span></span></description>
              <description><span data-ttu-id="370a5-1329">$$$123.123,45 (Text)</span><span class="sxs-lookup"><span data-stu-id="370a5-1329">123.123,45 (text)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="370a5-1330">Komma</span><span class="sxs-lookup"><span data-stu-id="370a5-1330">Comma</span></span></term>
              <description><span data-ttu-id="370a5-1331">Punkt</span><span class="sxs-lookup"><span data-stu-id="370a5-1331">Period</span></span></description>
              <description><span data-ttu-id="370a5-1332">Komma</span><span class="sxs-lookup"><span data-stu-id="370a5-1332">Comma</span></span></description>
              <description><span data-ttu-id="370a5-1333">Punkt</span><span class="sxs-lookup"><span data-stu-id="370a5-1333">Period</span></span></description>
              <description><span data-ttu-id="370a5-1334">$$$123,123.45</span><span class="sxs-lookup"><span data-stu-id="370a5-1334">123,123.45</span></span></description>
              <description><span data-ttu-id="370a5-1335">$$$123,123.45 (numerisch)</span><span class="sxs-lookup"><span data-stu-id="370a5-1335">123,123.45 (numeric)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="370a5-1336">Punkt</span><span class="sxs-lookup"><span data-stu-id="370a5-1336">Period</span></span></term>
              <description><span data-ttu-id="370a5-1337">Komma</span><span class="sxs-lookup"><span data-stu-id="370a5-1337">Comma</span></span></description>
              <description><span data-ttu-id="370a5-1338">Punkt</span><span class="sxs-lookup"><span data-stu-id="370a5-1338">Period</span></span></description>
              <description><span data-ttu-id="370a5-1339">Komma</span><span class="sxs-lookup"><span data-stu-id="370a5-1339">Comma</span></span></description>
              <description><span data-ttu-id="370a5-1340">$$$123.123,45</span><span class="sxs-lookup"><span data-stu-id="370a5-1340">123 123.45</span></span></description>
              <description><span data-ttu-id="370a5-1341">$$$123.123,45 (Text)</span><span class="sxs-lookup"><span data-stu-id="370a5-1341">123 123.45 (text)</span></span></description>
            </item>
            <item>
              <term><span data-ttu-id="370a5-1342">Punkt</span><span class="sxs-lookup"><span data-stu-id="370a5-1342">Period</span></span></term>
              <description><span data-ttu-id="370a5-1343">Komma</span><span class="sxs-lookup"><span data-stu-id="370a5-1343">Comma</span></span></description>
              <description><span data-ttu-id="370a5-1344">Punkt</span><span class="sxs-lookup"><span data-stu-id="370a5-1344">Period</span></span></description>
              <description><span data-ttu-id="370a5-1345">Leerzeichen</span><span class="sxs-lookup"><span data-stu-id="370a5-1345">Space</span></span></description>
              <description><span data-ttu-id="370a5-1346">$$$123.123,45</span><span class="sxs-lookup"><span data-stu-id="370a5-1346">123 123.45</span></span></description>
              <description><span data-ttu-id="370a5-1347">$$$123.123 45 (numerisch)</span><span class="sxs-lookup"><span data-stu-id="370a5-1347">123,123.45 (numeric)</span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public object Top { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Top" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Top As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Top { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-1348">Gibt den Abstand zwischen dem oberen Rand von Zeile 1 und dem oberen Rand des Bereichs in Punkt zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-1348">Returns the distance, in points, from the top edge of row 1 to the top edge of the range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-1349">Wenn der Bereich nicht zusammenhängend ist, wird der erste Bereich verwendet.</span><span class="sxs-lookup"><span data-stu-id="370a5-1349">If the range is noncontiguous, the first area is used.</span></span> <span data-ttu-id="370a5-1350">Wenn der Bereich höher als eine Zeile ist, wird die oberste Zeile des Bereichs (die Zeile mit der niedrigsten Nummer) verwendet.</span><span class="sxs-lookup"><span data-stu-id="370a5-1350">If the range is more than one row high, the top (lowest numbered) row in the range is used.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Ungroup">
      <MemberSignature Language="C#" Value="public object Ungroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Ungroup() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.Ungroup" />
      <MemberSignature Language="VB.NET" Value="Public Function Ungroup () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Ungroup();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(244)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-1351">Treibt einen Bereich in einer Gliederung hoch (d. h. verringert dessen Gliederungsebene).</span><span class="sxs-lookup"><span data-stu-id="370a5-1351">Promotes a range in an outline (that is, decreases its outline level).</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="370a5-1352">Der angegebene Bereich muss eine Zeile oder Spalte oder ein Bereich von Zeilen oder Spalten sein.</span><span class="sxs-lookup"><span data-stu-id="370a5-1352">The specified range must be a row or column, or a range of rows or columns.</span></span> <span data-ttu-id="370a5-1353">Wenn sich der Bereich in einem PivotTable-Bericht befindet, wird durch diese Methode die Gruppierung der im Bereich enthaltenen Elemente aufheben.</span><span class="sxs-lookup"><span data-stu-id="370a5-1353">If the range is in a PivotTable report, this method ungroups the items contained in the range.</span></span></para>
          <para><span data-ttu-id="370a5-p392">Wenn sich die aktive Zelle in der Feldkopfzeile eines übergeordneten Felds befindet, wird die Gruppierung aller Gruppen in diesem Feld aufgehoben und das Feld aus dem PivotTable-Bericht entfernt. Wenn die Gruppierung der letzten Gruppe in einem übergeordneten Feld aufgehoben wird, wird das gesamte Feld aus dem Bericht entfernt.</span><span class="sxs-lookup"><span data-stu-id="370a5-p392">If the active cell is in a field header of a parent field, all the groups in that field are ungrouped and the field is removed from the PivotTable report. When the last group in a parent field is ungrouped, the entire field is removed from the report.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UnMerge">
      <MemberSignature Language="C#" Value="public void UnMerge ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnMerge() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Range.UnMerge" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnMerge ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnMerge();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1384)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="370a5-1356">Löst einen zusammengeführten Bereich in einzelne Zellen auf.</span><span class="sxs-lookup"><span data-stu-id="370a5-1356">Separates a merged area into individual cells.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStandardHeight">
      <MemberSignature Language="C#" Value="public object UseStandardHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UseStandardHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.UseStandardHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property UseStandardHeight As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UseStandardHeight { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(274)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(274)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(274)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-1357">Bestimmt, ob die Zeilenhöhe des <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekts der Standardhöhe des Blatts entspricht.</span><span class="sxs-lookup"><span data-stu-id="370a5-1357">Determines if the row height of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object equals the standard height of the sheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-1358">Diese Eigenschaft gibt <b>True</b> zurück, wenn die Zeilenhöhe des <b>Range</b> -Objekts der Standardhöhe des Blatts entspricht, und <b>Null,</b> wenn der Bereich mehr als eine Zeile enthält und die Zeilen nicht alle dieselbe Höhe haben.</span><span class="sxs-lookup"><span data-stu-id="370a5-1358">This property returns <b>True</b> if the row height of the <b>Range</b> object equals the standard height of the sheet and <b>Null</b> if the range contains more than one row and the rows aren’t all the same height.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStandardWidth">
      <MemberSignature Language="C#" Value="public object UseStandardWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UseStandardWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.UseStandardWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property UseStandardWidth As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UseStandardWidth { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(275)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-1359">Bestimmt, ob die Spaltenbreite des Objekts <see cref="T:Microsoft.Office.Interop.Excel.Range" /> der Standardbreite des Blatts entspricht.</span><span class="sxs-lookup"><span data-stu-id="370a5-1359">Determines if the column width of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object equals the standard width of the sheet.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-1360">Diese Eigenschaft gibt <b>True</b> zurück, wenn die Spaltenbreite des <b>Range</b> -Objekts der Standardbreite des Blatts entspricht, und <b>Null,</b> wenn der Bereich mehr als eine Spalte enthält und die Spalten nicht alle dieselbe Breite haben.</span><span class="sxs-lookup"><span data-stu-id="370a5-1360">This property returns <b>True</b> if the column width of the <b>Range</b> object equals the standard width of the sheet and <b>Null</b> if the range contains more than one column and the columns aren’t all the same width.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Validation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Validation Validation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Validation Validation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Validation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Validation As Validation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Validation ^ Validation { Microsoft::Office::Interop::Excel::Validation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1387)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1387)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Validation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-1361">Gibt das <see cref="T:Microsoft.Office.Interop.Excel.Validation" /> Objekt zurück, das die Datenüberprüfung für den angegebenen Bereich darstellt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1361">Returns the <see cref="T:Microsoft.Office.Interop.Excel.Validation" /> object that represents data validation for the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value[object RangeValueDataType] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Value(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property Value(Optional RangeValueDataType As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value[System::Object ^] { System::Object ^ get(System::Object ^ RangeValueDataType); void set(System::Object ^ RangeValueDataType, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RangeValueDataType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RangeValueDataType"><span data-ttu-id="370a5-1362">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="370a5-1362">Optional <b>Object</b>.</span></span> <span data-ttu-id="370a5-1363">Der Bereichswert-Datentyp.</span><span class="sxs-lookup"><span data-stu-id="370a5-1363">The range value data type.</span></span> <span data-ttu-id="370a5-1364">Dies kann eine der folgenden Konstanten <see cref="T:Microsoft.Office.Interop.Excel.XlRangeValueDataType" /> sein:<b>xlRangeValueDefault</b> Wenn das angegebene Objekt leer ist, wird der Wert Empty zurückgegeben (verwenden Sie die <paramref name="default" /> <see cref="T:Microsoft.Office.Interop.Excel.Range" /> <b></b> <b>IsEmpty-Funktion,</b> um diesen Fall zu testen).</span><span class="sxs-lookup"><span data-stu-id="370a5-1364">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlRangeValueDataType" /> constants:<b>xlRangeValueDefault</b><paramref name="default" /> If the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object is empty, returns the value <b>Empty</b> (use the <b>IsEmpty</b> function to test for this case).</span></span> <span data-ttu-id="370a5-1365">Wenn das <b>Range</b> -Objekt mehr als eine Zelle enthält, wird ein Array von Werten zurückgegeben (verwenden Sie die <b>IsArray-Funktion,</b> um diesen Fall zu testen). <b>xlRangeValueMSPersistXML</b>    Gibt die Recordsetdarstellung des angegebenen <b>Range -Objekts</b> in einem XML-Format zurück. <b>xlRangeValueXMLSpreadsheet</b>    Gibt die Werte, Formatierungen, Formeln und Namen des angegebenen <b>Range</b> -Objekts im XML-Tabellenkalkulationsformat zurück.</span><span class="sxs-lookup"><span data-stu-id="370a5-1365">If the <b>Range</b> object contains more than one cell, returns an array of values (use the <b>IsArray</b> function to test for this case).<b>xlRangeValueMSPersistXML</b>    Returns the recordset representation of the specified <b>Range</b> object in an XML format.<b>xlRangeValueXMLSpreadsheet</b>    Returns the values, formatting, formulas, and names of the specified <b>Range</b> object in the XML Spreadsheet format.</span></span></param>
        <summary><span data-ttu-id="370a5-1366">Gibt den Wert des angegebenen Bereichs zurück oder legt den Wert fest.</span><span class="sxs-lookup"><span data-stu-id="370a5-1366">Returns or sets the value of the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-1367">Beim Festlegen eines Zellbereichs mit den Inhalten einer XML-Tabellenkalkulationsdatei werden nur die Werte des ersten Blatts in der Arbeitsmappe verwendet.</span><span class="sxs-lookup"><span data-stu-id="370a5-1367">When setting a range of cells with the contents of an XML spreadsheet file, only values of the first sheet in the workbook are used.</span></span> <span data-ttu-id="370a5-1368">Sie können keinen nicht zusammenhängenden Zellbereich im Format der XML-Tabellenkalkulation festlegen oder erhalten.</span><span class="sxs-lookup"><span data-stu-id="370a5-1368">You cannot set or get a noncontiguous range of cells in the XML spreadsheet format.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Value2">
      <MemberSignature Language="C#" Value="public object Value2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Value2" />
      <MemberSignature Language="VB.NET" Value="Public Property Value2 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value2 { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1388)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1388)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-1369">Gibt den Zellwert zurück oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="370a5-1369">Returns or sets the cell value.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-p395">Der einzige Unterschied zwischen dieser Eigenschaft und der <b>Value</b>-Eigenschaft besteht darin, dass die <b>Value2</b>-Eigenschaft die Datentypen <b>Currency</b> und <b>Date</b> nicht verwendet. Sie können auf Werte, die mit diesen Datentypen formatiert sind, als Gleitkommazahlen zugreifen, indem Sie den Datentyp <b>Double</b> verwenden.</span><span class="sxs-lookup"><span data-stu-id="370a5-p395">The only difference between this property and the <b>Value</b> property is that the <b>Value2</b> property doesn’t use the <b>Currency</b> and <b>Date</b> data types. You can return values formatted with these data types as floating-point numbers by using the <b>Double</b> data type.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalAlignment">
      <MemberSignature Language="C#" Value="public object VerticalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object VerticalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.VerticalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalAlignment As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ VerticalAlignment { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-1372">Gibt zurück oder legt die vertikale Ausrichtung des angegebenen Objekts.</span><span class="sxs-lookup"><span data-stu-id="370a5-1372">Returns or sets the vertical alignment of the specified object.</span></span></summary>
        <value><span data-ttu-id="370a5-1373">.</span><span class="sxs-lookup"><span data-stu-id="370a5-1373">.</span></span></value>
        <remarks><para><span data-ttu-id="370a5-1374">Der zurückgegebene Vertikale Ausrichtungsbezeichner kann einer <b></b> der folgenden Wert für das Objekt mit Lese-/Schreibzugriff sein:</span><span class="sxs-lookup"><span data-stu-id="370a5-1374">The returned vertical alignment specifier can be one of the following read/write <b>Object</b> values:</span></span></para>
          <list type="bullet">
            <item>
              <description><span data-ttu-id="370a5-1375">
                <b>xlBottom</b>
              </span><span class="sxs-lookup"><span data-stu-id="370a5-1375">
                <b>xlBottom</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="370a5-1376">
                <b>xlCenter</b>
              </span><span class="sxs-lookup"><span data-stu-id="370a5-1376">
                <b>xlCenter</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="370a5-1377">
                <b>xlDistributed</b>
              </span><span class="sxs-lookup"><span data-stu-id="370a5-1377">
                <b>xlDistributed</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="370a5-1378">
                <b>xlJustify</b>
              </span><span class="sxs-lookup"><span data-stu-id="370a5-1378">
                <b>xlJustify</b>
              </span></span></description>
            </item>
            <item>
              <description><span data-ttu-id="370a5-1379">
                <b>xlTop</b>
              </span><span class="sxs-lookup"><span data-stu-id="370a5-1379">
                <b>xlTop</b>
              </span></span></description>
            </item>
          </list>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public object Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Width" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Width As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Width { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-1380">Die Breite des Bereichs in Punkt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1380">The width, in points, of the range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Worksheet">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Worksheet Worksheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Worksheet Worksheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.Worksheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Worksheet As Worksheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Worksheet ^ Worksheet { Microsoft::Office::Interop::Excel::Worksheet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(348)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(348)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Worksheet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-1381">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> Objekt zurück, das das Arbeitsblatt darstellt, das den angegebenen Bereich enthält.</span><span class="sxs-lookup"><span data-stu-id="370a5-1381">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> object that represents the worksheet containing the specified range.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapText">
      <MemberSignature Language="C#" Value="public object WrapText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WrapText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.WrapText" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapText As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ WrapText { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-1382">Bestimmt, ob microsoft Excel den Text im Objekt umschließt.</span><span class="sxs-lookup"><span data-stu-id="370a5-1382">Determines if Microsoft Excel wraps the text in the object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-1383">Diese Eigenschaft gibt <b>True</b> zurück, wenn Microsoft Excel den Text im Objekt umschließt, und <b>Null,</b> wenn der angegebene Bereich einige Zellen enthält, die Text umschließen, und andere Zellen, die nicht enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="370a5-1383">This property returns <b>True</b> if Microsoft Excel wraps the text in the object and <b>Null</b> if the specified range contains some cells that wrap text and other cells that don’t.</span></span></para>
          <para><span data-ttu-id="370a5-1384">Falls erforderlich, wird die Zeilenhöhe im Bereich von Microsoft Excel an die Texthöhe angepasst.</span><span class="sxs-lookup"><span data-stu-id="370a5-1384">Microsoft Excel will change the row height of the range, if necessary, to accommodate the text in the range.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XPath XPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XPath XPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Range.XPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XPath As XPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XPath ^ XPath { Microsoft::Office::Interop::Excel::XPath ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2258)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2258)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XPath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="370a5-1385">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> Objekt zurück, das den XPath des Elements darstellt, das dem angegebenen Objekt zugeordnet <see cref="T:Microsoft.Office.Interop.Excel.Range" /> ist.</span><span class="sxs-lookup"><span data-stu-id="370a5-1385">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> object that represents the Xpath of the element mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="370a5-1386">XML-Features, mit Ausnahme des Speicherns von Dateien im XML-Tabellenkalkulationsformat, sind nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003 verfügbar.</span><span class="sxs-lookup"><span data-stu-id="370a5-1386">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>