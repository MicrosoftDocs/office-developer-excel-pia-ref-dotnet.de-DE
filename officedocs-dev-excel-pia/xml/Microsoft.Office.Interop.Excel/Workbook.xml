<Type Name="Workbook" FullName="Microsoft.Office.Interop.Excel.Workbook">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="92ffce8b5e62ce88e392a62537bf1cc2d3a58d10" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20587353" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Workbook : Microsoft.Office.Interop.Excel._Workbook, Microsoft.Office.Interop.Excel.WorkbookEvents_Event" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Workbook implements class Microsoft.Office.Interop.Excel._Workbook, class Microsoft.Office.Interop.Excel.WorkbookEvents_Event" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Workbook" />
  <TypeSignature Language="VB.NET" Value="Public Interface Workbook&#xA;Implements _Workbook, WorkbookEvents_Event" />
  <TypeSignature Language="C++ CLI" Value="public interface class Workbook : Microsoft::Office::Interop::Excel::_Workbook, Microsoft::Office::Interop::Excel::WorkbookEvents_Event" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.Excel._Workbook</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.Excel.WorkbookEvents_Event</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.CoClass(typeof(Microsoft.Office.Interop.Excel.WorkbookClass))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208DA-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c0d73-101">Stellt eine Microsoft Excel-Arbeitsmappe dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0d73-101">Represents a Microsoft Excel workbook.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="c0d73-102">
        <para>Dies ist ein .NET-Schnittstelle abgeleitet eine COM-Co-Klasse, die von verwaltetem Code für die Interoperabilität mit den entsprechenden COM-Objekt erforderlich ist. Verwenden Sie diese abgeleiteten Schnittstelle, um alle-Methode, -Eigenschaft und Ereignismember des COM-Objekts zuzugreifen. Jedoch, wenn eine Methode oder ein Ereignis, den Sie verwenden möchten, den gleichen Namen unter dem gleichen COM-Objekt gemeinsam, wandeln Sie auf die entsprechende primäre Schnittstelle, rufen Sie die Methode und die neuesten Ereignisse Benutzeroberfläche für die Verbindung an das Ereignis umgewandelt. Verweisen Sie auf dieses Thema bietet Informationen über das COM-Objekt. Informationen zu den Methoden- und Membern des COM-Objekts finden Sie unter <see cref="T:Microsoft.Office.Interop.Excel._Workbook" />.</para>
        <para>Der <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> -Objekt ist ein Mitglied der <see cref="T:Microsoft.Office.Interop.Excel.Workbooks" /> Auflistung. Die <b>Arbeitsmappen</b> -Auflistung enthält alle derzeit der <b>Arbeitsmappe</b> -Objekte in Microsoft Excel geöffneten.</para>
        <para>In diesem Abschnitt werden die folgenden Eigenschaften zur Rückgabe eines <b>Workbook</b> -Objekts beschrieben:</para>
        <list type="bullet">
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> Eigenschaft</description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel._Application.ActiveWorkbook" /> Eigenschaft</description>
          </item>
          <item>
            <description>
              <see cref="P:Microsoft.Office.Interop.Excel._Application.ThisWorkbook" /> Eigenschaft</description>
          </item>
        </list>
        <para>Workbooks-Eigenschaft</para>
        <para>Verwendung <b>Arbeitsmappen</b>(<paramref name="index" />), wobei <paramref name="index" /> ist der Arbeitsmappenname oder die Indexzahl darstellt, um ein einzelnes <b>Workbook</b> -Objekt zurückzugeben.</para>
        <para>Die Indexnummer gibt die Reihenfolge an, in der die Arbeitsmappen geöffnet oder erstellt wurden. Workbooks(1) ist der ersten Arbeitsmappe erstellt, und Workbooks(Workbooks.Count) ist die letzte erstellt. Aktivieren einer Arbeitsmappe ändert nicht die Indexnummer. Alle Arbeitsmappen sind in der Nummerierung enthalten, auch wenn sie ausgeblendet sind.</para>
        <para>Der <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Name" /> -Eigenschaft gibt den Namen der Arbeitsmappe zurück. Sie können nicht den Namen festlegen, indem Sie die Verwendung dieser Eigenschaft; Wenn Sie den Namen ändern müssen, verwenden Sie die <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> -Methode, um die Arbeitsmappe unter einem anderen Namen speichern.</para>
        <para>ActiveWorkbook-Eigenschaft</para>
        <para>Die <b>ActiveWorkbook</b> -Eigenschaft gibt die Arbeitsmappe, die derzeit aktive.</para>
        <para>ThisWorkbook (Eigenschaft)</para>
        <para>Die <b>ThisWorkbook</b> -Eigenschaft gibt die Arbeitsmappe, in der Visual Basic-Code ausgeführt wird. In den meisten Fällen ist identisch mit der aktiven Arbeitsmappe. Wenn Visual Basic-Code Teil eines Add-Ins ist, wird nicht die <b>ThisWorkbook</b> -Eigenschaft die aktive Arbeitsmappe zurück. In diesem Fall ist die aktive Arbeitsmappe die Arbeitsmappe, die das Add-in aufrufen, damit die <b>ThisWorkbook</b> -Eigenschaft die Add-in-Arbeitsmappe zurück. </para>
        <para>, Wenn Sie ein Add-in aus Ihrer Visual Basic-Code erstellt werden soll, verwenden Sie die <b>ThisWorkbook</b> -Eigenschaft für die Verwendung eine Anweisung, die auf die Arbeitsmappe ausgeführt werden müssen, den Sie in das Add-in kompilieren,</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="c0d73-102">
          <para>This is a .NET interface derived from a COM coclass that is required by managed code for interoperability with the corresponding COM object. Use this derived interface to access all method, property, and event members of the COM object. However, if a method or event you want to use shares the same name under the same COM object, cast to the corresponding primary interface to call the method, and cast to the latest events interface to connect to the event. Refer to this topic for information about the COM object. For information about the method and property members of the COM object, see <see cref="T:Microsoft.Office.Interop.Excel._Workbook" />.</para>
          <para>The <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.Workbooks" /> collection. The <b>Workbooks</b> collection contains all the <b>Workbook</b> objects currently open in Microsoft Excel.</para>
          <para>The following properties for returning a <b>Workbook</b> object are described in this section:</para>
          <list type="bullet">
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> property</description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel._Application.ActiveWorkbook" /> property</description>
            </item>
            <item>
              <description>
                <see cref="P:Microsoft.Office.Interop.Excel._Application.ThisWorkbook" /> property</description>
            </item>
          </list>
          <para>Workbooks Property</para>
          <para>Use <b>Workbooks</b>(<paramref name="index" />), where <paramref name="index" /> is the workbook name or index number, to return a single <b>Workbook</b> object.</para>
          <para>The index number denotes the order in which the workbooks were opened or created. Workbooks(1) is the first workbook created, and Workbooks(Workbooks.Count) is the last one created. Activating a workbook doesn’t change its index number. All workbooks are included in the index count, even if they’re hidden.</para>
          <para>The <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Name" /> property returns the workbook name. You cannot set the name by using this property; if you need to change the name, use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to save the workbook under a different name.</para>
          <para>ActiveWorkbook Property</para>
          <para>The <b>ActiveWorkbook</b> property returns the workbook that’s currently active.</para>
          <para>ThisWorkbook Property</para>
          <para>The <b>ThisWorkbook</b> property returns the workbook where the Visual Basic code is running. In most cases, this is the same as the active workbook. However, if the Visual Basic code is part of an add-in, the <b>ThisWorkbook</b> property won’t return the active workbook. In this case, the active workbook is the workbook calling the add-in, so the <b>ThisWorkbook</b> property returns the add-in workbook. </para>
          <para>If you’ll be creating an add-in from your Visual Basic code, you should use the <b>ThisWorkbook</b> property to qualify any statement that must be run on the workbook you compile into the add-in.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members />
</Type>