<Type Name="Workbooks" FullName="Microsoft.Office.Interop.Excel.Workbooks">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e216142f85071dc6b33c9b1eb3c9ddffaa7369de" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20574935" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Workbooks : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Workbooks implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Workbooks" />
  <TypeSignature Language="VB.NET" Value="Public Interface Workbooks&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Workbooks : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208DB-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="baafe-101">Eine Auflistung aller der <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> -Objekte, die derzeit in der Microsoft Excel-Anwendung zu öffnen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="baafe-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> objects that are currently open in the Microsoft Excel application.</span>
      </span>
    </summary>
    <remarks>
      <para>
        <span data-ttu-id="baafe-102">Verwendung der <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> Eigenschaft, um die <b>Workbooks</b> -Auflistung zurückzugeben.</span>
        <span class="sxs-lookup">
          <span data-stu-id="baafe-102">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.Workbooks" /> property to return the <b>Workbooks</b> collection.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="baafe-103">Verwendung der <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" /> -Methode, um eine neue, leere Arbeitsmappe zu erstellen und der Auflistung hinzugefügt.</span>
        <span class="sxs-lookup">
          <span data-stu-id="baafe-103">Use the <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" /> method to create a new, empty workbook and add it to the collection.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="baafe-104">Verwendung der <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> -Methode, um eine Datei zu öffnen.</span>
        <span class="sxs-lookup">
          <span data-stu-id="baafe-104">Use the <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to open a file.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="baafe-105">Weitere Informationen zur Verwendung einer einzelnen <b>Workbook</b> -Objekts finden Sie unter der <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> Objekt.</span>
        <span class="sxs-lookup">
          <span data-stu-id="baafe-105">For more information about using a single <b>Workbook</b> object, see the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</span>
        </span>
      </para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="__OpenText">
      <MemberSignature Language="C#" Value="public void __OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void __OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.__OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub __OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(683)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(14)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="StartRow">To be added.</param>
        <param name="DataType">To be added.</param>
        <param name="TextQualifier">To be added.</param>
        <param name="ConsecutiveDelimiter">To be added.</param>
        <param name="Tab">To be added.</param>
        <param name="Semicolon">To be added.</param>
        <param name="Comma">To be added.</param>
        <param name="Space">To be added.</param>
        <param name="Other">To be added.</param>
        <param name="OtherChar">To be added.</param>
        <param name="FieldInfo">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary>
          <span data-ttu-id="baafe-106">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-106">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ default[System::Object ^] { Microsoft::Office::Interop::Excel::Workbook ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary>
          <span data-ttu-id="baafe-107">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-107">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Open">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook _Open (string Filename, object UpdateLinks, object ReadOnly, object Format, object Password, object WriteResPassword, object IgnoreReadOnlyRecommended, object Origin, object Delimiter, object Editable, object Notify, object Converter, object AddToMru);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook _Open([in]string Filename, [in]object UpdateLinks, [in]object ReadOnly, [in]object Format, [in]object Password, [in]object WriteResPassword, [in]object IgnoreReadOnlyRecommended, [in]object Origin, [in]object Delimiter, [in]object Editable, [in]object Notify, [in]object Converter, [in]object AddToMru) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Open (Filename As String, Optional UpdateLinks As Object, Optional ReadOnly As Object, Optional Format As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional IgnoreReadOnlyRecommended As Object, Optional Origin As Object, Optional Delimiter As Object, Optional Editable As Object, Optional Notify As Object, Optional Converter As Object, Optional AddToMru As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(682)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(13)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="UpdateLinks" Type="System.Object" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="IgnoreReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="Delimiter" Type="System.Object" />
        <Parameter Name="Editable" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
        <Parameter Name="Converter" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="UpdateLinks">To be added.</param>
        <param name="ReadOnly">To be added.</param>
        <param name="Format">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="IgnoreReadOnlyRecommended">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="Delimiter">To be added.</param>
        <param name="Editable">To be added.</param>
        <param name="Notify">To be added.</param>
        <param name="Converter">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <summary>
          <span data-ttu-id="baafe-108">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-108">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_OpenText">
      <MemberSignature Language="C#" Value="public void _OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout, object DecimalSeparator, object ThousandsSeparator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout, [in]object DecimalSeparator, [in]object ThousandsSeparator) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1773)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(16)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Origin">To be added.</param>
        <param name="StartRow">To be added.</param>
        <param name="DataType">To be added.</param>
        <param name="TextQualifier">To be added.</param>
        <param name="ConsecutiveDelimiter">To be added.</param>
        <param name="Tab">To be added.</param>
        <param name="Semicolon">To be added.</param>
        <param name="Comma">To be added.</param>
        <param name="Space">To be added.</param>
        <param name="Other">To be added.</param>
        <param name="OtherChar">To be added.</param>
        <param name="FieldInfo">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <param name="DecimalSeparator">To be added.</param>
        <param name="ThousandsSeparator">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_OpenXML">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook _OpenXML (string Filename, object Stylesheets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook _OpenXML([in]string Filename, [in]object Stylesheets) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks._OpenXML(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _OpenXML (Filename As String, Optional Stylesheets As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2071)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Stylesheets" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Stylesheets">To be added.</param>
        <summary>
          <span data-ttu-id="baafe-109">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-109">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Add (object Template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook Add([in]object Template) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (Optional Template As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Template" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Template">
          <span data-ttu-id="baafe-110">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-110">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-111">Bestimmt, wie die neue Arbeitsmappe erstellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-111">Determines how the new workbook is created.</span>
          </span>
          <span data-ttu-id="baafe-112">Wenn dieses Argument eine Zeichenfolge zur Angabe der Name einer vorhandenen Microsoft Excel-Datei ist, wird die neue Arbeitsmappe mit der angegebenen Datei als Vorlage erstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-112">If this argument is a string specifying the name of an existing Microsoft Excel file, the new workbook is created with the specified file as a template.</span>
          </span>
          <span data-ttu-id="baafe-113">Wenn dieses Argument eine Konstante ist, enthält die neue Arbeitsmappe ein einzelnes Blatt des angegebenen Typs an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-113">If this argument is a constant, the new workbook contains a single sheet of the specified type.</span>
          </span>
          <span data-ttu-id="baafe-114">Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlWBATemplate" /> Konstanten: <b>XlWBATChart</b>, <b>xlWBATExcel4IntlMacroSheet</b>, <b>xlWBATExcel4MacroSheet</b>oder <b>XlWBATWorksheet</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-114">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlWBATemplate" /> constants: <b>xlWBATChart</b>, <b>xlWBATExcel4IntlMacroSheet</b>, <b>xlWBATExcel4MacroSheet</b>, or <b>xlWBATWorksheet</b>.</span>
          </span>
          <span data-ttu-id="baafe-115">Wenn dieses Argument ausgelassen wird, erstellt Microsoft Excel eine neue Arbeitsmappe mit einer Anzahl von leeren Blättern (die Anzahl der Blätter wird durch die <b>SheetsInNewWorkbook</b> -Eigenschaft festgelegt).</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-115">If this argument is omitted, Microsoft Excel creates a new workbook with a number of blank sheets (the number of sheets is set by the <b>SheetsInNewWorkbook</b> property).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="baafe-116">Erstellt eine neue Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-116">Creates a new workbook.</span>
          </span>
          <span data-ttu-id="baafe-117">Die neue Arbeitsmappe wird der aktiven Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-117">The new workbook becomes the active workbook.</span>
          </span>
          <span data-ttu-id="baafe-118">Gibt eine <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-118">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="baafe-119">Wenn die <paramref name="Template" /> Argument gibt eine Datei, kann der Dateiname einen Pfad enthalten.</span>
            <span class="sxs-lookup">
              <span data-stu-id="baafe-119">If the <paramref name="Template" /> argument specifies a file, the file name can include a path.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="baafe-120">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> -Objekt, das die Anwendung Microsoft Excel darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-120">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="baafe-121">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-121">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCheckOut">
      <MemberSignature Language="C#" Value="public bool CanCheckOut (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCheckOut([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.CanCheckOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCheckOut (Filename As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCheckOut(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2070)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="baafe-122">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-122">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="baafe-123">Der Name der auszucheckenden Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-123">The name of the file to check out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="baafe-p105">
            <b>True</b> falls von Microsoft Excel eine angegebene Arbeitsmappe von einem Server ausgecheckt werden kann. <b>Boolean</b> -Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-p105">
              <b>True</b> if Microsoft Excel can check out a specified workbook from a server. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckOut">
      <MemberSignature Language="C#" Value="public void CheckOut (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckOut([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.CheckOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckOut (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckOut(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2069)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="baafe-126">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-126">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="baafe-127">Der Name der auszucheckenden Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-127">The name of the file to check out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="baafe-128">Kopiert die angegebene Arbeitsmappe von einem Server auf einen lokalen Computer zur Bearbeitung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-128">Copies the specified workbook from a server to a local computer for editing.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(277)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="baafe-129">Schließt das Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-129">Closes the object.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="baafe-130">Schließen einer Arbeitsmappe mithilfe der <b>Close</b> -Methode wird nicht in der Arbeitsmappe keine Auto_schließen-Makros ausgeführt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="baafe-130">Closing a workbook using the <b>Close</b> method doesn't run any Auto_Close macros in the workbook.</span>
            </span>
            <span data-ttu-id="baafe-131">Verwendung der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> zum Ausführen des Auto-Methode schließen Makros.</span>
            <span class="sxs-lookup">
              <span data-stu-id="baafe-131">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run the auto close macros.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="baafe-132">Gibt die Anzahl der Objekte in der Auflistung zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-132">Returns the number of objects in the collection.</span>
          </span>
          <span data-ttu-id="baafe-133">Schreibgeschützter <b>Integer</b>-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-133">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="baafe-134">Gibt eine 32-Bit-Ganzzahl, die die Anwendung angibt, in der das Objekt erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-134">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="baafe-135">Wenn das Objekt in Microsoft Excel erstellt wurde, gibt diese Eigenschaft die Zeichenfolge XCEL zurück, dies entspricht die hexadezimale Zahl 5843454 c ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-135">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="baafe-136">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-136">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="baafe-137">Die <b>Creator</b> -Eigenschaft ist in Microsoft Excel für den Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen verfügt über entwickelt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="baafe-137">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="baafe-138">Der Erstellercode von Microsoft Excel lautet beispielsweise XCEL zurück.</span>
            <span class="sxs-lookup">
              <span data-stu-id="baafe-138">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Item[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Workbook Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item(Index As Object) As Workbook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Workbook ^ Item[System::Object ^] { Microsoft::Office::Interop::Excel::Workbook ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="baafe-139">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-139">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-140">Der Name oder die Indexnummer des Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-140">The name or index number of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="baafe-141">Gibt ein einzelnes Objekt aus einer Auflistung zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-141">Returns a single object from a collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook Open (string Filename, object UpdateLinks, object ReadOnly, object Format, object Password, object WriteResPassword, object IgnoreReadOnlyRecommended, object Origin, object Delimiter, object Editable, object Notify, object Converter, object AddToMru, object Local, object CorruptLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook Open([in]string Filename, [in]object UpdateLinks, [in]object ReadOnly, [in]object Format, [in]object Password, [in]object WriteResPassword, [in]object IgnoreReadOnlyRecommended, [in]object Origin, [in]object Delimiter, [in]object Editable, [in]object Notify, [in]object Converter, [in]object AddToMru, [in]object Local, [in]object CorruptLoad) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Open (Filename As String, Optional UpdateLinks As Object, Optional ReadOnly As Object, Optional Format As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional IgnoreReadOnlyRecommended As Object, Optional Origin As Object, Optional Delimiter As Object, Optional Editable As Object, Optional Notify As Object, Optional Converter As Object, Optional AddToMru As Object, Optional Local As Object, Optional CorruptLoad As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1923)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(15)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="UpdateLinks" Type="System.Object" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Format" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="IgnoreReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="Delimiter" Type="System.Object" />
        <Parameter Name="Editable" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
        <Parameter Name="Converter" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
        <Parameter Name="CorruptLoad" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="baafe-142">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-142">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="baafe-143">Der Dateiname der Arbeitsmappe geöffnet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-143">The file name of the workbook to be opened.</span>
          </span>
        </param>
        <param name="UpdateLinks">
          <span data-ttu-id="baafe-144">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-144">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-145">Gibt an, wie Links in der Datei aktualisiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-145">Specifies the way links in the file are updated.</span>
          </span>
          <span data-ttu-id="baafe-146">Wenn dieses Argument ausgelassen wird, wird der Benutzer aufgefordert, um anzugeben, wie Links aktualisiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-146">If this argument is omitted, the user is prompted to specify how links will be updated.</span>
          </span>
          <span data-ttu-id="baafe-147">Andernfalls ist dieses Argument einen der Werte in der folgenden Tabelle aufgeführt. Wenn Microsoft Excel eine Datei in die WKS öffnen, WK1 oder WK3-format und die <paramref name="UpdateLinks" /> -Argument ist 2, Microsoft Excel erstellt Diagramme aus den Grafiken, die Datei angehängt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-147">Otherwise, this argument is one of the values listed in the following table.If Microsoft Excel is opening a file in the WKS, WK1, or WK3 format and the <paramref name="UpdateLinks" /> argument is 2, Microsoft Excel generates charts from the graphs attached to the file.</span>
          </span>
          <span data-ttu-id="baafe-148">Wenn das Argument 0 ist, werden keine Diagramme erstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-148">If the argument is 0, no charts are created.</span>
          </span>
        </param>
        <param name="ReadOnly">
          <span data-ttu-id="baafe-149">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-149">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-150">„True“, um die Arbeitsmappe im schreibgeschützten Modus zu öffnen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-150">True to open the workbook in read-only mode.</span>
          </span>
        </param>
        <param name="Format">
          <span data-ttu-id="baafe-151">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-151">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-152">Wenn Microsoft Excel eine Textdatei geöffnet ist, gibt dieses Argument das Trennzeichen an, wie in der folgenden Tabelle dargestellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-152">If Microsoft Excel is opening a text file, this argument specifies the delimiter character, as shown in the following table.</span>
          </span>
          <span data-ttu-id="baafe-153">Wenn dieses Argument ausgelassen wird, wird das aktuelle Trennzeichen verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-153">If this argument is omitted, the current delimiter is used.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="baafe-154">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-154">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-155">Eine Zeichenfolge, die das Kennwort zum Öffnen einer geschützten Arbeitsmappe enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-155">A string that contains the password required to open a protected workbook.</span>
          </span>
          <span data-ttu-id="baafe-156">Wenn dieses Argument nicht angegeben ist, und die Arbeitsmappe ein Kennwort erforderlich ist, wird der Benutzer für das Kennwort aufgefordert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-156">If this argument is omitted and the workbook requires a password, the user is prompted for the password.</span>
          </span>
        </param>
        <param name="WriteResPassword">
          <span data-ttu-id="baafe-157">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-157">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-158">Eine Zeichenfolge, die das erforderliche zum Schreiben in eine Arbeitsmappe mit Schreibschutz-Kennwort enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-158">A string that contains the password required to write to a write-reserved workbook.</span>
          </span>
          <span data-ttu-id="baafe-159">Wenn dieses Argument nicht angegeben ist, und die Arbeitsmappe ein Kennwort erforderlich ist, wird der Benutzer für das Kennwort aufgefordert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-159">If this argument is omitted and the workbook requires a password, the user will be prompted for the password.</span>
          </span>
        </param>
        <param name="IgnoreReadOnlyRecommended">
          <span data-ttu-id="baafe-160">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-160">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-161">
            <b>True</b>, damit Microsoft Excel nicht die Meldung in Bezug auf die Schreibschutzempfehlung anzeigt (wenn die Arbeitsmappe mit der Option <b>Schreibschutz empfehlen</b> gespeichert wurde).</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-161">
              <b>True</b> to have Microsoft Excel not display the read-only recommended message (if the workbook was saved with the <b>Read-Only Recommended</b> option).</span>
          </span>
        </param>
        <param name="Origin">
          <span data-ttu-id="baafe-162">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-162">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-163">Wenn die Datei eine Textdatei ist, gibt dieses Argument Dateiursprung (sodass Codepages und Wagenrücklauf und Zeilenvorschub (CR/LF) richtig zugeordnet werden kann).</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-163">If the file is a text file, this argument indicates where it originated (so that code pages and Carriage Return/Line Feed (CR/LF) can be mapped correctly).</span>
          </span>
          <span data-ttu-id="baafe-164">Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> Konstanten: <b>XlMacintosh</b>, <b>XlWindows</b>oder <b>XlMSDOS</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-164">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> constants: <b>xlMacintosh</b>, <b>xlWindows</b>, or <b>xlMSDOS</b>.</span>
          </span>
          <span data-ttu-id="baafe-165">Wenn dieses Argument ausgelassen wird, wird das aktuelle Betriebssystem verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-165">If this argument is omitted, the current operating system is used.</span>
          </span>
        </param>
        <param name="Delimiter">
          <span data-ttu-id="baafe-166">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-166">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-167">Wenn die Datei eine Textdatei ist, und das Argument <b>Format</b> 6 ist, ist dieses Argument eine Zeichenfolge, die angibt, das Zeichen als Trennzeichen verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-167">If the file is a text file and the <b>Format</b> argument is 6, this argument is a string that specifies the character to be used as the delimiter.</span>
          </span>
          <span data-ttu-id="baafe-168">Zum Beispiel Chr(9) für Tabstopps, "," für Kommas, ";" für Semikolons oder ein benutzerdefiniertes Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-168">For example, use Chr(9) for tabs, use "," for commas, use ";" for semicolons, or use a custom character.</span>
          </span>
          <span data-ttu-id="baafe-169">Es wird nur das erste Zeichen der Zeichenfolge verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-169">Only the first character of the string is used.</span>
          </span>
        </param>
        <param name="Editable">
          <span data-ttu-id="baafe-170">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-170">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-171">Wenn die Datei ein Microsoft Excel 4.0-Add-in ist, ist dieses Argument <b>true,</b> öffnen Sie das Add-in, damit es einem sichtbaren Fenster erstellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-171">If the file is a Microsoft Excel 4.0 add-in, this argument is <b>True</b> to open the add-in so that it’s a visible window.</span>
          </span>
          <span data-ttu-id="baafe-172">Wenn dieses Argument <b>False</b> ist oder weggelassen, das Add-in als geöffnet wird ausgeblendet, und es kann nicht eingeblendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-172">If this argument is <b>False</b> or omitted, the add-in is opened as hidden, and it cannot be unhidden.</span>
          </span>
          <span data-ttu-id="baafe-173">Diese Option gilt nicht für add-ins in Microsoft Excel 5.0 oder höher erstellte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-173">This option doesn't apply to add-ins created in Microsoft Excel 5.0 or later.</span>
          </span>
          <span data-ttu-id="baafe-174">Wenn die Datei eine Excel-Vorlage ist, verwenden Sie <b>True</b> , um die angegebene Vorlage zur Bearbeitung zu öffnen oder <b>False</b> , wenn eine neue Arbeitsmappe basierend auf der angegebenen Vorlage geöffnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-174">If the file is an Excel template, use <b>True</b> to open the specified template for editing or <b>False</b> to open a new workbook based on the specified template.</span>
          </span>
          <span data-ttu-id="baafe-175">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-175">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Notify">
          <span data-ttu-id="baafe-176">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-176">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-177">Wenn die Datei im Lese-/Schreibmodus geöffnet werden kann, ist dieses Argument <b>True</b> , wenn die Datei zur Benachrichtigungsliste hinzuzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-177">If the file cannot be opened in read/write mode, this argument is <b>True</b> to add the file to the file notification list.</span>
          </span>
          <span data-ttu-id="baafe-178">Microsoft Excel wird öffnen Sie die Datei als schreibgeschützt, Benachrichtigungsliste Abfragen und benachrichtigt dann den Benutzer aus, wenn die Datei zur Verfügung steht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-178">Microsoft Excel will open the file as read-only, poll the file notification list, and then notify the user when the file becomes available.</span>
          </span>
          <span data-ttu-id="baafe-179">Wenn dieses Argument den Wert <b>False</b> oder nicht angegeben, wird keine Benachrichtigung angefordert, und alle Versuche zum Öffnen einer Datei nicht verfügbar schlägt fehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-179">If this argument is <b>False</b> or omitted, no notification is requested, and any attempts to open an unavailable file will fail.</span>
          </span>
        </param>
        <param name="Converter">
          <span data-ttu-id="baafe-180">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-180">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-181">Der Index des ersten Dateikonverters, versuchen Sie es beim Öffnen der Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-181">The index of the first file converter to try when opening the file.</span>
          </span>
          <span data-ttu-id="baafe-182">Der angegebene Dateikonverter wird zuerst verwendet. Wenn dieser Konverter die Datei nicht erkannt wird, werden alle anderen Konverter getestet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-182">The specified file converter is tried first; if this converter doesn’t recognize the file, all other converters are tried.</span>
          </span>
          <span data-ttu-id="baafe-183">Der Index des Konvertierungsprogramms umfasst die Zeilennummern zurückgegeben, indem die <see cref="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" /> Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-183">The converter index consists of the row numbers of the converters returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.FileConverters(System.Object,System.Object)" /> property.</span>
          </span>
        </param>
        <param name="AddToMru">
          <span data-ttu-id="baafe-184">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-184">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-185">
            <b>True</b> zum Hinzufügen dieser Arbeitsmappe zur Liste der zuletzt verwendeten Dateien.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-185">
              <b>True</b> to add this workbook to the list of recently used files.</span>
          </span>
          <span data-ttu-id="baafe-186">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-186">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Local">
          <span data-ttu-id="baafe-187">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-187">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-188">
            <b>True,</b> speichert Dateien in der Sprache von Microsoft Excel (einschließlich der Einstellungen für den Dokumentinformationsbereich Control).</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-188">
              <b>True</b> saves files against the language of Microsoft Excel (including control panel settings).</span>
          </span>
          <span data-ttu-id="baafe-189">
            <b>"False"</b> (Standard) speichert Dateien in der Sprache von Visual Basic für Applikationen (VBA) (die in der Regel Englisch (USA) ist, es sei denn, das VBA-Projekt, in dem Workbooks.Open ausgeführt wird, ein altes internationalen XL5/95 VBA-Projekt).</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-189">
              <b>False</b> (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</span>
          </span>
        </param>
        <param name="CorruptLoad">
          <span data-ttu-id="baafe-190">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-190">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-191">Kann eine der folgenden Konstanten sein: <b>XlNormalLoad</b>, <b>XlRepairFile</b>und <b>XlExtractData</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-191">Can be one of the following constants: <b>xlNormalLoad</b>, <b>xlRepairFile</b>, and <b>xlExtractData</b>.</span>
          </span>
          <span data-ttu-id="baafe-192">Das Standardverhalten, wenn kein Wert angegeben ist in der Regel normal, aber möglicherweise sichere laden oder Daten Wiederherstellung aus, wenn Excel zum Öffnen der Datei bereits versucht hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-192">The default behavior if no value is specified is usually normal, but may be safe load or data recovery if Excel has already attempted to open the file.</span>
          </span>
          <span data-ttu-id="baafe-193">Beim erste Versuch ist normal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-193">The first attempt is normal.</span>
          </span>
          <span data-ttu-id="baafe-194">Wenn Excel beim Öffnen der Datei einstellt, ist die zweite Versuch sicheren Laden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-194">If Excel stops operating while opening the file, the second attempt is safe load.</span>
          </span>
          <span data-ttu-id="baafe-195">Wenn Excel erneut einstellt, wird beim nächste Versuch Wiederherstellung von Daten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-195">If Excel again stops operating, the next attempt is data recovery.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="baafe-196">Öffnet eine Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-196">Opens a workbook.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="baafe-197">Standardmäßig werden Makros beim programmgesteuerten Öffnen von Dateien aktiviert.</span>
            <span class="sxs-lookup">
              <span data-stu-id="baafe-197">By default, macros are enabled when opening files programmatically.</span>
            </span>
            <span data-ttu-id="baafe-198">Verwendung der <see cref="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" /> -Eigenschaft auf den Makro-Sicherheitsmodus verwendet beim programmgesteuerten Öffnen von Dateien festlegen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="baafe-198">Use the <see cref="P:Microsoft.Office.Interop.Excel._Application.AutomationSecurity" /> property to set the macro security mode used when opening files programmatically.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenDatabase">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook OpenDatabase (string Filename, object CommandText, object CommandType, object BackgroundQuery, object ImportDataAs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook OpenDatabase([in]string Filename, [in]object CommandText, [in]object CommandType, [in]object BackgroundQuery, [in]object ImportDataAs) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenDatabase(System.String,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenDatabase (Filename As String, Optional CommandText As Object, Optional CommandType As Object, Optional BackgroundQuery As Object, Optional ImportDataAs As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2067)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="CommandText" Type="System.Object" />
        <Parameter Name="CommandType" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="ImportDataAs" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="baafe-199">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-199">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="baafe-200">Die Verbindungszeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-200">The connection string.</span>
          </span>
        </param>
        <param name="CommandText">
          <span data-ttu-id="baafe-201">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-201">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-202">Der Befehlstext der Abfrage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-202">The command text of the query.</span>
          </span>
        </param>
        <param name="CommandType">
          <span data-ttu-id="baafe-203">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-203">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-204">Der Befehlstyp der Abfrage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-204">The command type of the query.</span>
          </span>
          <span data-ttu-id="baafe-205">Die folgende Befehlstypen sind verfügbar: Standard, SQL und Tabelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-205">The following command types are available: Default, SQL, and Table.</span>
          </span>
        </param>
        <param name="BackgroundQuery">
          <span data-ttu-id="baafe-206">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-206">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-207">Der Hintergrund der Abfrage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-207">The background of the query.</span>
          </span>
        </param>
        <param name="ImportDataAs">
          <span data-ttu-id="baafe-208">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-208">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-209">Bestimmt das Format der Abfrage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-209">Determines the format of the query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="baafe-210">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> -Objekt, das eine Datenbank darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-210">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object representing a database.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenText">
      <MemberSignature Language="C#" Value="public void OpenText (string Filename, object Origin, object StartRow, object DataType, Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, object ConsecutiveDelimiter, object Tab, object Semicolon, object Comma, object Space, object Other, object OtherChar, object FieldInfo, object TextVisualLayout, object DecimalSeparator, object ThousandsSeparator, object TrailingMinusNumbers, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenText([in]string Filename, [in]object Origin, [in]object StartRow, [in]object DataType, [in]valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextQualifier, [in]object ConsecutiveDelimiter, [in]object Tab, [in]object Semicolon, [in]object Comma, [in]object Space, [in]object Other, [in]object OtherChar, [in]object FieldInfo, [in]object TextVisualLayout, [in]object DecimalSeparator, [in]object ThousandsSeparator, [in]object TrailingMinusNumbers, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenText(System.String,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlTextQualifier,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenText (Filename As String, Optional Origin As Object, Optional StartRow As Object, Optional DataType As Object, Optional TextQualifier As XlTextQualifier = Microsoft.Office.Interop.Excel.XlTextQualifier.xlTextQualifierDoubleQuote, Optional ConsecutiveDelimiter As Object, Optional Tab As Object, Optional Semicolon As Object, Optional Comma As Object, Optional Space As Object, Optional Other As Object, Optional OtherChar As Object, Optional FieldInfo As Object, Optional TextVisualLayout As Object, Optional DecimalSeparator As Object, Optional ThousandsSeparator As Object, Optional TrailingMinusNumbers As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1924)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(18)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Origin" Type="System.Object" />
        <Parameter Name="StartRow" Type="System.Object" />
        <Parameter Name="DataType" Type="System.Object" />
        <Parameter Name="TextQualifier" Type="Microsoft.Office.Interop.Excel.XlTextQualifier" />
        <Parameter Name="ConsecutiveDelimiter" Type="System.Object" />
        <Parameter Name="Tab" Type="System.Object" />
        <Parameter Name="Semicolon" Type="System.Object" />
        <Parameter Name="Comma" Type="System.Object" />
        <Parameter Name="Space" Type="System.Object" />
        <Parameter Name="Other" Type="System.Object" />
        <Parameter Name="OtherChar" Type="System.Object" />
        <Parameter Name="FieldInfo" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="DecimalSeparator" Type="System.Object" />
        <Parameter Name="ThousandsSeparator" Type="System.Object" />
        <Parameter Name="TrailingMinusNumbers" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="baafe-211">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-211">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="baafe-212">Gibt den Dateinamen der zu öffnenden und analysierenden Textdatei an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-212">Specifies the file name of the text file to be opened and parsed.</span>
          </span>
        </param>
        <param name="Origin">
          <span data-ttu-id="baafe-213">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-213">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-214">Gibt den Ursprung der Textdatei an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-214">Specifies the origin of the text file.</span>
          </span>
          <span data-ttu-id="baafe-215">Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> Konstanten: <b>XlMacintosh</b>, <b>XlWindows</b>oder <b>XlMSDOS</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-215">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" /> constants: <b>xlMacintosh</b>, <b>xlWindows</b>, or <b>xlMSDOS</b>.</span>
          </span>
          <span data-ttu-id="baafe-216">Darüber hinaus kann eine Ganzzahl für die Seitenzahl Code, der die gewünschte Codepage handeln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-216">Additionally, this could be an integer representing the code page number of the desired code page.</span>
          </span>
          <span data-ttu-id="baafe-217">Beispielsweise würde "1256" angeben, dass die Codierung der Quelldatei Arabisch (Windows) ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-217">For example, "1256" would specify that the encoding of the source text file is Arabic (Windows).</span>
          </span>
          <span data-ttu-id="baafe-218">Wenn dieses Argument nicht angegeben ist, verwendet die Methode die aktuelle Einstellung der Option Dateiursprung im <b>Textimport-Assistent</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-218">If this argument is omitted, the method uses the current setting of the File Origin option in the <b>Text Import Wizard</b>.</span>
          </span>
        </param>
        <param name="StartRow">
          <span data-ttu-id="baafe-219">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-219">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-220">Die Nummer der Zeile an dem mit dem Analysieren von Text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-220">The row number at which to start parsing text.</span>
          </span>
          <span data-ttu-id="baafe-221">Der Standardwert ist 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-221">The default value is 1.</span>
          </span>
        </param>
        <param name="DataType">
          <span data-ttu-id="baafe-222">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-222">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-223">Gibt das Spaltenformat der Daten in der Datei an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-223">Specifies the column format of the data in the file.</span>
          </span>
          <span data-ttu-id="baafe-224">Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" /> Konstanten: <b>XlDelimited</b> oder <b>XlFixedWidth</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-224">Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" /> constants: <b>xlDelimited</b> or <b>xlFixedWidth</b>.</span>
          </span>
          <span data-ttu-id="baafe-225">Wenn dieses Argument nicht angegeben wird, versucht Microsoft Excel das Spaltenformat zu bestimmen, wann die Datei geöffnet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-225">If this argument is not specified, Microsoft Excel attempts to determine the column format when it opens the file.</span>
          </span>
        </param>
        <param name="TextQualifier">
          <span data-ttu-id="baafe-226">Optionale <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-226">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />.</span>
          </span>
          <span data-ttu-id="baafe-227">Gibt den Textbezeichner an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-227">Specifies the text qualifier.</span>
          </span>
          <span data-ttu-id="baafe-228">Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> Konstanten. <b>xlTextQualifierDoubleQuote</b><paramref name="default" /><b>XlTextQualifierNone</b><b>XlTextQualifierSingleQuote</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-228">Can be one of these <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" /> constants.<b>xlTextQualifierDoubleQuote</b><paramref name="default" /><b>xlTextQualifierNone</b><b>xlTextQualifierSingleQuote</b></span>
          </span>
        </param>
        <param name="ConsecutiveDelimiter">
          <span data-ttu-id="baafe-229">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-229">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-230">
            <b>True</b> , wenn aufeinander folgende Trennzeichen als ein Trennzeichen betrachtet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-230">
              <b>True</b> to have consecutive delimiters considered one delimiter.</span>
          </span>
          <span data-ttu-id="baafe-231">Der Standardwert ist <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-231">The default is <b>False</b>.</span>
          </span>
        </param>
        <param name="Tab">
          <span data-ttu-id="baafe-232">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-232">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-233">True, wenn das Tabulatorzeichen als Trennzeichen (<paramref name="DataType" /><b>müssen xlDelimited</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-233">True to have the tab character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span>
          </span>
          <span data-ttu-id="baafe-234">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-234">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Semicolon">
          <span data-ttu-id="baafe-235">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-235">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-236">
            <b>True</b> , wenn das Semikolon als Trennzeichen werden (<paramref name="DataType" /><b>müssen xlDelimited</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-236">
              <b>True</b> to have the semicolon character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span>
          </span>
          <span data-ttu-id="baafe-237">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-237">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Comma">
          <span data-ttu-id="baafe-238">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-238">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-239">
            <b>True</b> , wenn das Kommazeichen ist das Trennzeichen (<paramref name="DataType" /><b>müssen xlDelimited</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-239">
              <b>True</b> to have the comma character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span>
          </span>
          <span data-ttu-id="baafe-240">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-240">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Space">
          <span data-ttu-id="baafe-241">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-241">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-242">
            <b>True</b> , wenn das Leerzeichen als Trennzeichen werden (<paramref name="DataType" /><b>müssen xlDelimited</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-242">
              <b>True</b> to have the space character be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span>
          </span>
          <span data-ttu-id="baafe-243">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-243">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Other">
          <span data-ttu-id="baafe-244">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-244">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-245">
            <b>True</b> , wenn das angegebene Zeichen von der <paramref name="OtherChar" /> Argument ist das Trennzeichen (<paramref name="DataType" /><b>müssen xlDelimited</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-245">
              <b>True</b> to have the character specified by the <paramref name="OtherChar" /> argument be the delimiter (<paramref name="DataType" /> must be <b>xlDelimited</b>).</span>
          </span>
          <span data-ttu-id="baafe-246">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-246">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="OtherChar">
          <span data-ttu-id="baafe-247">Optionales- <b>Objekt</b> (erforderlich, wenn <paramref name="Other" /><b>True</b>ist).</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-247">Optional <b>Object</b> (required if <paramref name="Other" /> is <b>True</b>).</span>
          </span>
          <span data-ttu-id="baafe-248">Gibt das Trennzeichen an, wann Zeichen <paramref name="Other" /> ist <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-248">Specifies the delimiter character when <paramref name="Other" /> is <b>True</b>.</span>
          </span>
          <span data-ttu-id="baafe-249">Wenn mehr als ein Zeichen angegeben wird nur das erste Zeichen der Zeichenfolge; die verbleibenden Zeichen werden ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-249">If more than one character is specified, only the first character of the string is used; the remaining characters are ignored.</span>
          </span>
        </param>
        <param name="FieldInfo">
          <span data-ttu-id="baafe-250">Optionale <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-250">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlColumnDataType" />.</span>
          </span>
          <span data-ttu-id="baafe-251">Ein Array mit Informationen für einzelne Spalten von Daten zu analysieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-251">An array containing parse information for individual columns of data.</span>
          </span>
          <span data-ttu-id="baafe-252">Die Interpretation hängt vom Wert der <paramref name="DataType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-252">The interpretation depends on the value of <paramref name="DataType" />.</span>
          </span>
          <span data-ttu-id="baafe-253">Wenn die Daten getrennt sind, ist dieses Argument ein Array von Arrays mit jeder Matrix mit zwei Elementen, die Konvertierungsoptionen für eine bestimmte Spalte angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-253">When the data is delimited, this argument is an array of two-element arrays, with each two-element array specifying the conversion options for a particular column.</span>
          </span>
          <span data-ttu-id="baafe-254">Das erste Element ist die Spaltennummer (1-basiert), und das zweite Element ist eine der<b>XlColumnDataType</b> -Konstanten angeben, wie die Spalte analysiert wird. <b>xlGeneralFormat</b> Allgemeine<b>XlTextFormat</b> Text<b>XlMDYFormat</b> MTJ Datum<b>XlDMYFormat</b> TMJ Datum<b>XlYMDFormat</b> JMT Datum<b>XlMYDFormat</b> MJT Datum<b>XlDYMFormat</b> TJM Datum<b>XlYDMFormat</b> JTM Datum<b>XlEMDFormat</b> EMD Datum <b>xlSkipColumn</b> Skip ColumnYou können <b>XlEMDFormat</b> nur, wenn Sie installiert und Taiwan sprachunterstützung ausgewählt haben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-254">The first element is the column number (1-based), and the second element is one of the<b>XlColumnDataType</b> constants specifying how the column is parsed.<b>xlGeneralFormat</b> General<b>xlTextFormat</b> Text<b>xlMDYFormat</b> MDY date<b>xlDMYFormat</b> DMY date<b>xlYMDFormat</b> YMD date<b>xlMYDFormat</b> MYD date<b>xlDYMFormat</b> DYM date<b>xlYDMFormat</b> YDM date<b>xlEMDFormat</b> EMD date<b>xlSkipColumn</b> Skip ColumnYou can use <b>xlEMDFormat</b> only if you have installed and selected Taiwanese language support.</span>
          </span>
          <span data-ttu-id="baafe-255">Die <b>XlEMDFormat</b> -Konstante gibt an, dass Kalenderangaben verwendet werden. Der Spaltenbezeichner können in beliebiger Reihenfolge entsprechen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-255">The <b>xlEMDFormat</b> constant specifies that Taiwanese era dates are being used.The column specifiers can be in any order.</span>
          </span>
          <span data-ttu-id="baafe-256">Wenn keine Spaltenbezeichner für eine bestimmte Spalten in den Eingabedaten vorhanden ist, wird die Spalte mit der Einstellung Standard analysiert. <b>Notizen</b> Wenn Sie angeben, dass eine Spalte übersprungen werden soll, müssen Sie ausdrücklich den Typ für alle übrigen Spalten oder die Daten sonst nicht korrekt analysiert werden. Liegt ein erkennbare Datum in den Daten, wird die Zelle als Datum im Arbeitsblatt formatiert werden, auch wenn die Einstellung für die Spalte "Allgemein".</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-256">If there's no column specifier for a particular column in the input data, the column is parsed with the General setting.<b>Notes</b>If you specify that a column is to be skipped, you must explicitly state the type for all remaining columns or the data will not parse correctly.If there is a recognizable date in the data, the cell will be formatted as a date in the worksheet even if the setting for the column is General.</span>
          </span>
          <span data-ttu-id="baafe-257">Darüber hinaus hat, wenn Sie einen der oben genannten Datumsformate für eine Spalte angeben, und die Daten enthält keine bekanntes Datum, und klicken Sie dann das Format für die Zelle im Arbeitsblatt General.If werden die Quelldaten Spalten mit fester Breite, das erste Element in jeder Matrix mit zwei Elementen Gibt die Position des ersten Zeichens in der Spalte (als ganze Zahl; 0 (null) ist das erste Zeichen).</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-257">Additionally, if you specify one of the above date formats for a column and the data does not contain a recognized date, then the cell format in the worksheet will be General.If the source data has fixed-width columns, the first element in each two-element array specifies the position of the starting character in the column (as an integer; character 0 (zero) is the first character).</span>
          </span>
          <span data-ttu-id="baafe-258">Das zweite Element in der Matrix mit zwei Elementen gibt die Parse-Option für die Spalte als Zahl zwischen 0 und 9, wie in der obigen Tabelle aufgeführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-258">The second element in the two-element array specifies the parse option for the column as a number between 0 and 9, as listed in the preceding table.</span>
          </span>
        </param>
        <param name="TextVisualLayout">
          <span data-ttu-id="baafe-259">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-259">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-260">Das visuelle Layout des Textes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-260">The visual layout of the text.</span>
          </span>
        </param>
        <param name="DecimalSeparator">
          <span data-ttu-id="baafe-261">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-261">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-262">Das Dezimaltrennzeichen, das Microsoft Excel beim Erkennen von Zahlen verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-262">The decimal separator that Microsoft Excel uses when recognizing numbers.</span>
          </span>
          <span data-ttu-id="baafe-263">Die Standardeinstellung ist die Systemeinstellung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-263">The default setting is the system setting.</span>
          </span>
        </param>
        <param name="ThousandsSeparator">
          <span data-ttu-id="baafe-264">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-264">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-265">Das Tausendertrennzeichen Trennzeichen, das Excel beim Erkennen von Zahlen verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-265">The thousands separator that Excel uses when recognizing numbers.</span>
          </span>
          <span data-ttu-id="baafe-266">Die Standardeinstellung ist die Systemeinstellung. Die folgende Tabelle zeigt die Ergebnisse des Importierens von Text in Excel für verschiedene importeinstellungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-266">The default setting is the system setting.The following table shows the results of importing text into Excel for various import settings.</span>
          </span>
          <span data-ttu-id="baafe-267">Numerische Ergebnisse werden in der Spalte ganz rechts angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-267">Numeric results are displayed in the rightmost column.</span>
          </span>
        </param>
        <param name="TrailingMinusNumbers">
          <span data-ttu-id="baafe-268">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-268">Optional <b>Object</b>.</span>
          </span>
        </param>
        <param name="Local">
          <span data-ttu-id="baafe-269">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-269">Optional <b>Object</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="baafe-270">Lädt und analysiert eine Textdatei als eine neue Arbeitsmappe mit einem einzelnen Blatt, das die analysierten Textdateidaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-270">Loads and parses a text file as a new workbook with a single sheet that contains the parsed text-file data.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenXML">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Workbook OpenXML (string Filename, object Stylesheets, object LoadOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Workbook OpenXML([in]string Filename, [in]object Stylesheets, [in]object LoadOption) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Workbooks.OpenXML(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenXML (Filename As String, Optional Stylesheets As Object, Optional LoadOption As Object) As Workbook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2280)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Workbook</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Stylesheets" Type="System.Object" />
        <Parameter Name="LoadOption" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="baafe-271">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-271">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="baafe-272">Der Name der Datei, die geöffnet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-272">The name of the file to open.</span>
          </span>
        </param>
        <param name="Stylesheets">
          <span data-ttu-id="baafe-273">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-273">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-274">Ein einzelner Wert oder ein Array von Werten, die angeben, welche XSL-Transformation (XSLT) Style Sheet verarbeitungsanweisungen anwenden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-274">Either a single value or an array of values that specify which XSL Transformation (XSLT) style sheet processing instructions to apply.</span>
          </span>
        </param>
        <param name="LoadOption">
          <span data-ttu-id="baafe-275">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-275">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="baafe-276">Gibt an, wie die XML-Datendatei von Excel geöffnet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-276">Specifies how Excel opens the XML data file.</span>
          </span>
          <span data-ttu-id="baafe-277">Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlXmlLoadOption" /> Konstanten:<b>XlXmlLoadImportToList</b> platziert den Inhalt der XML-Datendatei in einer XML-Liste. <b>xlXmlLoadMapXml</b> Zeigt das Schema der XML-Datendatei im Aufgabenbereich <b>XML-Struktur</b> an. <b>xlXmlLoadOpenXml</b> Öffnet die XML-Datendatei an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-277">Can be one of these <see cref="T:Microsoft.Office.Interop.Excel.XlXmlLoadOption" /> constants:<b>xlXmlLoadImportToList</b> Places the contents of the XML data file in an XML list.<b>xlXmlLoadMapXml</b> Displays the schema of the XML data file in the <b>XML Structure</b> task pane.<b>xlXmlLoadOpenXml</b> Opens the XML data file.</span>
          </span>
          <span data-ttu-id="baafe-278">Der Inhalt der Datei werden vereinfacht. <b>xlXmlLoadPromptUser</b> Fordert den Benutzer, wie die Datei geöffnet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-278">The contents of the file will be flattened.<b>xlXmlLoadPromptUser</b> Prompts the user to choose how to open the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="baafe-279">Öffnet eine XML-Datendatei an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-279">Opens an XML data file.</span>
          </span>
          <span data-ttu-id="baafe-280">Gibt eine <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-280">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="baafe-281">XML-Features, außer das Speichern von Dateien im XML-Tabellenformat stehen nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003.</span>
            <span class="sxs-lookup">
              <span data-stu-id="baafe-281">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Workbooks.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="baafe-p153">Gibt das übergeordnete Objekt für das angegebene Objekt zurück. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="baafe-p153">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>