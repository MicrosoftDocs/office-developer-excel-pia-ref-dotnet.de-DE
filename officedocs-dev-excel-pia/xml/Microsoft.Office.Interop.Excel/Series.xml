<Type Name="Series" FullName="Microsoft.Office.Interop.Excel.Series">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3a8cc36d1324ac7595cb7a40f82c526876f56ea7" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20574830" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Series" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Series" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Series" />
  <TypeSignature Language="VB.NET" Value="Public Interface Series" />
  <TypeSignature Language="C++ CLI" Value="public interface class Series" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002086B-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="edd37-101">Stellt eine Datenreihe in einem Diagramm dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="edd37-101">Represents a series in a chart.</span>
      </span>
      <span data-ttu-id="edd37-102">Das <b>Series</b> -Objekt ist ein Mitglied der <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> Auflistung.</span>
      <span class="sxs-lookup">
        <span data-stu-id="edd37-102">The <b>Series</b> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.SeriesCollection" /> collection.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_ApplyDataLabels">
      <MemberSignature Language="C#" Value="public object _ApplyDataLabels (Microsoft.Office.Interop.Excel.XlDataLabelsType Type = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, object LegendKey, object AutoText, object HasLeaderLines);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _ApplyDataLabels([in]valuetype Microsoft.Office.Interop.Excel.XlDataLabelsType Type, [in]object LegendKey, [in]object AutoText, [in]object HasLeaderLines) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series._ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _ApplyDataLabels (Optional Type As XlDataLabelsType = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, Optional LegendKey As Object, Optional AutoText As Object, Optional HasLeaderLines As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(151)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataLabelsType" />
        <Parameter Name="LegendKey" Type="System.Object" />
        <Parameter Name="AutoText" Type="System.Object" />
        <Parameter Name="HasLeaderLines" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">To be added.</param>
        <param name="LegendKey">To be added.</param>
        <param name="AutoText">To be added.</param>
        <param name="HasLeaderLines">To be added.</param>
        <summary>
          <span data-ttu-id="edd37-103">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-103">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-104">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> -Objekt, das die Anwendung Microsoft Excel darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-104">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="edd37-105">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-105">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyCustomType">
      <MemberSignature Language="C#" Value="public void ApplyCustomType (Microsoft.Office.Interop.Excel.XlChartType ChartType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyCustomType([in]valuetype Microsoft.Office.Interop.Excel.XlChartType ChartType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.ApplyCustomType(Microsoft.Office.Interop.Excel.XlChartType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyCustomType (ChartType As XlChartType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyCustomType(Microsoft::Office::Interop::Excel::XlChartType ChartType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1401)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ChartType" Type="Microsoft.Office.Interop.Excel.XlChartType" />
      </Parameters>
      <Docs>
        <param name="ChartType">
          <span data-ttu-id="edd37-106">Erforderliche <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-106">Required <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          </span>
          <span data-ttu-id="edd37-107">Einen Standarddiagrammtyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-107">A standard chart type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edd37-108">Weist einer Datenreihe einen Standarddiagrammtyp oder einen benutzerdefinierten Diagrammtyp zu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-108">Applies a standard or custom chart type to a series.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDataLabels">
      <MemberSignature Language="C#" Value="public object ApplyDataLabels (Microsoft.Office.Interop.Excel.XlDataLabelsType Type = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, object LegendKey, object AutoText, object HasLeaderLines, object ShowSeriesName, object ShowCategoryName, object ShowValue, object ShowPercentage, object ShowBubbleSize, object Separator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ApplyDataLabels([in]valuetype Microsoft.Office.Interop.Excel.XlDataLabelsType Type, [in]object LegendKey, [in]object AutoText, [in]object HasLeaderLines, [in]object ShowSeriesName, [in]object ShowCategoryName, [in]object ShowValue, [in]object ShowPercentage, [in]object ShowBubbleSize, [in]object Separator) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyDataLabels (Optional Type As XlDataLabelsType = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, Optional LegendKey As Object, Optional AutoText As Object, Optional HasLeaderLines As Object, Optional ShowSeriesName As Object, Optional ShowCategoryName As Object, Optional ShowValue As Object, Optional ShowPercentage As Object, Optional ShowBubbleSize As Object, Optional Separator As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1922)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataLabelsType" />
        <Parameter Name="LegendKey" Type="System.Object" />
        <Parameter Name="AutoText" Type="System.Object" />
        <Parameter Name="HasLeaderLines" Type="System.Object" />
        <Parameter Name="ShowSeriesName" Type="System.Object" />
        <Parameter Name="ShowCategoryName" Type="System.Object" />
        <Parameter Name="ShowValue" Type="System.Object" />
        <Parameter Name="ShowPercentage" Type="System.Object" />
        <Parameter Name="ShowBubbleSize" Type="System.Object" />
        <Parameter Name="Separator" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="edd37-109">Optionale <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-109">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType" />.</span>
          </span>
          <span data-ttu-id="edd37-110">Der anzuwendende Datenbeschriftungstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-110">The type of data label to apply.</span>
          </span>
        </param>
        <param name="LegendKey">
          <span data-ttu-id="edd37-111">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-111">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="edd37-112">
            <b>True</b>, wenn die Legende neben dem Datenpunkt anzeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-112">
              <b>True</b> to show the legend key next to the point.</span>
          </span>
          <span data-ttu-id="edd37-113">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-113">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AutoText">
          <span data-ttu-id="edd37-114">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-114">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="edd37-115">
            <b>True,</b> Wenn das Objekt automatisch basierend auf dem Inhalt angemessenen Text generiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-115">
              <b>True</b> if the object automatically generates appropriate text based on content.</span>
          </span>
        </param>
        <param name="HasLeaderLines">
          <span data-ttu-id="edd37-116">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-116">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="edd37-117">Für die <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> und <see cref="T:Microsoft.Office.Interop.Excel.Series" /> Objekte, <b>true,</b> Wenn die Datenreihe Führungslinien aufweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-117">For the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> and <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objects, <b>True</b> if the series has leader lines.</span>
          </span>
        </param>
        <param name="ShowSeriesName">
          <span data-ttu-id="edd37-118">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-118">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="edd37-119">Den Datenreihennamen für die Datenbeschriftung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-119">The series name for the data label.</span>
          </span>
        </param>
        <param name="ShowCategoryName">
          <span data-ttu-id="edd37-120">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-120">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="edd37-121">Der Kategoriename für die Datenbeschriftung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-121">The category name for the data label.</span>
          </span>
        </param>
        <param name="ShowValue">
          <span data-ttu-id="edd37-122">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-122">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="edd37-123">Der Wert für die Datenbeschriftung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-123">The value for the data label.</span>
          </span>
        </param>
        <param name="ShowPercentage">
          <span data-ttu-id="edd37-124">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-124">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="edd37-125">Der Prozentsatz für die Datenbeschriftung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-125">The percentage for the data label.</span>
          </span>
        </param>
        <param name="ShowBubbleSize">
          <span data-ttu-id="edd37-126">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-126">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="edd37-127">Die Blasengröße für die Datenbeschriftung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-127">The bubble size for the data label.</span>
          </span>
        </param>
        <param name="Separator">
          <span data-ttu-id="edd37-128">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-128">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="edd37-129">Das Trennzeichen für die Datenbeschriftung</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-129">The separator for the data label.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edd37-130">Weist dem Datenpunkt, der Datenreihe oder allen Datenreihen im Diagramm Datenbeschriftungen zu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-130">Applies data labels to a point, a series, or all the series in a chart.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPictToEnd">
      <MemberSignature Language="C#" Value="public bool ApplyPictToEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyPictToEnd" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.ApplyPictToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyPictToEnd As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyPictToEnd { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1661)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-p114">
            <b>True</b>, wenn eine Grafik dem Ende des Punktes oder aller Punkte der Datenreihe zugeordnet wird. <b>Boolean</b> mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-p114">
              <b>True</b> if a picture is applied to the end of the point or all points in the series. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPictToFront">
      <MemberSignature Language="C#" Value="public bool ApplyPictToFront { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyPictToFront" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.ApplyPictToFront" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyPictToFront As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyPictToFront { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1660)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-p115">
            <b>True</b>, wenn eine Grafik dem Anfang des Punkts oder allen Punkten der Datenreihe zugeordnet wird. <b>Boolean</b> -Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-p115">
              <b>True</b> if a picture is applied to the front of the point or all points in the series. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPictToSides">
      <MemberSignature Language="C#" Value="public bool ApplyPictToSides { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyPictToSides" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.ApplyPictToSides" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyPictToSides As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyPictToSides { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1659)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1659)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1659)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-p116">
            <b>True</b>, wenn den Seiten des Punktes oder aller Punkte der Datenreihe eine Grafik zugeordnet wird. <b>Boolean</b> -Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-p116">
              <b>True</b> if a picture is applied to the sides of the point or all points in the series. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlAxisGroup AxisGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlAxisGroup AxisGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.AxisGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property AxisGroup As XlAxisGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlAxisGroup AxisGroup { Microsoft::Office::Interop::Excel::XlAxisGroup get(); void set(Microsoft::Office::Interop::Excel::XlAxisGroup value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(47)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(47)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(47)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlAxisGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-137">Gibt die Gruppe für der angegebenen Diagrammgruppe oder Datenreihe zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-137">Returns the group for the specified chart group or series.</span>
          </span>
          <span data-ttu-id="edd37-138">Lese-/Schreibzugriff <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-138">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlAxisGroup" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="edd37-139">Für 3D-Diagramme ist nur die Gruppe <b>xlPrimary</b> gültig.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-139">For 3-D charts, only <b>xlPrimary</b> is valid.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BarShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlBarShape BarShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlBarShape BarShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.BarShape" />
      <MemberSignature Language="VB.NET" Value="Public Property BarShape As XlBarShape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlBarShape BarShape { Microsoft::Office::Interop::Excel::XlBarShape get(); void set(Microsoft::Office::Interop::Excel::XlBarShape value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1403)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlBarShape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-140">Gibt an, oder die mit einem 3D-Balkendiagramm oder Säulendiagramm verwendete Form festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-140">Returns or sets the shape used with the 3-D bar or column chart.</span>
          </span>
          <span data-ttu-id="edd37-141">Lese-/Schreibzugriff <see cref="T:Microsoft.Office.Interop.Excel.XlBarShape" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-141">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlBarShape" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Border">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Border Border { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Border Border" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Border" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Border As Border" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Border ^ Border { Microsoft::Office::Interop::Excel::Border ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Border</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-142">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Border" /> -Objekt, das den Rahmen des Objekts darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-142">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BubbleSizes">
      <MemberSignature Language="C#" Value="public object BubbleSizes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BubbleSizes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.BubbleSizes" />
      <MemberSignature Language="VB.NET" Value="Public Property BubbleSizes As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BubbleSizes { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1664)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1664)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1664)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-143">Zurückgeben oder festlegen eine Zeichenfolge, die auf Zellen des Arbeitsblatts mit den Größenangaben für das Blasendiagramm bezieht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-143">Returns or sets a string that refers to the worksheet cells containing the size data for the bubble chart.</span>
          </span>
          <span data-ttu-id="edd37-144">Gilt nur für Blasendiagramme verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-144">Applies only to bubble charts.</span>
          </span>
          <span data-ttu-id="edd37-145">Lese-Schreib- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-145">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="edd37-146">Wenn Sie den Zellbezug zurückgeben, wird eine Zeichenfolge, die die Zellen in der A1-Schreibweise beschreibt zurückgegeben.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-146">When you return the cell reference, it will return a string describing the cells in A1-style notation.</span>
            </span>
            <span data-ttu-id="edd37-147">Wenn die der Größendaten für das Blasendiagramm festlegen möchten, müssen Sie die R1-Schreibweise verwenden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-147">To set the size data for the bubble chart, you must use R1-style notation.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlChartType ChartType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlChartType ChartType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.ChartType" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartType As XlChartType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlChartType ChartType { Microsoft::Office::Interop::Excel::XlChartType get(); void set(Microsoft::Office::Interop::Excel::XlChartType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1400)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1400)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1400)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlChartType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-148">Gibt den Diagrammtyp zurück oder legt ihn fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-148">Returns or sets the chart type.</span>
          </span>
          <span data-ttu-id="edd37-149">Lese-/Schreibzugriff <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-149">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlChartType" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="edd37-150">Einige Diagrammtypen sind für PivotChart-Berichte nicht verfügbar.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-150">Some chart types aren’t available for PivotChart reports.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFormats">
      <MemberSignature Language="C#" Value="public object ClearFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearFormats() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.ClearFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearFormats () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearFormats();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="edd37-151">Löscht die Formatierung des Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-151">Clears the formatting of the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public object Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Copy() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="edd37-152">Kopiert das Objekt in die Zwischenablage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-152">Copies the object to the Clipboard.</span>
          </span>
          <span data-ttu-id="edd37-153">Kopiert ein Bild des Datenpunkts oder der Datenreihe in die Zwischenablage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-153">Copies a picture of the point or series to the Clipboard.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-154">Gibt eine 32-Bit-Ganzzahl, die die Anwendung angibt, in der das Objekt erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-154">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="edd37-155">Wenn das Objekt in Microsoft Excel erstellt wurde, gibt diese Eigenschaft die Zeichenfolge XCEL zurück, dies entspricht die hexadezimale Zahl 5843454 c ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-155">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="edd37-156">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-156">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="edd37-157">Die <b>Creator</b> -Eigenschaft ist in Microsoft Excel für den Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen verfügt über entwickelt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-157">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="edd37-158">Der Erstellercode von Microsoft Excel lautet beispielsweise XCEL zurück.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-158">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLabels">
      <MemberSignature Language="C#" Value="public object DataLabels (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object DataLabels([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.DataLabels(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DataLabels (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(157)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="edd37-159">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-159">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="edd37-160">Die Nummer der Datenbeschriftung</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-160">The number of the data label.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edd37-161">Gibt ein Objekt, das entweder eine einzelne Datenbeschriftung (ein <see cref="T:Microsoft.Office.Interop.Excel.DataLabel" /> Objekt) oder eine Auflistung aller datenbeschriftungen der Datenreihe (ein <see cref="T:Microsoft.Office.Interop.Excel.DataLabels" /> Auflistung).</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-161">Returns an object that represents either a single data label (a <see cref="T:Microsoft.Office.Interop.Excel.DataLabel" /> object) or a collection of all the data labels for the series (a <see cref="T:Microsoft.Office.Interop.Excel.DataLabels" /> collection).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="edd37-p126">Wenn die Option <b>Werte anzeigen</b> für die Datenreihe eingeschaltet ist, kann die zurückgegebene Auflistung nur maximal eine Datenbeschriftung je Punkt erhalten. Die Datenbeschriftungen können für einzelne Punkte der Datenreihe ein- oder ausgeschaltet werden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-p126">If the series has the <b>Show Value</b> option turned on for the data labels, the returned collection can contain up to one label for each point. Data labels can be turned on or off for individual points in the series.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="edd37-164">Wenn sich die Datenreihe auf einem Flächendiagramm befindet und die Option <b>Beschriftung anzeigen</b> eingeschaltet ist, enthält die zurückgegebene Auflistung nur eine einzige Beschriftung, und zwar diejenige für die Flächendatenreihe.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-164">If the series is on an area chart and has the <b>Show Label</b> option turned on for the data labels, the returned collection contains only a single label, which is the label for the area series.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public object Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="edd37-165">Löscht das Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-165">Deletes the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="edd37-166">Durch Löschen eines <b>Point</b>- oder <b>LegendKey</b>-Objekts wird die gesamte Datenreihe gelöscht.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-166">Deleting a <b>Point</b> or <b>LegendKey</b> object deletes the entire series.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorBar">
      <MemberSignature Language="C#" Value="public object ErrorBar (Microsoft.Office.Interop.Excel.XlErrorBarDirection Direction, Microsoft.Office.Interop.Excel.XlErrorBarInclude Include, Microsoft.Office.Interop.Excel.XlErrorBarType Type, object Amount, object MinusValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ErrorBar([in]valuetype Microsoft.Office.Interop.Excel.XlErrorBarDirection Direction, [in]valuetype Microsoft.Office.Interop.Excel.XlErrorBarInclude Include, [in]valuetype Microsoft.Office.Interop.Excel.XlErrorBarType Type, [in]object Amount, [in]object MinusValues) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.ErrorBar(Microsoft.Office.Interop.Excel.XlErrorBarDirection,Microsoft.Office.Interop.Excel.XlErrorBarInclude,Microsoft.Office.Interop.Excel.XlErrorBarType,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ErrorBar (Direction As XlErrorBarDirection, Include As XlErrorBarInclude, Type As XlErrorBarType, Optional Amount As Object, Optional MinusValues As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(152)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Direction" Type="Microsoft.Office.Interop.Excel.XlErrorBarDirection" />
        <Parameter Name="Include" Type="Microsoft.Office.Interop.Excel.XlErrorBarInclude" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlErrorBarType" />
        <Parameter Name="Amount" Type="System.Object" />
        <Parameter Name="MinusValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Direction">
          <span data-ttu-id="edd37-167">Erforderliche <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarDirection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-167">Required <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarDirection" />.</span>
          </span>
          <span data-ttu-id="edd37-168">Gibt die Richtung für die Fehlerindikatoren an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-168">The error bar direction.</span>
          </span>
        </param>
        <param name="Include">
          <span data-ttu-id="edd37-169">Erforderliche <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarInclude" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-169">Required <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarInclude" />.</span>
          </span>
          <span data-ttu-id="edd37-170">Gibt die Teile an, die der Fehlerindikator enthalten soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-170">The error bar parts to include.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="edd37-171">Erforderliche <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-171">Required <see cref="T:Microsoft.Office.Interop.Excel.XlErrorBarType" />.</span>
          </span>
          <span data-ttu-id="edd37-172">Gibt den Fehlerindikatortyp an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-172">The error bar type.</span>
          </span>
        </param>
        <param name="Amount">
          <span data-ttu-id="edd37-173">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-173">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="edd37-174">Der Fehlerbetrag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-174">The error amount.</span>
          </span>
          <span data-ttu-id="edd37-175">Nur den positiven Fehlerbetrag zum beim <paramref name="Type" /><b>den Wert XlErrorBarTypeCustom</b>ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-175">Used for only the positive error amount when <paramref name="Type" /> is <b>xlErrorBarTypeCustom</b>.</span>
          </span>
        </param>
        <param name="MinusValues">
          <span data-ttu-id="edd37-176">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-176">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="edd37-177">Der negative Fehlerbetrag beim <paramref name="Type" /><b>den Wert XlErrorBarTypeCustom</b>ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-177">The negative error amount when <paramref name="Type" /> is <b>xlErrorBarTypeCustom</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edd37-178">Wendet Fehlerindikatoren auf die Datenreihe an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-178">Applies error bars to the series.</span>
          </span>
          <span data-ttu-id="edd37-179">- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-179">
              <b>Object</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ErrorBars ErrorBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ErrorBars ErrorBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.ErrorBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorBars As ErrorBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ErrorBars ^ ErrorBars { Microsoft::Office::Interop::Excel::ErrorBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(159)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(159)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ErrorBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-180">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.ErrorBars" /> -Objekt, das die Fehlerindikatoren für die Datenreihe darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-180">Returns an <see cref="T:Microsoft.Office.Interop.Excel.ErrorBars" /> object that represents the error bars for the series.</span>
          </span>
          <span data-ttu-id="edd37-181">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-181">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Explosion">
      <MemberSignature Language="C#" Value="public int Explosion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Explosion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Explosion" />
      <MemberSignature Language="VB.NET" Value="Public Property Explosion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Explosion { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(182)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(182)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(182)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-182">Zurückgeben oder festlegen den Explosionswert für Kreis- oder Ringsegments Segments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-182">Returns or sets the explosion value for a pie-chart or doughnut-chart slice.</span>
          </span>
          <span data-ttu-id="edd37-183">Gibt 0 (null) zurück, wenn keine Explosion vorhanden ist (die Spitze des Segments ist in der Mitte des Diagramms).</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-183">Returns 0 (zero) if there's no explosion (the tip of the slice is in the center of the pie).</span>
          </span>
          <span data-ttu-id="edd37-184">Lese-/Schreibzugriff <b>Integer</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-184">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartFillFormat Fill { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartFillFormat Fill" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Fill" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Fill As ChartFillFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartFillFormat ^ Fill { Microsoft::Office::Interop::Excel::ChartFillFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartFillFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-185">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> -Objekt, das Formateigenschaften für das angegebene Diagramm oder die Form der Füllung enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-185">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object that contains fill formatting properties for the specified chart or shape.</span>
          </span>
          <span data-ttu-id="edd37-186">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-186">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartFormat Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartFormat Format" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Format" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Format As ChartFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartFormat ^ Format { Microsoft::Office::Interop::Excel::ChartFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(116)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(116)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-187">Gibt die <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-187">Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object.</span>
          </span>
          <span data-ttu-id="edd37-188">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-188">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula">
      <MemberSignature Language="C#" Value="public string Formula { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Formula" />
      <MemberSignature Language="VB.NET" Value="Public Property Formula As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-189">Gibt die Formel des Objekts im Format der A1-Schreibweise zurück oder legt sie fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-189">Returns or sets the object's formula in A1-style notation.</span>
          </span>
          <span data-ttu-id="edd37-190">Lese-/Schreibzugriff <b>String</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-190">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="edd37-191">Diese Eigenschaft für OLAP-Datenquellen nicht verfügbar.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-191">This property is not available for OLAP data sources.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="edd37-p138">Wenn die Zelle eine Konstante enthält, gibt diese Eigenschaft eine Konstante zurück. Wenn die Zelle leer ist, gibt diese <b>Formula</b>-Eigenschaft eine leere Zeichenfolge zurück. Wenn die Zelle eine Formel enthält, gibt die <b>Formula</b>-Eigenschaft die Formel als Zeichenfolge zurück, und zwar in dem gleichen Format, in dem sie in der Bearbeitungsleiste angezeigt werden würde (einschließlich des Gleichheitszeichens).</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-p138">If the cell contains a constant, this property returns the constant. If the cell is empty, this <b>Formula</b> property returns an empty string. If the cell contains a formula, the <b>Formula</b> property returns the formula as a string in the same format that would be displayed in the formula bar (including the equal sign).</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="edd37-p139">Wenn Sie den Wert oder die Formel einer Zelle in ein Datum umwandeln, überprüft Microsoft Excel, ob die Zelle bereits mit einem Datums- oder Zeitformat formatiert ist. Ist das nicht der Fall, so wird das Zahlenformat in das kurze Standard-Datumsformat geändert.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-p139">If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, Microsoft Excel changes the number format to the default short date number format.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="edd37-p140">Wenn der Bereich einen ein- oder zweidimensionalen Bereich darstellt, können Sie für die Formel eine Visual Basic-Matrix mit derselben Dimension festlegen. Ebenso können Sie die Formel auch in eine Visual Basic-Matrix einfügen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-p140">If the range is a one- or two-dimensional range, you can set the formula to a Visual Basic array of the same dimensions. Similarly, you can put the formula into a Visual Basic array.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="edd37-199">Beim Festlegen der Formel für einen Bereich mit mehreren Zellen wird die Formel in alle Zellen des Bereichs eingetragen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-199">Setting the formula for a multiple-cell range fills all cells in the range with the formula.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaLocal">
      <MemberSignature Language="C#" Value="public string FormulaLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormulaLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.FormulaLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaLocal As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormulaLocal { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(263)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-200">Gibt zurück oder legt die Formel für das Objekt mit der A1-Bezugsart in der Sprache des Benutzers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-200">Returns or sets the formula for the object using A1-style references in the language of the user.</span>
          </span>
          <span data-ttu-id="edd37-201">Lese-Schreib- <b>Zeichenfolge</b></span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-201">Read/write <b>String</b></span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="edd37-p142">Wenn die Zelle eine Konstante enthält, gibt diese Eigenschaft eine Konstante zurück. Ist die Zelle leer, wird eine leere Zeichenfolge zurückgegeben. Enthält die Zelle eine Formel, wird diese als Zeichenfolge zurückgegeben, und zwar in dem gleichen Format, in dem sie in der Bearbeitungsleiste angezeigt würde (einschließlich Gleichheitszeichen).</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-p142">If the cell contains a constant, this property returns that constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="edd37-p143">Wenn Sie für den Wert oder die Formel einer Zelle ein Datum festlegen, prüft Microsoft Excel, ob die Zelle bereits mit einem der Datums- oder Zeitformate formatiert wurde. Ist dies nicht der Fall, wird das Zahlenformat in das Standardzahlenformat für kurze Datumsangaben geändert.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-p143">If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="edd37-p144">Wenn der Bereich einen ein- oder zweidimensionalen Bereich darstellt, können Sie für die Formel eine Visual Basic-Matrix mit derselben Dimension festlegen. Ebenso können Sie die Formel auch in eine Visual Basic-Matrix einfügen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-p144">If the range is a one- or two-dimensional range, you can set the formula to a Visual Basic array of the same dimensions. Similarly, you can put the formula into a Visual Basic array.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="edd37-209">Durch das Festlegen einer Formel eines mehrere Zellen umfassenden Bereichs werden alle Zellen des Bereichs mit der Formel aufgefüllt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-209">Setting the formula of a multiple-cell range fills all cells in the range with the formula.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaR1C1">
      <MemberSignature Language="C#" Value="public string FormulaR1C1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormulaR1C1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.FormulaR1C1" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaR1C1 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormulaR1C1 { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(264)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-210">Gibt zurück oder legt die Formel für das Objekt unter Verwendung der Z1S1-Schreibweise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-210">Returns or sets the formula for the object using R1C1-style notation.</span>
          </span>
          <span data-ttu-id="edd37-211">Lese-/Schreibzugriff <b>String</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-211">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="edd37-p146">Wenn die Zelle eine Konstante enthält, gibt diese Eigenschaft eine Konstante zurück. Ist die Zelle leer, wird eine leere Zeichenfolge zurückgegeben. Enthält die Zelle eine Formel, wird diese als Zeichenfolge zurückgegeben, und zwar in dem gleichen Format, in dem sie in der Bearbeitungsleiste angezeigt würde (einschließlich Gleichheitszeichen).</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-p146">If the cell contains a constant, this property returns the constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="edd37-p147">Wenn Sie für den Wert oder die Formel einer Zelle ein Datum festlegen, prüft Microsoft Excel, ob die Zelle bereits mit einem der Datums- oder Zeitformate formatiert wurde. Ist dies nicht der Fall, wird das Zahlenformat in das Standardzahlenformat für kurze Datumsangaben geändert.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-p147">If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="edd37-p148">Wenn der Bereich einen ein- oder zweidimensionalen Bereich darstellt, können Sie für die Formel eine Visual Basic-Matrix mit derselben Dimension festlegen. Ebenso können Sie die Formel auch in eine Visual Basic-Matrix einfügen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-p148">If the range is a one- or two-dimensional range, you can set the formula to a Visual Basic array of the same dimensions. Similarly, you can put the formula into a Visual Basic array.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="edd37-219">Durch das Festlegen einer Formel eines mehrere Zellen umfassenden Bereichs werden alle Zellen des Bereichs mit der Formel aufgefüllt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-219">Setting the formula of a multiple-cell range fills all cells in the range with the formula.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaR1C1Local">
      <MemberSignature Language="C#" Value="public string FormulaR1C1Local { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormulaR1C1Local" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.FormulaR1C1Local" />
      <MemberSignature Language="VB.NET" Value="Public Property FormulaR1C1Local As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormulaR1C1Local { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(265)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-p149">Gibt zurück oder legt die Formel für das Objekt unter Verwendung der Z1S1-Schreibweise in der Sprache des Benutzers. Lese-/Schreibzugriff <b>Zeichenfolge</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-p149">Returns or sets the formula for the object, using R1C1-style notation in the language of the user. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="edd37-p150">Wenn die Zelle eine Konstante enthält, gibt diese Eigenschaft eine Konstante zurück. Ist die Zelle leer, wird eine leere Zeichenfolge zurückgegeben. Enthält die Zelle eine Formel, wird diese als Zeichenfolge zurückgegeben, und zwar in dem gleichen Format, in dem sie in der Bearbeitungsleiste angezeigt würde (einschließlich Gleichheitszeichen).</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-p150">If the cell contains a constant, this property returns that constant. If the cell is empty, the property returns an empty string. If the cell contains a formula, the property returns the formula as a string, in the same format in which it would be displayed in the formula bar (including the equal sign).</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="edd37-p151">Wenn Sie für den Wert oder die Formel einer Zelle ein Datum festlegen, prüft Microsoft Excel, ob die Zelle bereits mit einem der Datums- oder Zeitformate formatiert wurde. Ist dies nicht der Fall, wird das Zahlenformat in das Standardzahlenformat für kurze Datumsangaben geändert.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-p151">If you set the value or formula of a cell to a date, Microsoft Excel checks to see whether that cell is already formatted with one of the date or time number formats. If not, the number format is changed to the default short date number format.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="edd37-p152">Wenn der Bereich einen ein- oder zweidimensionalen Bereich darstellt, können Sie für die Formel eine Visual Basic-Matrix mit derselben Dimension festlegen. Ebenso können Sie die Formel auch in eine Visual Basic-Matrix einfügen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-p152">If the range is a one- or two-dimensional range, you can set the formula to a Visual Basic array of the same dimensions. Similarly, you can put the formula into a Visual Basic array.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="edd37-229">Durch das Festlegen einer Formel eines mehrere Zellen umfassenden Bereichs werden alle Zellen des Bereichs mit der Formel aufgefüllt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-229">Setting the formula of a multiple-cell range fills all cells in the range with the formula.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Has3DEffect">
      <MemberSignature Language="C#" Value="public bool Has3DEffect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Has3DEffect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Has3DEffect" />
      <MemberSignature Language="VB.NET" Value="Public Property Has3DEffect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Has3DEffect { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1665)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1665)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1665)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-p153">
            <b>True</b>, wenn die Datenreihen ein dreidimensionales Aussehen haben. Bezieht sich nur auf Blasen-Diagramme. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-p153">
              <b>True</b> if the series has a three-dimensional appearance. Applies only to bubble charts. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDataLabels">
      <MemberSignature Language="C#" Value="public bool HasDataLabels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDataLabels" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.HasDataLabels" />
      <MemberSignature Language="VB.NET" Value="Public Property HasDataLabels As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasDataLabels { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(78)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(78)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(78)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-p154">
            <b>True</b>, wenn die Datenreihe Datenbeschriftungen hat. <b>Boolean</b> -Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-p154">
              <b>True</b> if the series has data labels. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasErrorBars">
      <MemberSignature Language="C#" Value="public bool HasErrorBars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasErrorBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.HasErrorBars" />
      <MemberSignature Language="VB.NET" Value="Public Property HasErrorBars As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasErrorBars { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(160)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(160)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(160)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-235">
            <b>True,</b> Wenn die Datenreihe Fehlerindikatoren aufweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-235">
              <b>True</b> if the series has error bars.</span>
          </span>
          <span data-ttu-id="edd37-236">Diese Eigenschaft ist nicht verfügbar für 3D-Diagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-236">This property isn’t available for 3-D charts.</span>
          </span>
          <span data-ttu-id="edd37-237">
            <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-237">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLeaderLines">
      <MemberSignature Language="C#" Value="public bool HasLeaderLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLeaderLines" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.HasLeaderLines" />
      <MemberSignature Language="VB.NET" Value="Public Property HasLeaderLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasLeaderLines { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1394)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1394)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1394)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-p156">
            <b>True</b>, wenn die Datenreihe Führungslinien besitzt. <b>Boolean</b> -Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-p156">
              <b>True</b> if the series has leader lines. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-240">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> -Objekt, das den Innenbereich des angegebenen Objekts darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-240">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvertColor">
      <MemberSignature Language="C#" Value="public int InvertColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InvertColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.InvertColor" />
      <MemberSignature Language="VB.NET" Value="Public Property InvertColor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InvertColor { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2916)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2916)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2916)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-241">Ruft ab oder legt die Füllfarbe negativer Datenpunkte in einer Reihe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-241">Gets or sets the fill color for negative data points in a series.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="edd37-242">Die Füllfarbe negativer Datenpunkte in einer Reihe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-242">The fill color for negative data points in a series.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="edd37-243">Lese-/Schreibzugriff.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-243">Read/write.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="edd37-244">Die <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" /> Eigenschaft können Sie die Füllfarbe negativer Datenpunkte als eine bestimmte numerischen, hexadezimalen, oktalen oder RGB-Wert festgelegt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-244">The <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" /> property enables you to set the fill color for negative data points as a specific numeric, hexadecimal, octal, or RGB color value.</span>
            </span>
            <span data-ttu-id="edd37-245">Um den Wert als einen RBG-Wert festzulegen, verwenden Sie die Visual Basic <b>RGB</b> -Funktion.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-245">To set the value as an RBG value, use the Visual Basic <b>RGB</b> function.</span>
            </span>
            <span data-ttu-id="edd37-246">Statt der <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" /> -Eigenschaft können Sie die <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> -Eigenschaft, die eine einfachere Reihe von ganzzahligen Werte aus der aktuellen Farbpalette verwendet.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-246">Instead of using the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" /> property, you can use the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> property, which uses a simpler set of integer values from the current color palette.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="edd37-247">Für die <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" />-Eigenschaft wirksam wird, die <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertIfNegative" /> -Eigenschaft des der <see cref="T:Microsoft.Office.Interop.Excel.Series" /> Objekt muss ebenfalls auf <b>true</b>festgelegt werden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-247">For the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" />property to have an effect, the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertIfNegative" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Series" /> object must also be set to <b>true</b>.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvertColorIndex">
      <MemberSignature Language="C#" Value="public int InvertColorIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InvertColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property InvertColorIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InvertColorIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2917)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2917)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2917)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-248">Ruft ab oder legt die Füllfarbe negativer Datenpunkte in einer Reihe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-248">Gets or sets the fill color for negative data points in a series.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="edd37-249">Die Füllfarbe negativer Datenpunkte in einer Reihe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-249">The fill color for negative data points in a series.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="edd37-250">Lese-/Schreibzugriff.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-250">Read/write.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="edd37-251">Die <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> Eigenschaft können Sie die Füllfarbe negativer Datenpunkte als Farbe Index-Wert von 0 bis 56 eingestellt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-251">The <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> property enables you to set the fill color for negative data points as a color index value from 0 to 56.</span>
            </span>
            <span data-ttu-id="edd37-252">Statt der <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> -Eigenschaft können Sie die <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" /> -Eigenschaft, die Sie zum Festlegen der Farbe als eine bestimmte numerischen, hexadezimalen, oktalen kann oder der RGB-Wert.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-252">Instead of using the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> property, you can use the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColor" /> property, which enables you to set the color as a specific numeric, hexadecimal, octal, or RGB color value.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="edd37-253">Für die <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> -Eigenschaft wirksam wird, die <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertIfNegative" /> -Eigenschaft des der <see cref="T:Microsoft.Office.Interop.Excel.Series" /> Objekt muss ebenfalls auf <b>true</b>festgelegt werden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-253">For the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertColorIndex" /> property to have an effect, the <see cref="P:Microsoft.Office.Interop.Excel.Series.InvertIfNegative" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Series" /> object must also be set to <b>true</b>.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvertIfNegative">
      <MemberSignature Language="C#" Value="public bool InvertIfNegative { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvertIfNegative" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.InvertIfNegative" />
      <MemberSignature Language="VB.NET" Value="Public Property InvertIfNegative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvertIfNegative { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(132)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(132)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(132)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-p159">
            <b>True</b>, wenn das Muster von Microsoft Excel im Element invertiert wird, wenn dieses einem negativen Wert entspricht. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-p159">
              <b>True</b> if Microsoft Excel inverts the pattern in the item when it corresponds to a negative number. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFiltered">
      <MemberSignature Language="C#" Value="public bool IsFiltered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFiltered" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.IsFiltered" />
      <MemberSignature Language="VB.NET" Value="Public Property IsFiltered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFiltered { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3083)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3083)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3083)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-256">Diese Einstellung steuert, ob die Datenreihe des Diagramms herausgefiltert wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-256">This setting controls whether the series has been filtered out from the chart.</span>
          </span>
          <span data-ttu-id="edd37-257">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-257">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="edd37-258">
            <b>Boolean</b> (<b>Bool</b> in c#) Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-258">
              <b>Boolean</b> (<b>bool</b> in C#) Read/Write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="edd37-259">Wenn ein Benutzer aus einer Reihe filtert, die Datenreihe <b>IsFiltered</b> -Eigenschaft auf <b>true fest,</b>wechselt, und der Datenreihe wird aus der übergeordneten <b>SeriesCollection</b>übertragen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-259">When a user filters out a series, the series <b>IsFiltered</b> property switches to <b>True</b>, and the series is transferred out of its parent <b>SeriesCollection</b>.</span>
            </span>
            <span data-ttu-id="edd37-260">Dieser Serie bleibt jedoch weiterhin in seinem übergeordneten <b>FullSeriesCollection</b>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-260">However, that series still remains in its parent <b>FullSeriesCollection</b>.</span>
            </span>
            <span data-ttu-id="edd37-261">Wenn ein Benutzer-Filter in der Datenreihe wieder, wird es wieder in seiner ursprünglichen Position in der <b>SeriesCollection</b>eingefügt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-261">When a user filters the series back in, it is inserted back in its original place in the <b>SeriesCollection</b>.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeaderLines">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.LeaderLines LeaderLines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.LeaderLines LeaderLines" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.LeaderLines" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LeaderLines As LeaderLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::LeaderLines ^ LeaderLines { Microsoft::Office::Interop::Excel::LeaderLines ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1666)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1666)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.LeaderLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-p162">Gibt ein <b>LeaderLines</b>-Objekt zurück, das die Führungslinien der Datenreihe darstellt. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-p162">Returns a <b>LeaderLines</b> object that represents the leader lines for the series. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerBackgroundColor">
      <MemberSignature Language="C#" Value="public int MarkerBackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarkerBackgroundColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.MarkerBackgroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerBackgroundColor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MarkerBackgroundColor { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(73)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(73)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(73)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-264">Zurückgeben oder Festlegen der Hintergrundfarbe der Markierung als RGB-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-264">Returns or sets the marker background color as an RGB value.</span>
          </span>
          <span data-ttu-id="edd37-265">Gilt nur für Linien-, Punkt (XY) und Netzdiagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-265">Applies only to line, scatter, and radar charts.</span>
          </span>
          <span data-ttu-id="edd37-266">Lese-/Schreibzugriff <b>Integer</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-266">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerBackgroundColorIndex">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlColorIndex MarkerBackgroundColorIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlColorIndex MarkerBackgroundColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.MarkerBackgroundColorIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerBackgroundColorIndex As XlColorIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlColorIndex MarkerBackgroundColorIndex { Microsoft::Office::Interop::Excel::XlColorIndex get(); void set(Microsoft::Office::Interop::Excel::XlColorIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(74)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(74)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(74)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlColorIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-267">Zurückgeben oder Festlegen der Hintergrundfarbe der Markierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-267">Returns or sets the marker background color.</span>
          </span>
          <span data-ttu-id="edd37-268">Gilt nur für Linien-, Punkt (XY) und Netzdiagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-268">Applies only to line, scatter, and radar charts.</span>
          </span>
          <span data-ttu-id="edd37-269">Lese-/Schreibzugriff <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-269">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerForegroundColor">
      <MemberSignature Language="C#" Value="public int MarkerForegroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarkerForegroundColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.MarkerForegroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerForegroundColor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MarkerForegroundColor { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(75)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(75)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(75)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-270">Gibt zurück oder legt die Vordergrundfarbe der Markierung als RGB-Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-270">Returns or sets the foreground color of the marker as an RGB value.</span>
          </span>
          <span data-ttu-id="edd37-271">Gilt nur für Linien-, Punkt (XY) und Netzdiagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-271">Applies only to line, scatter, and radar charts.</span>
          </span>
          <span data-ttu-id="edd37-272">Lese-/Schreibzugriff <b>Integer</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-272">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerForegroundColorIndex">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlColorIndex MarkerForegroundColorIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlColorIndex MarkerForegroundColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.MarkerForegroundColorIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerForegroundColorIndex As XlColorIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlColorIndex MarkerForegroundColorIndex { Microsoft::Office::Interop::Excel::XlColorIndex get(); void set(Microsoft::Office::Interop::Excel::XlColorIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(76)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(76)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(76)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlColorIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-273">Zurückgeben oder festlegen die Vordergrundfarbe von Datenpunkten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-273">Returns or sets the marker foreground color.</span>
          </span>
          <span data-ttu-id="edd37-274">Gilt nur für Linien-, Punkt (XY) und Netzdiagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-274">Applies only to line, scatter, and radar charts.</span>
          </span>
          <span data-ttu-id="edd37-275">Lese-/Schreibzugriff <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-275">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerSize">
      <MemberSignature Language="C#" Value="public int MarkerSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarkerSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.MarkerSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MarkerSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(231)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(231)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(231)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-276">Zurückgeben oder festlegen die Größe in Punkten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-276">Returns or sets the data-marker size in points.</span>
          </span>
          <span data-ttu-id="edd37-277">Lese-/Schreibzugriff <b>Integer</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-277">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlMarkerStyle MarkerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlMarkerStyle MarkerStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.MarkerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerStyle As XlMarkerStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlMarkerStyle MarkerStyle { Microsoft::Office::Interop::Excel::XlMarkerStyle get(); void set(Microsoft::Office::Interop::Excel::XlMarkerStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(72)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(72)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(72)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlMarkerStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-278">Gibt die Art der Markierung für einen Datenpunkt oder für eine Datenreihe in einem Liniendiagramm, Punkt (XY)-Diagramm oder Netzdiagramm zurück oder legt sie fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-278">Returns or sets the marker style for a point or series in a line chart, scatter chart, or radar chart.</span>
          </span>
          <span data-ttu-id="edd37-279">Lese-/Schreibzugriff <see cref="T:Microsoft.Office.Interop.Excel.XlMarkerStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-279">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlMarkerStyle" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-p169">Gibt den Namen des Objekts zurück oder legt ihn fest. <b>String</b> -Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-p169">Returns or sets the name of the object. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="edd37-282">Die folgende Tabelle enthält Beispielwerte der <b>Name</b>-Eigenschaft und verwandter Eigenschaften. Dabei wird von einer OLAP-Datenquelle mit dem eindeutigen Namen "[Europa].[Frankreich].[Paris]" und einer Nicht-OLAP-Datenquelle mit dem Elementnamen "Paris" ausgegangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-282">The following table shows example values of the <b>Name</b> property and related properties given an OLAP data source with the unique name "[Europe].[France].[Paris]" and a non-OLAP data source with the item name "Paris".</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="edd37-283">
                  <b>Beschriftung</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="edd37-283">
                    <b>Caption</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="edd37-284">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="edd37-284">Paris</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="edd37-285">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="edd37-285">Paris</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="edd37-286">
                  <b>Name</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="edd37-286">
                    <b>Name</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="edd37-287">[Europa].[Frankreich].[Paris] (schreibgeschützt)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="edd37-287">[Europe].[France].[Paris] (read-only)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="edd37-288">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="edd37-288">Paris</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="edd37-289">
                  <b>SourceName</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="edd37-289">
                    <b>SourceName</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="edd37-290">[Europa].[Frankreich].[Paris] (schreibgeschützt)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="edd37-290">[Europe].[France].[Paris] (read-only)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="edd37-291">(Identisch mit SQL-Eigenschaftenwert, schreibgeschützt)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="edd37-291">(Same as SQL property value, read-only)</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="edd37-292">
                  <b>Wert</b>
                </span>
                <span class="sxs-lookup">
                  <span data-stu-id="edd37-292">
                    <b>Value</b>
                  </span>
                </span>
              </term>
              <description>
                <span data-ttu-id="edd37-293">[Europa].[Frankreich].[Paris] (schreibgeschützt)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="edd37-293">[Europe].[France].[Paris] (read-only)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="edd37-294">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="edd37-294">Paris</span>
                </span>
              </description>
            </item>
          </list>
          <para>
            <span data-ttu-id="edd37-295">Beim Angeben von als Farbindex in der <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> -Auflistung verwenden Sie die Syntax in der folgenden Tabelle dargestellt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-295">When specifying an index into the <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> collection, you can use the syntax shown in the following table.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="edd37-296">Ausdruck. PivotItems ("[Europa]. [ Frankreich]. [Paris] ")</span>
                <span class="sxs-lookup">
                  <span data-stu-id="edd37-296">expression.PivotItems("[Europe].[France].[Paris]")</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="edd37-297">Ausdruck. PivotItems("Paris")</span>
                <span class="sxs-lookup">
                  <span data-stu-id="edd37-297">expression.PivotItems("Paris")</span>
                </span>
              </description>
            </item>
          </list>
          <para>
            <span data-ttu-id="edd37-298">Bei Verwendung der <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> -Eigenschaft so verweisen Sie auf ein bestimmtes Element einer Auflistung, können Sie den Textindexnamen wie in der folgenden Tabelle gezeigt verwenden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-298">When using the <see cref="M:Microsoft.Office.Interop.Excel.PivotItems.Item(System.Object)" /> property to reference a specific member of a collection, you can use the text index name as shown in the following table.</span>
            </span>
          </para>
          <list type="table">
            <item>
              <term>
                <span data-ttu-id="edd37-299">[Europa]. [Frankreich]. [Paris]</span>
                <span class="sxs-lookup">
                  <span data-stu-id="edd37-299">[Europe].[France].[Paris]</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="edd37-300">Paris</span>
                <span class="sxs-lookup">
                  <span data-stu-id="edd37-300">Paris</span>
                </span>
              </description>
            </item>
          </list>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-p170">Gibt das übergeordnete Objekt für das angegebene Objekt zurück. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-p170">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public object Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Paste() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Function Paste () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Paste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(211)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="edd37-303">Fügt ein Bild aus der Zwischenablage als Markierung in die ausgewählte Datenreihe ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-303">Pastes a picture from the Clipboard as the marker on the selected series.</span>
          </span>
          <span data-ttu-id="edd37-304">Diese Methode kann auf die Spalte, Balken-, Zeile oder Netzdiagramme verwendet werden und legt die <see cref="P:Microsoft.Office.Interop.Excel.Series.MarkerStyle" /> -Eigenschaft auf <b>xlMarkerStylePicture fest</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-304">This method can be used on column, bar, line, or radar charts, and it sets the <see cref="P:Microsoft.Office.Interop.Excel.Series.MarkerStyle" /> property to <b>xlMarkerStylePicture</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PictureType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlChartPictureType PictureType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlChartPictureType PictureType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.PictureType" />
      <MemberSignature Language="VB.NET" Value="Public Property PictureType As XlChartPictureType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlChartPictureType PictureType { Microsoft::Office::Interop::Excel::XlChartPictureType get(); void set(Microsoft::Office::Interop::Excel::XlChartPictureType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(161)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlChartPictureType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-305">Gibt zurück oder legt fest, die Bilder in einer Säulen- oder Balkendiagrammen sind wie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-305">Returns or sets the way pictures are displayed on a column or bar picture chart.</span>
          </span>
          <span data-ttu-id="edd37-306">Lese-/Schreibzugriff <see cref="T:Microsoft.Office.Interop.Excel.XlChartPictureType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-306">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlChartPictureType" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PictureUnit">
      <MemberSignature Language="C#" Value="public int PictureUnit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PictureUnit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.PictureUnit" />
      <MemberSignature Language="VB.NET" Value="Public Property PictureUnit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PictureUnit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(162)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(162)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(162)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-307">Zurückgeben oder festlegen die Einheit für jede Grafik im Diagramm, wenn die <see cref="P:Microsoft.Office.Interop.Excel.Series.PictureType" /> -Eigenschaft auf <b>XlScale</b> festgelegt ist (ist das nicht der Fall, wird diese Eigenschaft ignoriert).</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-307">Returns or sets the unit for each picture on the chart if the <see cref="P:Microsoft.Office.Interop.Excel.Series.PictureType" /> property is set to <b>xlScale</b> (if not, this property is ignored).</span>
          </span>
          <span data-ttu-id="edd37-308">Lese-/Schreibzugriff <b>Integer</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-308">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PictureUnit2">
      <MemberSignature Language="C#" Value="public double PictureUnit2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PictureUnit2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.PictureUnit2" />
      <MemberSignature Language="VB.NET" Value="Public Property PictureUnit2 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PictureUnit2 { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2649)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2649)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2649)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-309">Zurückgeben oder festlegen die Einheit für jede Grafik im Diagramm, wenn die <see cref="P:Microsoft.Office.Interop.Excel.Series.PictureType" /> -Eigenschaft enthält <see cref="F:Microsoft.Office.Interop.Excel.XlChartPictureType.xlStackScale" /> (falls nicht, diese Eigenschaft ignoriert wird).</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-309">Returns or sets the unit for each picture on the chart if the <see cref="P:Microsoft.Office.Interop.Excel.Series.PictureType" /> property is set to <see cref="F:Microsoft.Office.Interop.Excel.XlChartPictureType.xlStackScale" /> (if not, this property is ignored).</span>
          </span>
          <span data-ttu-id="edd37-310">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-310">Read/Write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="edd37-311">
            <b>Double</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-311">
              <b>Double</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotColorIndex">
      <MemberSignature Language="C#" Value="public int PlotColorIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PlotColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.PlotColorIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PlotColorIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PlotColorIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2915)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2915)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-312">Ruft einen Indexwert, der intern verwendet wird, die Formatierung von Datenreihen Diagrammelemente zugeordnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-312">Gets an index value that is used internally to associate series formatting with chart elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="edd37-313">Indexwert, der intern verwendet, die Formatierung von Datenreihen Diagrammelemente zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-313">An index value that is used internally to associate series formatting with chart elements.</span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="edd37-314">Schreibgeschützt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-314">Read-only.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="edd37-315">Diese Eigenschaft wird von Excel intern verwendet und sollte nicht aus Code aufgerufen werden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-315">This property is used internally by Excel and is not intended to be called from your code.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotOrder">
      <MemberSignature Language="C#" Value="public int PlotOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PlotOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.PlotOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property PlotOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PlotOrder { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(228)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(228)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(228)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-316">Zurückgeben oder festlegen die Reihenfolge der Zeichnungsflächen für die ausgewählte Datenreihe innerhalb der Diagrammgruppe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-316">Returns or sets the plot order for the selected series within the chart group.</span>
          </span>
          <span data-ttu-id="edd37-317">Lese-/Schreibzugriff <b>Integer</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-317">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="edd37-p176">Die Reihenfolge des Zeichnens kann nur innerhalb einer Diagrammgruppe festgelegt werden (wenn Sie mit mehreren Diagrammtypen in einem Diagramm arbeiten, können Sie die Reihenfolge des Zeichnens nicht für das gesamte Diagramm festlegen). Eine Diagrammgruppe ist eine Gruppe von Datenreihen mit demselben Diagrammtyp.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-p176">You can set plot order only within a chart group (you cannot set the plot order for the entire chart if you have more than one chart type). A chart group is a collection of series with the same chart type.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="edd37-320">Ändern der Reihenfolge der Zeichnungsflächen einer Datenreihe verursacht die Aufträge Zeichnungsflächen der anderen Datenreihen in der Diagrammgruppe automatisch entsprechend angepasst werden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-320">Changing the plot order of one series will cause the plot orders of the other series in the chart group to be adjusted as necessary.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Points">
      <MemberSignature Language="C#" Value="public object Points (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Points([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.Points(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Points (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(70)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="edd37-321">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-321">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="edd37-322">Der Name oder die Nummer des Datenpunktes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-322">The name or number of the point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edd37-323">Gibt ein Objekt, das einen einzelnen Punkt darstellt (eine <see cref="T:Microsoft.Office.Interop.Excel.Point" /> Objekt) oder eine Auflistung aller Datenpunkte (eine <see cref="T:Microsoft.Office.Interop.Excel.Points" /> Auflistung) in der Datenreihe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-323">Returns an object that represents a single point (a <see cref="T:Microsoft.Office.Interop.Excel.Point" /> object) or a collection of all the points (a <see cref="T:Microsoft.Office.Interop.Excel.Points" /> collection) in the series.</span>
          </span>
          <span data-ttu-id="edd37-324">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-324">Read-only.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public object Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Select() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="edd37-325">Markiert das Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-325">Selects the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="edd37-326">Um eine Zelle oder einen Zellbereich ausgewählt haben, verwenden Sie die <b>Select</b> -Methode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-326">To select a cell or a range of cells, use the <b>Select</b> method.</span>
            </span>
            <span data-ttu-id="edd37-327">Um einer einzelnen Zelle als aktive Zelle festzulegen, verwenden Sie die <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> Methode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-327">To make a single cell the active cell, use the <see cref="M:Microsoft.Office.Interop.Excel._Worksheet.Activate" /> method.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shadow">
      <MemberSignature Language="C#" Value="public bool Shadow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shadow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Shadow" />
      <MemberSignature Language="VB.NET" Value="Public Property Shadow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Shadow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-328">
            <b>True,</b> Wenn die Schriftart Schatten aufweist oder ob das Objekt einen Schatten aufweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-328">
              <b>True</b> if the font is a shadow font or if the object has a shadow.</span>
          </span>
          <span data-ttu-id="edd37-329">
            <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-329">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Smooth">
      <MemberSignature Language="C#" Value="public bool Smooth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Smooth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Smooth" />
      <MemberSignature Language="VB.NET" Value="Public Property Smooth As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Smooth { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(163)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(163)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(163)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-p181">TrueTrue, wenn Kurven des Linien- oder Punktdiagramms geglättet werden. Nur gültig für Linien- und Punktdiagramme. Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-p181">
              <b>True</b> if curve smoothing is turned on for the line chart or scatter chart. Applies only to line and scatter charts. Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Trendlines">
      <MemberSignature Language="C#" Value="public object Trendlines (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Trendlines([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Series.Trendlines(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Trendlines (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(154)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="edd37-333">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-333">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="edd37-334">Der Name oder die Nummer der Trendlinie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-334">The name or number of the trendline.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edd37-335">Gibt ein Objekt, das eine einzelne Trendlinie darstellt (eine <see cref="T:Microsoft.Office.Interop.Excel.Trendline" /> Objekt) oder eine Auflistung aller Trendlinien (eine <see cref="T:Microsoft.Office.Interop.Excel.Trendlines" /> Auflistung) für die Datenreihe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-335">Returns an object that represents a single trendline (a <see cref="T:Microsoft.Office.Interop.Excel.Trendline" /> object) or a collection of all the trendlines (a <see cref="T:Microsoft.Office.Interop.Excel.Trendlines" /> collection) for the series.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Type { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-336">Zurück oder legt den Typ Diagramm oder Datenreihe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-336">Returns or sets the chart or series type.</span>
          </span>
          <span data-ttu-id="edd37-337">Lese-/Schreibzugriff <b>Integer</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-337">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public object Values { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Values" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.Values" />
      <MemberSignature Language="VB.NET" Value="Public Property Values As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Values { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(164)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(164)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(164)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-338">Gibt an, oder eine Auflistung aller Werte in der Datenreihe festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-338">Returns or sets a collection of all the values in the series.</span>
          </span>
          <span data-ttu-id="edd37-339">Dies kann einen Bereich in einem Arbeitsblatt oder ein Array von Konstantenwerte, aber nicht mit einer Kombination aus beidem sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-339">This can be a range on a worksheet or an array of constant values, but not a combination of both.</span>
          </span>
          <span data-ttu-id="edd37-340">Lese-Schreib- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-340">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="edd37-341">Bei PivotChart-Berichten ist diese Eigenschaft schreibgeschützt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-341">For PivotChart reports, this property is read-only.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XValues">
      <MemberSignature Language="C#" Value="public object XValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object XValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Series.XValues" />
      <MemberSignature Language="VB.NET" Value="Public Property XValues As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ XValues { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1111)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1111)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1111)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edd37-342">Zurück oder legt ein Array von x-Werten für einer Diagrammdatenreihe dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-342">Returns or sets an array of x values for a chart series.</span>
          </span>
          <span data-ttu-id="edd37-343">Die <b>XValues</b> -Eigenschaft kann auf einen Bereich in einem Arbeitsblatt oder auf ein Array von Werten festgelegt werden, aber sie keine Kombination aus beidem sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-343">The <b>XValues</b> property can be set to a range on a worksheet or to an array of values, but it cannot be a combination of both.</span>
          </span>
          <span data-ttu-id="edd37-344">Lese-Schreib- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd37-344">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="edd37-345">Bei PivotChart-Berichten ist diese Eigenschaft schreibgeschützt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="edd37-345">For PivotChart reports this property is read-only.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>