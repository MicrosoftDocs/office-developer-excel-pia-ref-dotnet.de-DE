<Type Name="Names" FullName="Microsoft.Office.Interop.Excel.Names">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a76d5115c800138621098c928ea18e19669180e4" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20584728" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Names : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Names implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Names" />
  <TypeSignature Language="VB.NET" Value="Public Interface Names&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class Names : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208B8-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b82f5-101">Eine Auflistung aller der <see cref="T:Microsoft.Office.Interop.Excel.Name" /> -Objekte in der Anwendung oder Arbeitsmappe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b82f5-101">A collection of all the <see cref="T:Microsoft.Office.Interop.Excel.Name" /> objects in the application or workbook.</span>
      </span>
      <span data-ttu-id="b82f5-102">Jedes <b>Name</b> -Objekt stellt einen definierten Namen für einen Zellbereich.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b82f5-102">Each <b>Name</b> object represents a defined name for a range of cells.</span>
      </span>
      <span data-ttu-id="b82f5-103">Namen können sein – wie Datenbank, integriert und Auto_öffnen – oder Benutzerdefiniert.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b82f5-103">Names can be either built-in names — such as Database, Print_Area, and Auto_Open — or custom names.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="b82f5-104">
        <para>Verwendung der <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Names" /> Eigenschaft, um die <b>Names</b> -Auflistung zurückzugeben.</para>
        <para>Verwendung der <see cref="M:Microsoft.Office.Interop.Excel.Names.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> -Methode, um einen Namen erstellen und der Auflistung hinzugefügt. Der <b>Add</b> -Methode <paramref name="RefersTo" /> Argument muss in der A1-Schreibweise einschließlich Dollarzeichen ($) gegebenenfalls angegeben werden. Beispiel: bei Zelle A10 in Sheet1 ausgewählt ist, und definieren Sie einen Namen mit der <paramref name="RefersTo" /> Argument "= sheet1! A1: B1 ", der neue Name bezieht sich auf die Zellen a10: B10 (da Sie einen relativen Bezug angegeben haben). Verwenden Sie zum Angeben der absoluten Bezugs "= sheet1! $A$ 1: $B$ 1".</para>
        <para>Mit <b>Namen</b>(<paramref name="index" />), wobei <paramref name="index" /> ist der Name Indexnummer oder definierter Name, um ein einzelnes <b>Name</b> -Objekt zurückzugeben.</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="b82f5-104">
          <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Names" /> property to return the <b>Names</b> collection.</para>
          <para>Use the <see cref="M:Microsoft.Office.Interop.Excel.Names.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to create a name and add it to the collection. The <b>Add</b> method's <paramref name="RefersTo" /> argument must be specified in A1-style notation, including dollar signs ($) where appropriate. For example, if cell A10 is selected on Sheet1 and you define a name by using the <paramref name="RefersTo" /> argument "=sheet1!A1:B1", the new name actually refers to cells A10:B10 (because you specified a relative reference). To specify an absolute reference, use "=sheet1!$A$1:$B$1".</para>
          <para>Use <b>Names</b>(<paramref name="index" />), where <paramref name="index" /> is the name index number or defined name, to return a single <b>Name</b> object.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Name _Default (object Index, object IndexLocal, object RefersTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Name _Default([in]object Index, [in]object IndexLocal, [in]object RefersTo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Names._Default(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _Default (Optional Index As Object, Optional IndexLocal As Object, Optional RefersTo As Object) As Name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Name</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
        <Parameter Name="IndexLocal" Type="System.Object" />
        <Parameter Name="RefersTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <param name="IndexLocal">To be added.</param>
        <param name="RefersTo">To be added.</param>
        <summary>
          <span data-ttu-id="b82f5-105">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-105">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Name Add (object Name, object RefersTo, object Visible, object MacroType, object ShortcutKey, object Category, object NameLocal, object RefersToLocal, object CategoryLocal, object RefersToR1C1, object RefersToR1C1Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Name Add([in]object Name, [in]object RefersTo, [in]object Visible, [in]object MacroType, [in]object ShortcutKey, [in]object Category, [in]object NameLocal, [in]object RefersToLocal, [in]object CategoryLocal, [in]object RefersToR1C1, [in]object RefersToR1C1Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Names.Add(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Name</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="RefersTo" Type="System.Object" />
        <Parameter Name="Visible" Type="System.Object" />
        <Parameter Name="MacroType" Type="System.Object" />
        <Parameter Name="ShortcutKey" Type="System.Object" />
        <Parameter Name="Category" Type="System.Object" />
        <Parameter Name="NameLocal" Type="System.Object" />
        <Parameter Name="RefersToLocal" Type="System.Object" />
        <Parameter Name="CategoryLocal" Type="System.Object" />
        <Parameter Name="RefersToR1C1" Type="System.Object" />
        <Parameter Name="RefersToR1C1Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="b82f5-106">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-106">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="b82f5-107">Erforderlich, wenn <paramref name="NameLocal" /> nicht angegeben ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-107">Required if <paramref name="NameLocal" /> isn't specified.</span>
          </span>
          <span data-ttu-id="b82f5-108">Der Text, der als Name verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-108">The text to use as the name.</span>
          </span>
          <span data-ttu-id="b82f5-109">Namen dürfen keine Leerzeichen enthalten und können nicht wie Zellbezüge aussehen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-109">Names cannot include spaces and cannot look like cell references.</span>
          </span>
        </param>
        <param name="RefersTo">
          <span data-ttu-id="b82f5-110">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-110">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="b82f5-111">Erforderlich, wenn eine der anderen <paramref name="RefersTo" /> Argumente angegeben ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-111">Required unless one of the other <paramref name="RefersTo" /> arguments is specified.</span>
          </span>
          <span data-ttu-id="b82f5-112">Beschreibt, worauf der Name bezieht (Verwendung von A1-Schreibweise).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-112">Describes what the name refers to (using A1-style notation).</span>
          </span>
          <span data-ttu-id="b82f5-113">
            <b>Hinweis</b> Nothing wird zurückgegeben, wenn der Bezug nicht vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-113">
              <b>Note</b> Nothing is returned if the reference does not exist.</span>
          </span>
        </param>
        <param name="Visible">
          <span data-ttu-id="b82f5-114">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-114">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="b82f5-115">
            <b>True</b> , wenn der Name normal angegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-115">
              <b>True</b> to define the name normally.</span>
          </span>
          <span data-ttu-id="b82f5-116">
            <b>False</b> , wenn der Name als ausgeblendeter Name festgelegt (d. h., es wird nicht angezeigt im Dialogfeld Namen definieren, Namen einfügen oder Gehe zu).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-116">
              <b>False</b> to define the name as a hidden name (that is, it doesn't appear in either the Define Name, Paste Name, or Goto dialog box).</span>
          </span>
          <span data-ttu-id="b82f5-117">Der Standardwert ist <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-117">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="MacroType">
          <span data-ttu-id="b82f5-118">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-118">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="b82f5-119">Der Makrotyp, wie in der folgenden Tabelle dargestellt. ValueMeaning1User-Funktion (<b>Function</b> -Prozedur) 2Macro (auch als <b>Sub</b> -Prozedur bezeichnet) 3 oder OmittedNone (d. h., der Name bezieht sich nicht auf eine benutzerdefinierte Funktion oder ein Makro)</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-119">The macro type, as shown in the following table.ValueMeaning1User-defined function (<b>Function</b> procedure)2Macro (also known as <b>Sub</b> procedure)3 or omittedNone (that is, the name doesn't refer to a user-defined function or macro)</span>
          </span>
        </param>
        <param name="ShortcutKey">
          <span data-ttu-id="b82f5-120">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-120">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="b82f5-121">Die Tastenkombination des Makros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-121">The macro shortcut key.</span>
          </span>
          <span data-ttu-id="b82f5-122">Muss ein einzelner Buchstaben, z. B. "Z" oder "Z".</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-122">Must be a single letter, such as "z" or "Z".</span>
          </span>
          <span data-ttu-id="b82f5-123">Gilt nur für den Befehlsmakros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-123">Applies only for command macros.</span>
          </span>
        </param>
        <param name="Category">
          <span data-ttu-id="b82f5-124">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-124">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="b82f5-125">Die Kategorie des Makros oder der Funktion Wenn <paramref name="MacroType" /> ist 1 oder 2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-125">The category of the macro or function if <paramref name="MacroType" /> is 1 or 2.</span>
          </span>
          <span data-ttu-id="b82f5-126">Die Kategorie wird im Funktions-Assistenten verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-126">The category is used in the Function Wizard.</span>
          </span>
          <span data-ttu-id="b82f5-127">Vorhandene Kategorien können in Form einer Nummer (beginnend mit 1) oder nach Namen (in der Sprache des Makros) verwiesen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-127">Existing categories can be referred to either by number (starting at 1) or by name (in the language of the macro).</span>
          </span>
          <span data-ttu-id="b82f5-128">Wenn die angegebene Kategorie noch nicht vorhanden ist, erstellt Microsoft Excel eine neue Kategorie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-128">Microsoft Excel creates a new category if the specified category doesn't already exist.</span>
          </span>
        </param>
        <param name="NameLocal">
          <span data-ttu-id="b82f5-129">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-129">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="b82f5-130">Erforderlich, wenn <paramref name="Name" /> nicht angegeben ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-130">Required if <paramref name="Name" /> isn't specified.</span>
          </span>
          <span data-ttu-id="b82f5-131">Der Text, der als Name (in der Sprache des Benutzers) verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-131">The text to use as the name (in the language of the user).</span>
          </span>
          <span data-ttu-id="b82f5-132">Namen dürfen keine Leerzeichen enthalten und können nicht wie Zellbezüge aussehen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-132">Names cannot include spaces and cannot look like cell references.</span>
          </span>
        </param>
        <param name="RefersToLocal">
          <span data-ttu-id="b82f5-133">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-133">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="b82f5-134">Erforderlich, wenn eine der anderen <paramref name="RefersTo" /> Argumente angegeben ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-134">Required unless one of the other <paramref name="RefersTo" /> arguments is specified.</span>
          </span>
          <span data-ttu-id="b82f5-135">Beschreibt, worauf sich der Name bezieht (in der Sprache des Benutzers unter Verwendung der A1-Schreibweise).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-135">Describes what the name refers to (in the language of the user, using A1-style notation).</span>
          </span>
        </param>
        <param name="CategoryLocal">
          <span data-ttu-id="b82f5-136">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-136">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="b82f5-137">Erforderlich, wenn <paramref name="Category" /> nicht angegeben ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-137">Required if <paramref name="Category" /> isn't specified.</span>
          </span>
          <span data-ttu-id="b82f5-138">Text, der die Kategorie einer benutzerdefinierten Funktion in der Sprache des Benutzers identifiziert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-138">Text identifying the category of a custom function in the language of the user.</span>
          </span>
        </param>
        <param name="RefersToR1C1">
          <span data-ttu-id="b82f5-139">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-139">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="b82f5-140">Erforderlich, wenn eine der anderen <paramref name="RefersTo" /> Argumente angegeben ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-140">Required unless one of the other <paramref name="RefersTo" /> arguments is specified.</span>
          </span>
          <span data-ttu-id="b82f5-141">Beschreibt, worauf der Name bezieht (Verwendung der Z1S1-Schreibweise).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-141">Describes what the name refers to (using R1C1-style notation).</span>
          </span>
        </param>
        <param name="RefersToR1C1Local">
          <span data-ttu-id="b82f5-142">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-142">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="b82f5-143">Erforderlich, wenn eine der anderen <paramref name="RefersTo" /> Argumente angegeben ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-143">Required unless one of the other <paramref name="RefersTo" /> arguments is specified.</span>
          </span>
          <span data-ttu-id="b82f5-144">Beschreibt, worauf sich der Name bezieht (in der Sprache des Benutzers unter Verwendung der Z1S1-Schreibweise).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-144">Describes what the name refers to (in the language of the user, using R1C1-style notation).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b82f5-145">Definiert einen neuen Namen an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-145">Defines a new name.</span>
          </span>
          <span data-ttu-id="b82f5-146">Gibt eine <see cref="T:Microsoft.Office.Interop.Excel.Name" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-146">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Name" /> object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Names.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b82f5-147">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> -Objekt, das die Anwendung Microsoft Excel darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-147">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Names.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b82f5-148">Gibt die Anzahl der Objekte in der Auflistung zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-148">Returns the number of objects in the collection.</span>
          </span>
          <span data-ttu-id="b82f5-149">Schreibgeschützter <b>Integer</b>-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-149">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Names.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b82f5-150">Gibt eine 32-Bit-Ganzzahl, die die Anwendung angibt, in der das Objekt erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-150">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="b82f5-151">Wenn das Objekt in Microsoft Excel erstellt wurde, gibt diese Eigenschaft die Zeichenfolge XCEL zurück, dies entspricht die hexadezimale Zahl 5843454 c ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-151">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="b82f5-152">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-152">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="b82f5-153">
            <para>Die <b>Creator</b> -Eigenschaft ist in Microsoft Excel für den Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen verfügt über entwickelt. Der Erstellercode von Microsoft Excel lautet beispielsweise XCEL zurück.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-153">
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Names.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Name Item (object Index, object IndexLocal, object RefersTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Name Item([in]object Index, [in]object IndexLocal, [in]object RefersTo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Names.Item(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Item (Optional Index As Object, Optional IndexLocal As Object, Optional RefersTo As Object) As Name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Name</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
        <Parameter Name="IndexLocal" Type="System.Object" />
        <Parameter Name="RefersTo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="b82f5-154">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-154">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="b82f5-155">Der Name oder die Nummer des definierten Namens, der zurückgegeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-155">The name or number of the defined name to be returned.</span>
          </span>
        </param>
        <param name="IndexLocal">
          <span data-ttu-id="b82f5-156">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-156">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="b82f5-157">Der Name des definierten Namens in der Sprache des Benutzers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-157">The name of the defined name in the language of the user.</span>
          </span>
          <span data-ttu-id="b82f5-158">Wenn dieses Argument verwenden, werden keine Namen übersetzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-158">No names will be translated if you use this argument.</span>
          </span>
        </param>
        <param name="RefersTo">
          <span data-ttu-id="b82f5-159">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-159">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="b82f5-160">Worauf sich der Name bezieht sich auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-160">What the name refers to.</span>
          </span>
          <span data-ttu-id="b82f5-161">Sie verwenden dieses Argument, was in Bezug auf einen Namen identifiziert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-161">You use this argument to identify a name by what it refers to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b82f5-162">Gibt einen Single- <see cref="T:Microsoft.Office.Interop.Excel.Name" /> -Objekt aus einer <see cref="T:Microsoft.Office.Interop.Excel.Names" /> Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-162">Returns a single <see cref="T:Microsoft.Office.Interop.Excel.Name" /> object from a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="b82f5-163">
            <para>Sie müssen nur ein einziges dieser drei Argumente angeben.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-163">
              <para>You must specify one, and only one, of these three arguments.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Names.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b82f5-p119">Gibt das übergeordnete Objekt für das angegebene Objekt zurück. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b82f5-p119">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>