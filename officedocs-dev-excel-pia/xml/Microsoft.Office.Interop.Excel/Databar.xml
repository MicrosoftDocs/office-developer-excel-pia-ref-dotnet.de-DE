<Type Name="Databar" FullName="Microsoft.Office.Interop.Excel.Databar">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1299f035e734d223e0829374140c99bc36cf85ae" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20587416" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Databar" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Databar" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Databar" />
  <TypeSignature Language="VB.NET" Value="Public Interface Databar" />
  <TypeSignature Language="C++ CLI" Value="public interface class Databar" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024496-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ddb71-p101">Stellt eine eine Regel zur bedingten Formatierung von Datenbalken dar. Durch das Anwenden eines Datenbalkens auf einen Bereich können Sie den Wert einer Zelle relativ zu anderen Zellen anzeigen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ddb71-p101">Represents a data bar conditional formating rule. Applying a data bar to a range helps you see the value of a cell relative to other cells.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="ddb71-103">
        <para>Alle Objekte für bedingte Formatierung enthaltenen ein <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> -Auflistungsobjekt, das ein untergeordnetes Element von einer <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Auflistung. Sie können eine Regel mithilfe einer Formatierung für Datenbalken Erstellen der <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> oder <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.AddDatabar" /> -Methode des der <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> Auflistung.</para>
        <para>Verwenden Sie die <see cref="P:Microsoft.Office.Interop.Excel.Databar.MinPoint" /> und <see cref="P:Microsoft.Office.Interop.Excel.Databar.MaxPoint" /> Eigenschaften der <see cref="T:Microsoft.Office.Interop.Excel.Databar" /> Objekt, das die Werte der kürzeste Balken und längste Balken eines Bereichs von Daten festgelegt. Diese Eigenschaften zurückgeben einer <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /> -Objekt, in dem Sie angeben können, wie die Schwellenwerte ausgewertet werden.</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="ddb71-103">
          <para>All conditional formatting objects are contained within a <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection object, which is a child of a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> collection. You can create a data bar formatting rule by using either the <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.Add(Microsoft.Office.Interop.Excel.XlFormatConditionType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> or <see cref="M:Microsoft.Office.Interop.Excel.FormatConditions.AddDatabar" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection.</para>
          <para>You use the <see cref="P:Microsoft.Office.Interop.Excel.Databar.MinPoint" /> and <see cref="P:Microsoft.Office.Interop.Excel.Databar.MaxPoint" /> properties of the <see cref="T:Microsoft.Office.Interop.Excel.Databar" /> object to set the values of the shortest bar and longest bar of a range of data. These properites return a <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /> object, in which you can specify how the thresholds are evaluated.</para>
          <para />
        </span>
      </span>
    </remarks>
    <example>
      <span data-ttu-id="ddb71-104">
        <para>Das folgende Beispiel erstellt einen Bereich von Daten und ein Datenbalkens klicken Sie dann auf den Bereich angewendet. Beachten Sie, dass, da ein sehr niedriger und hoher-Wert im Bereich vorhanden ist, die mittlere Werte Datenbalken mit gleicher Länge stehen. Die mittlere Werte eindeutig machen können, der Beispielcode verwendet die <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /> Objekt zu ändern, wie die Schwellenwerte in Perzentile ausgewertet werden.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="ddb71-104">
          <para>The following example creates a range of data and then applies a data bar to the range. You will notice that because there is an extremely low and high value in the range, the middle values have data bars that are of similiar length. To disambiguate the middle values, the sample code uses the <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /> object to change how the thresholds are evaluated to percentiles.</para>
        </span>
      </span>
    </example>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddb71-105">Wenn ohne einen Objektbezeichner verwendet wird, gibt diese Eigenschaft ein <see cref="T:Microsoft.Office.Interop.Excel._Application" /> -Objekt, das die Microsoft Office Excel-Anwendung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-105">When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application.</span>
          </span>
          <span data-ttu-id="ddb71-106">Wenn ohne einen Objektbezeichner verwendet wird, gibt diese Eigenschaft ein <b>Application</b> -Objekt, das den Ersteller des angegebenen Objekts darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-106">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object.</span>
          </span>
          <span data-ttu-id="ddb71-107">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-107">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddb71-108">
            <b>Anwendung</b> (siehe oben)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-108">
              <b>Application</b> (see above)</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="ddb71-109">
            <para>Sie können diese Eigenschaft mit einem OLE-Automatisierungsobjekt verwenden, um die Anwendung dieses Objekts zurückzugeben.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-109">
              <para>You can use this property with an OLE Automation object to return the application of that object.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppliesTo">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range AppliesTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range AppliesTo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.AppliesTo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppliesTo As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ AppliesTo { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2626)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2626)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddb71-110">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> -Objekt, das den Zellbereich, auf den die Formatierungsregel angewendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-110">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object specifying the cell range to which the formatting rule is applied.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Range" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisColor">
      <MemberSignature Language="C#" Value="public object AxisColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AxisColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.AxisColor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AxisColor As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AxisColor { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2943)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2943)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddb71-111">Ruft die Farbe der Achse für Zellen mit bedingter Formatierung als Datenbalken ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-111">Gets the color of the axis for cells with conditional formatting as data bars.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddb71-112">Die Farbe der Achse für Zellen mit bedingter Formatierung als Datenbalken.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-112">The color of the axis for cells with conditional formatting as data bars.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="ddb71-113">
            <para>Schreibgeschützt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-113">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisPosition">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDataBarAxisPosition AxisPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDataBarAxisPosition AxisPosition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.AxisPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property AxisPosition As XlDataBarAxisPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDataBarAxisPosition AxisPosition { Microsoft::Office::Interop::Excel::XlDataBarAxisPosition get(); void set(Microsoft::Office::Interop::Excel::XlDataBarAxisPosition value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2942)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2942)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDataBarAxisPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddb71-114">Dient zum Abrufen oder Festlegen der Position der Achse der durch eine Regel zur bedingten Formatierung angegebenen Datenbalken.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-114">Gets or sets the position of the axis of the data bars specified by a conditional formatting rule.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddb71-115">Die Position der Achse der durch eine Regel zur bedingten Formatierung angegebenen Datenbalken.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-115">The position of the axis of the data bars specified by a conditional formatting rule.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="ddb71-116">
            <para>Lese-/Schreibzugriff.</para>
            <para>Der Achse für Datenbalken angezeigt wird nur, wenn die <see cref="P:Microsoft.Office.Interop.Excel.Databar.AxisPosition" /> -Eigenschaft ist entweder <see cref="F:Microsoft.Office.Interop.Excel.XlDataBarAxisPosition.xlDataBarAxisAutomatic" /> oder <see cref="F:Microsoft.Office.Interop.Excel.XlDataBarAxisPosition.xlDataBarAxisMidpoint" />, und wenn vorhanden negative Werte im Bereich von Werten, die mit einer Regel zur bedingten Formatierung für Datenbalken angegeben sind. Der Standardwert für die <see cref="P:Microsoft.Office.Interop.Excel.Databar.AxisPosition" /> -Eigenschaft ist <see cref="F:Microsoft.Office.Interop.Excel.XlDataBarAxisPosition.xlDataBarAxisAutomatic" />.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-116">
              <para>Read/write.</para>
              <para>The axis for data bars is displayed only when the <see cref="P:Microsoft.Office.Interop.Excel.Databar.AxisPosition" /> property is either <see cref="F:Microsoft.Office.Interop.Excel.XlDataBarAxisPosition.xlDataBarAxisAutomatic" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlDataBarAxisPosition.xlDataBarAxisMidpoint" />, and when there are negative values in the range of values specified with a data bar conditional formatting rule. The default value for the <see cref="P:Microsoft.Office.Interop.Excel.Databar.AxisPosition" /> property is <see cref="F:Microsoft.Office.Interop.Excel.XlDataBarAxisPosition.xlDataBarAxisAutomatic" />.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BarBorder">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DataBarBorder BarBorder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DataBarBorder BarBorder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.BarBorder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BarBorder As DataBarBorder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DataBarBorder ^ BarBorder { Microsoft::Office::Interop::Excel::DataBarBorder ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2944)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2944)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DataBarBorder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddb71-117">Ruft ein Objekt, das den Rahmen eines Datenbalkens angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-117">Gets an object that specifies the border of a data bar.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddb71-118">Ein Objekt, das den Rahmen eines Datenbalkens an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-118">An object that specifies the border of a data bar.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="ddb71-119">
            <para>Schreibgeschützt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-119">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BarColor">
      <MemberSignature Language="C#" Value="public object BarColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BarColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.BarColor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BarColor As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BarColor { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2722)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2722)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddb71-120">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.FormatColor" /> -Objekt zurück, die Sie verwenden können, um die Farbe der Balken in einer bedingten Formatierung für Datenbalken ändern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-120">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FormatColor" /> object that you can use to modify the color of the bars in a data bar conditional format.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddb71-121">
            <b>Objekt</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-121">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BarFillType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDataBarFillType BarFillType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDataBarFillType BarFillType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.BarFillType" />
      <MemberSignature Language="VB.NET" Value="Public Property BarFillType As XlDataBarFillType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDataBarFillType BarFillType { Microsoft::Office::Interop::Excel::XlDataBarFillType get(); void set(Microsoft::Office::Interop::Excel::XlDataBarFillType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2941)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2941)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2941)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDataBarFillType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddb71-122">Ruft ab oder legt fest, wie ein Datenbalken mit Farbe gefüllt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-122">Gets or sets how a data bar is filled with color.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddb71-123">Gibt an, wie ein Datenbalken mit Farbe aufgefüllt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-123">Specifies how a data bar is filled with color.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="ddb71-124">
            <para>Lese-/Schreibzugriff.</para>
            <para>Den Standardwert der <see cref="P:Microsoft.Office.Interop.Excel.Databar.BarFillType" /> -Eigenschaft ist <see cref="F:Microsoft.Office.Interop.Excel.XlDataBarFillType.xlDataBarFillGradient" />.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-124">
              <para>Read/write.</para>
              <para>The default value of the <see cref="P:Microsoft.Office.Interop.Excel.Databar.BarFillType" /> property is <see cref="F:Microsoft.Office.Interop.Excel.XlDataBarFillType.xlDataBarFillGradient" />.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddb71-125">Gibt eine Konstante in der <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> -Enumeration, die die Anwendung angibt, in der dieses Objekt erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-125">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="ddb71-126">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-126">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />
        </value>
        <remarks>
          <span data-ttu-id="ddb71-127">
            <para>Wenn das Objekt in Microsoft Excel erstellt wurde, gibt diese Eigenschaft die Zeichenfolge XCEL zurück, dies entspricht die hexadezimale Zahl 5843454 c ist. Die <see cref="P:Microsoft.Office.Interop.Excel.Databar.Creator" /> -Eigenschaft dient in Microsoft Excel für den Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen besitzt. Der Erstellercode von Microsoft Excel lautet beispielsweise XCEL zurück.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-127">
              <para>If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. The <see cref="P:Microsoft.Office.Interop.Excel.Databar.Creator" /> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Databar.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ddb71-128">Löscht das angegebene Regelobjekt für die bedingte Formatierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-128">Deletes the specified conditional formatting rule object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public int Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Direction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Direction { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddb71-129">Ruft ab oder legt die Richtung, in die das Databar angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-129">Gets or sets the direction the databar is displayed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddb71-130">Die Richtung der Databar wird angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-130">The direction the databar is displayed.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="ddb71-131">
            <para>Lese-/Schreibzugriff.</para>
            <para>Kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.Constants" />: <see cref="F:Microsoft.Office.Interop.Excel.Constants.xlContext" />, <see cref="F:Microsoft.Office.Interop.Excel.Constants.xlLTR" /> (von links nach rechts) oder <see cref="F:Microsoft.Office.Interop.Excel.Constants.xlRTL" /> (rechts-nach-links).</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-131">
              <para>Read/write.</para>
              <para>Can be one of the following <see cref="T:Microsoft.Office.Interop.Excel.Constants" />: <see cref="F:Microsoft.Office.Interop.Excel.Constants.xlContext" />, <see cref="F:Microsoft.Office.Interop.Excel.Constants.xlLTR" /> (left-to-right), or <see cref="F:Microsoft.Office.Interop.Excel.Constants.xlRTL" /> (right-to-left).</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Formula">
      <MemberSignature Language="C#" Value="public string Formula { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Formula" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.Formula" />
      <MemberSignature Language="VB.NET" Value="Public Property Formula As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Formula { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(261)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddb71-132">Gibt einen Wert vom Typ <b>String</b> zurück, der eine Formel zum Bestimmen der Werte darstellt, auf die der Symbolsatz angewendet wird, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-132">Returns or sets a <b>String</b> representing a formula, which determines the values to which the icon set will be applied.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddb71-133">
            <b>String</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-133">
              <b>String</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="ddb71-134">
            <para>Diese Eigenschaft ist hilfreich, den Bereich von Werten zu begrenzen, die die bedingte Formatierung angezeigt wird. Ein herkömmliches Szenario ist, wenn Sie einen Bereich von Zahlen, positive und negative Werte enthält. Sie möchten mehr als ein bedingtes Format für diesen Bereich Nummern zu erstellen – eines für positive Werte und ein weiteres für negative Werte.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-134">
              <para>This property is useful to limit the range of values that will display the conditional format. A typical scenario is when you have a range of numbers containing both positive and negative values. You may want to create more than one conditional format for this range of numbers—one for positive values and another for negative values.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPoint">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ConditionValue MaxPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ConditionValue MaxPoint" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.MaxPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxPoint As ConditionValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ConditionValue ^ MaxPoint { Microsoft::Office::Interop::Excel::ConditionValue ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2719)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2719)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ConditionValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddb71-135">Gibt eine <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /> Objekt, das angibt, wie der längste Balken bei einer bedingten Formatierung für Datenbalken ausgewertet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-135">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /> object that specifies how the longest bar is evaluated for a data bar conditional format.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" />
        </value>
        <remarks>
          <span data-ttu-id="ddb71-136">
            <para>Sie können den Typ und den Wert der Auswertung angeben, mit der <see cref="P:Microsoft.Office.Interop.Excel.ConditionValue.Type" /> und <see cref="P:Microsoft.Office.Interop.Excel.ConditionValue.Value" /> Eigenschaften.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-136">
              <para>You can specify the type and value of the evaluation by using the <see cref="P:Microsoft.Office.Interop.Excel.ConditionValue.Type" /> and <see cref="P:Microsoft.Office.Interop.Excel.ConditionValue.Value" /> properties.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinPoint">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ConditionValue MinPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ConditionValue MinPoint" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.MinPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinPoint As ConditionValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ConditionValue ^ MinPoint { Microsoft::Office::Interop::Excel::ConditionValue ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2718)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2718)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ConditionValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddb71-137">Gibt eine <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /> Objekt, das angibt, wie der kürzeste Balken bei einer bedingten Formatierung für Datenbalken ausgewertet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-137">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" /> object that specifies how the shortest bar is evaluated for a data bar conditional format.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.ConditionValue" />
        </value>
        <remarks>
          <span data-ttu-id="ddb71-138">
            <para>Sie können den Typ und den Wert der Auswertung angeben, mit der <see cref="P:Microsoft.Office.Interop.Excel.ConditionValue.Type" /> und <see cref="P:Microsoft.Office.Interop.Excel.ConditionValue.Value" /> Eigenschaften.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-138">
              <para>You can specify the type and value of the evaluation by using the <see cref="P:Microsoft.Office.Interop.Excel.ConditionValue.Type" /> and <see cref="P:Microsoft.Office.Interop.Excel.ConditionValue.Value" /> properties.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAppliesToRange">
      <MemberSignature Language="C#" Value="public void ModifyAppliesToRange (Microsoft.Office.Interop.Excel.Range Range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ModifyAppliesToRange([in]class Microsoft.Office.Interop.Excel.Range Range) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Databar.ModifyAppliesToRange(Microsoft.Office.Interop.Excel.Range)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ModifyAppliesToRange(Microsoft::Office::Interop::Excel::Range ^ Range);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2627)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Range" Type="Microsoft.Office.Interop.Excel.Range" />
      </Parameters>
      <Docs>
        <param name="Range">
          <span data-ttu-id="ddb71-139">Der Bereich, für den diese Formatierungsregel gilt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-139">The range to which this formatting rule will be applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddb71-140">Legt den Zellbereich fest, für den diese Formatierungsregel gilt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-140">Sets the cell range to which this formatting rule applies.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="ddb71-141">
            <para>Der Bereich muss in der A1-Bezugsart und werden vollständig in das Blatt, das das übergeordnete Objekt des ist enthalten die <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> Auflistung. Sie können den Bereichsoperator (Doppelpunkt), der Schnittmengenoperator (ein Leerzeichen) oder der union-Operator (Komma) enthalten. Dollarzeichen kann auch verwendet werden, aber sie werden ignoriert.</para>
            <para>Sie können auch einen lokalen, definierten Namen in einem beliebigen Teil des Bereichs verwenden, aber der Name muss sich in der Sprache des Makros.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-141">
              <para>The range must be in the A1 reference style and be entirely contained within the sheet that is the parent of the <see cref="T:Microsoft.Office.Interop.Excel.FormatConditions" /> collection. It can include the range operator (a colon), the intersection operator (a space), or the union operator (a comma). Dollar signs can also be used but they are ignored.</para>
              <para>You can also use a local defined name in any part of the range, but the name must be in the language of the macro.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NegativeBarFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.NegativeBarFormat NegativeBarFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.NegativeBarFormat NegativeBarFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.NegativeBarFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NegativeBarFormat As NegativeBarFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::NegativeBarFormat ^ NegativeBarFormat { Microsoft::Office::Interop::Excel::NegativeBarFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2945)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2945)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.NegativeBarFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddb71-142">Ruft die <see cref="T:Microsoft.Office.Interop.Excel.NegativeBarFormat" /> einer Regel zur bedingten Formatierung für Datenbalken zugeordnete-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-142">Gets the <see cref="T:Microsoft.Office.Interop.Excel.NegativeBarFormat" /> object associated with a data bar conditional formatting rule.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddb71-143">Die <see cref="T:Microsoft.Office.Interop.Excel.NegativeBarFormat" /> einer Regel zur bedingten Formatierung für Datenbalken zugeordnete-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-143">The <see cref="T:Microsoft.Office.Interop.Excel.NegativeBarFormat" /> object associated with a data bar conditional formatting rule.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="ddb71-144">
            <para>Schreibgeschützt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-144">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddb71-p104">Gibt das übergeordnete Objekt für das angegebene Objekt zurück. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-p104">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddb71-147">
            <b>Objekt</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-147">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PercentMax">
      <MemberSignature Language="C#" Value="public int PercentMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentMax" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.PercentMax" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentMax { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2721)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2721)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2721)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddb71-148">Gibt zurück oder legt einen <b>Integer</b> -Wert, der die Länge des längsten Datenbalkens als Prozentsatz der Zellenbreite angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-148">Returns or sets a <b>Integer</b> value that specifies the length of the longest data bar as a percentage of cell width.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddb71-149">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-149">
              <b>Integer</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="ddb71-150">
            <para>Der Wert muss eine ganze Zahl zwischen 0 und 100.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-150">
              <para>The value must be a whole number between 0 and 100.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PercentMin">
      <MemberSignature Language="C#" Value="public int PercentMin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentMin" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.PercentMin" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentMin As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentMin { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2720)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2720)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2720)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddb71-151">Gibt zurück oder legt einen <b>Integer</b> -Wert, der die Länge des kürzesten Datenbalkens als Prozentsatz der Zellenbreite angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-151">Returns or sets a <b>Integer</b> value that specifies the length of the shortest data bar as a percentage of cell width.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddb71-152">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-152">
              <b>Integer</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="ddb71-153">
            <para>Der Wert muss eine ganze Zahl zwischen 0 und 100.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-153">
              <para>The value must be a whole number between 0 and 100.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public int Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Priority { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(985)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddb71-p105">Gibt den Prioritätswert der Regel zur bedingten Formatierung zurück oder legt ihn fest. Durch die Priorität wird die Reihenfolge der Auswertung bestimmt, wenn für ein Arbeitsblatt mehrere Regeln zur bedingten Formatierung vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-p105">Returns or sets the priority value of the conditional formatting rule. The priority determines the order of evaluation when multiple conditional formatting rules exist in a worksheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddb71-156">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-156">
              <b>Integer</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="ddb71-157">
            <para>Beim Festlegen der Priorität muss der Wert eine positive ganze Zahl zwischen 1 und der Gesamtzahl der Regeln zur bedingten Formatierung auf dem Arbeitsblatt. Die Priorität muss einen eindeutigen Wert für alle Regeln im Arbeitsblatt so ändern die Priorität für die angegebene Regel zur bedingten Formatierung den Prioritätswert anderen Regeln im Arbeitsblatt verschoben werden sollen führen kann.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-157">
              <para>When setting the priority, the value must be a positive integer between 1 and the total number of conditional formatting rules on the worksheet. The priority must be a unique value for all rules on the worksheet, so changing the priority for the specified conditional formatting rule may cause the priority value of the other rules on the worksheet to be shifted.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PTCondition">
      <MemberSignature Language="C#" Value="public bool PTCondition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PTCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.PTCondition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PTCondition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PTCondition { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2631)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2631)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddb71-p106">Gibt einen <b>Boolean</b>-Wert zurück, der angibt, ob ein bedingtes Format auf ein PivotTable-Diagramm angewendet wird. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-p106">Returns a <b>Boolean</b> value indicating if the conditional format is being applied to a PivotTable chart. Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddb71-160">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-160">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScopeType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPivotConditionScope ScopeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPivotConditionScope ScopeType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.ScopeType" />
      <MemberSignature Language="VB.NET" Value="Public Property ScopeType As XlPivotConditionScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPivotConditionScope ScopeType { Microsoft::Office::Interop::Excel::XlPivotConditionScope get(); void set(Microsoft::Office::Interop::Excel::XlPivotConditionScope value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2615)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPivotConditionScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddb71-161">Gibt eine der Konstanten der oder legt die <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /> -Aufzählung, die den Bereich der bedingten Formatierung bestimmt, wenn sie auf ein PivotTable-Diagramm angewendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-161">Returns or sets one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" /> enumeration, which determines the scope of the conditional format when it is applied to a PivotTable chart.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.XlPivotConditionScope" />
        </value>
        <remarks>
          <span data-ttu-id="ddb71-162">
            <para>Der Standardwert ist <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlSelectionScope" />, der festlegt, den Bereich mit der <see cref="P:Microsoft.Office.Interop.Excel.Databar.AppliesTo" />Eigenschaft.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-162">
              <para>The default value is <see cref="F:Microsoft.Office.Interop.Excel.XlPivotConditionScope.xlSelectionScope" />, which sets the scope using the <see cref="P:Microsoft.Office.Interop.Excel.Databar.AppliesTo" />property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFirstPriority">
      <MemberSignature Language="C#" Value="public void SetFirstPriority ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFirstPriority() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Databar.SetFirstPriority" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFirstPriority ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFirstPriority();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2629)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ddb71-163">Legt den Prioritätswert für diese Regel zur bedingten Formatierung auf 1 fest, sodass die Regel vor allen anderen Regeln im Arbeitsblatt ausgewertet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-163">Sets the priority value for this conditional formatting rule to "1" so that it will be evaluated before all other rules on the worksheet.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="ddb71-164">
            <para>Wenn Sie mehrere Regeln zur bedingte Formatierung in einem Arbeitsblatt vorhanden sind, wenn die Regel nicht zuvor Priorität "1" festgelegt wurde, verursacht diese Methode die Priorität aller anderen vorhandenen Regeln auf dem Arbeitsblatt um 1 erhöht.</para>
            <para>
              <b>Hinweis</b>: Prioritätsebenen für Regeln zur bedingten Formatierung auf eine Arbeitsblattebene angewendet werden.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-164">
              <para>When you have multiple conditional formatting rules  in a worksheet, if the rule was not previously set to priority "1", this method will cause the priority of all other existing rules on the worksheet to be increased by one.</para>
              <para>
                <b>Note</b>: Priority levels for conditional formatting rules are applied on a worksheet-level basis.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLastPriority">
      <MemberSignature Language="C#" Value="public void SetLastPriority ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLastPriority() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Databar.SetLastPriority" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLastPriority ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLastPriority();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2630)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ddb71-165">Legt die Auswertungsreihenfolge für diese Regel zur bedingten Formatierung fest, sodass sie nach allen anderen Regeln im Arbeitsblatt ausgewertet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-165">Sets the evaluation order for this conditional formatting rule so it is evaluated after all other rules on the worksheet.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="ddb71-166">
            <para>Den tatsächlichen Wert der Priorität wird die Gesamtanzahl der Regeln zur bedingten Formatierung auf dem Arbeitsblatt entsprechen. Wenn Sie mehrere Regeln zur bedingte Formatierung in einem Arbeitsblatt haben, verursacht diese Methode die Priorität der Regeln, die einen Prioritätswert größer als dieser Regel um 1 erhöht werden hatte.</para>
            <para>
              <b>Hinweis</b>: Prioritätsebenen für Regeln zur bedingten Formatierung auf eine Arbeitsblattebene angewendet werden.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-166">
              <para>The actual value of the priority will be equal to the total number of conditional formatting rules on the worksheet. When you have multiple conditional formatting rules  in a worksheet, this method will cause the priority of rules that had a priority value greater than this rule to be increased by one.</para>
              <para>
                <b>Note</b>: Priority levels for conditional formatting rules are applied on a worksheet-level basis.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowValue">
      <MemberSignature Language="C#" Value="public bool ShowValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.ShowValue" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowValue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddb71-167">Gibt einen <b>Boolean</b>-Wert zurück, der angibt, ob der Wert in der Zelle angezeigt wird, wenn die bedingte Datenbalkenformatierung auf den Bereich angewendet wird, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-167">Returns or sets a <b>Boolean</b> value that specifies if the value in the cell is displayed if the data bar conditional format is applied to the range.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddb71-168">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-168">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopIfTrue">
      <MemberSignature Language="C#" Value="public bool StopIfTrue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StopIfTrue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.StopIfTrue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StopIfTrue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StopIfTrue { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2625)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2625)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddb71-169">Gibt einen <b>Boolean</b>-Wert zurück, der bestimmt, ob zusätzliche Formatierungsregeln für die Zelle ausgewertet werden sollen, wenn die aktuelle Regel zu <b>True</b> ausgewertet wird, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-169">Returns or sets a <b>Boolean</b> value that determines if additional formatting rules on the cell should be evaluated if the current rule evaluates to <b>True</b>.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddb71-170">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-170">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="ddb71-171">
            <para>Zur Unterstützung der Abwärtskompatibilität ist der Standardwert für diese Eigenschaft <b>False</b>das Gegenteil des Verhaltens einer Formatierungsregel ist Regel in der Benutzeroberfläche erstellt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-171">
              <para>To support backward compatibility, the default value for this property is <b>False</b>, which is the opposite behavior of a formatting rule created in the user interface.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public int Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Databar.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Type { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddb71-172">Gibt eine der Konstanten von der <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" /> -Aufzählung, die den Typ der bedingten Formatierung angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-172">Returns one of the constants of the <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionType" /> enumeration, which specifies the type of conditional format.</span>
          </span>
          <span data-ttu-id="ddb71-173">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-173">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddb71-174">
            <b>Integer</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-174">
              <b>Integer</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="ddb71-175">
            <para>Diese Eigenschaft gibt immer einen <b>Integer</b> -Wert der "4", was entspricht zurück <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlDatabar" />.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddb71-175">
              <para>This property will always return a <b>Integer</b> value of "4", which is equivalent to <see cref="F:Microsoft.Office.Interop.Excel.XlFormatConditionType.xlDatabar" />.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>