<Type Name="Diagram" FullName="Microsoft.Office.Interop.Excel.Diagram">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="284dac8d28fb2f4619db584ffa0820a68ade7b37" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20572667" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Diagram" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Diagram" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Diagram" />
  <TypeSignature Language="VB.NET" Value="Public Interface Diagram" />
  <TypeSignature Language="C++ CLI" Value="public interface class Diagram" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002446F-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4112)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a0e8a-101">Stellt ein Diagramm dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a0e8a-101">Represents a diagram.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="a0e8a-102">
        <para>Verwenden Sie die <b>Diagramm</b> -Eigenschaft des der <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> Objekt oder <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> -Auflistung, um eine Rückgabe <b>ein Diagrammobjekt</b> .</para>
        <para>Können Sie auch das aktuelle Diagramm in ein anderes Diagramm mithilfe Konvertieren der <see cref="M:Microsoft.Office.Interop.Excel.Diagram.Convert(Microsoft.Office.Core.MsoDiagramType)" /> -Methode.</para>
        <para>
          <b>Hinweis</b> : Wenn das aktuelle Diagramm ein Organigramm (<b>msoDiagramOrgChart tritt</b>) ist ein Laufzeitfehler tritt.</para>
        <para>Es gibt verschiedene Arten von Diagrammen zur Auswahl beim Arbeiten mit dem <b>Diagramm</b> -Objekt. Verweisen auf die <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddDiagram(Microsoft.Office.Core.MsoDiagramType,System.Single,System.Single,System.Single,System.Single)" /> -Methode, um eine Liste der verfügbaren Diagrammtypen anzuzeigen.</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="a0e8a-102">
          <para>Use the <b>Diagram</b> property of the <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> object or <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> collection to a return a <b>Diagram</b> object.</para>
          <para>You can also convert the current diagram to a different diagram by using the <see cref="M:Microsoft.Office.Interop.Excel.Diagram.Convert(Microsoft.Office.Core.MsoDiagramType)" /> method.</para>
          <para>
            <b>Note</b>   If the current diagram is an organization chart (<b>msoDiagramOrgChart</b>) a run-time error will occur.</para>
          <para>There are several types of diagrams to choose from when working with the <b>Diagram</b> object. Refer to the <see cref="M:Microsoft.Office.Interop.Excel.Shapes.AddDiagram(Microsoft.Office.Core.MsoDiagramType,System.Single,System.Single,System.Single,System.Single)" /> method to view a list of available diagram types.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Diagram.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a0e8a-103">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> -Objekt, das die Anwendung Microsoft Excel darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0e8a-103">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState AutoFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState AutoFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Diagram.AutoFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFormat As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState AutoFormat { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(114)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(114)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(114)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a0e8a-104">Legt fest oder gibt eine Konstante, die Status den automatischen Formatierungen für ein Diagramm zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0e8a-104">Sets or returns a constant indicating the automatic formatting state for a diagram.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a0e8a-105">
            <para>Festlegen von <b>AutoFormat</b> auf <b>MsoFalse</b> deaktiviert die automatische Formatierung für das Diagramm. <b>AutoFormat</b> auf <b>MsoTrue</b> festlegen aktiviert die automatische Formatierung für das Diagramm.</para>
            <para>In der folgenden <b>MsoTriState</b> -Konstanten, die nicht auf diese Eigenschaft angewendet: <b>MsoCTrue</b>, <b>MsoTriStateMixed</b>, <b>MsoTriStateToggle</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a0e8a-105">
              <para>Setting <b>AutoFormat</b> to <b>msoFalse</b> disables automatic formatting for the diagram. Setting <b>AutoFormat</b> to <b>msoTrue</b> enables automatic formatting for the diagram.</para>
              <para>The following <b>MsoTriState</b> constants to not apply to this property: <b>msoCTrue</b>, <b>msoTriStateMixed</b>, <b>msoTriStateToggle</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoLayout">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState AutoLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState AutoLayout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Diagram.AutoLayout" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoLayout As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState AutoLayout { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2243)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2243)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2243)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a0e8a-106">Gibt an, oder es wird eine Konstante, die bestimmt, die automatische Positionierung von den Knoten und den Konnektoren in einem Diagramm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0e8a-106">Returns or sets a constant which determines the automatic positioning of the nodes and connectors in a diagram.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a0e8a-107">
            <para>Festlegen von <b>AutoLayout</b><b>msoFalse</b> deaktiviert die automatische Formatierung für das Diagramm. Wenn <b>AutoLayout</b> auf <b>MsoTrue</b> festlegen aktiviert die automatische Formatierung für das Diagramm.</para>
            <para>In der folgenden <b>MsoTriState</b> -Konstanten, die nicht auf diese Eigenschaft angewendet: <b>MsoCTrue</b>, <b>MsoTriStateMixed</b>, <b>MsoTriStateToggle</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a0e8a-107">
              <para>Setting <b>AutoLayout</b> to <b>msoFalse</b> disables automatic formatting for the diagram. Setting <b>AutoLayout</b> to <b>msoTrue</b> enables automatic formatting for the diagram.</para>
              <para>The following <b>MsoTriState</b> constants to not apply to this property: <b>msoCTrue</b>, <b>msoTriStateMixed</b>, <b>msoTriStateToggle</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public void Convert (Microsoft.Office.Core.MsoDiagramType Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert([in]valuetype Microsoft.Office.Core.MsoDiagramType Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Diagram.Convert(Microsoft.Office.Core.MsoDiagramType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Convert (Type As MsoDiagramType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Convert(Microsoft::Office::Core::MsoDiagramType Type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1046)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Core.MsoDiagramType" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="a0e8a-108">Erforderliche <see cref="T:Microsoft.Office.Core.MsoDiagramType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0e8a-108">Required <see cref="T:Microsoft.Office.Core.MsoDiagramType" />.</span>
          </span>
          <span data-ttu-id="a0e8a-109">Der Typ des Diagramms zu konvertieren. <b>MsoDiagramType</b> kann eine der folgenden Konstanten sein:</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0e8a-109">The type of diagram to convert to.<b>MsoDiagramType</b> can be one of these constants.</span>
          </span>
          <span data-ttu-id="a0e8a-110">
            <b>msoDiagramCycle</b> Ein Diagramm mit dem fortlaufender Diagrammtyp. <b>msoDiagramMixed</b> Ein gemischter Diagrammtyp. <b>msoDiagramOrgChart tritt</b> Ein Diagrammtyp hierarchische Beziehung. <b>msoDiagramPyramid</b> Eine Grundlage basierend Diagrammtyp. <b>msoDiagramRadial</b> Ein Diagrammtyp Beziehungen zwischen ein zentrales Element angezeigt. <b>msoDiagramTarget</b> Ein Diagrammtyp, der Schritte zu einem Ziel anzeigt. <b>msoDiagramVenn</b> Ein Diagrammtyp, der überlappende zwischen Elementen Bereiche anzeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0e8a-110">
              <b>msoDiagramCycle</b> A process diagram with a continuous cycle diagram type.<b>msoDiagramMixed</b> A mixed diagram type.<b>msoDiagramOrgChart</b> A hierarchical relationship diagram type.<b>msoDiagramPyramid</b> A foundation based relationships diagram type.<b>msoDiagramRadial</b> A diagram type showing relationships of a core element.<b>msoDiagramTarget</b> A diagram type showing steps toward a goal.<b>msoDiagramVenn</b> A diagram type showing areas of overlap between elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0e8a-111">Das aktuelle Diagramm konvertiert in einem anderen Diagramm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0e8a-111">Converts the current diagram to a different diagram.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Diagram.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a0e8a-112">Gibt eine 32-Bit-Ganzzahl, die die Anwendung angibt, in der das Objekt erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0e8a-112">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a0e8a-113">
            <para>Wenn das Objekt in Microsoft Excel erstellt wurde, gibt diese Eigenschaft die Zeichenfolge XCEL zurück, die die hexadezimale Zahl 5843454 c entspricht</para>
            <para>Die <b>Creator</b> -Eigenschaft wurde in Microsoft Excel für den Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen verfügt über entwickelt. Microsoft Excel verfügt beispielsweise über den erstellten Code XCEL.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a0e8a-113">
              <para>If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</para>
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FitText">
      <MemberSignature Language="C#" Value="public void FitText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FitText() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Diagram.FitText" />
      <MemberSignature Language="VB.NET" Value="Public Sub FitText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FitText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2304)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a0e8a-114">Passt die Größe des Texts in der Knoten in einem Diagramm innerhalb der Grenzen der Knoten angepasst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0e8a-114">Adjusts the size of the text in the nodes in a diagram to fit within the boundaries of the nodes.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="a0e8a-115">
            <para>Diese Methode funktioniert nur in Microsoft Office PowerPoint 2003.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a0e8a-115">
              <para>This method functions only in Microsoft Office PowerPoint 2003.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DiagramNodes Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DiagramNodes Nodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Diagram.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As DiagramNodes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DiagramNodes ^ Nodes { Microsoft::Office::Interop::Excel::DiagramNodes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1701)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1701)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DiagramNodes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a0e8a-116">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.DiagramNodes" /> -Objekt, das eine Liste aller Knoten im angegebenen Diagramm enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0e8a-116">Returns a <see cref="T:Microsoft.Office.Interop.Excel.DiagramNodes" /> object that contains a flat list of all the nodes in the specified diagram.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Diagram.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a0e8a-117">Gibt das übergeordnete Objekt für das angegebene Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0e8a-117">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState Reverse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState Reverse" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Diagram.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Property Reverse As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState Reverse { Microsoft::Office::Core::MsoTriState get(); void set(Microsoft::Office::Core::MsoTriState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2244)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2244)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2244)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a0e8a-118">Kehrt die Knoten in einem Diagramm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0e8a-118">Reverses the nodes in a diagram.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a0e8a-119">
            <para>Festlegen <b>des Reverseproxys</b> auf <b>MsoFalse</b> lässt die Diagrammknoten unverändert. Die Knoten in einem Diagramm macht auf <b>MsoTrue</b> festlegen <b>des Reverseproxys</b> .</para>
            <para>In der folgenden <b>MsoTriState</b> -Konstanten, die nicht auf diese Eigenschaft angewendet: <b>MsoCTrue</b>, <b>MsoTriStateMixed</b>, <b>MsoTriStateToggle</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a0e8a-119">
              <para>Setting <b>Reverse</b> to <b>msoFalse</b> leaves the diagram nodes as they are. Setting <b>Reverse</b> to <b>msoTrue</b> reverses the nodes in a diagram.</para>
              <para>The following <b>MsoTriState</b> constants to not apply to this property: <b>msoCTrue</b>, <b>msoTriStateMixed</b>, <b>msoTriStateToggle</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoDiagramType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoDiagramType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Diagram.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As MsoDiagramType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoDiagramType Type { Microsoft::Office::Core::MsoDiagramType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoDiagramType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a0e8a-120">Gibt zurück oder legt den Diagrammtyp fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0e8a-120">Returns or sets the diagram type.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="a0e8a-121">
            <para>
              <see cref="T:Microsoft.Office.Core.MsoDiagramType" />kann eine der folgenden <b>MsoDiagramType</b> -Konstanten sein:</para>
            <para>
              <b>MsoDiagramCycle</b>
            </para>
            <para>
              <b>MsoDiagramMixed</b>
            </para>
            <para>
              <b>msoDiagramOrgChart tritt</b>
            </para>
            <para>
              <b>MsoDiagramPyramid</b>
            </para>
            <para>
              <b>MsoDiagramRadial</b>
            </para>
            <para>
              <b>MsoDiagramTarget</b>
            </para>
            <para>
              <b> MsoDiagramVenn</b>
            </para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a0e8a-121">
              <para>
                <see cref="T:Microsoft.Office.Core.MsoDiagramType" /> can be one of these <b>MsoDiagramType</b> constants:</para>
              <para>
                <b>msoDiagramCycle</b>
              </para>
              <para>
                <b>msoDiagramMixed</b>
              </para>
              <para>
                <b>msoDiagramOrgChart</b>
              </para>
              <para>
                <b>msoDiagramPyramid</b>
              </para>
              <para>
                <b>msoDiagramRadial</b>
              </para>
              <para>
                <b>msoDiagramTarget</b>
              </para>
              <para>
                <b>msoDiagramVenn</b>
              </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>