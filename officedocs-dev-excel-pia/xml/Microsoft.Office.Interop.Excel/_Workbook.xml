<Type Name="_Workbook" FullName="Microsoft.Office.Interop.Excel._Workbook">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0dc241801e29cd7a9aa2098f883cf029f3c40f54" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20575047" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _Workbook" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Workbook" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel._Workbook" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Workbook" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Workbook" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000208DA-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4160)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9c411-101">Dies ist eine primäre Schnittstelle in einem COM-Co-Klasse, die von verwaltetem Code für die Interoperabilität mit den entsprechenden COM-Objekt erforderlich ist.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9c411-101">This is a primary interface in a COM coclass that is required by managed code for interoperability with the corresponding COM object.</span>
      </span>
      <span data-ttu-id="9c411-102">Verwenden Sie diese primäre Schnittstelle nur, wenn die Methode, den, die Sie verwenden möchten, den gleichen Namen wie die COM-Objekt gemeinsam verwendet. In diesem Fall dieser Schnittstelle zum Aufrufen der Methode umgewandelt, und in die neuesten Ereignisschnittstelle für die Verbindung an das Ereignis umgewandelt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9c411-102">Use this primary interface only when the method you want to use shares the same name as an event of the COM object; in this case, cast to this interface to call the method, and cast to the latest events interface to connect to the event.</span>
      </span>
      <span data-ttu-id="9c411-103">Verwenden Sie andernfalls die .NET-Schnittstelle, die von der COM-Co-Klasse Zugriff auf Methoden, Eigenschaften und Ereignisse das COM-Objekt abgeleitet ist.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9c411-103">Otherwise, use the .NET interface that is derived from the COM coclass to access methods, properties, and events of the COM object.</span>
      </span>
      <span data-ttu-id="9c411-104">Weitere Informationen über das COM-Objekt finden Sie unter <see cref="T:Microsoft.Office.Interop.Excel.Workbook" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9c411-104">For more information about the COM object, see <see cref="T:Microsoft.Office.Interop.Excel.Workbook" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="_CodeName">
      <MemberSignature Language="C#" Value="public string _CodeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook._CodeName" />
      <MemberSignature Language="VB.NET" Value="Public Property _CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ _CodeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(-2147418112)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-105">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-105">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public void _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(905)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(7)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <summary>
          <span data-ttu-id="9c411-106">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-106">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_Protect">
      <MemberSignature Language="C#" Value="public void _Protect (object Password, object Structure, object Windows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _Protect([in]object Password, [in]object Structure, [in]object Windows) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook._Protect(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _Protect (Optional Password As Object, Optional Structure As Object, Optional Windows As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(282)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="Structure" Type="System.Object" />
        <Parameter Name="Windows" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">To be added.</param>
        <param name="Structure">To be added.</param>
        <param name="Windows">To be added.</param>
        <summary>
          <span data-ttu-id="9c411-107">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-107">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_ReadOnlyRecommended">
      <MemberSignature Language="C#" Value="public bool _ReadOnlyRecommended { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool _ReadOnlyRecommended" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook._ReadOnlyRecommended" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property _ReadOnlyRecommended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool _ReadOnlyRecommended { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(297)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(297)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-108">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-108">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_SaveAs">
      <MemberSignature Language="C#" Value="public void _SaveAs (object Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, object ConflictResolution, object AddToMru, object TextCodepage, object TextVisualLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _SaveAs([in]object Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]valuetype Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode, [in]object ConflictResolution, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook._SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _SaveAs (Optional Filename As Object, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AccessMode As XlSaveAsAccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, Optional ConflictResolution As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(284)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(11)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AccessMode" Type="Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" />
        <Parameter Name="ConflictResolution" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="AccessMode">To be added.</param>
        <param name="ConflictResolution">To be added.</param>
        <param name="AddToMru">To be added.</param>
        <param name="TextCodepage">To be added.</param>
        <param name="TextVisualLayout">To be added.</param>
        <summary>
          <span data-ttu-id="9c411-109">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-109">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptAllChanges">
      <MemberSignature Language="C#" Value="public void AcceptAllChanges (object When, object Who, object Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptAllChanges([in]object When, [in]object Who, [in]object Where) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.AcceptAllChanges(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptAllChanges (Optional When As Object, Optional Who As Object, Optional Where As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1466)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="When" Type="System.Object" />
        <Parameter Name="Who" Type="System.Object" />
        <Parameter Name="Where" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="When">
          <span data-ttu-id="9c411-110">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-110">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-111">Gibt an, wann alle Änderungen akzeptiert wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-111">Specifies when all the changes are accepted.</span>
          </span>
        </param>
        <param name="Who">
          <span data-ttu-id="9c411-112">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-112">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-113">Gibt an, von wem alle Änderungen akzeptiert wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-113">Specifies by whom all the changes are accepted.</span>
          </span>
        </param>
        <param name="Where">
          <span data-ttu-id="9c411-114">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-114">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-115">Gibt an, wo alle Änderungen akzeptiert wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-115">Specifies where all the changes are accepted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-116">Übernimmt alle Änderungen in der angegebenen freigegebenen Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-116">Accepts all changes in the specified shared workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptLabelsInFormulas">
      <MemberSignature Language="C#" Value="public bool AcceptLabelsInFormulas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptLabelsInFormulas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AcceptLabelsInFormulas" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptLabelsInFormulas As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptLabelsInFormulas { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1441)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-117">
            <b>True,</b> Wenn Bezeichnungen in Arbeitsblattformeln verwendet werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-117">
              <b>True</b> if labels can be used in worksheet formulas.</span>
          </span>
          <span data-ttu-id="9c411-118">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-118">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="9c411-119">
            <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-119">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccuracyVersion">
      <MemberSignature Language="C#" Value="public int AccuracyVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AccuracyVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property AccuracyVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AccuracyVersion { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2871)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2871)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2871)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-120">Ruft ab oder legt fest, ob bestimmten Arbeitsblattfunktionen die neuesten Genauigkeitsalgorithmen zum Berechnen der Ergebnisse verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-120">Gets or sets whether certain worksheet functions use the latest accuracy algorithms to calculate their results.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c411-121">Gibt an, welche Version der Algorithmen für bestimmte Microsoft Excel-Arbeitsblattfunktionen verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-121">Specifies which version of algorithms to use for certain worksheet functions.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="9c411-122">
            <para>Lese-/Schreibzugriff</para>
            <para>Standardmäßig verwenden einige der Arbeitsblattfunktionen von Microsoft Office Excel 2007 und früheren Versionen von Microsoft Excel neue Algorithmen an, die ihre Genauigkeit erhöhen. In einigen Fällen verringern die neuen Algorithmen jedoch die Leistung dieser Funktionen relativ zu ihrer Leistung in Microsoft Office Excel 2007 und früheren Versionen von Excel. Um anzugeben, dass diese Funktionen die älteren Algorithmen verwenden, um die Leistung zu erhöhen, legen Sie die <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> -Eigenschaft auf 1. Die folgende Tabelle beschreibt die möglichen Einstellungen für die <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> -Eigenschaft.</para>
            <list type="table">
              <item>
                <term>0</term>
                <description>Verwenden Sie die neuesten, genauesten Algorithmen (Standardeinstellung)</description>
              </item>
              <item>
                <term>1</term>
                <description>verwenden Microsoft Office Excel 2007 oder frühere Algorithmen</description>
              </item>
              <item>
                <term>2</term>
                <description>verwendet Microsoft Excel 2010-Algorithmen</description>
              </item>
            </list>
            <para>
              <b>Vorsicht</b>: die Einstellung der <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> -Eigenschaft auf einen anderen Wert als 0, 1 oder 2 führt zu einem nicht definierten Verhalten.</para>
            <para>Der folgenden Tabelle zusammengefasst, welche Funktionen betroffen sind, durch Festlegen der <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> -Eigenschaft auf 1. Die Funktionen, die in der Spalte "Nicht betroffene Funktionen" aufgeführt sind verwendet immer die neuesten Genauigkeitsalgorithmen oder wurden in Excel 2010 nicht geändert. Funktionsnamen, die einen Punkt (.) in ihren Namen enthalten, den Namen der entsprechenden Funktion bestimmen Implementierung in VBA als Methode der <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /> -Objekts, ersetzen durch den Unterstrich (_) für den Zeitraum. Angenommen, die VBA-Methode, die die Betaversion entspricht. Verteiler-Funktion ist die <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Dist(System.Double,System.Double,System.Double,System.Boolean,System.Object,System.Object)" /> -Methode.</para>
            <list type="table">
              <item>
                <term>BETAVERT</term>
                <description>AGGREGIERTE</description>
              </item>
              <item>
                <term>BETAINV</term>
                <description>BETA. Verteiler</description>
              </item>
              <item>
                <term>BINOMDIST</term>
                <description>BETA. INV</description>
              </item>
              <item>
                <term>CHIVERT</term>
                <description>BINOM. Verteiler</description>
              </item>
              <item>
                <term>CHIINV</term>
                <description>BINOM. INV</description>
              </item>
              <item>
                <term>CHITEST</term>
                <description>CEILING</description>
              </item>
              <item>
                <term>CONFIDENCE</term>
                <description>CEILING. PRÄZISE</description>
              </item>
              <item>
                <term>CRITBINOM</term>
                <description>CHISQ. Verteiler</description>
              </item>
              <item>
                <term>CUMIPMT</term>
                <description>CHISQ. VERTEILUNG RT</description>
              </item>
              <item>
                <term>CUMPRINC</term>
                <description>CHISQ. INV</description>
              </item>
              <item>
                <term>ERF</term>
                <description>CHISQ. FELD RT</description>
              </item>
              <item>
                <term>gibt ERFC</term>
                <description>CHISQ. TEST</description>
              </item>
              <item>
                <term>gibt EXPONDIST</term>
                <description>vertrauen. NORM</description>
              </item>
              <item>
                <term>FVERT</term>
                <description>vertrauen. T</description>
              </item>
              <item>
                <term>FINV</term>
                <description>COVAR</description>
              </item>
              <item>
                <term>FTEST</term>
                <description>Kovarianz. P</description>
              </item>
              <item>
                <term>GAMMADIST</term>
                <description>Kovarianz. S</description>
              </item>
              <item>
                <term>GAMMALN</term>
                <description>ERF. PRÄZISE</description>
              </item>
              <item>
                <term>GAMMINV</term>
                <description>gibt ERFC. PRÄZISE</description>
              </item>
              <item>
                <term>gibt HYPGEOMDIST</term>
                <description>EXPON. Verteiler</description>
              </item>
              <item>
                <term>IPMT</term>
                <description>F.VERT</description>
              </item>
              <item>
                <term>IRR</term>
                <description>F.VERT. RT</description>
              </item>
              <item>
                <term>LOGINV</term>
                <description>F.INV</description>
              </item>
              <item>
                <term>gibt LOGNORMDIST</term>
                <description>F.INV. RT</description>
              </item>
              <item>
                <term>gibt NEGBINOMDIST</term>
                <description>F.TEST</description>
              </item>
              <item>
                <term>NORMVERT</term>
                <description>FLOOR</description>
              </item>
              <item>
                <term>NORMINV</term>
                <description>FLOOR. PRÄZISE</description>
              </item>
              <item>
                <term>STANDNORMVERT</term>
                <description>GAMMA. Verteiler</description>
              </item>
              <item>
                <term>STANDNORMINV</term>
                <description>GAMMA. INV</description>
              </item>
              <item>
                <term>RMZ</term>
                <description>GAMMALN. PRÄZISE</description>
              </item>
              <item>
                <term>POISSON</term>
                <description>HYPGEOM. Verteiler</description>
              </item>
              <item>
                <term>PPMT</term>
                <description>ISO. CEILING</description>
              </item>
              <item>
                <term>STDEV</term>
                <description>LOGNORM. Verteiler</description>
              </item>
              <item>
                <term>STDEVP</term>
                <description>LOGNORM. INV</description>
              </item>
              <item>
                <term>TVERT</term>
                <description>MOD</description>
              </item>
              <item>
                <term>TINV</term>
                <description>Modus</description>
              </item>
              <item>
                <term>TTEST</term>
                <description>Modus. MULT</description>
              </item>
              <item>
                <term>VAR</term>
                <description>Modus. SNGL</description>
              </item>
              <item>
                <term>VARIANZA</term>
                <description>NEGBINOM. Verteiler</description>
              </item>
              <item>
                <term>VARP</term>
                <description>gibt NETWORKDAYS. Internes</description>
              </item>
              <item>
                <term>VARIANZENA</term>
                <description>NORM. Verteiler</description>
              </item>
              <item>
                <term>WEIBULL</term>
                <description>NORM. INV</description>
              </item>
              <item>
                <term>gibt XIRR</term>
                <description>NORM. S.VERT</description>
              </item>
              <item>
                <term>ZTEST</term>
                <description>NORM. S.INV</description>
              </item>
              <item>
                <term />%-PERZENTIL)
            </item>
              <item>
                <term />Quantil. EXKL
            </item>
              <item>
                <term />Quantil. INC
            </item>
              <item>
                <term />PERCENTRANK
            </item>
              <item>
                <term />PERCENTRANK. EXKL
            </item>
              <item>
                <term />PERCENTRANK. INC
            </item>
              <item>
                <term />POISSON. Verteiler
            </item>
              <item>
                <term />QUARTILE
            </item>
              <item>
                <term />QUARTILE zurück. EXKL
            </item>
              <item>
                <term />QUARTILE zurück. INC
            </item>
              <item>
                <term />Rang
            </item>
              <item>
                <term />Rang. AVG
            </item>
              <item>
                <term />Rang. EQ
            </item>
              <item>
                <term />STDEV. P
            </item>
              <item>
                <term />STDEV. S
            </item>
              <item>
                <term />T.VERT
            </item>
              <item>
                <term />T.DIST.2T
            </item>
              <item>
                <term />T.VERT. RT
            </item>
              <item>
                <term />T.VERT. RT
            </item>
              <item>
                <term />T.INV
            </item>
              <item>
                <term />T.INV.2T
            </item>
              <item>
                <term />T.INV. RT
            </item>
              <item>
                <term />T.TEST
            </item>
              <item>
                <term />VAR. P
            </item>
              <item>
                <term />VAR. S
            </item>
              <item>
                <term />WEEKDAY
            </item>
              <item>
                <term />WEEKNUM
            </item>
              <item>
                <term />WEIBULL. Verteiler
            </item>
              <item>
                <term />Arbeitstag. Internes
            </item>
              <item>
                <term />Z.TEST
            </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-122">
              <para>Read/write</para>
              <para>By default, some of the worksheet functions from Microsoft Office Excel 2007 and earlier versions of Microsoft Excel use new algorithms that increase their accuracy. However, in some cases, the new algorithms decrease the performance of these functions relative to their performance in Microsoft Office Excel 2007 and earlier versions of Excel. To specify that these worksheet functions use the older algorithms to increase their performance, set the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> property to 1. The following table describes the possible settings for the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> property.</para>
              <list type="table">
                <item>
                  <term>0</term>
                  <description>Use the latest, most accurate algorithms (default)</description>
                </item>
                <item>
                  <term>1</term>
                  <description>Use Microsoft Office Excel 2007 or earlier version algorithms</description>
                </item>
                <item>
                  <term>2</term>
                  <description>Use Microsoft Excel 2010 algorithms</description>
                </item>
              </list>
              <para>
                <b>Caution</b>: Setting the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> property to a value other than 0, 1, or 2 will result in undefined behavior.</para>
              <para>The following table summarizes which functions are affected by setting the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AccuracyVersion" /> property to 1. The functions that are listed in the "Functions not affected" column will always use the latest accuracy algorithms or were not changed in Excel 2010. For function names that include a period (.) in their names, to determine the name of the corresponding function implemented in VBA as a method of the <see cref="T:Microsoft.Office.Interop.Excel.WorksheetFunction" /> object, substitute the underscore character ( _ ) for the period. For example, the VBA method that corresponds to the BETA.DIST function is the <see cref="M:Microsoft.Office.Interop.Excel.WorksheetFunction.Beta_Dist(System.Double,System.Double,System.Double,System.Boolean,System.Object,System.Object)" /> method.</para>
              <list type="table">
                <item>
                  <term>BETADIST</term>
                  <description>AGGREGATE</description>
                </item>
                <item>
                  <term>BETAINV</term>
                  <description>BETA.DIST</description>
                </item>
                <item>
                  <term>BINOMDIST</term>
                  <description>BETA.INV</description>
                </item>
                <item>
                  <term>CHIDIST</term>
                  <description>BINOM.DIST</description>
                </item>
                <item>
                  <term>CHIINV</term>
                  <description>BINOM.INV</description>
                </item>
                <item>
                  <term>CHITEST</term>
                  <description>CEILING</description>
                </item>
                <item>
                  <term>CONFIDENCE</term>
                  <description>CEILING.PRECISE</description>
                </item>
                <item>
                  <term>CRITBINOM</term>
                  <description>CHISQ.DIST</description>
                </item>
                <item>
                  <term>CUMIPMT</term>
                  <description>CHISQ.DIST.RT</description>
                </item>
                <item>
                  <term>CUMPRINC</term>
                  <description>CHISQ.INV</description>
                </item>
                <item>
                  <term>ERF</term>
                  <description>CHISQ.INV.RT</description>
                </item>
                <item>
                  <term>ERFC</term>
                  <description>CHISQ.TEST</description>
                </item>
                <item>
                  <term>EXPONDIST</term>
                  <description>CONFIDENCE.NORM</description>
                </item>
                <item>
                  <term>FDIST</term>
                  <description>CONFIDENCE.T</description>
                </item>
                <item>
                  <term>FINV</term>
                  <description>COVAR</description>
                </item>
                <item>
                  <term>FTEST</term>
                  <description>COVARIANCE.P</description>
                </item>
                <item>
                  <term>GAMMADIST</term>
                  <description>COVARIANCE.S</description>
                </item>
                <item>
                  <term>GAMMALN</term>
                  <description>ERF.PRECISE</description>
                </item>
                <item>
                  <term>GAMMINV</term>
                  <description>ERFC.PRECISE</description>
                </item>
                <item>
                  <term>HYPGEOMDIST</term>
                  <description>EXPON.DIST</description>
                </item>
                <item>
                  <term>IPMT</term>
                  <description>F.DIST</description>
                </item>
                <item>
                  <term>IRR</term>
                  <description>F.DIST.RT</description>
                </item>
                <item>
                  <term>LOGINV</term>
                  <description>F.INV</description>
                </item>
                <item>
                  <term>LOGNORMDIST</term>
                  <description>F.INV.RT</description>
                </item>
                <item>
                  <term>NEGBINOMDIST</term>
                  <description>F.TEST</description>
                </item>
                <item>
                  <term>NORMDIST</term>
                  <description>FLOOR</description>
                </item>
                <item>
                  <term>NORMINV</term>
                  <description>FLOOR.PRECISE</description>
                </item>
                <item>
                  <term>NORMSDIST</term>
                  <description>GAMMA.DIST</description>
                </item>
                <item>
                  <term>NORMSINV</term>
                  <description>GAMMA.INV</description>
                </item>
                <item>
                  <term>PMT</term>
                  <description>GAMMALN.PRECISE</description>
                </item>
                <item>
                  <term>POISSON</term>
                  <description>HYPGEOM.DIST</description>
                </item>
                <item>
                  <term>PPMT</term>
                  <description>ISO.CEILING</description>
                </item>
                <item>
                  <term>STDEV</term>
                  <description>LOGNORM.DIST</description>
                </item>
                <item>
                  <term>STDEVP</term>
                  <description>LOGNORM.INV</description>
                </item>
                <item>
                  <term>TDIST</term>
                  <description>MOD</description>
                </item>
                <item>
                  <term>TINV</term>
                  <description>MODE</description>
                </item>
                <item>
                  <term>TTEST</term>
                  <description>MODE.MULT</description>
                </item>
                <item>
                  <term>VAR</term>
                  <description>MODE.SNGL</description>
                </item>
                <item>
                  <term>VARA</term>
                  <description>NEGBINOM.DIST</description>
                </item>
                <item>
                  <term>VARP</term>
                  <description>NETWORKDAYS.INTL</description>
                </item>
                <item>
                  <term>VARPA</term>
                  <description>NORM.DIST</description>
                </item>
                <item>
                  <term>WEIBULL</term>
                  <description>NORM.INV</description>
                </item>
                <item>
                  <term>XIRR</term>
                  <description>NORM.S.DIST</description>
                </item>
                <item>
                  <term>ZTEST</term>
                  <description>NORM.S.INV</description>
                </item>
                <item>
                  <term />
                  <description>PERCENTILE</description>
                </item>
                <item>
                  <term />
                  <description>PERCENTILE.EXC</description>
                </item>
                <item>
                  <term />
                  <description>PERCENTILE.INC</description>
                </item>
                <item>
                  <term />
                  <description>PERCENTRANK</description>
                </item>
                <item>
                  <term />
                  <description>PERCENTRANK.EXC</description>
                </item>
                <item>
                  <term />
                  <description>PERCENTRANK.INC</description>
                </item>
                <item>
                  <term />
                  <description>POISSON.DIST</description>
                </item>
                <item>
                  <term />
                  <description>QUARTILE</description>
                </item>
                <item>
                  <term />
                  <description>QUARTILE.EXC</description>
                </item>
                <item>
                  <term />
                  <description>QUARTILE.INC</description>
                </item>
                <item>
                  <term />
                  <description>RANK</description>
                </item>
                <item>
                  <term />
                  <description>RANK.AVG</description>
                </item>
                <item>
                  <term />
                  <description>RANK.EQ</description>
                </item>
                <item>
                  <term />
                  <description>STDEV.P</description>
                </item>
                <item>
                  <term />
                  <description>STDEV.S</description>
                </item>
                <item>
                  <term />
                  <description>T.DIST</description>
                </item>
                <item>
                  <term />
                  <description>T.DIST.2T</description>
                </item>
                <item>
                  <term />
                  <description>T.DIST.RT</description>
                </item>
                <item>
                  <term />
                  <description>T.DIST.RT</description>
                </item>
                <item>
                  <term />
                  <description>T.INV</description>
                </item>
                <item>
                  <term />
                  <description>T.INV.2T</description>
                </item>
                <item>
                  <term />
                  <description>T.INV.RT</description>
                </item>
                <item>
                  <term />
                  <description>T.TEST</description>
                </item>
                <item>
                  <term />
                  <description>VAR.P</description>
                </item>
                <item>
                  <term />
                  <description>VAR.S</description>
                </item>
                <item>
                  <term />
                  <description>WEEKDAY</description>
                </item>
                <item>
                  <term />
                  <description>WEEKNUM</description>
                </item>
                <item>
                  <term />
                  <description>WEIBULL.DIST</description>
                </item>
                <item>
                  <term />
                  <description>WORKDAY.INTL</description>
                </item>
                <item>
                  <term />
                  <description>Z.TEST</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c411-123">Aktiviert das erste mit der Arbeitsmappe verbundene Fenster.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-123">Activates the first window associated with the workbook.</span>
          </span>
          <span data-ttu-id="9c411-124">Dies wird nicht Auto_aktivieren- oder Auto_deaktivieren-Makros, die an die Arbeitsmappe angefügt werden möglicherweise ausgeführt (verwenden Sie die <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> Methode zum Ausführen dieser Makros).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-124">This won't run any Auto_Activate or Auto_Deactivate macros that might be attached to the workbook (use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run those macros).</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart ActiveChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart ActiveChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ActiveChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveChart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ ActiveChart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-125">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> -Objekt, das das aktive Diagramm (entweder ein eingebettetes Diagramm oder ein Diagrammblatt) darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-125">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the active chart (either an embedded chart or a chart sheet).</span>
          </span>
          <span data-ttu-id="9c411-126">Ein eingebettetes Diagramm wird als aktiv betrachtet, wenn es entweder markiert oder aktiviert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-126">An embedded chart is considered active when it's either selected or activated.</span>
          </span>
          <span data-ttu-id="9c411-127">Wenn kein Diagramm aktiv ist, gibt diese Eigenschaft <b>Nothing zurück</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-127">When no chart is active, this property returns <b>Nothing</b>.</span>
          </span>
          <span data-ttu-id="9c411-128">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-128">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-129">
            <para>Wenn Sie keinen Objektbezeichner angeben, gibt diese Eigenschaft das aktive Diagramm in der aktiven Arbeitsmappe zurück.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-129">
              <para>If you don't specify an object qualifier, this property returns the active chart in the active workbook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSheet">
      <MemberSignature Language="C#" Value="public object ActiveSheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActiveSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSheet As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ActiveSheet { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-130">Gibt ein Objekt, das aktive Blatt (das Blatt im Vordergrund) darstellt, in der aktiven Arbeitsmappe oder im angegebenen Fenster oder Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-130">Returns an object that represents the active sheet (the sheet on top) in the active workbook or in the specified window or workbook.</span>
          </span>
          <span data-ttu-id="9c411-131">Gibt <b>Nothing</b> zurück, wenn kein Blatt aktiv ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-131">Returns <b>Nothing</b> if no sheet is active.</span>
          </span>
          <span data-ttu-id="9c411-132">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-132">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-133">
            <para>Wenn Sie keinen Objektbezeichner angeben, gibt diese Eigenschaft das aktive Blatt in der aktiven Arbeitsmappe.</para>
            <para>, Wenn eine Arbeitsmappe in mehreren Fenstern, erscheint die <see cref="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSheet" /> Eigenschaft möglicherweise in verschiedenen Fenstern unterschiedliche.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-133">
              <para>If you don’t specify an object qualifier, this property returns the active sheet in the active workbook.</para>
              <para>If a workbook appears in more than one window, the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSheet" /> property may be different in different windows.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSlicer">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Slicer ActiveSlicer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Slicer ActiveSlicer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ActiveSlicer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSlicer As Slicer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Slicer ^ ActiveSlicer { Microsoft::Office::Interop::Excel::Slicer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2867)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2867)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Slicer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-134">Ruft ein Objekt, das den aktiven Datenschnitt in der aktiven Arbeitsmappe oder in der angegebenen Arbeitsmappe darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-134">Gets an object that represents the active slicer in the active workbook or in the specified workbook.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c411-135">Ein Objekt, das den aktiven Datenschnitt in der aktiven Arbeitsmappe oder in der angegebenen Arbeitsmappe darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-135">An object that represents the active slicer in the active workbook or in the specified workbook.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="9c411-136">
            <para>Gibt ein Nullverweis (Nothing in Visual Basic) zurück, wenn keine Datenschnitt aktiv ist.</para>
            <para>Read-only.</para>
            <para>Wenn Sie keine angeben einer <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> -Objekt, diese Eigenschaft den aktiven Datenschnitt in der aktiven Arbeitsmappe zurückgegeben.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-136">
              <para>Returns a null reference (Nothing in Visual Basic) if no slicer is active.</para>
              <para>Read-only.</para>
              <para>If you do not specify a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object, this property returns the active slicer in the active workbook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToFavorites">
      <MemberSignature Language="C#" Value="public void AddToFavorites ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToFavorites() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.AddToFavorites" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToFavorites ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToFavorites();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1476)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c411-137">Fügt eine Verknüpfung mit der Arbeitsmappe oder ein Hyperlink zum Ordner Favoriten hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-137">Adds a shortcut to the workbook or a hyperlink to the Favorites folder.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-138">Wenn ohne einen Objektbezeichner verwendet wird, gibt diese Eigenschaft ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> -Objekt, das die Anwendung Microsoft Excel darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-138">When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="9c411-139">Mit Objektkennzeichner hingegen gibt diese Eigenschaft ein <b>Application</b>-Objekt zurück, das die Erstellungsanwendung des angegebenen Objekts darstellt. (Sie können diese Eigenschaft mit einem OLE-Automatisierungsobjekt verwenden, um die Anwendung dieses Objekts zurückzugeben.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-139">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object (you can use this property with an OLE Automation object to return the application of that object).</span>
          </span>
          <span data-ttu-id="9c411-140">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-140">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyTheme">
      <MemberSignature Language="C#" Value="public void ApplyTheme (string Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyTheme([in]string Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ApplyTheme(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyTheme (Filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyTheme(System::String ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2534)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="9c411-141">Name des Designs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-141">Name of the theme.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-142">Wendet das angegebene Design auf die aktuelle Arbeitsmappe an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-142">Applies the specified theme to the current workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Author">
      <MemberSignature Language="C#" Value="public string Author { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Author" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Author" />
      <MemberSignature Language="VB.NET" Value="Public Property Author As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Author { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p110">Gibt den Autor des Kommentars zurück oder legt ihn fest. Schreibgeschützter <b>String</b>-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p110">Returns or sets the author of the comment. Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c411-145">Gibt <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-145">Returns <see cref="T:System.String" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <example>
          <span data-ttu-id="9c411-146">
            <para>Dieses Beispiel löscht alle auf dem aktiven Blatt von Jean Selva hinzugefügten Kommentare.</para>
            <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-146">
              <para>This example deletes all comments added by Jean Selva on the active sheet.</para>
              <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="9c411-147">
            <para>Dieses Beispiel löscht alle auf dem aktiven Blatt von Jean Selva hinzugefügten Kommentare.</para>
            <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-147">
              <para>This example deletes all comments added by Jean Selva on the active sheet.</para>
              <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="9c411-148">
            <para>Dieses Beispiel löscht alle auf dem aktiven Blatt von Jean Selva hinzugefügten Kommentare.</para>
            <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-148">
              <para>This example deletes all comments added by Jean Selva on the active sheet.</para>
              <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
            </span>
          </span>
        </example>
      </Docs>
    </Member>
    <Member MemberName="AutoUpdateFrequency">
      <MemberSignature Language="C#" Value="public int AutoUpdateFrequency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AutoUpdateFrequency" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateFrequency" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoUpdateFrequency As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AutoUpdateFrequency { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-149">Zurückgeben oder festlegen die Anzahl der Minuten zwischen automatische Updates an der freigegebenen Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-149">Returns or sets the number of minutes between automatic updates to the shared workbook.</span>
          </span>
          <span data-ttu-id="9c411-150">Lese-/Schreibzugriff <b>Integer</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-150">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-151">
            <para>Die <b>AutoUpdateFrequency</b> -Eigenschaft muss auf einen Wert zwischen 5 und 1,440 für diese Eigenschaft wirksam festgelegt werden.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-151">
              <para>The <b>AutoUpdateFrequency</b> property must be set to a value from 5 to 1,440 for this property to take effect.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoUpdateSaveChanges">
      <MemberSignature Language="C#" Value="public bool AutoUpdateSaveChanges { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoUpdateSaveChanges" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateSaveChanges" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoUpdateSaveChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoUpdateSaveChanges { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1443)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1443)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1443)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p112">
            <b>True</b>, wenn aktuelle Änderungen an der gemeinsam verwendeten Arbeitsmappe an andere Benutzer weitergeleitet werden, sobald die Arbeitsmappe automatisch aktualisiert wird. <b>False</b>False, wenn Änderungen nicht weitergeleitet werden (die Arbeitsmappe wird jedoch weiterhin mit Änderungen anderer Benutzer abgeglichen). Der Standardwert ist <b>True</b>. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p112">
              <b>True</b> if current changes to the shared workbook are posted to other users whenever the workbook is automatically updated. <b>False</b> if changes aren’t posted (this workbook is still synchronized with changes made by other users). The default value is <b>True</b>. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-156">
            <para>Die <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateFrequency" /> -Eigenschaft muss festgelegt werden auf einen Wert zwischen 5 und 1,440 für diese Eigenschaft wirksam wird.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-156">
              <para>The <see cref="P:Microsoft.Office.Interop.Excel._Workbook.AutoUpdateFrequency" /> property must be set to a value from 5 to 1,440 for this property to take effect.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakLink">
      <MemberSignature Language="C#" Value="public void BreakLink (string Name, Microsoft.Office.Interop.Excel.XlLinkType Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BreakLink([in]string Name, [in]valuetype Microsoft.Office.Interop.Excel.XlLinkType Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.BreakLink(System.String,Microsoft.Office.Interop.Excel.XlLinkType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BreakLink (Name As String, Type As XlLinkType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BreakLink(System::String ^ Name, Microsoft::Office::Interop::Excel::XlLinkType Type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2047)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlLinkType" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="9c411-157">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-157">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="9c411-158">Der Name der Verknüpfung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-158">The name of the link.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="9c411-159">Erforderliche <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-159">Required <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span>
          </span>
          <span data-ttu-id="9c411-160">Der Verknüpfungstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-160">The type of link.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-161">Konvertiert mit anderen Microsoft Excel- oder OLE-Quellen verknüpfte Formeln in Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-161">Converts formulas linked to other Microsoft Excel sources or OLE sources to values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuiltinDocumentProperties">
      <MemberSignature Language="C#" Value="public object BuiltinDocumentProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BuiltinDocumentProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.BuiltinDocumentProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BuiltinDocumentProperties As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BuiltinDocumentProperties { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1176)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1176)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-162">Gibt ein <see cref="T:Microsoft.Office.Core.DocumentProperties" /> -Auflistung, die alle integrierten Dokumenteigenschaften für die angegebene Arbeitsmappe darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-162">Returns a <see cref="T:Microsoft.Office.Core.DocumentProperties" /> collection that represents all the built-in document properties for the specified workbook.</span>
          </span>
          <span data-ttu-id="9c411-163">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-163">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-164">
            <para>Diese Eigenschaft gibt die gesamte Auflistung der integrierten Dokumenteigenschaften. Verwendung der <see cref="P:Microsoft.Office.Core.DocumentProperties.Item(System.Object)" /> -Methode, um ein einzelnes Element der Auflistung zurückgeben (eine <see cref="T:Microsoft.Office.Core.DocumentProperty" /> Object) indem Sie entweder den Namen der Eigenschaft oder den Auflistungsindex (als Zahl) angeben.</para>
            <para>Können Sie auf Dokumenteigenschaften entweder anhand des Indexwertes oder nach Namen verweisen möchten. Die folgende Liste enthält die verfügbaren integrierten Dokumenteigenschaften Eigenschaftennamen:</para>
            <para>Titel </para>
            <para>Betreff</para>
            <para>Autor</para>
            <para>Schlüsselwörter</para>
            <para>Kommentare</para>
            <para>Vorlage</para>
            <para>Letzter Autor</para>,
          <para>Revisionsnummer</para><para> Name der Anwendung</para><para>Datum der letzten Print</para><para>Erstellungsdatum </para><para>letzten Zeit sparen</para><para>insgesamt Bearbeitungszeit</para><para>Anzahl von Seiten,</para><para>Anzahl von Wörtern</para><para>Anzahl von Zeichen</para><para>Sicherheit</para><para> Kategorie</para><para>Format</para><para>Manager</para><para>Unternehmen</para><para>Anzahl von Bytes</para><para>Anzahl Zeilen</para><para>Anzahl der Absätze</para><para>Anzahl von Folien</para><para>Anzahl von Notizen</para><para>Ausgeblendete Folien</para><para>Anzahl von Multimedia Clips</para><para>Hyperlinkbasis</para><para>Anzahl der Zeichen (mit Leerzeichen)</para><para>Container Applikationen sind nicht erforderlich, um Werte für jede integrierte Dokumenteigenschaft zu definieren. Wenn in Microsoft Excel einen Wert für eine der integrierten Dokumenteigenschaften definiert ist, Lesen der <see cref="P:Microsoft.Office.Core.DocumentProperty.Value" /> -Eigenschaft für diese Dokumenteigenschaft einen Fehler verursacht.</para><para>Die <b>Item</b> -Methode die Standardmethode für die <b>DocumentProperties</b> -Auflistung ist.</para><para>Verwendung der <see cref="P:Microsoft.Office.Interop.Excel._Workbook.CustomDocumentProperties" /> -Eigenschaft auf die Auflistung benutzerdefinierter Dokumenteigenschaften zurückzugeben.</para><para /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-164">
              <para>This property returns the entire collection of built-in document properties. Use the <see cref="P:Microsoft.Office.Core.DocumentProperties.Item(System.Object)" /> method to return a single member of the collection (a <see cref="T:Microsoft.Office.Core.DocumentProperty" /> object) by specifying either the name of the property or the collection index (as a number).</para>
              <para>You can refer to document properties either by index value or by name. The following list shows the available built-in document property names:</para>
              <para>Title </para>
              <para>Subject</para>
              <para>Author</para>
              <para>Keywords</para>
              <para>Comments</para>
              <para>Template</para>
              <para>Last Author</para>
              <para>Revision Number</para>
              <para>Application Name</para>
              <para>Last Print Date</para>
              <para>Creation Date </para>
              <para>Last Save Time</para>
              <para>Total Editing Time</para>
              <para>Number of Pages</para>
              <para>Number of Words</para>
              <para>Number of Characters</para>
              <para>Security</para>
              <para>Category</para>
              <para>Format</para>
              <para>Manager</para>
              <para>Company</para>
              <para>Number of Bytes</para>
              <para>Number of Lines</para>
              <para>Number of Paragraphs</para>
              <para>Number of Slides</para>
              <para>Number of Notes</para>
              <para>Number of Hidden Slides</para>
              <para>Number of Multimedia Clips</para>
              <para>Hyperlink Base</para>
              <para>Number of Characters (with spaces)</para>
              <para>Container applications aren’t required to define values for every built-in document property. If Microsoft Excel doesn’t define a value for one of the built-in document properties, reading the <see cref="P:Microsoft.Office.Core.DocumentProperty.Value" /> property for that document property causes an error.</para>
              <para>The <b>Item</b> method is the default method for the <b>DocumentProperties</b> collection.</para>
              <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.CustomDocumentProperties" /> property to return the collection of custom document properties.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculationVersion">
      <MemberSignature Language="C#" Value="public int CalculationVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CalculationVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CalculationVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculationVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CalculationVersion { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1806)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-165">Gibt eine Zahl, deren vier rechts stehende Ziffern die Nummer der Nebenversion des Berechnungsmoduls werden und deren andere Ziffern (links) werden die Hauptversion von Microsoft Excel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-165">Returns a number whose rightmost four digits are the minor calculation engine version number and whose other digits (on the left) are the major version of Microsoft Excel.</span>
          </span>
          <span data-ttu-id="9c411-166">Für eine <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> -Objekts, diese Eigenschaft gibt die Informationen zur Version von Excel, die die Arbeitsmappe zuletzt vollständig neu berechnet wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-166">For a <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object, this property returns the information about the version of Excel that the workbook was last fully recalculated by.</span>
          </span>
          <span data-ttu-id="9c411-167">Schreibgeschützter <b>Integer</b>-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-167">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-168">
            <para>Wenn die Arbeitsmappe in einer früheren Version von Excel gespeichert wurde, und die Arbeitsmappe vollständig neu berechnet wurde, gibt diese Eigenschaft 0 zurück.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-168">
              <para>If the workbook was saved in an earlier version of Excel, and if the workbook hasn't been fully recalculated, this property returns 0.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCheckIn">
      <MemberSignature Language="C#" Value="public bool CanCheckIn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCheckIn() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.CanCheckIn" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCheckIn () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanCheckIn();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2053)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c411-169">
            <b>True,</b> Wenn Microsoft Excel eine angegebene Arbeitsmappe auf einem Server einchecken kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-169">
              <b>True</b> if Microsoft Excel can check in a specified workbook to a server.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaseSensitive">
      <MemberSignature Language="C#" Value="public bool CaseSensitive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CaseSensitive" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CaseSensitive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CaseSensitive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CaseSensitive { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3056)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3056)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-170">
            <b>True,</b> Wenn die Arbeitsmappe zwischen Groß- und Kleinschreibung beim Vergleichen von Inhalten unterschieden wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-170">
              <b>True</b> if the workbook distinguishes between upper and lower case when comparing content.</span>
          </span>
          <span data-ttu-id="9c411-171">Schreibgeschützten <b>booleschen</b> (<b>Bool</b> in c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-171">Read-only <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeFileAccess">
      <MemberSignature Language="C#" Value="public void ChangeFileAccess (Microsoft.Office.Interop.Excel.XlFileAccess Mode, object WritePassword, object Notify);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeFileAccess([in]valuetype Microsoft.Office.Interop.Excel.XlFileAccess Mode, [in]object WritePassword, [in]object Notify) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ChangeFileAccess(Microsoft.Office.Interop.Excel.XlFileAccess,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeFileAccess (Mode As XlFileAccess, Optional WritePassword As Object, Optional Notify As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(989)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Mode" Type="Microsoft.Office.Interop.Excel.XlFileAccess" />
        <Parameter Name="WritePassword" Type="System.Object" />
        <Parameter Name="Notify" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Mode">
          <span data-ttu-id="9c411-172">Erforderliche <see cref="T:Microsoft.Office.Interop.Excel.XlFileAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-172">Required <see cref="T:Microsoft.Office.Interop.Excel.XlFileAccess" />.</span>
          </span>
          <span data-ttu-id="9c411-173">Gibt den neuen Zugriffsmodus an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-173">Specifies the new access mode.</span>
          </span>
        </param>
        <param name="WritePassword">
          <span data-ttu-id="9c411-174">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-174">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-175">Gibt das Schreibschutz-Kennwort an, ob die Datei schreibgeschützt ist und <paramref name="Mode" /> ist der <b>Wert xlReadWrite hat</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-175">Specifies the write-reserved password if the file is write reserved and <paramref name="Mode" /> is <b>xlReadWrite</b>.</span>
          </span>
          <span data-ttu-id="9c411-176">Ignoriert, wenn kein Kennwort für die Datei vorhanden ist oder wenn <paramref name="Mode" /><b>Wert XlReadOnly</b>ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-176">Ignored if there's no password for the file or if <paramref name="Mode" /> is <b>xlReadOnly</b>.</span>
          </span>
        </param>
        <param name="Notify">
          <span data-ttu-id="9c411-177">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-177">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-178">Beim Wert <b>True</b> (oder keine Angabe) wird der Benutzer benachrichtigt, falls auf die Datei nicht sofort zugegriffen werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-178">
              <b>True</b> (or omitted) to notify the user if the file cannot be immediately accessed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-p121">Ändert die Zugriffsberechtigungen zu der Arbeitsmappe. Dazu muss u.U. eine aktualisierte Version von dem Datenträger geöffnet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p121">Changes the access permissions for the workbook. This may require an updated version to be loaded from the disk.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9c411-181">
            <para>Wenn Sie eine Datei im schreibgeschützten Modus geöffnet haben, verfügen nicht Sie exklusiven Zugriff auf die Datei. Wenn Sie eine Datei von den Lese-/Schreibzugriff, Microsoft Excel eine neue Kopie der Datei, um sicherzustellen, dass laden müssen schreibgeschützt ändern wurden keine Änderungen vorgenommen, während Sie die Datei als schreibgeschützt geöffnet wurde.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-181">
              <para>If you have a file open in read-only mode, you don't have exclusive access to the file. If you change a file from read-only to read/write, Microsoft Excel must load a new copy of the file to ensure that no changes were made while you had the file open as read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeHistoryDuration">
      <MemberSignature Language="C#" Value="public int ChangeHistoryDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChangeHistoryDuration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ChangeHistoryDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property ChangeHistoryDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChangeHistoryDuration { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1444)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1444)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1444)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-182">Zurückgeben oder festlegen die Anzahl der Tage im Änderungsprotokoll der freigegebenen Arbeitsmappe angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-182">Returns or sets the number of days shown in the shared workbook's change history.</span>
          </span>
          <span data-ttu-id="9c411-183">Lese-/Schreibzugriff <b>Integer</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-183">Read/write <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-184">
            <para>Alle Änderungen im Änderungsprotokoll, die älter sind als die Einstellung für diese Eigenschaft werden entfernt, wenn die Arbeitsmappe geschlossen wird.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-184">
              <para>Any changes in the change history older than the setting for this property are removed when the workbook is closed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeLink">
      <MemberSignature Language="C#" Value="public void ChangeLink (string Name, string NewName, Microsoft.Office.Interop.Excel.XlLinkType Type = Microsoft.Office.Interop.Excel.XlLinkType.xlLinkTypeExcelLinks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeLink([in]string Name, [in]string NewName, [in]valuetype Microsoft.Office.Interop.Excel.XlLinkType Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ChangeLink(System.String,System.String,Microsoft.Office.Interop.Excel.XlLinkType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeLink (Name As String, NewName As String, Optional Type As XlLinkType = Microsoft.Office.Interop.Excel.XlLinkType.xlLinkTypeExcelLinks)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(802)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="NewName" Type="System.String" />
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlLinkType" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="9c411-185">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-185">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="9c411-186">Der Name der Microsoft Excel- oder DDE/OLE-Verknüpfung geändert werden muss, wie er von zurückgegeben wurde, die <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-186">The name of the Microsoft Excel or DDE/OLE link to be changed, as it was returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</span>
          </span>
        </param>
        <param name="NewName">
          <span data-ttu-id="9c411-187">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-187">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="9c411-188">Der neue Name der Verknüpfung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-188">The new name of the link.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="9c411-189">Optionale <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-189">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span>
          </span>
          <span data-ttu-id="9c411-190">Der Verknüpfungstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-190">The link type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-191">Ändert eine Verknüpfung von einem Dokument zu einem anderen Dokument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-191">Changes a link from one document to another.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartDataPointTrack">
      <MemberSignature Language="C#" Value="public bool ChartDataPointTrack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChartDataPointTrack" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ChartDataPointTrack" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartDataPointTrack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChartDataPointTrack { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2998)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-192">
            <b>True</b> bewirkt, dass alle Diagramme im aktuellen Dokument zum Nachverfolgen der tatsächliche Daten zeigen Sie auf dem sie verbunden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-192">
              <b>True</b> will cause all charts in the current document to track the actual data point to which it’s attached.</span>
          </span>
          <span data-ttu-id="9c411-193">
            <b>"False"</b> wird auf den Index des Datenpunkts nachverfolgen zurückgesetzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-193">
              <b>False</b> will revert back to tracking the index of the data point.</span>
          </span>
          <span data-ttu-id="9c411-194">
            <b>Boolean</b> (<b>Bool</b> in c#) Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-194">
              <b>Boolean</b> (<b>bool</b> in C#) Read/Write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Charts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Charts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Charts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Charts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Charts As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Charts { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(121)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-195">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> -Auflistung, die alle Diagrammblätter in der angegebenen Arbeitsmappe darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-195">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the chart sheets in the specified workbook.</span>
          </span>
          <span data-ttu-id="9c411-196">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-196">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-197">
            <para>Die Verwendung dieser Eigenschaft ohne einen Objektbezeichner gibt alle Diagrammblätter in der aktiven Arbeitsmappe zurück.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-197">
              <para>Using this property without an object qualifier returns all chart sheets in the active workbook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCompatibility">
      <MemberSignature Language="C#" Value="public bool CheckCompatibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCompatibility" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CheckCompatibility" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCompatibility As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCompatibility { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2528)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2528)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2528)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-198">Steuert, ob die kompatibilitätsprüfung automatisch ausgeführt wird, wenn die Arbeitsmappe gespeichert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-198">Controls whether or not the compatibility checker is run automatically when the workbook is saved.</span>
          </span>
          <span data-ttu-id="9c411-199">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-199">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c411-200">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-200">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckIn">
      <MemberSignature Language="C#" Value="public void CheckIn (object SaveChanges, object Comments, object MakePublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckIn([in]object SaveChanges, [in]object Comments, [in]object MakePublic) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.CheckIn(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckIn (Optional SaveChanges As Object, Optional Comments As Object, Optional MakePublic As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2051)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object" />
        <Parameter Name="Comments" Type="System.Object" />
        <Parameter Name="MakePublic" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SaveChanges">
          <span data-ttu-id="9c411-201">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-201">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-202">
            <b>True,</b> Änderungen werden gespeichert und in das Dokument überprüft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-202">
              <b>True</b> saves changes and checks in the document.</span>
          </span>
          <span data-ttu-id="9c411-203">
            <b>False</b> gibt das Dokument auf einen Status eingecheckt ohne Revision gespeichert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-203">
              <b>False</b> returns the document to a checked-in status without saving revision.</span>
          </span>
        </param>
        <param name="Comments">
          <span data-ttu-id="9c411-204">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-204">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-205">Ermöglicht dem Benutzer das Kontrollkästchen Eincheckkommentare für die Überarbeitung der Arbeitsmappe eingecheckt wird (gilt nur, wenn <paramref name="SaveChanges" /> gleich <b>true ist</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-205">Allows the user to enter check-in comments for the revision of the workbook being checked in (applies only if <paramref name="SaveChanges" /> equals <b>True</b>).</span>
          </span>
        </param>
        <param name="MakePublic">
          <span data-ttu-id="9c411-206">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-206">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-207">
            <b>True</b> ermöglicht es dem Benutzer, die Arbeitsmappe zu veröffentlichen, nachdem es eingecheckt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-207">
              <b>True</b> allows the user to publish the workbook after it has been checked in.</span>
          </span>
          <span data-ttu-id="9c411-208">Dadurch wird eine Arbeitsmappe für den Genehmigungsprozess, was in einer Version der Arbeitsmappe für Benutzer mit schreibgeschütztem Zugriff auf die Arbeitsmappe veröffentlicht wird führen kann (gilt nur, wenn <paramref name="SaveChanges" /> gleich <b>true ist</b>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-208">This submits the workbook for the approval process, which can eventually result in a version of the workbook being published to users with read-only rights to the workbook (applies only if <paramref name="SaveChanges" /> equals <b>True</b>).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-209">Gibt eine Arbeitsmappe von einem lokalen Computer auf einen Server zurück und die lokale Arbeitsmappe als schreibgeschützt festgelegt, so, dass es nicht lokal bearbeitet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-209">Returns a workbook from a local computer to a server and sets the local workbook to read-only so that it cannot be edited locally.</span>
          </span>
          <span data-ttu-id="9c411-210">Durch Aufrufen dieser Methode wird die Arbeitsmappe auch geschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-210">Calling this method will also close the workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckInWithVersion">
      <MemberSignature Language="C#" Value="public void CheckInWithVersion (object SaveChanges, object Comments, object MakePublic, object VersionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckInWithVersion([in]object SaveChanges, [in]object Comments, [in]object MakePublic, [in]object VersionType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.CheckInWithVersion(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckInWithVersion (Optional SaveChanges As Object, Optional Comments As Object, Optional MakePublic As Object, Optional VersionType As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2517)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object" />
        <Parameter Name="Comments" Type="System.Object" />
        <Parameter Name="MakePublic" Type="System.Object" />
        <Parameter Name="VersionType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SaveChanges">
          <span data-ttu-id="9c411-211">
            <b>true</b> , wenn die Arbeitsmappe auf dem Server gespeichert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-211">
              <b>true</b> to save the workbook to the server location.</span>
          </span>
          <span data-ttu-id="9c411-212">Der Standardwert ist <b>true</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-212">The default is <b>true</b>.</span>
          </span>
        </param>
        <param name="Comments">
          <span data-ttu-id="9c411-213">Kommentare für die Überarbeitung der Arbeitsmappe eingecheckt wird (gilt nur, wenn <paramref name="SaveChanges" /> auf <b>true</b>festgelegt ist).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-213">Comments for the revision of the workbook being checked in (applies only if <paramref name="SaveChanges" /> is set to <b>true</b>).</span>
          </span>
        </param>
        <param name="MakePublic">
          <span data-ttu-id="9c411-214">
            <b>true</b> ermöglicht es dem Benutzer, die Arbeitsmappe zu veröffentlichen, nachdem es eingecheckt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-214">
              <b>true</b> to allow the user to publish the workbook after it is checked in.</span>
          </span>
        </param>
        <param name="VersionType">
          <span data-ttu-id="9c411-215">Gibt Versionsinformationen für die Arbeitsmappe an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-215">Specifies versioning information for the workbook.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-216">Speichert eine Arbeitsmappe von einem lokalen Computer auf einem Server und legt für die lokale Arbeitsmappe einen Schreibschutz fest, sodass sie nicht lokal bearbeitet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-216">Saves a workbook to a server from a local computer, and sets the local workbook to read-only so that it cannot be edited locally.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9c411-217">
            <para>Einstellung der <paramref name="MakePublic" /> Parameter auf <b>true fest,</b> sendet die Arbeitsmappe für den Genehmigungsprozess, was in einer Version der Arbeitsmappe für Benutzer mit schreibgeschütztem Zugriff auf die Arbeitsmappe veröffentlicht wird führen kann (gilt nur, wenn <paramref name="SaveChanges" /> auf <b>"true" festgelegt ist </b>). </para>
            <para>, Um in Microsoft Excel integrierten Features zur Zusammenarbeit genutzt werden können, müssen Dokumente auf einem Microsoft SharePoint Server gespeichert werden.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-217">
              <para>Setting the <paramref name="MakePublic" /> parameter to <b>true</b> submits the workbook for the approval process, which can eventually result in a version of the workbook being published to users with read-only rights to the workbook (applies only if <paramref name="SaveChanges" /> is set to <b>true</b>). </para>
              <para>To take advantage of the collaboration features built into Microsoft Excel, documents must be stored on a Microsoft SharePoint Server. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (object SaveChanges, object Filename, object RouteWorkbook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close([in]object SaveChanges, [in]object Filename, [in]object RouteWorkbook) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Close(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (Optional SaveChanges As Object, Optional Filename As Object, Optional RouteWorkbook As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(277)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="RouteWorkbook" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SaveChanges">
          <span data-ttu-id="9c411-218">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-218">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-219">Wenn keine Änderungen an der Arbeitsmappe vorhanden sind, wird dieses Argument ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-219">If there are no changes to the workbook, this argument is ignored.</span>
          </span>
          <span data-ttu-id="9c411-220">Wenn es Änderungen an der Arbeitsmappe und die Arbeitsmappe in anderen geöffneten Fenstern angezeigt wird, wird dieses Argument ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-220">If there are changes to the workbook and the workbook appears in other open windows, this argument is ignored.</span>
          </span>
          <span data-ttu-id="9c411-221">Wenn Änderungen an der Arbeitsmappe vorhanden sind, aber die Arbeitsmappe nicht in einem anderen geöffneten Fenster angezeigt, gibt dieses Argument, ob Änderungen gespeichert werden sollen, wie in der folgenden Tabelle dargestellt. ValueAction<b>True</b>speichert die Änderungen an der Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-221">If there are changes to the workbook but the workbook doesn't appear in any other open windows, this argument specifies whether changes should be saved, as shown in the following table.ValueAction<b>True</b>Saves the changes to the workbook.</span>
          </span>
          <span data-ttu-id="9c411-222">Wenn kein noch ein Dateinamen ein, klicken Sie dann mit der Arbeitsmappe, verknüpfte <paramref name="FileName" /> wird verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-222">If there is not yet a file name associated with the workbook, then <paramref name="FileName" /> is used.</span>
          </span>
          <span data-ttu-id="9c411-223">Wenn <paramref name="FileName" /> wird Length angegeben, der Benutzer wird aufgefordert, einen Dateinamen angeben. <b>"False"</b> Die Änderungen wird an dieser Datei nicht gespeichert werden. OmittedDisplays ein Dialogfeld mit der Benutzer aufgefordert, ob Sie die Änderungen zu speichern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-223">If <paramref name="FileName" /> is omitted, the user is asked to supply a file name.<b>False</b>Does not save the changes to this file.OmittedDisplays a dialog box asking the user whether or not to save changes.</span>
          </span>
        </param>
        <param name="Filename">
          <span data-ttu-id="9c411-224">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-224">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-225">Speichern Sie Änderungen unter diesem Dateinamen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-225">Save changes under this file name.</span>
          </span>
        </param>
        <param name="RouteWorkbook">
          <span data-ttu-id="9c411-226">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-226">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-227">Wenn die Arbeitsmappe nicht an den nächsten Empfänger (wenn es keinen Verteiler oder bereits weitergeleitet wurde) weitergeleitet werden muss, wird dieses Argument ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-227">If the workbook doesn't need to be routed to the next recipient (if it has no routing slip or has already been routed), this argument is ignored.</span>
          </span>
          <span data-ttu-id="9c411-228">Andernfalls leitet Microsoft Excel die Arbeitsmappe, wie in der folgenden Tabelle dargestellt. ValueMeaning<b>True</b>die Arbeitsmappe an den nächsten Empfänger gesendet. <b>"False"</b> Die Arbeitsmappe nicht gesendet werden. OmittedDisplays ein Dialogfeld mit der Benutzer gefragt, ob die Arbeitsmappe weitergeleitet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-228">Otherwise, Microsoft Excel routes the workbook as shown in the following table.ValueMeaning<b>True</b>Sends the workbook to the next recipient.<b>False</b>Doesn't send the workbook.OmittedDisplays a dialog box asking the user whether the workbook should be sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-229">Schließt das Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-229">Closes the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9c411-230">
            <para>Schließen einer Arbeitsmappe mithilfe der <b>Close</b> -Methode wird nicht in der Arbeitsmappe keine Auto_schließen-Makros ausgeführt. Verwendung der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> -Methode, um die Auto_schließen-Makros ausgeführt werden sollen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-230">
              <para>Closing a workbook using the <b>Close</b> method doesn't run any Auto_Close macros in the workbook. Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run the Auto_Close macros.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeName">
      <MemberSignature Language="C#" Value="public string CodeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CodeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1373)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-231">Gibt den Namen der Code für das Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-231">Returns the code name for the object.</span>
          </span>
          <span data-ttu-id="9c411-232">Schreibgeschützter <b>String</b>-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-232">Read-only <b>String</b>.</span>
          </span>
          <span data-ttu-id="9c411-233">Der Wert, den Sie in der Zelle rechts neben <b>(Name)</b> im Fenster Eigenschaften finden Sie unter wird der Codename des ausgewählten Objekts an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-233">The value that you see in the cell to the right of <b>(Name)</b> in the Properties window is the code name of the selected object.</span>
          </span>
          <span data-ttu-id="9c411-234">Zur Entwurfszeit können Sie den Namen eines Objekts Code durch Ändern dieses Werts ändern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-234">At design time, you can change the code name of an object by changing this value.</span>
          </span>
          <span data-ttu-id="9c411-235">Diese Eigenschaft kann nicht programmgesteuert zur Laufzeit geändert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-235">You cannot programmatically change this property at run time.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-236">
            <para>Der Codename für ein Objekt kann verwendet werden, an der Stelle ein Ausdruck, der das Objekt zurückgibt.</para>
            <para>Ist es möglich, dass der Name des Arbeitsblatts aus der Codename des ersten unterschiedlich sein. Beim Erstellen Sie ein Arbeitsblatt, das Blatt und Codename identisch sind, aber ändern den Namen des Arbeitsblatts wird der Codename nicht geändert und Ändern des Codenamens (Eigenschaftenfenster in Visual Basic-Editor) nicht der Name des Arbeitsblatts.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-236">
              <para>The code name for an object can be used in place of an expression that returns the object.</para>
              <para>It’s possible for the sheet name to be different from the code name. When you create a sheet, the sheet name and code name are the same, but changing the sheet name doesn’t change the code name, and changing the code name (using the Properties window in the Visual Basic Editor) doesn’t change the sheet name.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Colors">
      <MemberSignature Language="C#" Value="public object Colors[object Index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Colors(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Colors(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Property Colors(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Colors[System::Object ^] { System::Object ^ get(System::Object ^ Index); void set(System::Object ^ Index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(286)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="9c411-237">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-237">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-238">Die Anzahl der Farbe (von 1 bis 56).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-238">The color number (from 1 to 56).</span>
          </span>
          <span data-ttu-id="9c411-239">Wenn dieses Argument nicht angegeben ist, gibt diese Methode ein Array, das alle 56 Farben in der Palette enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-239">If this argument isn’t specified, this method returns an array that contains all 56 of the colors in the palette.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-240">Zurückgeben oder Festlegen der Farben in der Palette für die Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-240">Returns or sets colors in the palette for the workbook.</span>
          </span>
          <span data-ttu-id="9c411-241">Die Palette hat 56 Einträge, die durch einen RGB-Wert dargestellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-241">The palette has 56 entries, each represented by an RGB value.</span>
          </span>
          <span data-ttu-id="9c411-242">Lese-Schreib- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-242">Read/write <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandBars">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CommandBars CommandBars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CommandBars CommandBars" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CommandBars" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBars As CommandBars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CommandBars ^ CommandBars { Microsoft::Office::Core::CommandBars ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1439)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CommandBars</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-243">Gibt ein <see cref="P:Microsoft.Office.Interop.Excel._Workbook.CommandBars" /> -Objekt, das die Microsoft Excel-Befehlsleisten darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-243">Returns a <see cref="P:Microsoft.Office.Interop.Excel._Workbook.CommandBars" /> object that represents the Microsoft Excel command bars.</span>
          </span>
          <span data-ttu-id="9c411-244">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-244">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-245">
            <para>, Wenn eine Arbeitsmappe in eine andere Anwendung eingebettet ist und vom Benutzer durch Doppelklicken auf die Arbeitsmappe, die Verwendung dieser Eigenschaft ein <b>Workbook</b> -Objekt aktiviert gibt den Satz von Microsoft Excel-Befehlsleisten in der anderen Anwendung zur Verfügung stehen. In allen anderen Fällen die Verwendung dieser Eigenschaft mit <b>einem Arbeitsmappenobjekt</b> gibt <b>Nothing zurück</b>.</para>
            <para>Gibt es keine Möglichkeit zum Zurückgeben des Satzes mit einer Arbeitsmappe verbundenen Befehlsleisten.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-245">
              <para>When a workbook is embedded in another application and activated by the user by double-clicking the workbook, using this property with a <b>Workbook</b> object returns the set of Microsoft Excel command bars available within the other application. At all other times, using this property with a <b>Workbook</b> object returns <b>Nothing</b>.</para>
              <para>There is no programmatic way to return the set of command bars attached to a workbook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public string Comments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Comments" />
      <MemberSignature Language="VB.NET" Value="Public Property Comments As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comments { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(575)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-246">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> -Auflistung, die alle Kommentare für das angegebene Arbeitsblatt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-246">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Comments" /> collection that represents all the comments for the specified worksheet.</span>
          </span>
          <span data-ttu-id="9c411-247">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-247">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c411-248">Gibt <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-248">Returns <see cref="T:System.String" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <example>
          <span data-ttu-id="9c411-249">
            <para>Dieses Beispiel löscht alle auf dem aktiven Blatt von Jean Selva hinzugefügten Kommentare.</para>
            <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-249">
              <para>This example deletes all comments added by Jean Selva on the active sheet.</para>
              <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="9c411-250">
            <para>Dieses Beispiel löscht alle auf dem aktiven Blatt von Jean Selva hinzugefügten Kommentare.</para>
            <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-250">
              <para>This example deletes all comments added by Jean Selva on the active sheet.</para>
              <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
            </span>
          </span>
        </example>
        <example>
          <span data-ttu-id="9c411-251">
            <para>Dieses Beispiel löscht alle auf dem aktiven Blatt von Jean Selva hinzugefügten Kommentare.</para>
            <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-251">
              <para>This example deletes all comments added by Jean Selva on the active sheet.</para>
              <code>&lt;span class="label"&gt;For Each c in ActiveSheet.Comments     If c.&lt;/span&gt;
&lt;i&gt;Author&lt;/i&gt;
&lt;span class="label"&gt;= "Jean Selva" Then c.Delete Next&lt;/span&gt;</code>
            </span>
          </span>
        </example>
      </Docs>
    </Member>
    <Member MemberName="ConflictResolution">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSaveConflictResolution ConflictResolution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSaveConflictResolution ConflictResolution" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ConflictResolution" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictResolution As XlSaveConflictResolution" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSaveConflictResolution ConflictResolution { Microsoft::Office::Interop::Excel::XlSaveConflictResolution get(); void set(Microsoft::Office::Interop::Excel::XlSaveConflictResolution value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1175)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSaveConflictResolution</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-252">Zurückgeben oder festlegen sind wie Konflikte gelöst werden bei der Aktualisierung einer freigegebenen Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-252">Returns or sets the way conflicts are to be resolved whenever a shared workbook is updated.</span>
          </span>
          <span data-ttu-id="9c411-253">Lese-/Schreibzugriff <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-253">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connections">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Connections Connections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Connections Connections" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Connections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connections As Connections" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Connections ^ Connections { Microsoft::Office::Interop::Excel::Connections ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2513)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2513)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Connections</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-254">Die <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Connections" /> -Eigenschaft stellt eine Verbindung zwischen der Arbeitsmappe und einer ODBC- oder eine OLEDB-Datenquelle her und aktualisiert die Daten ohne den Benutzer aufzufordern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-254">The <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Connections" /> property establishes a connection between the workbook and an ODBC or an OLEDB data source and refreshes the data without prompting the user.</span>
          </span>
          <span data-ttu-id="9c411-255">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-255">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.Connections" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionsDisabled">
      <MemberSignature Language="C#" Value="public bool ConnectionsDisabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConnectionsDisabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ConnectionsDisabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionsDisabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConnectionsDisabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2536)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p144">Deaktiviert die externen Verbindungen oder Verknüpfungen in der Arbeitsmappe. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p144">Disables the external connections or links in the workbook. Read-only</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c411-258">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-258">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public object Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Container" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Container" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Container As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Container { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1190)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1190)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p145">Gibt das Objekt zurück, das die Containeranwendung für das angegebene OLE-Objekt darstellt. Schreibgeschützter <b>Object</b>-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p145">Returns the object that represents the container application for the specified OLE object. Read-only <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-261">
            <para>Diese Eigenschaft bietet eine Möglichkeit zum Zugriff auf das Objektmodell der containeranwendung, wenn eine Excel-Arbeitsmappe innerhalb einer hostanwendung wie beispielsweise Microsoft Internet Explorer geöffnet wird.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-261">
              <para>This property provides a way to access the object model of the container application if an Excel workbook is opened within a host application such as Microsoft Internet Explorer.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTypeProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MetaProperties ContentTypeProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.MetaProperties ContentTypeProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ContentTypeProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentTypeProperties As MetaProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MetaProperties ^ ContentTypeProperties { Microsoft::Office::Core::MetaProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2512)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2512)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MetaProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-262">Gibt ein <see cref="T:Microsoft.Office.Core.MetaProperties" /> -Auflistung, die in der Arbeitsmappe gespeicherte Metadaten beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-262">Returns a <see cref="T:Microsoft.Office.Core.MetaProperties" /> collection that describes the metadata stored in the workbook.</span>
          </span>
          <span data-ttu-id="9c411-263">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-263">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c411-264">
            <b>MetaProperties</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-264">
              <b>MetaProperties</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBackup">
      <MemberSignature Language="C#" Value="public bool CreateBackup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CreateBackup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CreateBackup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CreateBackup As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CreateBackup { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(287)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(287)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p147">
            <b>True</b>, wenn beim Speichern der Datei eine Sicherungsdatei erstellt wird. <b>Boolean</b>-Wert mit Lesezugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p147">
              <b>True</b> if a backup file is created when this file is saved. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-267">Gibt eine Konstante in der <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> -Enumeration, die die Anwendung angibt, in der dieses Objekt erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-267">Returns a constant in the <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /> enumeration that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="9c411-268">Wenn das Objekt in Microsoft Excel erstellt wurde, gibt diese Eigenschaft die Zeichenfolge XCEL zurück, dies entspricht die hexadezimale Zahl 5843454 c ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-268">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="9c411-269">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-269">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-270">
            <para>Die <b>Creator</b> -Eigenschaft ist in Microsoft Excel für den Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen verfügt über entwickelt. Der Erstellercode von Microsoft Excel lautet beispielsweise XCEL zurück.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-270">
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomDocumentProperties">
      <MemberSignature Language="C#" Value="public object CustomDocumentProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CustomDocumentProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CustomDocumentProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomDocumentProperties As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CustomDocumentProperties { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1177)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1177)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-271">Zurückgeben oder Festlegen einer <see cref="T:Microsoft.Office.Core.DocumentProperties" /> -Auflistung, die alle benutzerdefinierten Dokumenteigenschaften für die angegebene Arbeitsmappe darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-271">Returns or sets a <see cref="T:Microsoft.Office.Core.DocumentProperties" /> collection that represents all the custom document properties for the specified workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-272">
            <para>Diese Eigenschaft gibt die gesamte Auflistung der benutzerdefinierten Dokumenteigenschaften. Verwendung der <see cref="P:Microsoft.Office.Core.DocumentProperties.Item(System.Object)" /> -Methode, um ein einzelnes Element der Auflistung zurückgeben (eine <see cref="T:Microsoft.Office.Core.DocumentProperty" /> Object) indem Sie entweder den Namen der Eigenschaft oder den Auflistungsindex (als Zahl) angeben.</para>
            <para>Die <b>Item</b> -Methode die Standardmethode für die <b>DocumentProperties</b> -Auflistung ist.</para>
            <para>Verwendung der <see cref="P:Microsoft.Office.Interop.Excel._Workbook.BuiltinDocumentProperties" /> -Eigenschaft auf die Auflistung integrierter Dokumenteigenschaften zurückzugeben.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-272">
              <para>This property returns the entire collection of custom document properties. Use the <see cref="P:Microsoft.Office.Core.DocumentProperties.Item(System.Object)" /> method to return a single member of the collection (a <see cref="T:Microsoft.Office.Core.DocumentProperty" /> object) by specifying either the name of the property or the collection index (as a number).</para>
              <para>The <b>Item</b> method is the default method for the <b>DocumentProperties</b> collection.</para>
              <para>Use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.BuiltinDocumentProperties" /> property to return the collection of built-in document properties.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomViews">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CustomViews CustomViews { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CustomViews CustomViews" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CustomViews" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomViews As CustomViews" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CustomViews ^ CustomViews { Microsoft::Office::Interop::Excel::CustomViews ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1456)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1456)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CustomViews</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-273">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.CustomViews" /> -Auflistung, die alle benutzerdefinierten Ansichten der Arbeitsmappe darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-273">Returns a <see cref="T:Microsoft.Office.Interop.Excel.CustomViews" /> collection that represents all the custom views for the workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomXMLParts">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.CustomXMLParts CustomXMLParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.CustomXMLParts CustomXMLParts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.CustomXMLParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomXMLParts As CustomXMLParts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::CustomXMLParts ^ CustomXMLParts { Microsoft::Office::Core::CustomXMLParts ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2530)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2530)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.CustomXMLParts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-274">Gibt ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-274">Returns a.</span>
          </span>
          <span data-ttu-id="9c411-275">
            <see cref="T:Microsoft.Office.Core.CustomXMLParts" />eine Auflistung, die den benutzerdefinierten XML-Code in den XML-Datenspeicher darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-275">
              <see cref="T:Microsoft.Office.Core.CustomXMLParts" /> collection that represents the custom XML in the XML data store.</span>
          </span>
          <span data-ttu-id="9c411-276">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-276">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c411-277">
            <b>CustomXMLParts</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-277">
              <b>CustomXMLParts</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Date1904">
      <MemberSignature Language="C#" Value="public bool Date1904 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Date1904" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Date1904" />
      <MemberSignature Language="VB.NET" Value="Public Property Date1904 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Date1904 { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(403)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p150">
            <b>True</b>, falls in der Arbeitsmappe das 1904-Datumssystem verwendet wird. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p150">
              <b>True</b> if the workbook uses the 1904 date system. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPivotTableStyle">
      <MemberSignature Language="C#" Value="public object DefaultPivotTableStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultPivotTableStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultPivotTableStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultPivotTableStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultPivotTableStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2527)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2527)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2527)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-280">Gibt das Tabellenformat aus der <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> -Auflistung, die als Standardformat für PivotTables verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-280">Specifies the table style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> collection that is used as the default style for PivotTables.</span>
          </span>
          <span data-ttu-id="9c411-281">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-281">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c411-282">
            <b>Objekt</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-282">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSlicerStyle">
      <MemberSignature Language="C#" Value="public object DefaultSlicerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultSlicerStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultSlicerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSlicerStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultSlicerStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-283">Dient zum Abrufen oder Festlegen des Textformats aus der <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> -Objekt, das als Standardformat für Datenschnitte verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-283">Gets or sets the style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> object that is used as the default style for slicers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c411-284">Das Format der <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> -Objekt, das als Standardformat für Datenschnitte verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-284">The style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> object that is used as the default style for slicers.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="9c411-285">
            <para>Lese-/Schreibzugriff.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-285">
              <para>Read/write.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTableStyle">
      <MemberSignature Language="C#" Value="public object DefaultTableStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultTableStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultTableStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultTableStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultTableStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2526)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2526)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2526)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-286">Gibt das Tabellenformat aus der <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> -Auflistung, die als Standard-TableStyle verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-286">Specifies the table style from the <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> collection that is used as the default TableStyle.</span>
          </span>
          <span data-ttu-id="9c411-287">Lese-/Schreibzugriff</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-287">Read/write</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c411-288">
            <b>Objekt</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-288">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTimelineStyle">
      <MemberSignature Language="C#" Value="public object DefaultTimelineStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultTimelineStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DefaultTimelineStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultTimelineStyle As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultTimelineStyle { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-289">Der Name des Standardformats Datenschnitt der Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-289">The name of the default slicer style of the workbook.</span>
          </span>
          <span data-ttu-id="9c411-290">
            <b>Objekt</b> (-<b>Objekt</b> in c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-290">
              <b>Object</b> (<b>object</b> in C#).</span>
          </span>
          <span data-ttu-id="9c411-291">Lesen/Schreiben</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-291">Read/Write</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteNumberFormat">
      <MemberSignature Language="C#" Value="public void DeleteNumberFormat (string NumberFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteNumberFormat([in]string NumberFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.DeleteNumberFormat(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteNumberFormat (NumberFormat As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteNumberFormat(System::String ^ NumberFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(397)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="NumberFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="NumberFormat">
          <span data-ttu-id="9c411-292">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-292">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="9c411-293">Benennt das zu löschende Zahlenformat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-293">Names the number format to be deleted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-294">Löscht ein benutzerdefiniertes Zahlenformat aus der Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-294">Deletes a custom number format from the workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets DialogSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets DialogSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DialogSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DialogSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ DialogSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(764)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-295">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-295">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDrawingObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects DisplayDrawingObjects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects DisplayDrawingObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DisplayDrawingObjects" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDrawingObjects As XlDisplayDrawingObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlDisplayDrawingObjects DisplayDrawingObjects { Microsoft::Office::Interop::Excel::XlDisplayDrawingObjects get(); void set(Microsoft::Office::Interop::Excel::XlDisplayDrawingObjects value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(404)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-296">Gibt zurück oder legt fest, wie Formen angezeigt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-296">Returns or sets how shapes are displayed.</span>
          </span>
          <span data-ttu-id="9c411-297">Lese-/Schreibzugriff <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-297">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlDisplayDrawingObjects" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-298">
            <para>Kann eine der folgenden XlDisplayDrawingObjects-Konstanten sein.</para>
            <list type="table">
              <item>
                <term>
                  <paramref name="xlDisplayShapes" />
                </term>Alle Formen anzeigen.
            </item>
              <item>
                <term>
                  <paramref name="xlPlaceholders" />
                </term>Nur Platzhalter anzeigen.
            </item>
              <item>
                <term>
                  <paramref name="xlHide" />
                </term>Alle Formen ausblenden.
            </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-298">
              <para>Can be one of the following XlDisplayDrawingObjects constants.</para>
              <list type="table">
                <item>
                  <term>
                    <paramref name="xlDisplayShapes" />
                  </term>
                  <description>Show all shapes.</description>
                </item>
                <item>
                  <term>
                    <paramref name="xlPlaceholders" />
                  </term>
                  <description>Show only placeholders.</description>
                </item>
                <item>
                  <term>
                    <paramref name="xlHide" />
                  </term>
                  <description>Hide all shapes.</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayInkComments">
      <MemberSignature Language="C#" Value="public bool DisplayInkComments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayInkComments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DisplayInkComments" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayInkComments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayInkComments { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2276)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p156">Ein <b>Boolean</b>-Wert, der bestimmt, ob Freihandkommentare in der Arbeitsmappe angezeigt werden. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p156">A <b>Boolean</b> value that determines whether ink comments are displayed in the workbook. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentInspectors">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.DocumentInspectors DocumentInspectors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.DocumentInspectors DocumentInspectors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DocumentInspectors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentInspectors As DocumentInspectors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::DocumentInspectors ^ DocumentInspectors { Microsoft::Office::Core::DocumentInspectors ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2521)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2521)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.DocumentInspectors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-301">Gibt ein <see cref="T:Microsoft.Office.Core.DocumentInspectors" /> -Auflistung, die dokumentprüfungsmodule für die angegebene Arbeitsmappe darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-301">Returns a <see cref="T:Microsoft.Office.Core.DocumentInspectors" /> collection that represents the Document Inspector modules for the specified workbook.</span>
          </span>
          <span data-ttu-id="9c411-302">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-302">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c411-303">
            <b>DocumentInspectors</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-303">
              <b>DocumentInspectors</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentLibraryVersions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.DocumentLibraryVersions DocumentLibraryVersions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.DocumentLibraryVersions DocumentLibraryVersions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DocumentLibraryVersions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentLibraryVersions As DocumentLibraryVersions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::DocumentLibraryVersions ^ DocumentLibraryVersions { Microsoft::Office::Core::DocumentLibraryVersions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2274)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2274)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.DocumentLibraryVersions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-304">Gibt ein <see cref="P:Microsoft.Office.Interop.Excel._Workbook.DocumentLibraryVersions" /> -Auflistung, die die Auflistung von Versionen einer freigegebenen Arbeitsmappe mit Versionen aktiviert aktivierter darstellt, die in einer Dokumentbibliothek auf einem Server gespeichert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-304">Returns a <see cref="P:Microsoft.Office.Interop.Excel._Workbook.DocumentLibraryVersions" /> collection that represents the collection of versions of a shared workbook that has versioning enabled and that is stored in a document library on a server.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-305">
            <para>XML-Features, außer das Speichern von Dateien im XML-Tabellenformat stehen nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-305">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNotPromptForConvert">
      <MemberSignature Language="C#" Value="public bool DoNotPromptForConvert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoNotPromptForConvert" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.DoNotPromptForConvert" />
      <MemberSignature Language="VB.NET" Value="Public Property DoNotPromptForConvert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoNotPromptForConvert { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2541)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2541)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2541)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-306">Gibt zurück oder legt fest, wenn der Benutzer aufgefordert werden soll, um die Arbeitsmappe zu konvertieren, wenn die Arbeitsmappe Features enthält, die von früheren Versionen von Excel als short_Excel2007 nicht unterstützt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-306">Returns or sets if the user should be prompted to convert the workbook if the workbook contains features that are not supported by versions of Excel earlier than short_Excel2007.</span>
          </span>
          <span data-ttu-id="9c411-307">Lese-/Schreibzugriff</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-307">Read/write</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c411-308">Boolean</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-308">Boolean</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy16">
      <MemberSignature Language="C#" Value="public void Dummy16 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy16() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy16" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy16 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy16();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2048)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c411-309">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-309">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy17">
      <MemberSignature Language="C#" Value="public void Dummy17 (int calcid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy17([in]int32 calcid) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy17(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy17 (calcid As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy17(int calcid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2044)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="calcid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="calcid">To be added.</param>
        <summary>
          <span data-ttu-id="9c411-310">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-310">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy26">
      <MemberSignature Language="C#" Value="public void Dummy26 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy26() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy26" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy26 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy26();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2869)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy27">
      <MemberSignature Language="C#" Value="public void Dummy27 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dummy27() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Dummy27" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dummy27 ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Dummy27();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2870)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableAutoRecover">
      <MemberSignature Language="C#" Value="public bool EnableAutoRecover { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableAutoRecover" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.EnableAutoRecover" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableAutoRecover As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableAutoRecover { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2049)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2049)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2049)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p159">Speichert geänderte Dateien aller Formate in festgelegten Intervallen. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p159">Saves changed files, of all formats, on a timed interval. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-313">
            <para>Das System schlägt fehl, wenn Microsoft Excel ein Fehler auftritt, oder wenn das System nicht ordnungsgemäß (Excel zum Speichern der geänderten Dateien nicht zulassen) heruntergefahren wird, werden die gesicherten Dateien geöffnet und der Benutzer hat die Möglichkeit zum Speichern von Änderungen, die andernfalls verloren gegangen würde. Wenn der Benutzer Excel neu startet, Dokumentfenster Wiederherstellung wird geöffnet, sodass der Benutzer eine Option, um die Dateien wiederherzustellen, an denen sie gearbeitet haben. Durch Festlegen dieser Eigenschaft auf <b>True</b> (Standard), wird dieses Feature aktiviert.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-313">
              <para>If Microsoft Excel fails, the system fails, or if the system is improperly shut down (not allowing Excel to save the changed files), the backed up files are opened and the user has an opportunity to save changes that otherwise would have been lost. When the user restarts Excel, a document recovery window opens, giving the user an option to recover the files they were working on. Setting this property to <b>True</b> (default) enables this feature.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableConnections">
      <MemberSignature Language="C#" Value="public void EnableConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnableConnections() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.EnableConnections" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnableConnections ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnableConnections();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2537)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c411-314">Die <see cref="M:Microsoft.Office.Interop.Excel._Workbook.EnableConnections" /> -Methode können Entwickler datenverbindungen in der Arbeitsmappe für den Benutzer programmgesteuert zu aktivieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-314">The <see cref="M:Microsoft.Office.Interop.Excel._Workbook.EnableConnections" /> method allows developers to programmatically enable data connections within the workbook for the user.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionProvider">
      <MemberSignature Language="C#" Value="public string EncryptionProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncryptionProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.EncryptionProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionProvider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncryptionProvider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2540)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2540)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2540)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-315">Gibt eine <b>Zeichenfolge</b> zur Angabe der Name des Anbieters des Verschlüsselungsalgorithmus verwendet 1st_Excel12, beim Verschlüsseln von Dokumenten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-315">Returns a <b>String</b> specifying the name of the algorithm encryption provider that 1st_Excel12 uses when encrypting documents.</span>
          </span>
          <span data-ttu-id="9c411-316">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-316">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c411-317">
            <b>s</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-317">
              <b>s</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndReview">
      <MemberSignature Language="C#" Value="public void EndReview ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndReview() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.EndReview" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndReview ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndReview();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2058)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c411-318">Beendet die Überprüfung einer Datei, die für die Verwendung von Überprüfung versendet wurde die <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" /> Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-318">Terminates a review of a file that has been sent for review using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvelopeVisible">
      <MemberSignature Language="C#" Value="public bool EnvelopeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnvelopeVisible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.EnvelopeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property EnvelopeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnvelopeVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1824)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1824)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1824)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p161">
            <b>True</b>, wenn der E-Mail-Editorkopfbereich und die Umschlagsymbolleiste angezeigt werden. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p161">
              <b>True</b> if the e-mail composition header and the envelope toolbar are both visible. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4IntlMacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4IntlMacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Excel4IntlMacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4IntlMacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4IntlMacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(581)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-321">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> -Auflistung, die alle internationalen Makrovorlagen von Microsoft Excel 4.0 in der angegebenen Arbeitsmappe darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-321">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 international macro sheets in the specified workbook.</span>
          </span>
          <span data-ttu-id="9c411-322">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-322">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel4MacroSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Excel4MacroSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Excel4MacroSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel4MacroSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Excel4MacroSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(579)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-323">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> -Auflistung, die alle Microsoft Excel 4.0-Makrovorlagen in der angegebenen Arbeitsmappe darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-323">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the Microsoft Excel 4.0 macro sheets in the specified workbook.</span>
          </span>
          <span data-ttu-id="9c411-324">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-324">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Excel8CompatibilityMode">
      <MemberSignature Language="C#" Value="public bool Excel8CompatibilityMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Excel8CompatibilityMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Excel8CompatibilityMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Excel8CompatibilityMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Excel8CompatibilityMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2535)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2535)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-325">Die <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel8CompatibilityMode" /> -Eigenschaft bietet Entwicklern eine Möglichkeit zu überprüfen, ob die Arbeitsmappe im Kompatibilitätsmodus befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-325">The <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel8CompatibilityMode" /> property provides developers with a way to check if the workbook is in compatibility mode.</span>
          </span>
          <span data-ttu-id="9c411-326">Schreibgeschützt</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-326">Read-only</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c411-327">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-327">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="9c411-328">
            <para>Im Kompatibilitätsmodus ist für bestimmte Funktionen deaktiviert oder Funktionen unterschiedlich.  Beispielsweise in short_Excel2007 stehen mehr Zeilen und Spalten im Vergleich zu früheren Versionen von Excel. Strukturierte Verweise ist auch in short_Excel2007 verfügbar.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-328">
              <para>In compatibility mode, certain functionality is disabled or functions differently.  For example, in short_Excel2007 there are more rows and columns available as compared to the earlier versions of Excel. Also structured referencing is available in short_Excel2007.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAccess">
      <MemberSignature Language="C#" Value="public bool ExclusiveAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ExclusiveAccess() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ExclusiveAccess" />
      <MemberSignature Language="VB.NET" Value="Public Function ExclusiveAccess () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ExclusiveAccess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c411-329">Räumt dem aktuellen Benutzer exklusiven Zugriff auf die geöffnete und für gemeinsamen Zugriff freigegebene Arbeitsmappe ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-329">Assigns the current user exclusive access to the workbook that's open as a shared list.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="9c411-330">
            <para>
              <b>ExclusiveAccess</b> -Methode speichert alle Änderungen vorgenommen haben, um die Arbeitsmappe und andere Benutzer mit der Arbeitsmappe öffnen, um ihre Änderungen an einer anderen Datei speichern erfordert.</para>
            <para>, Wenn die angegebene Arbeitsmappe nicht als freigegebene Liste geöffnet ist, schlägt diese Methode fehl. Um festzustellen, ob eine Arbeitsmappe im Freigabemodus geöffnet ist, verwenden Sie die <see cref="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" /> -Eigenschaft.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-330">
              <para>The <b>ExclusiveAccess</b> method saves any changes you've made to the workbook and requires other users who have the workbook open to save their changes to a different file.</para>
              <para>If the specified workbook isn't open as a shared list, this method fails. To determine whether a workbook is open as a shared list, use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" /> property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportAsFixedFormat">
      <MemberSignature Language="C#" Value="public void ExportAsFixedFormat (Microsoft.Office.Interop.Excel.XlFixedFormatType Type, object Filename, object Quality, object IncludeDocProperties, object IgnorePrintAreas, object From, object To, object OpenAfterPublish, object FixedFormatExtClassPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportAsFixedFormat([in]valuetype Microsoft.Office.Interop.Excel.XlFixedFormatType Type, [in]object Filename, [in]object Quality, [in]object IncludeDocProperties, [in]object IgnorePrintAreas, [in]object From, [in]object To, [in]object OpenAfterPublish, [in]object FixedFormatExtClassPtr) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportAsFixedFormat (Type As XlFixedFormatType, Optional Filename As Object, Optional Quality As Object, Optional IncludeDocProperties As Object, Optional IgnorePrintAreas As Object, Optional From As Object, Optional To As Object, Optional OpenAfterPublish As Object, Optional FixedFormatExtClassPtr As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlFixedFormatType" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Quality" Type="System.Object" />
        <Parameter Name="IncludeDocProperties" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="OpenAfterPublish" Type="System.Object" />
        <Parameter Name="FixedFormatExtClassPtr" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="9c411-331">Kann es sich um einen <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypePDF" /> oder <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypeXPS" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-331">Can be either <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypePDF" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatType.xlTypeXPS" />.</span>
          </span>
        </param>
        <param name="Filename">
          <span data-ttu-id="9c411-332">Eine <b>Zeichenfolge</b> , die den Namen der zu speichernden Datei angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-332">A <b>String</b> that indicates the name of the file to be saved.</span>
          </span>
          <span data-ttu-id="9c411-333">Sie können ein vollständiger Pfad oder Short einschließen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-333">You can include a full path or short.</span>
          </span>
          <span data-ttu-id="9c411-334">Excel2007 speichert die Datei im aktuellen Ordner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-334">Excel2007 saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Quality">
          <span data-ttu-id="9c411-335">Kann festgelegt werden entweder <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityStandard" /> oder <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityMinimum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-335">Can  be set to either <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityStandard" /> or <see cref="F:Microsoft.Office.Interop.Excel.XlFixedFormatQuality.xlQualityMinimum" />.</span>
          </span>
        </param>
        <param name="IncludeDocProperties">
          <span data-ttu-id="9c411-336">Legen Sie <b>True</b> fest, werden die Dokumenteigenschaften einbezogen und auf <b>False</b> festlegen, um anzugeben, dass sie weggelassen Eigenschaften.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-336">Set to <b>True</b> to indicate that document properties should be included or set to <b>False</b> to indicate that they are omitted.</span>
          </span>
        </param>
        <param name="IgnorePrintAreas">
          <span data-ttu-id="9c411-337">Wenn auf <b>True</b>festgelegt ist, ignoriert alle festgelegten Druckbereiche beim Veröffentlichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-337">If set to <b>True</b>, ignores any print areas set when publishing.</span>
          </span>
          <span data-ttu-id="9c411-338">Wenn auf <b>False</b>festgelegt, wird die festgelegten Druckbereiche beim Veröffentlichen verwenden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-338">If set to <b>False</b>, will use the print areas set when publishing.</span>
          </span>
        </param>
        <param name="From">
          <span data-ttu-id="9c411-p167">Die Seitenzahl, bei der die Veröffentlichung begonnen werden soll. Wenn dieses Argument nicht angegeben wird, beginnt die Veröffentlichung am Anfang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p167">The number of the page at which to start publishing. If this argument is omitted, publishing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="9c411-p168">Die Seitenzahl der letzten Seite, die veröffentlicht werden soll. Wenn Sie dieses Argument nicht angeben, wird bis zur letzten Seite veröffentlicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p168">The number of the last page to publish. If this argument is omitted, publishing ends with the last page</span>
          </span>
        </param>
        <param name="OpenAfterPublish">
          <span data-ttu-id="9c411-343">Wenn auf <b>True</b> festgelegt werden Datei nach der Veröffentlichung im Viewer angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-343">If set to <b>True</b> displays file in viewer after it is published.</span>
          </span>
          <span data-ttu-id="9c411-344">Wenn es sich bei Festlegung auf <b>"false"</b> die Datei veröffentlicht wird, jedoch nicht angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-344">If set to <b>False</b> the file is published but not displayed.</span>
          </span>
        </param>
        <param name="FixedFormatExtClassPtr">
          <span data-ttu-id="9c411-345">Zeiger auf die <b>FixedFormatExt</b> -Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-345">Pointer to the <b>FixedFormatExt</b> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-346">Die <see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> Methode wird verwendet, um eine Arbeitsmappe im PDF- oder XPS-Format veröffentlichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-346">The <see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExportAsFixedFormat(Microsoft.Office.Interop.Excel.XlFixedFormatType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method is used to publish a workbook to either the PDF or XPS format.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <example>
          <span data-ttu-id="9c411-347">
            <para>Im folgenden Beispiel wird die PDF-Datei in Standardqualität im Verzeichnis der aktuellen Datei erstellt und die Datei nach der Veröffentlichung im Viewer angezeigt.</para>
            <para>
              <b>Hinweis</b>: tritt ein Fehler auf, wenn das PDF-add-in derzeit nicht installiert ist.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-347">
              <para>The following example creates the PDF at standard quality in the current file’s directory and displays file in viewer after it is published.</para>
              <para>
                <b>Note</b>: An error will occur if the PDF add-in is not currently installed.</para>
            </span>
          </span>
        </example>
      </Docs>
    </Member>
    <Member MemberName="FileFormat">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlFileFormat FileFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlFileFormat FileFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileFormat As XlFileFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlFileFormat FileFormat { Microsoft::Office::Interop::Excel::XlFileFormat get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(288)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(288)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlFileFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-348">Gibt das Dateiformat und/oder den Typ der Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-348">Returns the file format and/or type of the workbook.</span>
          </span>
          <span data-ttu-id="9c411-349">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlFileFormat" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-349">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlFileFormat" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-350">
            <para>Einige der folgenden Konstanten haben möglicherweise nicht zur Verfügung, abhängig von der Unterstützung der Sprache (Englisch USA), beispielsweise).</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-350">
              <para>Some of these constants may not be available to you, depending on the language support (U.S. English, for example) that you’ve selected or installed.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Final">
      <MemberSignature Language="C#" Value="public bool Final { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Final" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Final" />
      <MemberSignature Language="VB.NET" Value="Public Property Final As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Final { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2531)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2531)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2531)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-351">Zurückgeben oder Festlegen einer <b>vom Typ Boolean</b> , der angibt, ob eine Arbeitsmappe abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-351">Returns or sets a <b>Boolean</b> that indicates whether a workbook is final.</span>
          </span>
          <span data-ttu-id="9c411-352">Lese-/Schreibzugriff</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-352">Read/write</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c411-353">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-353">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="9c411-354">
            <para>Wenn der Wert auf <b>True</b> markiert die Arbeitsmappe als abgeschlossen, benachrichtigt Empfänger (sofern vorhanden), die die Arbeitsmappe abgeschlossen ist, und die Arbeitsmappe schreibgeschützt festgelegt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-354">
              <para>Setting the value to <b>True</b> marks the workbook as final, notifies recipients (if any) that the workbook is final, and sets the workbook to read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FollowHyperlink">
      <MemberSignature Language="C#" Value="public void FollowHyperlink (string Address, object SubAddress, object NewWindow, object AddHistory, object ExtraInfo, object Method, object HeaderInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FollowHyperlink([in]string Address, [in]object SubAddress, [in]object NewWindow, [in]object AddHistory, [in]object ExtraInfo, [in]object Method, [in]object HeaderInfo) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.FollowHyperlink(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FollowHyperlink (Address As String, Optional SubAddress As Object, Optional NewWindow As Object, Optional AddHistory As Object, Optional ExtraInfo As Object, Optional Method As Object, Optional HeaderInfo As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1470)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Address" Type="System.String" />
        <Parameter Name="SubAddress" Type="System.Object" />
        <Parameter Name="NewWindow" Type="System.Object" />
        <Parameter Name="AddHistory" Type="System.Object" />
        <Parameter Name="ExtraInfo" Type="System.Object" />
        <Parameter Name="Method" Type="System.Object" />
        <Parameter Name="HeaderInfo" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Address">
          <span data-ttu-id="9c411-355">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-355">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="9c411-356">Die Adresse des Zieldokuments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-356">The address of the target document.</span>
          </span>
        </param>
        <param name="SubAddress">
          <span data-ttu-id="9c411-357">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-357">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-358">Die Position im Zieldokument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-358">The location within the target document.</span>
          </span>
          <span data-ttu-id="9c411-359">Der Standardwert ist die leere Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-359">The default value is the empty string.</span>
          </span>
        </param>
        <param name="NewWindow">
          <span data-ttu-id="9c411-360">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-360">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-361">
            <b>True</b> , wenn die Zielanwendung in einem neuen Fenster angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-361">
              <b>True</b> to display the target application in a new window.</span>
          </span>
          <span data-ttu-id="9c411-362">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-362">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AddHistory">
          <span data-ttu-id="9c411-363">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-363">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-364">Nicht verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-364">Not used.</span>
          </span>
          <span data-ttu-id="9c411-365">Reserviert für zukünftige Verwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-365">Reserved for future use.</span>
          </span>
        </param>
        <param name="ExtraInfo">
          <span data-ttu-id="9c411-366">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-366">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-367">Eine Zeichenfolge oder Byte-Array, zusätzliche Informationen für HTTP zur Auflösung des Hyperlinks angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-367">A string or byte array that specifies additional information for HTTP to use to resolve the hyperlink.</span>
          </span>
          <span data-ttu-id="9c411-368">Sie können beispielsweise verwenden <paramref name="ExtraInfo" /> die Koordinaten einer Imagemap, den Inhalt eines Formulars oder einen FAT-Dateinamen angeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-368">For example, you can use <paramref name="ExtraInfo" /> to specify the coordinates of an image map, the contents of a form, or a FAT file name.</span>
          </span>
        </param>
        <param name="Method">
          <span data-ttu-id="9c411-369">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-369">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-370">Gibt an, wie <paramref name="ExtraInfo" /> angefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-370">Specifies the way <paramref name="ExtraInfo" /> is attached.</span>
          </span>
          <span data-ttu-id="9c411-371">Kann eine der der <see cref="T:Microsoft.Office.Core.MsoExtraInfoMethod" /> Konstanten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-371">Can be one of the <see cref="T:Microsoft.Office.Core.MsoExtraInfoMethod" /> constants.</span>
          </span>
        </param>
        <param name="HeaderInfo">
          <span data-ttu-id="9c411-372">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-372">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-373">Eine Zeichenfolge, die Kopfzeileninformationen für die HTTP-Anforderung angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-373">A string that specifies header information for the HTTP request.</span>
          </span>
          <span data-ttu-id="9c411-374">Der Standardwert ist eine leere Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-374">The default value is an empty string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-375">Zeigt ein zwischengespeichertes Dokument an, wenn es bereits heruntergeladen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-375">Displays a cached document if it’s already been downloaded.</span>
          </span>
          <span data-ttu-id="9c411-376">Diese Methode anderenfalls löst den Hyperlink, lädt das Zieldokument herunter und zeigt das Dokument in der entsprechenden Anwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-376">Otherwise, this method resolves the hyperlink, downloads the target document, and displays the document in the appropriate application.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceFullCalculation">
      <MemberSignature Language="C#" Value="public bool ForceFullCalculation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ForceFullCalculation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ForceFullCalculation" />
      <MemberSignature Language="VB.NET" Value="Public Property ForceFullCalculation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ForceFullCalculation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2542)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2542)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2542)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-377">Erzwingt eine vollständige Berechnung einer Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-377">Forces a full calculation of a workbook.</span>
          </span>
          <span data-ttu-id="9c411-378">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-378">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c411-379">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-379">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForwardMailer">
      <MemberSignature Language="C#" Value="public void ForwardMailer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForwardMailer() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ForwardMailer" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForwardMailer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForwardMailer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(973)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p181">Sie haben für ein Visual Basic-Schlüsselwort Hilfe angefordert, das nur auf dem Macintosh verwendet wird. Weitere Informationen zu diesem Schlüsselwort finden Sie in der Sprachverzeichnishilfe zu Microsoft Office Macintosh Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p181">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(289)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(289)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-382">Gibt den Namen des Objekts, einschließlich des Pfads auf dem Datenträger, als Zeichenfolge zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-382">Returns the name of the object, including its path on disk, as a string.</span>
          </span>
          <span data-ttu-id="9c411-383">Schreibgeschützter <b>String</b>-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-383">Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-384">
            <para>Diese Eigenschaft entspricht der <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Path" /> -Eigenschaft, gefolgt von der aktuellen Dateisystemtrennzeichen, gefolgt von der <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Name" /> Eigenschaft.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-384">
              <para>This property is equivalent to the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Path" /> property, followed by the current file system separator, followed by the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Name" /> property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullNameURLEncoded">
      <MemberSignature Language="C#" Value="public string FullNameURLEncoded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullNameURLEncoded" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.FullNameURLEncoded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullNameURLEncoded As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullNameURLEncoded { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1927)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p183">Gibt einen <b>String</b>-Wert zurück, der den Namen des Objekts einschließlich dessen Pfadangabe auf dem Laufwerk als Zeichenfolge darstellt. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p183">Returns a <b>String</b> indicating the name of the object, including its path on disk, as a string. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowTasks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.WorkflowTasks GetWorkflowTasks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.WorkflowTasks GetWorkflowTasks() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.GetWorkflowTasks" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowTasks () As WorkflowTasks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Core::WorkflowTasks ^ GetWorkflowTasks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2522)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.WorkflowTasks</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c411-387">Gibt die Auflistung der <see cref="T:Microsoft.Office.Core.WorkflowTask" /> -Objekte für die angegebene Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-387">Returns the collection of <see cref="T:Microsoft.Office.Core.WorkflowTask" /> objects for the specified workbook.</span>
          </span>
        </summary>
        <returns>
          <see cref="T:Microsoft.Office.Core.WorkflowTasks" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowTemplates">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.WorkflowTemplates GetWorkflowTemplates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Core.WorkflowTemplates GetWorkflowTemplates() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.GetWorkflowTemplates" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflowTemplates () As WorkflowTemplates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Core::WorkflowTemplates ^ GetWorkflowTemplates();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2523)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.WorkflowTemplates</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c411-388">Gibt die Auflistung der <see cref="T:Microsoft.Office.Core.WorkflowTemplate" /> -Objekte für die angegebene Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-388">Returns the collection of <see cref="T:Microsoft.Office.Core.WorkflowTemplate" /> objects for the specified workbook.</span>
          </span>
        </summary>
        <returns>
          <see cref="T:Microsoft.Office.Core.WorkflowTemplates" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasMailer">
      <MemberSignature Language="C#" Value="public bool HasMailer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasMailer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasMailer" />
      <MemberSignature Language="VB.NET" Value="Public Property HasMailer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasMailer { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(976)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(976)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(976)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-389">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-389">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPassword">
      <MemberSignature Language="C#" Value="public bool HasPassword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasPassword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPassword As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPassword { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(290)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(290)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p184">
            <b>True</b>, wenn die Arbeitsmappe ein Schutzkennwort besitzt. Schreibgeschützter <b>Boolean</b>-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p184">
              <b>True</b> if the workbook has a protection password. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-392">
            <para>Sie können einer Arbeitsmappe ein Schutzkennwort zuweisen, mithilfe der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> Methode.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-392">
              <para>You can assign a protection password to a workbook by using the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasRoutingSlip">
      <MemberSignature Language="C#" Value="public bool HasRoutingSlip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRoutingSlip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasRoutingSlip" />
      <MemberSignature Language="VB.NET" Value="Public Property HasRoutingSlip As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasRoutingSlip { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p185">
            <b>True</b>, wenn die Arbeitsmappe einen Verteiler besitzt. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p185">
              <b>True</b> if the workbook has a routing slip. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-395">
            <para>Durch Festlegen dieser Eigenschaft auf <b>true festgelegt,</b> wird ein Verteiler mit Standardwerten erstellt. Die-Eigenschaft auf <b>False</b> festlegen, wird der Verteiler gelöscht.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-395">
              <para>Setting this property to <b>True</b> creates a routing slip with default values. Setting the property to <b>False</b> deletes the routing slip.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasVBProject">
      <MemberSignature Language="C#" Value="public bool HasVBProject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasVBProject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HasVBProject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasVBProject As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasVBProject { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2529)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2529)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-396">Gibt ein <b>Boolean</b> , der angibt, ob eine Arbeitsmappe verfügt über ein angehängtes Microsoft Visual Basic für Applikationen-Projekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-396">Returns a <b>Boolean</b> that represents whether a workbook has an attached Microsoft Visual Basic for Applications project.</span>
          </span>
          <span data-ttu-id="9c411-397">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-397">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c411-398">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-398">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="9c411-399">
            <para>Diese Eigenschaft eignet sich am besten programmgesteuert zu bestimmen, ob eine Arbeitsmappe in einem Dateiformat mit Makros gespeichert werden muss. Wenn in einem anderen Format gespeichert wird, möglicherweise Makros und Projekten mit Code im Dokument enthaltenen verloren.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-399">
              <para>This property is most useful in programmatically determining whether a workbook needs to be saved into a macro-enabled file format. If saved in another format, macros and code projects contained within the document may be lost.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HighlightChangesOnScreen">
      <MemberSignature Language="C#" Value="public bool HighlightChangesOnScreen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HighlightChangesOnScreen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HighlightChangesOnScreen" />
      <MemberSignature Language="VB.NET" Value="Public Property HighlightChangesOnScreen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HighlightChangesOnScreen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1461)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1461)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1461)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p187">
            <b>True</b>, falls Änderungen an der freigegebenen Arbeitsmappe auf dem Bildschirm hervorgehoben werden. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p187">
              <b>True</b> if changes to the shared workbook are highlighted on-screen. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HighlightChangesOptions">
      <MemberSignature Language="C#" Value="public void HighlightChangesOptions (object When, object Who, object Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HighlightChangesOptions([in]object When, [in]object Who, [in]object Where) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.HighlightChangesOptions(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub HighlightChangesOptions (Optional When As Object, Optional Who As Object, Optional Where As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1458)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="When" Type="System.Object" />
        <Parameter Name="Who" Type="System.Object" />
        <Parameter Name="Where" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="When">
          <span data-ttu-id="9c411-402">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-402">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-403">Die Änderungen, die angezeigt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-403">The changes that are shown.</span>
          </span>
          <span data-ttu-id="9c411-404">Kann eine der folgenden <b>XlHighlightChangesTime</b> -Konstanten sein: <b>XlSinceMyLastSave</b>, <b>XlAllChanges</b>oder <b>XlNotYetReviewed</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-404">Can be one of the following <b>XlHighlightChangesTime</b> constants: <b>xlSinceMyLastSave</b>, <b>xlAllChanges</b>, or <b>xlNotYetReviewed</b>.</span>
          </span>
        </param>
        <param name="Who">
          <span data-ttu-id="9c411-405">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-405">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-406">Der Benutzer oder die Benutzer, deren Änderungen angezeigt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-406">The user or users whose changes are shown.</span>
          </span>
          <span data-ttu-id="9c411-407">"Jeder", "Jeder außer mir" oder den Namen eines der Benutzer der freigegebenen Arbeitsmappe kann sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-407">Can be "Everyone", "Everyone but Me", or the name of one of the users of the shared workbook.</span>
          </span>
        </param>
        <param name="Where">
          <span data-ttu-id="9c411-408">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-408">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-409">Ein Bereichsbezug in der A1-Bezugsart, der den auf Änderungen zu überprüfenden Bereich festlegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-409">An A1-style range reference that specifies the area to check for changes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-410">Steuert, wie Änderungen in einer freigegebenen Arbeitsmappe dargestellt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-410">Controls how changes are shown in a shared workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HTMLProject">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.HTMLProject HTMLProject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.HTMLProject HTMLProject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.HTMLProject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HTMLProject As HTMLProject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::HTMLProject ^ HTMLProject { Microsoft::Office::Core::HTMLProject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1823)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1823)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.HTMLProject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-411">Gibt die <see cref="P:Microsoft.Office.Interop.Excel._Workbook.HTMLProject" /> -Objekts in der angegebenen Arbeitsmappe, die ein Projekt auf oberster Ebene Branch wie im Projektexplorer im Microsoft Skript-Editor darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-411">Returns the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.HTMLProject" /> object in the specified workbook, which represents a top-level project branch as in the Project Explorer in the Microsoft Script Editor.</span>
          </span>
          <span data-ttu-id="9c411-412">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-412">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconSets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.IconSets IconSets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.IconSets IconSets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.IconSets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IconSets As IconSets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::IconSets ^ IconSets { Microsoft::Office::Interop::Excel::IconSets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2539)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2539)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.IconSets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-413">Diese Eigenschaft wird verwendet, um das Filtern von Daten in einer Arbeitsmappe basierend auf einem Zellensymbol aus der <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-413">This property is used to filter data in a workbook based on a cell icon from the <see cref="T:Microsoft.Office.Interop.Excel.IconSets" /> collection.</span>
          </span>
          <span data-ttu-id="9c411-414">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-414">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c411-415">
            <b>IconSets</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-415">
              <b>IconSets</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InactiveListBorderVisible">
      <MemberSignature Language="C#" Value="public bool InactiveListBorderVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InactiveListBorderVisible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.InactiveListBorderVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property InactiveListBorderVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InactiveListBorderVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2275)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2275)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p193">Ein <b>Boolean</b>-Wert, der angibt, ob Listenrahmen sichtbar sind, wenn eine Liste nicht aktiv ist. Gibt <b>True</b> zurück, wenn der Rahmen sichtbar ist. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p193">A <b>Boolean</b> value that specifies whether list borders are visible when a list is not active. Returns <b>True</b> if the border is visible. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-419">
            <para>Durch Festlegen dieser Eigenschaft wirkt sich auf alle Listen aus, die auf dem Arbeitsblatt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-419">
              <para>Setting this property will affect all the lists that are on the worksheet.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddin">
      <MemberSignature Language="C#" Value="public bool IsAddin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAddin" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.IsAddin" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAddin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAddin { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1445)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1445)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1445)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p194">
            <b>True</b>, falls die Arbeitsmappe als Add-In ausgeführt wird. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p194">
              <b>True</b> if the workbook is running as an add-in. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-422">
            <para>Wenn Sie diese Eigenschaft auf <b>True</b>festlegen, die Arbeitsmappe weist folgende Merkmale auf:</para>
            <list type="bullet">
              <item>
                <description>werden Sie nicht aufgefordert, die Arbeitsmappe zu speichern, falls Änderungen vorgenommen werden, während die Arbeitsmappe geöffnet ist.</description>
              </item>
              <item>
                <description>Das Arbeitsmappenfenster ist nicht sichtbar.</description>
              </item>
              <item>
                <description>Makros in der Arbeitsmappe wird nicht sichtbar sein, in das Dialogfeld Makro (indem Sie im Menü Extras auf Makro zeigen und auf Makros angezeigt).</description>
              </item>
              <item>
                <description>Können Makros in der Arbeitsmappe noch im Dialogfeld Makro ausgeführt werden, obwohl sie nicht dargestellt werden. Darüber hinaus Makronamen müssen nicht mit den Namen der Arbeitsmappe gekennzeichnet sein.</description>
              </item>
              <item>
                <description>Beim Öffnen der Arbeitsmappe die UMSCHALTTASTE gedrückt halten, hat keine Auswirkung.</description>
              </item>
            </list>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-422">
              <para>When you set this property to <b>True</b>, the workbook has the following characteristics:</para>
              <list type="bullet">
                <item>
                  <description>You won’t be prompted to save the workbook if changes are made while the workbook is open.</description>
                </item>
                <item>
                  <description>The workbook window won’t be visible.</description>
                </item>
                <item>
                  <description>Any macros in the workbook won’t be visible in the Macro dialog box (displayed by pointing to Macro on the Tools menu and clicking Macros).</description>
                </item>
                <item>
                  <description>Macros in the workbook can still be run from the Macro dialog box even though they’re not visible. In addition, macro names don’t need to be qualified with the workbook name.</description>
                </item>
                <item>
                  <description>Holding down the SHIFT key when you open the workbook has no effect.</description>
                </item>
              </list>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInplace">
      <MemberSignature Language="C#" Value="public bool IsInplace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInplace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.IsInplace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInplace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInplace { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1769)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1769)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p195">TrueTrue, wenn die angegebene Arbeitsmappe direkt bearbeitet wird. FalseFalse, wenn die Arbeitsmappe zur Bearbeitung in Microsoft Excel geöffnet wurde. Schreibgeschützter BooleanBoolean-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p195">
              <b>True</b> if the specified workbook is being edited in place. <b>False</b> if the workbook has been opened in Microsoft Excel for editing. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepChangeHistory">
      <MemberSignature Language="C#" Value="public bool KeepChangeHistory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepChangeHistory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.KeepChangeHistory" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepChangeHistory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepChangeHistory { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1462)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1462)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1462)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p196">
            <b>True</b>, falls die Protokollierung der Änderungen in der gemeinsam genutzten Arbeitsmappe aktiviert ist. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p196">
              <b>True</b> if change tracking is enabled for the shared workbook. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keywords">
      <MemberSignature Language="C#" Value="public string Keywords { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Keywords" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Keywords" />
      <MemberSignature Language="VB.NET" Value="Public Property Keywords As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Keywords { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(577)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(577)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(577)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-428">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-428">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkInfo">
      <MemberSignature Language="C#" Value="public object LinkInfo (string Name, Microsoft.Office.Interop.Excel.XlLinkInfo LinkInfo, object Type, object EditionRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LinkInfo([in]string Name, [in]valuetype Microsoft.Office.Interop.Excel.XlLinkInfo LinkInfo, [in]object Type, [in]object EditionRef) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.LinkInfo(System.String,Microsoft.Office.Interop.Excel.XlLinkInfo,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LinkInfo (Name As String, LinkInfo As XlLinkInfo, Optional Type As Object, Optional EditionRef As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(807)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="LinkInfo" Type="Microsoft.Office.Interop.Excel.XlLinkInfo" />
        <Parameter Name="Type" Type="System.Object" />
        <Parameter Name="EditionRef" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="9c411-429">Optionale <b>Zeichenfolge</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-429">Optional <b>String</b>.</span>
          </span>
        </param>
        <param name="LinkInfo">
          <span data-ttu-id="9c411-430">Erforderliche <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-430">Required <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfo" />.</span>
          </span>
          <span data-ttu-id="9c411-431">Der zurückzugebende Informationstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-431">The type of information to be returned.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="9c411-432">Optionale <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfoType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-432">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkInfoType" />.</span>
          </span>
          <span data-ttu-id="9c411-433">Der Typ der zurückzugebende Verknüpfungstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-433">The type of link to return.</span>
          </span>
        </param>
        <param name="EditionRef">
          <span data-ttu-id="9c411-434">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-434">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-435">Wenn die Verknüpfung einer Edition ist, gibt dieses Argument den Verweis Edition als Zeichenfolge in der Z1S1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-435">If the link is an edition, this argument specifies the edition reference as a string in R1C1 style.</span>
          </span>
          <span data-ttu-id="9c411-436">Dieses Argument ist erforderlich, wenn mehr als ein Herausgeber oder Abonnent mit demselben Namen in der Arbeitsmappe vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-436">This argument is required if there's more than one publisher or subscriber with the same name in the workbook.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-437">Gibt das Verknüpfungsdatum und den Aktualisierungsstatus zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-437">Returns the link date and update status.</span>
          </span>
          <span data-ttu-id="9c411-438">- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-438">
              <b>Object</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkSources">
      <MemberSignature Language="C#" Value="public object LinkSources (object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LinkSources([in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LinkSources (Optional Type As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="9c411-439">Optionale <see cref="T:Microsoft.Office.Interop.Excel.XlLink" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-439">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLink" />.</span>
          </span>
          <span data-ttu-id="9c411-440">Der Typ der zurückzugebende Verknüpfungstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-440">The type of link to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-441">Gibt ein Array von Links in der Arbeitsmappe zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-441">Returns an array of links in the workbook.</span>
          </span>
          <span data-ttu-id="9c411-442">Die Namen in der Matrix sind die Namen der verknüpften Dokumente, Editionen oder DDE oder OLE-Server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-442">The names in the array are the names of the linked documents, editions, or DDE or OLE servers.</span>
          </span>
          <span data-ttu-id="9c411-443">Gibt <b>leer</b> zurück, wenn es keine Hyperlinks gibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-443">Returns <b>Empty</b> if there are no links.</span>
          </span>
          <span data-ttu-id="9c411-444">- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-444">
              <b>Object</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="9c411-445">
            <para>Das Format des Arrays ist ein eindimensionales Array für alle Typen jedoch Publisher und Abonnenten. Die zurückgegebenen Zeichenfolgen enthalten den Namen der Verknüpfungsquelle in der für den Linktyp geeigneten Notation. Beispielsweise DDE links und Verwenden der "Server | Dokument! Element"Syntax.</para>
            <para>Für Publisher und Abonnenten Links, ist das zurückgegebene Array zweidimensional. Die erste Spalte des Arrays enthält die Namen der Edition, und die zweite Spalte enthält die Verweise der Editionen als Text.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-445">
              <para>The format of the array is a one-dimensional array for all types but publisher and subscriber. The returned strings contain the name of the link source, in the appropriate notation for the link type. For example, DDE links use the "Server|Document!Item" syntax.</para>
              <para>For publisher and subscriber links, the returned array is two-dimensional. The first column of the array contains the names of the edition, and the second column contains the references of the editions as text.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListChangesOnNewSheet">
      <MemberSignature Language="C#" Value="public bool ListChangesOnNewSheet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ListChangesOnNewSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ListChangesOnNewSheet" />
      <MemberSignature Language="VB.NET" Value="Public Property ListChangesOnNewSheet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ListChangesOnNewSheet { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1463)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1463)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1463)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p203">
            <b>True</b>, falls Änderungen an der gemeinsam genutzten Arbeitsmappe in einem eigenen Arbeitsblatt dargestellt werden. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p203">
              <b>True</b> if changes to the shared workbook are shown on a separate worksheet. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockServerFile">
      <MemberSignature Language="C#" Value="public void LockServerFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LockServerFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.LockServerFile" />
      <MemberSignature Language="VB.NET" Value="Public Sub LockServerFile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LockServerFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2520)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c411-448">Sperrt die Arbeitsmappe auf dem Server, um Änderungen zu verhindern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-448">Locks the workbook on the server to prevent modification.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Mailer">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Mailer Mailer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Mailer Mailer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Mailer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mailer As Mailer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Mailer ^ Mailer { Microsoft::Office::Interop::Excel::Mailer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(979)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(979)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Mailer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p204">Sie haben für ein Visual Basic-Schlüsselwort Hilfe angefordert, das nur auf dem Macintosh verwendet wird. Weitere Informationen zu diesem Schlüsselwort finden Sie in der Sprachverzeichnishilfe zu Microsoft Office Macintosh Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p204">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeWorkbook">
      <MemberSignature Language="C#" Value="public void MergeWorkbook (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MergeWorkbook([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.MergeWorkbook(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeWorkbook (Filename As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MergeWorkbook(System::Object ^ Filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1446)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="9c411-451">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-451">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-452">Der Dateiname der Arbeitsmappe mit den Änderungen, die in die geöffnete Arbeitsmappe eingefügt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-452">The file name of the workbook that contains the changes to be merged into the open workbook.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-453">Führt Änderungen einer Arbeitsmappe mit einer geöffneten Arbeitsmappe zusammen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-453">Merges changes from one workbook into an open workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Model Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Model Model" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As Model" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Model ^ Model { Microsoft::Office::Interop::Excel::Model ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3059)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3059)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Model</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-454">Gibt die oberste Ebene <see cref="T:Microsoft.Office.Interop.Excel.Model" /> Objekt, das ein Datenmodell der Arbeitsmappe ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-454">Returns the top level <see cref="T:Microsoft.Office.Interop.Excel.Model" /> object which is the one Data Model for the workbook.</span>
          </span>
          <span data-ttu-id="9c411-455">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-455">Read-only</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Modules" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Modules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modules As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Modules { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(582)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-456">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-456">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiUserEditing">
      <MemberSignature Language="C#" Value="public bool MultiUserEditing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MultiUserEditing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MultiUserEditing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MultiUserEditing { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1169)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p207">
            <b>True</b>, wenn die Arbeitsmappe für gemeinsamen Zugriff freigegeben ist. <b>Boolean</b>-Wert mit Lesezugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p207">
              <b>True</b> if the workbook is open as a shared list. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-459">
            <para>Um eine Arbeitsmappe im Freigabemodus speichern möchten, verwenden Sie die <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> Methode. Um die Arbeitsmappe vom Freigabemodus exklusiven Modus wechseln möchten, verwenden Sie die <see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExclusiveAccess" /> Methode.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-459">
              <para>To save a workbook as a shared list, use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method. To switch the workbook from shared mode to exclusive mode, use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.ExclusiveAccess" /> method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p208">Gibt den Namen des Objekts zurück. Read-only <b>Zeichenfolge</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p208">Returns the name of the object. Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Names Names { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Names Names" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Names" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Names As Names" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Names ^ Names { Microsoft::Office::Interop::Excel::Names ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(442)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Names</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-462">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Names" /> -Auflistung, die alle Namen in der angegebenen Arbeitsmappe (einschließlich aller Tabellenblattspezifischen Namen) darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-462">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Names" /> collection that represents all the names in the specified workbook (including all worksheet-specific names).</span>
          </span>
          <span data-ttu-id="9c411-463">Nur-Lese- <b>Names</b> -Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-463">Read-only <b>Names</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Window NewWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Window NewWindow() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.NewWindow" />
      <MemberSignature Language="VB.NET" Value="Public Function NewWindow () As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Window ^ NewWindow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(280)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Window</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c411-464">Erstellt ein neues Fenster oder eine Kopie des angegebenen Fensters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-464">Creates a new window or a copy of the specified window.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSave">
      <MemberSignature Language="C#" Value="public string OnSave { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSave" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.OnSave" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSave As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSave { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1178)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1178)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1178)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-465">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-465">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetActivate">
      <MemberSignature Language="C#" Value="public string OnSheetActivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetActivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.OnSheetActivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetActivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetActivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1031)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-466">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-466">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSheetDeactivate">
      <MemberSignature Language="C#" Value="public string OnSheetDeactivate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnSheetDeactivate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.OnSheetDeactivate" />
      <MemberSignature Language="VB.NET" Value="Public Property OnSheetDeactivate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnSheetDeactivate { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1081)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-467">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-467">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenLinks">
      <MemberSignature Language="C#" Value="public void OpenLinks (string Name, object ReadOnly, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenLinks([in]string Name, [in]object ReadOnly, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.OpenLinks(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OpenLinks (Name As String, Optional ReadOnly As Object, Optional Type As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(803)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="ReadOnly" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="9c411-468">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-468">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="9c411-469">Der Name der Microsoft Excel- oder DDE/OLE-Verknüpfung, wie er von zurückgegeben der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-469">The name of the Microsoft Excel or DDE/OLE link, as returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</span>
          </span>
        </param>
        <param name="ReadOnly">
          <span data-ttu-id="9c411-470">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-470">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-471">
            <b>True,</b> um Dokumente im schreibgeschützten Modus zu öffnen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-471">
              <b>True</b> to open documents as read-only.</span>
          </span>
          <span data-ttu-id="9c411-472">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-472">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="9c411-473">Optionale <see cref="T:Microsoft.Office.Interop.Excel.XlLink" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-473">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLink" />.</span>
          </span>
          <span data-ttu-id="9c411-474">Der Verknüpfungstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-474">The link type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-475">Öffnet die benötigten Dokumente für eine oder mehrere Verknüpfungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-475">Opens the supporting documents for a link or links.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p213">Gibt das übergeordnete Objekt für das angegebene Objekt zurück. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p213">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(429)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(429)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(429)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p214">Gibt das Kennwort zurück oder legt das Kennwort fest, das bereitgestellt werden muss, um die angegebene Arbeitsmappe zu öffnen. <b>String</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p214">Returns or sets the password that must be supplied to open the specified workbook. Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-480">
            <para>Verwenden Sie sichere Kennwörter, die Groß- und Kleinbuchstaben, Zahlen und Symbole kombinieren. Schwache Kennwörter Kombination keine dieser Elemente. Sicheres Kennwort: Y6dh! et5. Schwache Kennwort: House27. Verwenden Sie ein sicheres Kennwort, das Sie behalten können, damit Sie nicht notieren.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-480">
              <para>Use strong passwords that combine upper- and lowercase letters, numbers, and symbols. Weak passwords don't mix these elements. Strong password: Y6dh!et5. Weak password: House27. Use a strong password that you can remember so that you don't have to write it down.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionAlgorithm">
      <MemberSignature Language="C#" Value="public string PasswordEncryptionAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordEncryptionAlgorithm" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PasswordEncryptionAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2060)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2060)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p215">Gibt einen <b>String</b>-Wert zurück, der den Algorithmus anzeigt, den Microsoft Excel zum Verschlüsseln der Kennwörter für die angegebene Arbeitsmappe verwendet. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p215">Returns a <b>String</b> indicating the algorithm Microsoft Excel uses to encrypt passwords for the specified workbook. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-483">
            <para>Verwendung der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> -Methode, um festzulegen, ob Excel Dateieigenschaften für kennwortgeschützte Arbeitsmappen verschlüsselt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-483">
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> method to specify whether Excel encrypts file properties for password-protected workbooks.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionFileProperties">
      <MemberSignature Language="C#" Value="public bool PasswordEncryptionFileProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PasswordEncryptionFileProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionFileProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionFileProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PasswordEncryptionFileProperties { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p216">
            <b>True</b>, falls Microsoft Excel die Dateieigenschaften für die angegebene, durch ein Kennwort geschützte Arbeitsmappe verschlüsselt. <b>Boolean</b>-Wert mit Lesezugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p216">
              <b>True</b> if Microsoft Excel encrypts file properties for the specified password-protected workbook. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-486">
            <para>Verwendung der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> -Methode, um anzugeben, ob Excel Dateieigenschaften für die angegebene Kennwort geschützte Arbeitsmappe verschlüsselt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-486">
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> method to specify whether Excel encrypts file properties for the specified password-protected workbook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionKeyLength">
      <MemberSignature Language="C#" Value="public int PasswordEncryptionKeyLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordEncryptionKeyLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionKeyLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionKeyLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PasswordEncryptionKeyLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2061)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2061)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-487">Gibt eine <b>ganze Zahl</b> zurück, der die Schlüssellänge des Algorithmus, den, die Microsoft Excel zum Verschlüsseln der Kennwörter für die angegebene Arbeitsmappe verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-487">Returns an <b>Integer</b> indicating the key length of the algorithm Microsoft Excel uses when encrypting passwords for the specified workbook.</span>
          </span>
          <span data-ttu-id="9c411-488">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-488">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-489">
            <para>Verwendung der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> -Methode, um anzugeben, ob Excel Dateieigenschaften für die angegebene Kennwort geschützte Arbeitsmappe verschlüsselt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-489">
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" /> method to specify whether Excel encrypts file properties for the specified password-protected workbook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordEncryptionProvider">
      <MemberSignature Language="C#" Value="public string PasswordEncryptionProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordEncryptionProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PasswordEncryptionProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordEncryptionProvider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PasswordEncryptionProvider { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2059)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2059)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p218">Gibt einen <b>String</b>-Wert zurück, der den Namen des Verschlüsselungsanbieters für den Algorithmus festlegt, den Microsoft Excel zum Verschlüsseln der angegebenen Arbeitsmappe verwendet. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p218">Returns a <b>String</b> specifying the name of the algorithm encryption provider that Microsoft Excel uses when encrypting passwords for the specified workbook. Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c411-492">
            <b>String</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-492">
              <b>String</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(291)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-493">Gibt den vollständigen Pfad zu der Anwendung, ohne das abschließende Trennzeichen und den Namen der Anwendung zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-493">Returns the complete path to the application, excluding the final separator and name of the application.</span>
          </span>
          <span data-ttu-id="9c411-494">Schreibgeschützter <b>String</b>-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-494">Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Permission">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Permission Permission { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Permission Permission" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Permission" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Permission As Permission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Permission ^ Permission { Microsoft::Office::Core::Permission ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2264)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2264)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Permission</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-495">Gibt ein <see cref="T:Microsoft.Office.Core.Permission" /> -Objekt, das die berechtigungseinstellungen in der angegebenen Arbeitsmappe darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-495">Returns a <see cref="T:Microsoft.Office.Core.Permission" /> object that represents the permission settings in the specified workbook.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersonalViewListSettings">
      <MemberSignature Language="C#" Value="public bool PersonalViewListSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersonalViewListSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PersonalViewListSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property PersonalViewListSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersonalViewListSettings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1447)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1447)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1447)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p220">
            <b>True</b>, wenn Filter- und Sortiereinstellungen für Listen in der persönlichen Benutzeransicht der gemeinsam genutzten Arbeitsmappe enthalten sind. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p220">
              <b>True</b> if filter and sort settings for lists are included in the user's personal view of the shared workbook. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersonalViewPrintSettings">
      <MemberSignature Language="C#" Value="public bool PersonalViewPrintSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersonalViewPrintSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PersonalViewPrintSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property PersonalViewPrintSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersonalViewPrintSettings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1448)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1448)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1448)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p221">
            <b>True</b>, wenn Druckeinstellungen in der persönlichen Benutzeransicht der gemeinsam genutzten Arbeitsmappe enthalten sind. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p221">
              <b>True</b> if print settings are included in the user's personal view of the shared workbook. Read-write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotCaches">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotCaches PivotCaches ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.PivotCaches PivotCaches() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PivotCaches" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotCaches () As PivotCaches" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::PivotCaches ^ PivotCaches();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1449)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotCaches</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c411-500">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.PivotCaches" /> -Auflistung, die alle PivotTable-caches in der angegebenen Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-500">Returns a <see cref="T:Microsoft.Office.Interop.Excel.PivotCaches" /> collection that represents all the PivotTable caches in the specified workbook.</span>
          </span>
          <span data-ttu-id="9c411-501">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-501">Read-only.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTables">
      <MemberSignature Language="C#" Value="public object PivotTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PivotTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PivotTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotTables As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PivotTables { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(690)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(690)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-502">Gibt ein Objekt, das eine Auflistung aller PivotTable darstellt-Berichte in einem Arbeitsblatt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-502">Returns an object that represents a collection of all the PivotTable reports on a worksheet.</span>
          </span>
          <span data-ttu-id="9c411-503">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-503">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableWizard">
      <MemberSignature Language="C#" Value="public void PivotTableWizard (object SourceType, object SourceData, object TableDestination, object TableName, object RowGrand, object ColumnGrand, object SaveData, object HasAutoFormat, object AutoPage, object Reserved, object BackgroundQuery, object OptimizeCache, object PageFieldOrder, object PageFieldWrapCount, object ReadData, object Connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PivotTableWizard([in]object SourceType, [in]object SourceData, [in]object TableDestination, [in]object TableName, [in]object RowGrand, [in]object ColumnGrand, [in]object SaveData, [in]object HasAutoFormat, [in]object AutoPage, [in]object Reserved, [in]object BackgroundQuery, [in]object OptimizeCache, [in]object PageFieldOrder, [in]object PageFieldWrapCount, [in]object ReadData, [in]object Connection) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PivotTableWizard (Optional SourceType As Object, Optional SourceData As Object, Optional TableDestination As Object, Optional TableName As Object, Optional RowGrand As Object, Optional ColumnGrand As Object, Optional SaveData As Object, Optional HasAutoFormat As Object, Optional AutoPage As Object, Optional Reserved As Object, Optional BackgroundQuery As Object, Optional OptimizeCache As Object, Optional PageFieldOrder As Object, Optional PageFieldWrapCount As Object, Optional ReadData As Object, Optional Connection As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(684)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(16)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceType" Type="System.Object" />
        <Parameter Name="SourceData" Type="System.Object" />
        <Parameter Name="TableDestination" Type="System.Object" />
        <Parameter Name="TableName" Type="System.Object" />
        <Parameter Name="RowGrand" Type="System.Object" />
        <Parameter Name="ColumnGrand" Type="System.Object" />
        <Parameter Name="SaveData" Type="System.Object" />
        <Parameter Name="HasAutoFormat" Type="System.Object" />
        <Parameter Name="AutoPage" Type="System.Object" />
        <Parameter Name="Reserved" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="OptimizeCache" Type="System.Object" />
        <Parameter Name="PageFieldOrder" Type="System.Object" />
        <Parameter Name="PageFieldWrapCount" Type="System.Object" />
        <Parameter Name="ReadData" Type="System.Object" />
        <Parameter Name="Connection" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SourceType">To be added.</param>
        <param name="SourceData">To be added.</param>
        <param name="TableDestination">To be added.</param>
        <param name="TableName">To be added.</param>
        <param name="RowGrand">To be added.</param>
        <param name="ColumnGrand">To be added.</param>
        <param name="SaveData">To be added.</param>
        <param name="HasAutoFormat">To be added.</param>
        <param name="AutoPage">To be added.</param>
        <param name="Reserved">To be added.</param>
        <param name="BackgroundQuery">To be added.</param>
        <param name="OptimizeCache">To be added.</param>
        <param name="PageFieldOrder">To be added.</param>
        <param name="PageFieldWrapCount">To be added.</param>
        <param name="ReadData">To be added.</param>
        <param name="Connection">To be added.</param>
        <summary>
          <span data-ttu-id="9c411-504">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-504">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public void Post (object DestName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Post([in]object DestName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Post(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Post (Optional DestName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1166)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DestName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="DestName">
          <span data-ttu-id="9c411-505">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-505">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-506">Dieses Argument wird ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-506">This argument is ignored.</span>
          </span>
          <span data-ttu-id="9c411-507">Die <b>Post</b> -Methode fordert den Benutzer zur Angabe des Ziels für die Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-507">The <b>Post</b> method prompts the user to specify the destination for the workbook.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-p225">Sendet die angegebene Arbeitsmappe an einen öffentlichen Ordner. Diese Methode funktioniert nur, wenn der Microsoft Exchange-Client mit einem Microsoft Exchange-Server verbunden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p225">Posts the specified workbook to a public folder. This method works only with a Microsoft Exchange client connected to a Microsoft Exchange server.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrecisionAsDisplayed">
      <MemberSignature Language="C#" Value="public bool PrecisionAsDisplayed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrecisionAsDisplayed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PrecisionAsDisplayed" />
      <MemberSignature Language="VB.NET" Value="Public Property PrecisionAsDisplayed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrecisionAsDisplayed { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(405)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p226">
            <b>True</b>, wenn die Berechnungen in dieser Arbeitsmappe nur mit der Genauigkeit durchgeführt werden, mit der die Zahlen angezeigt werden. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p226">
              <b>True</b> if calculations in this workbook will be done using only the precision of the numbers as they’re displayed. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public void PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">
          <span data-ttu-id="9c411-512">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-512">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-513">Die Anzahl der ersten Seite der Druckvorgang gestartet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-513">The number of the page at which to start printing.</span>
          </span>
          <span data-ttu-id="9c411-514">Wenn dieses Argument ausgelassen wird, beginnt der Druck am Anfang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-514">If this argument is omitted, printing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="9c411-515">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-515">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-516">Die Anzahl der letzten Seite gedruckt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-516">The number of the last page to print.</span>
          </span>
          <span data-ttu-id="9c411-517">Wenn dieses Argument ausgelassen wird, endet der Druckvorgang mit der letzten Seite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-517">If this argument is omitted, printing ends with the last page.</span>
          </span>
        </param>
        <param name="Copies">
          <span data-ttu-id="9c411-518">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-518">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-519">Die Anzahl der zu druckenden Exemplare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-519">The number of copies to print.</span>
          </span>
          <span data-ttu-id="9c411-520">Wenn dieses Argument ausgelassen wird, wird eine Kopie gedruckt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-520">If this argument is omitted, one copy is printed.</span>
          </span>
        </param>
        <param name="Preview">
          <span data-ttu-id="9c411-521">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-521">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-522">
            <b>True</b> , wenn Microsoft Excel vor dem Drucken des Objekts die Seitenansicht aufruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-522">
              <b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span>
          </span>
          <span data-ttu-id="9c411-523">
            <b>"False"</b> (oder weggelassen), wenn das Objekt sofort gedruckt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-523">
              <b>False</b> (or omitted) to print the object immediately.</span>
          </span>
        </param>
        <param name="ActivePrinter">
          <span data-ttu-id="9c411-524">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-524">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-525">Legt den Namen des aktiven Druckers fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-525">Sets the name of the active printer.</span>
          </span>
        </param>
        <param name="PrintToFile">
          <span data-ttu-id="9c411-526">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-526">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-527">
            <b>True</b> , wenn in eine Datei gedruckt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-527">
              <b>True</b> to print to a file.</span>
          </span>
          <span data-ttu-id="9c411-528">Wenn <paramref name="PrToFileName" /> nicht angegeben ist, wird Microsoft Excel fordert den Benutzer zur Eingabe des Namens der Ausgabedatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-528">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span>
          </span>
        </param>
        <param name="Collate">
          <span data-ttu-id="9c411-529">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-529">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-530">
            <b>True</b> zum Sortieren mehrerer Kopien.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-530">
              <b>True</b> to collate multiple copies.</span>
          </span>
        </param>
        <param name="PrToFileName">
          <span data-ttu-id="9c411-531">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-531">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-532">Wenn <paramref name="PrintToFile" /> festgelegt ist auf <b>"true"</b>, gibt dieses Argument den Namen der Datei, die Sie drucken möchten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-532">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-533">Druckt das Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-533">Prints the object.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9c411-534">
            <para>"Seiten" in den Beschreibungen des <paramref name="From" /> und <paramref name="To" /> bezieht sich auf gedruckte Seiten, nicht insgesamt Seiten des Arbeitsblatts oder der Arbeitsmappe.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-534">
              <para>"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages, not overall pages in the sheet or workbook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOutEx">
      <MemberSignature Language="C#" Value="public void PrintOutEx (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName, object IgnorePrintAreas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintOutEx([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName, [in]object IgnorePrintAreas) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PrintOutEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintOutEx (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object, Optional IgnorePrintAreas As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
        <Parameter Name="IgnorePrintAreas" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <param name="IgnorePrintAreas">To be added.</param>
        <summary>
          <span data-ttu-id="9c411-535">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-535">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public void PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrintPreview (Optional EnableChanges As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges">
          <span data-ttu-id="9c411-536">Änderungen am Objekt ermöglicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-536">Enables changes to the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-537">Zeigt ein Objekt so an, wie es gedruckt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-537">Shows a preview of the object as it would look when printed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public void Protect (object Password, object Structure, object Windows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Protect([in]object Password, [in]object Structure, [in]object Windows) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Protect (Optional Password As Object, Optional Structure As Object, Optional Windows As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2029)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="Structure" Type="System.Object" />
        <Parameter Name="Windows" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="9c411-538">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-538">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-539">Eine Zeichenfolge, die ein Kennwort für das Arbeitsblatt oder die Arbeitsmappe angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-539">A string that specifies a case-sensitive password for the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="9c411-540">Wenn dieses Argument ausgelassen wird, können Sie das Arbeitsblatt oder die Arbeitsmappe ohne Kennwort aufheben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-540">If this argument is omitted, you can unprotect the worksheet or workbook without using a password.</span>
          </span>
          <span data-ttu-id="9c411-541">Andernfalls müssen Sie das Kennwort für das Arbeitsblatt oder die Arbeitsmappe unprotect angeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-541">Otherwise, you must specify the password to unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="9c411-542">Wenn Sie das Kennwort vergessen haben, können nicht Sie das Arbeitsblatt oder die Arbeitsmappe aufheben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-542">If you forget the password, you cannot unprotect the worksheet or workbook.</span>
          </span>
          <span data-ttu-id="9c411-543">Es ist ratsam, eine Liste Ihrer Kennwörter und der entsprechenden Dokumentnamen an einem sicheren Ort zu behalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-543">It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</span>
          </span>
        </param>
        <param name="Structure">
          <span data-ttu-id="9c411-544">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-544">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-545">
            <b>True</b> , wenn die Struktur der Arbeitsmappe (die relative Position der Blätter) zu schützen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-545">
              <b>True</b> to protect the structure of the workbook (the relative position of the sheets).</span>
          </span>
          <span data-ttu-id="9c411-546">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-546">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="Windows">
          <span data-ttu-id="9c411-547">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-547">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-548">
            <b>True</b> , wenn die Fenster der Arbeitsmappe schützen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-548">
              <b>True</b> to protect the workbook windows.</span>
          </span>
          <span data-ttu-id="9c411-549">Wenn dieses Argument ausgelassen wird, werden nicht die Fenster geschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-549">If this argument is omitted, the windows aren’t protected.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-550">Schützt ein Arbeitsblatt, damit es nicht geändert werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-550">Protects a workbook so that it cannot be modified.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectSharing">
      <MemberSignature Language="C#" Value="public void ProtectSharing (object Filename, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object SharingPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProtectSharing([in]object Filename, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object SharingPassword) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ProtectSharing(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProtectSharing (Optional Filename As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional SharingPassword As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1450)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="SharingPassword" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="9c411-551">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-551">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-552">Eine Zeichenfolge, die den Namen der gespeicherten Datei angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-552">A string indicating the name of the saved file.</span>
          </span>
          <span data-ttu-id="9c411-553">Sie können einen vollständigen Pfad angeben. Wenn dies nicht der Fall, speichert Microsoft Excel die Datei im aktuellen Ordner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-553">You can include a full path; if you don’t, Microsoft Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="9c411-554">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-554">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-555">Groß-/Kleinschreibung beachtet String, der angibt, der des Schutzkennwort für die Datei angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-555">A case-sensitive string indicating the protection password to be given to the file.</span>
          </span>
          <span data-ttu-id="9c411-556">Sollte nicht länger als 15 Zeichen sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-556">Should be no longer than 15 characters.</span>
          </span>
        </param>
        <param name="WriteResPassword">
          <span data-ttu-id="9c411-557">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-557">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-558">Eine Zeichenfolge, die das Schreibschutzkennwort für diese Datei angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-558">A string indicating the write-reservation password for this file.</span>
          </span>
          <span data-ttu-id="9c411-559">Wenn eine Datei mit dem Kennwort gespeichert wird und das Kennwort nicht angegeben werden, wenn die Datei geöffnet wird, wird die Datei schreibgeschützt geöffnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-559">If a file is saved with the password and the password isn’t supplied when the file is opened, the file is opened read-only.</span>
          </span>
        </param>
        <param name="ReadOnlyRecommended">
          <span data-ttu-id="9c411-560">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-560">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-561">
            <b>True</b> , wenn eine Meldung angezeigt, wenn die Datei geöffnet wird empfohlen, die Datei schreibgeschützt geöffnet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-561">
              <b>True</b> to display a message when the file is opened recommending that the file be opened read-only.</span>
          </span>
        </param>
        <param name="CreateBackup">
          <span data-ttu-id="9c411-562">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-562">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-563">Mit dem Wert  <b>True</b> wird eine Sicherungsdatei erstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-563">
              <b>True</b> to create a backup file.</span>
          </span>
        </param>
        <param name="SharingPassword">
          <span data-ttu-id="9c411-564">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-564">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-565">Eine Zeichenfolge, die das Kennwort angibt, das zu verwenden ist, um die Datei für die Freigabe zu schützen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-565">A string indicating the password to be used to protect the file for sharing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-566">Speichert eine Arbeitsmappe und schützt sie für die Freigabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-566">Saves the workbook and protects it for sharing.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9c411-567">
            <para>Verwenden Sie sichere Kennwörter, die Groß- und Kleinbuchstaben, Zahlen und Symbole kombinieren. Schwache Kennwörter Kombination keine dieser Elemente. Sicheres Kennwort: Y6dh! et5. Schwache Kennwort: House27. Verwenden Sie ein sicheres Kennwort, das Sie behalten können, damit Sie nicht notieren.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-567">
              <para>Use strong passwords that combine upper- and lowercase letters, numbers, and symbols. Weak passwords don't mix these elements. Strong password: Y6dh!et5. Weak password: House27. Use a strong password that you can remember so that you don't have to write it down.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectSharingEx">
      <MemberSignature Language="C#" Value="public void ProtectSharingEx (object Filename, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, object SharingPassword, object FileFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProtectSharingEx([in]object Filename, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]object SharingPassword, [in]object FileFormat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ProtectSharingEx(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProtectSharingEx (Optional Filename As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional SharingPassword As Object, Optional FileFormat As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2543)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="SharingPassword" Type="System.Object" />
        <Parameter Name="FileFormat" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">To be added.</param>
        <param name="Password">To be added.</param>
        <param name="WriteResPassword">To be added.</param>
        <param name="ReadOnlyRecommended">To be added.</param>
        <param name="CreateBackup">To be added.</param>
        <param name="SharingPassword">To be added.</param>
        <param name="FileFormat">To be added.</param>
        <summary>
          <span data-ttu-id="9c411-568">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-568">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectStructure">
      <MemberSignature Language="C#" Value="public bool ProtectStructure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectStructure" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ProtectStructure" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectStructure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectStructure { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(588)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(588)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p244">
            <b>True</b>, wenn die Reihenfolge der Blätter in der Arbeitsmappe geschützt ist. <b>Boolean</b>-Wert mit Lesezugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p244">
              <b>True</b> if the order of the sheets in the workbook is protected. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectWindows">
      <MemberSignature Language="C#" Value="public bool ProtectWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectWindows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ProtectWindows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectWindows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectWindows { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(295)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(295)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p245">
            <b>True</b>, wenn die Fenster der Arbeitsmappe geschützt sind. <b>Boolean</b>-Wert mit Lesezugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p245">
              <b>True</b> if the windows of the workbook are protected. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PublishObjects">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PublishObjects PublishObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PublishObjects PublishObjects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.PublishObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublishObjects As PublishObjects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PublishObjects ^ PublishObjects { Microsoft::Office::Interop::Excel::PublishObjects ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1819)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1819)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PublishObjects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-573">Gibt die <see cref="T:Microsoft.Office.Interop.Excel.PublishObjects" /> Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-573">Returns the <see cref="T:Microsoft.Office.Interop.Excel.PublishObjects" /> collection.</span>
          </span>
          <span data-ttu-id="9c411-574">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-574">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PurgeChangeHistoryNow">
      <MemberSignature Language="C#" Value="public void PurgeChangeHistoryNow (int Days, object SharingPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PurgeChangeHistoryNow([in]int32 Days, [in]object SharingPassword) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.PurgeChangeHistoryNow(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PurgeChangeHistoryNow (Days As Integer, Optional SharingPassword As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1464)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Days" Type="System.Int32" />
        <Parameter Name="SharingPassword" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Days">
          <span data-ttu-id="9c411-575">
            <b>Integer</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-575">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="9c411-576">Die Anzahl von Tagen, für die Änderungen im Änderungsprotokoll beibehalten werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-576">The number of days that changes in the change log are to be retained.</span>
          </span>
        </param>
        <param name="SharingPassword">
          <span data-ttu-id="9c411-577">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-577">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-578">Das Kennwort, das der Schutz die Arbeitsmappe für die Freigabe aufgehoben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-578">The password that unprotects the workbook for sharing.</span>
          </span>
          <span data-ttu-id="9c411-579">Wenn die Arbeitsmappe für die Freigabe mit einem Kennwort geschützt ist, und dieses Argument nicht angegeben ist, wird der Benutzer für das Kennwort aufgefordert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-579">If the workbook is protected for sharing with a password and this argument is omitted, the user is prompted for the password.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-580">Entfernt Einträge aus dem Änderungsprotokoll der angegebenen Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-580">Removes entries from the change log for the specified workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(296)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(296)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p249">Gibt <b>True</b> zurück, wenn das Objekt schreibgeschützt geöffnet wurde. <b>Boolean</b>-Wert mit Lesezugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p249">Returns <b>True</b> if the object has been opened as read-only. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-583">
            <para>Diese Eigenschaft wird nur für Listen verwendet, die mit einer SharePoint-Website verknüpft sind.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-583">
              <para>This property is used only for lists that are linked to a SharePoint site.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyRecommended">
      <MemberSignature Language="C#" Value="public bool ReadOnlyRecommended { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnlyRecommended" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ReadOnlyRecommended" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnlyRecommended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnlyRecommended { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2005)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2005)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2005)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p250">
            <b>True</b>, wenn die Arbeitsmappe mit "Schreibschutz empfehlen" gespeichert wurde. <b>Boolean</b>-Wert mit Lesezugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p250">
              <b>True</b> if the workbook was saved as read-only recommended. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-586">
            <para>Beim Öffnen einer Arbeitsmappe, die als schreibgeschützt gespeichert wurde, empfiehlt Microsoft Excel eine Meldung angezeigt, mit der Empfehlung angezeigt, dass Sie die Arbeitsmappe mit Schreibschutz öffnen.</para>
            <para>Verwendung der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> -Methode, um diese Eigenschaft zu ändern.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-586">
              <para>When you open a workbook that was saved as read-only recommended, Microsoft Excel displays a message recommending that you open the workbook as read-only.</para>
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to change this property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecheckSmartTags">
      <MemberSignature Language="C#" Value="public void RecheckSmartTags ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecheckSmartTags() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RecheckSmartTags" />
      <MemberSignature Language="VB.NET" Value="Public Sub RecheckSmartTags ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RecheckSmartTags();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2065)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c411-587">Bewirkt, dass eine Vordergrund-Smarttag Prüfung erfolgt, automatisch beim Hinzufügen von Anmerkungen Daten, die nicht enthielten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-587">Causes a foreground smart tag check to occur, automatically annotating data that was not annotated before.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshAll">
      <MemberSignature Language="C#" Value="public void RefreshAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshAll() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RefreshAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RefreshAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RefreshAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1452)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c411-588">Aktualisiert alle externen Datenbereiche und PivotTable-Berichte in der angegebenen Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-588">Refreshes all external data ranges and PivotTable reports in the specified workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9c411-589">
            <para>Objekte, denen die <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.BackgroundQuery" /> -Eigenschaft auf <b>True</b> festgelegt, werden im Hintergrund aktualisiert.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-589">
              <para>Objects that have the <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.BackgroundQuery" /> property set to <b>True</b> are refreshed in the background.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RejectAllChanges">
      <MemberSignature Language="C#" Value="public void RejectAllChanges (object When, object Who, object Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RejectAllChanges([in]object When, [in]object Who, [in]object Where) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RejectAllChanges(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectAllChanges (Optional When As Object, Optional Who As Object, Optional Where As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1467)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="When" Type="System.Object" />
        <Parameter Name="Who" Type="System.Object" />
        <Parameter Name="Where" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="When">
          <span data-ttu-id="9c411-590">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-590">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-591">Gibt an, wann alle Änderungen abgelehnt wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-591">Specifies when all the changes are rejected.</span>
          </span>
        </param>
        <param name="Who">
          <span data-ttu-id="9c411-592">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-592">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-593">Gibt an, von wem alle Änderungen abgelehnt wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-593">Specifies by whom all the changes are rejected.</span>
          </span>
        </param>
        <param name="Where">
          <span data-ttu-id="9c411-594">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-594">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-595">Gibt an, wo alle Änderungen abgelehnt wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-595">Specifies where all the changes are rejected.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-596">Lehnt alle Änderungen in der angegebenen freigegebenen Arbeitsmappe ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-596">Rejects all changes in the specified shared workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReloadAs">
      <MemberSignature Language="C#" Value="public void ReloadAs (Microsoft.Office.Core.MsoEncoding Encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReloadAs([in]valuetype Microsoft.Office.Core.MsoEncoding Encoding) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ReloadAs(Microsoft.Office.Core.MsoEncoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReloadAs (Encoding As MsoEncoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReloadAs(Microsoft::Office::Core::MsoEncoding Encoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1821)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Encoding" Type="Microsoft.Office.Core.MsoEncoding" />
      </Parameters>
      <Docs>
        <param name="Encoding">
          <span data-ttu-id="9c411-597">Erforderliche <see cref="T:Microsoft.Office.Core.MsoEncoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-597">Required <see cref="T:Microsoft.Office.Core.MsoEncoding" />.</span>
          </span>
          <span data-ttu-id="9c411-598">Die Codierung, die auf die Arbeitsmappe angewendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-598">The encoding that is to be applied to the workbook.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-599">Lädt eine Arbeitsmappe, die auf einem HTML-Dokument basiert, erneut, wobei die angegebene Dokumentcodierung verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-599">Reloads a workbook based on an HTML document, using the specified document encoding.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9c411-600">
            <para>Nur <b>MsoEncoding</b> -Konstanten, die für HTML geltende sind mit der <b>ReloadAs</b> -Methode verwendet werden.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-600">
              <para>Only <b>msoEncoding</b> constants that are applicable to HTML work with the <b>ReloadAs</b> method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDocumentInformation">
      <MemberSignature Language="C#" Value="public void RemoveDocumentInformation (Microsoft.Office.Interop.Excel.XlRemoveDocInfoType RemoveDocInfoType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveDocumentInformation([in]valuetype Microsoft.Office.Interop.Excel.XlRemoveDocInfoType RemoveDocInfoType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RemoveDocumentInformation(Microsoft.Office.Interop.Excel.XlRemoveDocInfoType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDocumentInformation (RemoveDocInfoType As XlRemoveDocInfoType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDocumentInformation(Microsoft::Office::Interop::Excel::XlRemoveDocInfoType RemoveDocInfoType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2514)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RemoveDocInfoType" Type="Microsoft.Office.Interop.Excel.XlRemoveDocInfoType" />
      </Parameters>
      <Docs>
        <param name="RemoveDocInfoType">
          <span data-ttu-id="9c411-601">Eines der <see cref="T:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType" /> Werte, die den Typ der zu entfernenden Informationen angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-601">One of the <see cref="T:Microsoft.Office.Interop.Excel.XlRemoveDocInfoType" /> values indicating the type of information to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-602">Entfernt alle Informationen des angegebenen Typs aus der Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-602">Removes all information of the specified type from the workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePersonalInformation">
      <MemberSignature Language="C#" Value="public bool RemovePersonalInformation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RemovePersonalInformation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.RemovePersonalInformation" />
      <MemberSignature Language="VB.NET" Value="Public Property RemovePersonalInformation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RemovePersonalInformation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2050)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2050)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2050)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p255">
            <b>True</b>, falls persönliche Informationen aus der angegebenen Arbeitsmappe entfernt werden können. Der Standardwert ist <b>False</b>. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p255">
              <b>True</b> if personal information can be removed from the specified workbook. The default value is <b>False</b>. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveUser">
      <MemberSignature Language="C#" Value="public void RemoveUser (int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveUser([in]int32 Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RemoveUser(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveUser (Index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveUser(int Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1453)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">
          <span data-ttu-id="9c411-606">
            <b>Integer</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-606">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="9c411-607">Der Benutzerindex.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-607">The user index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-608">Trennt den angegebenen Benutzer von der freigegebenen Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-608">Disconnects the specified user from the shared workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public void Reply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reply() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Reply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reply();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(977)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p257">Sie haben für ein Visual Basic-Schlüsselwort Hilfe angefordert, das nur auf dem Macintosh verwendet wird. Weitere Informationen zu diesem Schlüsselwort finden Sie in der Sprachverzeichnishilfe zu Microsoft Office Macintosh Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p257">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyAll">
      <MemberSignature Language="C#" Value="public void ReplyAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplyAll() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ReplyAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplyAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReplyAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(978)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p258">Sie haben für ein Visual Basic-Schlüsselwort Hilfe angefordert, das nur auf dem Macintosh verwendet wird. Weitere Informationen zu diesem Schlüsselwort finden Sie in der Sprachverzeichnishilfe zu Microsoft Office Macintosh Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p258">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyWithChanges">
      <MemberSignature Language="C#" Value="public void ReplyWithChanges (object ShowMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplyWithChanges([in]object ShowMessage) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ReplyWithChanges(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplyWithChanges (Optional ShowMessage As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2057)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ShowMessage" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ShowMessage">
          <span data-ttu-id="9c411-613">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-613">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-614">
            <b>"False"</b> wird die Meldung nicht angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-614">
              <b>False</b> does not display the message.</span>
          </span>
          <span data-ttu-id="9c411-615">
            <b>True</b> wird die Nachricht angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-615">
              <b>True</b> displays the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-616">Sendet eine E-Mail an den Autor einer Arbeitsmappe, die zur Überprüfung versendet wurde, und benachrichtigt diesen darüber, dass die Überprüfung der Arbeitsmappe abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-616">Sends an e-mail message to the author of a workbook that has been sent out for review, notifying them that a reviewer has completed review of the workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9c411-617">
            <para>Verwendung der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" /> -Methode, um eine gemeinsame Überprüfung einer Arbeitsmappe zu starten. Wenn die <b>ReplyWithChanges</b> -Methode für eine Arbeitsmappe, die nicht Teil Bearbeiter vorher ist ausgeführt wird, erhält der Benutzer einen Fehler.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-617">
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" /> method to start a collaborative review of a workbook. If the <b>ReplyWithChanges</b> method is executed on a workbook that is not part of a collaborative review cycle, the user will receive an error.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Research">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Research Research { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Research Research" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Research" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Research As Research" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Research ^ Research { Microsoft::Office::Interop::Excel::Research ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2532)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2532)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Research</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-618">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Research" /> -Objekt, das den Recherchedienst für eine Arbeitsmappe darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-618">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Research" /> object that represents the research service for a workbook.</span>
          </span>
          <span data-ttu-id="9c411-619">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-619">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c411-620">
            <b>Research</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-620">
              <b>Research</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetColors">
      <MemberSignature Language="C#" Value="public void ResetColors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetColors() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ResetColors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetColors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetColors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1468)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c411-621">Setzt die Farbpalette auf die Standardfarben zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-621">Resets the color palette to the default colors.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevisionNumber">
      <MemberSignature Language="C#" Value="public int RevisionNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RevisionNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.RevisionNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RevisionNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RevisionNumber { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1172)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1172)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-622">Gibt die Anzahl der Häufigkeit, mit die Arbeitsmappe, während Sie als freigegebene Liste geöffnet gespeichert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-622">Returns the number of times the workbook has been saved while open as a shared list.</span>
          </span>
          <span data-ttu-id="9c411-623">Wenn die Arbeitsmappe im exklusiven Modus geöffnet ist, gibt diese Eigenschaft 0 (null) zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-623">If the workbook is open in exclusive mode, this property returns 0 (zero).</span>
          </span>
          <span data-ttu-id="9c411-624">Schreibgeschützter <b>Integer</b>-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-624">Read-only <b>Integer</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-625">
            <para>Die <b>RevisionNumber</b> -Eigenschaft wird aktualisiert, nur, wenn die lokale Kopie der Arbeitsmappe, nicht jedoch beim Speichern von Kopien gespeichert wird.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-625">
              <para>The <b>RevisionNumber</b> property is updated only when the local copy of the workbook is saved, not when remote copies are saved.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Route">
      <MemberSignature Language="C#" Value="public void Route ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Route() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Route" />
      <MemberSignature Language="VB.NET" Value="Public Sub Route ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Route();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(946)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c411-626">Leitet die Arbeitsmappe entsprechend den Einstellungen des aktuellen Verteilers der Arbeitsmappe weiter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-626">Routes the workbook, using the workbook's current routing slip.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9c411-627">
            <para>Weiterleiten einer Arbeitsmappe wird die <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Routed" /> -Eigenschaft auf <b>True</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-627">
              <para>Routing a workbook sets the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Routed" /> property to <b>True</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Routed">
      <MemberSignature Language="C#" Value="public bool Routed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Routed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Routed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Routed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Routed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(951)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(951)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p262">
            <b>True</b>, wenn die Arbeitsmappe bereits an den nächsten Empfänger weitergeleitet wurde. <b>False</b>, wenn sie noch weitergeleitet werden muss. Schreibgeschützter <b>Boolean</b>-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p262">
              <b>True</b> if the workbook has been routed to the next recipient. <b>False</b> if the workbook needs to be routed. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-631">
            <para>Wenn die Arbeitsmappe nicht an den aktuellen Empfänger weitergeleitet wurde, ist diese Eigenschaft immer <b>False</b> (z. B., wenn das Dokument keinen Verteiler enthält oder ein Verteiler soeben erstellt wurde).</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-631">
              <para>If the workbook wasn't routed to the current recipient, this property is always <b>False</b> (for example, if the document has no routing slip, or if a routing slip was just created).</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoutingSlip">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.RoutingSlip RoutingSlip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.RoutingSlip RoutingSlip" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.RoutingSlip" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoutingSlip As RoutingSlip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::RoutingSlip ^ RoutingSlip { Microsoft::Office::Interop::Excel::RoutingSlip ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(949)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(949)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.RoutingSlip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-632">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.RoutingSlip" /> -Objekt, das den Verteiler für die Arbeitsmappe darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-632">Returns a <see cref="T:Microsoft.Office.Interop.Excel.RoutingSlip" /> object that represents the routing slip for the workbook.</span>
          </span>
          <span data-ttu-id="9c411-633">Diese Eigenschaft lesen, wenn kein Verteiler vorhanden ist, tritt ein Fehler (Überprüfen Sie die <see cref="P:Microsoft.Office.Interop.Excel._Workbook.HasRoutingSlip" /> Eigenschaft ersten).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-633">Reading this property if there's no routing slip causes an error (check the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.HasRoutingSlip" /> property first).</span>
          </span>
          <span data-ttu-id="9c411-634">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-634">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAutoMacros">
      <MemberSignature Language="C#" Value="public void RunAutoMacros (Microsoft.Office.Interop.Excel.XlRunAutoMacro Which);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RunAutoMacros([in]valuetype Microsoft.Office.Interop.Excel.XlRunAutoMacro Which) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunAutoMacros (Which As XlRunAutoMacro)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RunAutoMacros(Microsoft::Office::Interop::Excel::XlRunAutoMacro Which);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(634)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Which" Type="Microsoft.Office.Interop.Excel.XlRunAutoMacro" />
      </Parameters>
      <Docs>
        <param name="Which">
          <span data-ttu-id="9c411-635">Erforderliche <see cref="T:Microsoft.Office.Interop.Excel.XlRunAutoMacro" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-635">Required <see cref="T:Microsoft.Office.Interop.Excel.XlRunAutoMacro" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-636">Führt das Makro Auto_öffnen, Auto_schließen, Auto_aktivieren oder Auto_deaktivieren mit der Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-636">Runs the Auto_Open, Auto_Close, Auto_Activate, or Auto_Deactivate macro attached to the workbook.</span>
          </span>
          <span data-ttu-id="9c411-637">Diese Methode ist für die Abwärtskompatibilität enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-637">This method is included for backward compatibility.</span>
          </span>
          <span data-ttu-id="9c411-638">Verwenden Sie die Open, Close, Activate und Deactivate-Ereignis anstelle dieser Makros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-638">You should use the Open, Close, Activate and Deactivate events instead of these macros.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(283)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c411-639">Speichert Änderungen in der angegebenen Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-639">Saves changes to the specified workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9c411-640">
            <para>Verwenden, um eine Arbeitsmappendatei zu öffnen, die <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> -Methode.</para>
            <para>Festlegen, um eine Arbeitsmappe als gespeichert zu markieren ohne diese auf einen Datenträger geschrieben wird, dessen <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" /> -Eigenschaft auf <b>True</b>.</para>
            <para>Beim ersten einer Arbeitsmappe speichern verwenden Sie die <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> -Methode, um einen Namen für die Datei anzugeben.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-640">
              <para>To open a workbook file, use the <see cref="M:Microsoft.Office.Interop.Excel.Workbooks.Open(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method.</para>
              <para>To mark a workbook as saved without writing it to a disk, set its <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Saved" /> property to <b>True</b>.</para>
              <para>The first time you save a workbook, use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to specify a name for the file.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (object Filename, object FileFormat, object Password, object WriteResPassword, object ReadOnlyRecommended, object CreateBackup, Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, object ConflictResolution, object AddToMru, object TextCodepage, object TextVisualLayout, object Local);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAs([in]object Filename, [in]object FileFormat, [in]object Password, [in]object WriteResPassword, [in]object ReadOnlyRecommended, [in]object CreateBackup, [in]valuetype Microsoft.Office.Interop.Excel.XlSaveAsAccessMode AccessMode, [in]object ConflictResolution, [in]object AddToMru, [in]object TextCodepage, [in]object TextVisualLayout, [in]object Local) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (Optional Filename As Object, Optional FileFormat As Object, Optional Password As Object, Optional WriteResPassword As Object, Optional ReadOnlyRecommended As Object, Optional CreateBackup As Object, Optional AccessMode As XlSaveAsAccessMode = Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, Optional ConflictResolution As Object, Optional AddToMru As Object, Optional TextCodepage As Object, Optional TextVisualLayout As Object, Optional Local As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1925)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Password" Type="System.Object" />
        <Parameter Name="WriteResPassword" Type="System.Object" />
        <Parameter Name="ReadOnlyRecommended" Type="System.Object" />
        <Parameter Name="CreateBackup" Type="System.Object" />
        <Parameter Name="AccessMode" Type="Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" />
        <Parameter Name="ConflictResolution" Type="System.Object" />
        <Parameter Name="AddToMru" Type="System.Object" />
        <Parameter Name="TextCodepage" Type="System.Object" />
        <Parameter Name="TextVisualLayout" Type="System.Object" />
        <Parameter Name="Local" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="9c411-641">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-641">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-642">Eine Zeichenfolge, die den Namen der zu speichernden Datei angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-642">A string that indicates the name of the file to be saved.</span>
          </span>
          <span data-ttu-id="9c411-643">Sie können einen vollständigen Pfad angeben. Wenn dies nicht der Fall, speichert Microsoft Excel die Datei im aktuellen Ordner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-643">You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="FileFormat">
          <span data-ttu-id="9c411-644">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-644">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-645">Das Dateiformat beim Speichern der Datei verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-645">The file format to use when you save the file.</span>
          </span>
          <span data-ttu-id="9c411-646">Eine Liste der gültigen finden Sie unter der <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-646">For a list of valid choices, see the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.FileFormat" /> property.</span>
          </span>
          <span data-ttu-id="9c411-647">Für eine vorhandene Datei ist das Standardformat das zuletzt angegebene Dateiformat; für eine neue Datei ist der Standardwert für das Format der Version von Excel verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-647">For an existing file, the default format is the last file format specified; for a new file, the default is the format of the version of Excel being used.</span>
          </span>
        </param>
        <param name="Password">
          <span data-ttu-id="9c411-648">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-648">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-649">Eine Zeichenfolge unter Berücksichtigung der Groß-/Kleinschreibung (maximal 15 Zeichen), mit der das Schutzkennwort für die Datei angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-649">A case-sensitive string (no more than 15 characters) that indicates the protection password to be given to the file.</span>
          </span>
        </param>
        <param name="WriteResPassword">
          <span data-ttu-id="9c411-650">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-650">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-651">Eine Zeichenfolge, die Schreibschutzkennwort für diese Datei angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-651">A string that indicates the write-reservation password for this file.</span>
          </span>
          <span data-ttu-id="9c411-652">Wenn eine Datei mit dem Kennwort gespeichert wird und das Kennwort nicht angegeben werden, wenn die Datei geöffnet wird, wird die Datei schreibgeschützt geöffnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-652">If a file is saved with the password and the password isn't supplied when the file is opened, the file is opened as read-only.</span>
          </span>
        </param>
        <param name="ReadOnlyRecommended">
          <span data-ttu-id="9c411-653">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-653">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-654">
            <b>True</b> , wenn eine Meldung angezeigt, wenn die Datei empfohlen geöffnet wird, die Datei als schreibgeschützt zu öffnen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-654">
              <b>True</b> to display a message when the file is opened recommending that the file be opened as read-only.</span>
          </span>
        </param>
        <param name="CreateBackup">
          <span data-ttu-id="9c411-655">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-655">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-656">Mit dem Wert  <b>True</b> wird eine Sicherungsdatei erstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-656">
              <b>True</b> to create a backup file.</span>
          </span>
        </param>
        <param name="AccessMode">
          <span data-ttu-id="9c411-657">Optionale <see cref="T:Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-657">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSaveAsAccessMode" />.</span>
          </span>
        </param>
        <param name="ConflictResolution">
          <span data-ttu-id="9c411-658">Optionale <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-658">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlSaveConflictResolution" />.</span>
          </span>
        </param>
        <param name="AddToMru">
          <span data-ttu-id="9c411-659">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-659">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-660">
            <b>True</b> zum Hinzufügen dieser Arbeitsmappe zur Liste der zuletzt verwendeten Dateien.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-660">
              <b>True</b> to add this workbook to the list of recently used files.</span>
          </span>
          <span data-ttu-id="9c411-661">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-661">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="TextCodepage">
          <span data-ttu-id="9c411-662">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-662">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-663">Wird in Microsoft Excel mit US-Englisch nicht verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-663">Not used in U.S. English Microsoft Excel.</span>
          </span>
        </param>
        <param name="TextVisualLayout">
          <span data-ttu-id="9c411-664">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-664">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-665">Wird in Microsoft Excel mit US-Englisch nicht verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-665">Not used in U.S. English Microsoft Excel.</span>
          </span>
        </param>
        <param name="Local">
          <span data-ttu-id="9c411-666">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-666">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-667">
            <b>True,</b> speichert Dateien in der Sprache von Microsoft Excel (einschließlich der Einstellungen für den Dokumentinformationsbereich Control).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-667">
              <b>True</b> saves files against the language of Microsoft Excel (including control panel settings).</span>
          </span>
          <span data-ttu-id="9c411-668">
            <b>"False"</b> (Standard) speichert Dateien in der Sprache von Visual Basic für Applikationen (VBA) (die in der Regel Englisch (USA) ist, es sei denn, das VBA-Projekt, in dem Workbooks.Open ausgeführt wird, ein altes internationalen XL5/95 VBA-Projekt).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-668">
              <b>False</b> (default) saves files against the language of Visual Basic for Applications (VBA) (which is typically U.S. English unless the VBA project where Workbooks.Open is run from is an old internationalized XL5/95 VBA project).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-669">Speichert Änderungen an der Arbeitsmappe in einer anderen Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-669">Saves changes to the workbook in a different file.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAsXMLData">
      <MemberSignature Language="C#" Value="public void SaveAsXMLData (string Filename, Microsoft.Office.Interop.Excel.XmlMap Map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAsXMLData([in]string Filename, [in]class Microsoft.Office.Interop.Excel.XmlMap Map) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SaveAsXMLData(System.String,Microsoft.Office.Interop.Excel.XmlMap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAsXMLData (Filename As String, Map As XmlMap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAsXMLData(System::String ^ Filename, Microsoft::Office::Interop::Excel::XmlMap ^ Map);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2278)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.String" />
        <Parameter Name="Map" Type="Microsoft.Office.Interop.Excel.XmlMap" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="9c411-670">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-670">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="9c411-671">Eine Zeichenfolge, die den Namen der zu speichernden Datei angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-671">A string that indicates the name of the file to be saved.</span>
          </span>
          <span data-ttu-id="9c411-672">Sie können einen vollständigen Pfad angeben. Wenn dies nicht der Fall, speichert Microsoft Excel die Datei im aktuellen Ordner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-672">You can include a full path; if you don't, Microsoft Excel saves the file in the current folder.</span>
          </span>
        </param>
        <param name="Map">
          <span data-ttu-id="9c411-673">Erforderliche <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-673">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span>
          </span>
          <span data-ttu-id="9c411-674">Die auf die Daten anzuwendende Schemazuordnung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-674">The schema map to apply to the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-675">Exportiert die der angegebenen XML-Schemazuordnung zugeordneten Daten in eine XML-Datendatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-675">Exports the data that has been mapped to the specified XML schema map to an XML data file.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9c411-676">
            <para>XML-Features, außer das Speichern von Dateien im XML-Tabellenformat stehen nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003.</para>
            <para>Diese Methode führt zu einem Laufzeitfehler, wenn Excel-Daten mit der angegebenen schemazuordnung exportieren kann nicht. Um zu überprüfen, ob Excel die angegebenen schemazuordnung zum Exportieren von Daten verwenden kann, verwenden Sie die <see cref="P:Microsoft.Office.Interop.Excel.XmlMap.IsExportable" /> -Eigenschaft.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-676">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para>This method will result in a run-time error if Excel cannot export data with the specified schema map. To check whether Excel can use the specified schema map to export data, use the <see cref="P:Microsoft.Office.Interop.Excel.XmlMap.IsExportable" /> property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCopyAs">
      <MemberSignature Language="C#" Value="public void SaveCopyAs (object Filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveCopyAs([in]object Filename) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SaveCopyAs(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveCopyAs (Optional Filename As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(175)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Filename" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Filename">
          <span data-ttu-id="9c411-677">Erforderlich. </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-677">Required.</span>
          </span>
          <span data-ttu-id="9c411-678">Gibt den Dateinamen für die Kopie an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-678">Specifies the file name for the copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-679">Speichert eine Kopie der Arbeitsmappe in einer Datei, ändert aber nicht die geöffnete Arbeitsmappe im Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-679">Saves a copy of the workbook to a file but doesn't modify the open workbook in memory.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Saved">
      <MemberSignature Language="C#" Value="public bool Saved { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Saved" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Saved" />
      <MemberSignature Language="VB.NET" Value="Public Property Saved As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Saved { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(298)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(298)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(298)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p278">
            <b>True</b>, wenn die angegebene Arbeitsmappe seit dem letzten Speichern nicht geändert wurde. <b>Boolean</b> -Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p278">
              <b>True</b> if no changes have been made to the specified workbook since it was last saved. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-682">
            <para>Wenn eine Arbeitsmappe noch nie gespeichert wurde, dessen <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Path" /> -Eigenschaft gibt eine leere Zeichenfolge ("").</para>
            <para>Sie können diese Eigenschaft auf <b>True</b> festlegen, wenn Sie ohne Speichern oder Aufforderung zum Speichern von darauf verweisen eine geänderte Arbeitsmappe schließen möchten</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-682">
              <para>If a workbook has never been saved, its <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Path" /> property returns an empty string ("").</para>
              <para>You can set this property to <b>True</b> if you want to close a modified workbook without either saving it or being prompted to save it.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveLinkValues">
      <MemberSignature Language="C#" Value="public bool SaveLinkValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveLinkValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SaveLinkValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveLinkValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveLinkValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(406)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p279">
            <b>True</b>, wenn Microsoft Excel externe Verknüpfungswerte mit der aktiven Arbeitsmappe speichert. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p279">
              <b>True</b> if Microsoft Excel saves external link values with the workbook. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="sblt">
      <MemberSignature Language="C#" Value="public void sblt (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void sblt([in]string s) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.sblt(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub sblt (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void sblt(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1826)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>
          <span data-ttu-id="9c411-685">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-685">Reserved for internal use.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendFaxOverInternet">
      <MemberSignature Language="C#" Value="public void SendFaxOverInternet (object Recipients, object Subject, object ShowMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendFaxOverInternet([in]object Recipients, [in]object Subject, [in]object ShowMessage) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendFaxOverInternet(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendFaxOverInternet (Optional Recipients As Object, Optional Subject As Object, Optional ShowMessage As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2267)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Recipients" Type="System.Object" />
        <Parameter Name="Subject" Type="System.Object" />
        <Parameter Name="ShowMessage" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Recipients">
          <span data-ttu-id="9c411-686">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-686">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-687">Eine Zeichenfolge darstellt, die Faxnummer und e-Mail-Adressen der Personen, die das Fax gesendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-687">A string that represents the fax numbers and e-mail addresses of the people to whom the fax will be sent.</span>
          </span>
          <span data-ttu-id="9c411-688">Trennen Sie mehrere Empfänger durch ein Semikolon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-688">Separate multiple recipients with a semicolon.</span>
          </span>
        </param>
        <param name="Subject">
          <span data-ttu-id="9c411-689">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-689">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-690">Eine Zeichenfolge, die die Betreffzeile für das gefaxte Dokument darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-690">A string that represents the subject line for the faxed document.</span>
          </span>
        </param>
        <param name="ShowMessage">
          <span data-ttu-id="9c411-691">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-691">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-692">
            <b>True</b> zeigt die Faxnachricht vor dem senden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-692">
              <b>True</b> displays the fax message before sending it.</span>
          </span>
          <span data-ttu-id="9c411-693">
            <b>False</b> sendet das Fax ohne Anzeigen der Faxnachricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-693">
              <b>False</b> sends the fax without displaying the fax message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-694">Sendet ein Arbeitsblatt als Fax an die angegebenen Empfänger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-694">Sends a worksheet as a fax to the specified recipients.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9c411-695">
            <para>Die <b>SendFaxOverInternet</b> -Methode muss der Faxdienst auf dem Computer eines Benutzers aktiviert sein.</para>
            <para>Das Format zum Festlegen von Faxnummern in der <paramref name="Recipients" /> Parameter ist entweder <paramref name="recipientsfaxnumber@usersfaxprovider" /> oder <paramref name="recipientsname@recipientsfaxnumber" />. Sie können die Informationen des Benutzers Fax Anbieter über den folgenden Registrierungspfad zugreifen:</para>
            <para>HKEY_CURRENT_USER\Software\Microsoft\Office\11.0\Common\Services\Fax</para>
            <para>Verwenden Sie den Wert des Schlüssels FaxAddress in diesem Registrierungspfad, um zu bestimmen die für einen Empfänger zu verwendende Format.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-695">
              <para>Using the <b>SendFaxOverInternet</b> method requires that the fax service is enabled on a user's computer.</para>
              <para>The format used for specifying fax numbers in the <paramref name="Recipients" /> parameter is either <paramref name="recipientsfaxnumber@usersfaxprovider" /> or <paramref name="recipientsname@recipientsfaxnumber" />. You can access the user's fax provider information using the following registry path:</para>
              <para>HKEY_CURRENT_USER\Software\Microsoft\Office\11.0\Common\Services\Fax</para>
              <para>Use the value of the FaxAddress key at this registry path to determine the format to use for a recipient.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendForReview">
      <MemberSignature Language="C#" Value="public void SendForReview (object Recipients, object Subject, object ShowMessage, object IncludeAttachment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendForReview([in]object Recipients, [in]object Subject, [in]object ShowMessage, [in]object IncludeAttachment) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendForReview(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendForReview (Optional Recipients As Object, Optional Subject As Object, Optional ShowMessage As Object, Optional IncludeAttachment As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2054)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Recipients" Type="System.Object" />
        <Parameter Name="Subject" Type="System.Object" />
        <Parameter Name="ShowMessage" Type="System.Object" />
        <Parameter Name="IncludeAttachment" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Recipients">
          <span data-ttu-id="9c411-696">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-696">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-697">Eine Zeichenfolge, die eine Liste der Personen, an die die Nachricht gesendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-697">A string that lists the people to whom to send the message.</span>
          </span>
          <span data-ttu-id="9c411-698">Dabei kann es sich um nicht aufgelöste Namen und Aliase in einem e-Mail-Telefonbuch oder die vollständigen E-mail-Adressen handeln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-698">These can be unresolved names and aliases in an e-mail phone book or full e-mail addresses.</span>
          </span>
          <span data-ttu-id="9c411-699">Trennen Sie mehrere Empfänger durch ein Semikolon (;).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-699">Separate multiple recipients with a semicolon (;).</span>
          </span>
          <span data-ttu-id="9c411-700">Bei Nichtangabe und <paramref name="ShowMessage" /><b>False</b>ist, erhalten Sie eine Fehlermeldung angezeigt und die Nachricht wird nicht gesendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-700">If left blank and <paramref name="ShowMessage" /> is <b>False</b>, you will receive an error message, and the message will not be sent.</span>
          </span>
        </param>
        <param name="Subject">
          <span data-ttu-id="9c411-701">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-701">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-702">Eine Zeichenfolge für den Betreff der Nachricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-702">A string for the subject of the message.</span>
          </span>
          <span data-ttu-id="9c411-703">Wenn leer, werden der Betreff: Informieren Sie sich über "<paramref name="filename" />".</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-703">If left blank, the subject will be: Please review "<paramref name="filename" />".</span>
          </span>
        </param>
        <param name="ShowMessage">
          <span data-ttu-id="9c411-704">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-704">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-705">Ein <b>boolescher</b> Wert, der angibt, ob die Nachricht angezeigt werden soll, wenn die Methode ausgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-705">A <b>Boolean</b> value that indicates whether the message should be displayed when the method is executed.</span>
          </span>
          <span data-ttu-id="9c411-706">Der Standardwert ist <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-706">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="9c411-707">Wenn auf <b>False</b>festgelegt, wird die Nachricht automatisch an die Empfänger gesendet, ohne Sie vorher die Nachricht an dem Absender.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-707">If set to <b>False</b>, the message is automatically sent to the recipients without first showing the message to the sender.</span>
          </span>
        </param>
        <param name="IncludeAttachment">
          <span data-ttu-id="9c411-708">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-708">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-709">Ein <b>boolescher</b> Wert, der angibt, ob die Nachricht eine Anlage oder ein Link zu einem Serverpfad enthalten soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-709">A <b>Boolean</b> value that indicates whether the message should include an attachment or a link to a server location.</span>
          </span>
          <span data-ttu-id="9c411-710">Der Standardwert ist <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-710">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="9c411-711">Wenn auf <b>False</b>festgelegt ist, muss das Dokument an einen freigegebenen Speicherort gespeichert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-711">If set to <b>False</b>, the document must be stored at a shared location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-712">Sendet eine Arbeitsmappe in einer E-Mail, damit diese von den angegebenen Empfängern überprüft werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-712">Sends a workbook in an e-mail message for review to the specified recipients.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9c411-713">
            <para>Die <b>SendForReview</b> -Methode startet einen gemeinschaftlichen Überprüfungszyklus. Verwendung der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.EndReview" /> -Methode, um einen Überprüfungszyklus zu beenden.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-713">
              <para>The <b>SendForReview</b> method starts a collaborative review cycle. Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.EndReview" /> method to end a review cycle.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMail">
      <MemberSignature Language="C#" Value="public void SendMail (object Recipients, object Subject, object ReturnReceipt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendMail([in]object Recipients, [in]object Subject, [in]object ReturnReceipt) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendMail(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendMail (Recipients As Object, Optional Subject As Object, Optional ReturnReceipt As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(947)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Recipients" Type="System.Object" />
        <Parameter Name="Subject" Type="System.Object" />
        <Parameter Name="ReturnReceipt" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Recipients">
          <span data-ttu-id="9c411-714">
            <b>Objekt</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-714">Required <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-715">Gibt den Namen des Empfängers als Text oder als ein Array von Zeichenfolgen, die ein, wenn mehrere Empfänger vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-715">Specifies the name of the recipient as text, or as an array of text strings if there are multiple recipients.</span>
          </span>
          <span data-ttu-id="9c411-716">Mindestens ein Empfänger muss angegeben werden, und alle Empfänger werden als an-Empfänger hinzugefügt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-716">At least one recipient must be specified, and all recipients are added as To recipients.</span>
          </span>
        </param>
        <param name="Subject">
          <span data-ttu-id="9c411-717">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-717">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-718">Gibt den Betreff der Nachricht an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-718">Specifies the subject of the message.</span>
          </span>
          <span data-ttu-id="9c411-719">Wenn dieses Argument ausgelassen wird, wird der Name des Dokuments verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-719">If this argument is omitted, the document name is used.</span>
          </span>
        </param>
        <param name="ReturnReceipt">
          <span data-ttu-id="9c411-720">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-720">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-721">
            <b>True,</b> um eine Bestätigung anzufordern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-721">
              <b>True</b> to request a return receipt.</span>
          </span>
          <span data-ttu-id="9c411-722">
            <b>False</b> nicht um eine Bestätigung anzufordern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-722">
              <b>False</b> not to request a return receipt.</span>
          </span>
          <span data-ttu-id="9c411-723">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-723">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-724">Sendet die Arbeitsmappe über das installierte E-Mail-System.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-724">Sends the workbook by using the installed mail system.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendMailer">
      <MemberSignature Language="C#" Value="public void SendMailer (object FileFormat, Microsoft.Office.Interop.Excel.XlPriority Priority = Microsoft.Office.Interop.Excel.XlPriority.xlPriorityNormal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendMailer([in]object FileFormat, [in]valuetype Microsoft.Office.Interop.Excel.XlPriority Priority) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SendMailer(System.Object,Microsoft.Office.Interop.Excel.XlPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendMailer (Optional FileFormat As Object, Optional Priority As XlPriority = Microsoft.Office.Interop.Excel.XlPriority.xlPriorityNormal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(980)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="FileFormat" Type="System.Object" />
        <Parameter Name="Priority" Type="Microsoft.Office.Interop.Excel.XlPriority" />
      </Parameters>
      <Docs>
        <param name="FileFormat">
          <span data-ttu-id="9c411-725">Dieser Parameter ist nur für Macintosh gedacht und sollte nicht verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-725">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <param name="Priority">
          <span data-ttu-id="9c411-726">Dieser Parameter ist nur für Macintosh gedacht und sollte nicht verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-726">This parameter is for Macintosh only and should not be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-p290">Sie haben für ein Visual Basic-Schlüsselwort Hilfe angefordert, das nur auf dem Macintosh verwendet wird. Weitere Informationen zu diesem Schlüsselwort finden Sie in der Sprachverzeichnishilfe zu Microsoft Office Macintosh Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p290">You have requested Help for a Visual Basic keyword used only on the Macintosh. For information about this keyword, consult the language reference Help included with Microsoft Office Macintosh Edition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerPolicy">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.ServerPolicy ServerPolicy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.ServerPolicy ServerPolicy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ServerPolicy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerPolicy As ServerPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::ServerPolicy ^ ServerPolicy { Microsoft::Office::Core::ServerPolicy ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2519)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2519)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.ServerPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-729">Gibt ein <see cref="T:Microsoft.Office.Core.ServerPolicy" /> -Objekt, das eine Richtlinie für eine Arbeitsmappe auf einem Server mit 2nd_OSS_NoVersion gespeichert stellt 2007.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-729">Returns a <see cref="T:Microsoft.Office.Core.ServerPolicy" /> object that represents a policy specified for a workbook stored on a server running 2nd_OSS_NoVersion 2007.</span>
          </span>
          <span data-ttu-id="9c411-730">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-730">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c411-731">
            <b>ServerPolicy</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-731">
              <b>ServerPolicy</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerViewableItems">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ServerViewableItems ServerViewableItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ServerViewableItems ServerViewableItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ServerViewableItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerViewableItems As ServerViewableItems" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ServerViewableItems ^ ServerViewableItems { Microsoft::Office::Interop::Excel::ServerViewableItems ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2524)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2524)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ServerViewableItems</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p292">Hiermit kann ein Entwickler mit der Liste von veröffentlichten Objekten in der Arbeitsmappe interagieren, die auf dem Server angezeigt werden. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p292">Allows a developer to interact with the list of published objects in the workbook that are shown on the server. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="P:Microsoft.Office.Interop.Excel._Workbook.ServerViewableItems" />
        </value>
        <remarks>
          <span data-ttu-id="9c411-734">
            <para>Diese Eigenschaft gibt eine Auflistung der Elemente, die in Excel Services veröffentlicht werden konnte.  Es kann Tabellen, PivotTables, benannte Bereiche und Diagramme enthalten.  Es kann auch Blätter enthalten, solange es sich nicht um eine Mischung aus Sheets ist und der zuvor aufgeführten Liste.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-734">
              <para>This property returns a collection of the items that could be published to Excel Services.  It can include Tables, PivotTables, Named Ranges, and Charts.  It can also contain Sheets as long as it is not a mixture of Sheets and the before mentioned list.  </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLinkOnData">
      <MemberSignature Language="C#" Value="public void SetLinkOnData (string Name, object Procedure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLinkOnData([in]string Name, [in]object Procedure) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SetLinkOnData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLinkOnData (Name As String, Optional Procedure As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Procedure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="9c411-735">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-735">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="9c411-736">Der Name der DDE/OLE-Verknüpfung von zurückgegebene der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-736">The name of the DDE/OLE link as returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</span>
          </span>
        </param>
        <param name="Procedure">
          <span data-ttu-id="9c411-737">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-737">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="9c411-738">Der Name der Prozedur, die ausgeführt werden, wenn die Verknüpfung aktualisiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-738">The name of the procedure to be run when the link is updated.</span>
          </span>
          <span data-ttu-id="9c411-739">Dies kann ein Microsoft Excel 4.0-Makro oder Visual Basic-Prozedur sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-739">This can be either a Microsoft Excel 4.0 macro or a Visual Basic procedure.</span>
          </span>
          <span data-ttu-id="9c411-740">Legen Sie dieses Argument auf eine leere Zeichenfolge ("") um anzugeben, dass keine Prozedur ausgeführt werden soll, wenn die Verknüpfung aktualisiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-740">Set this argument to an empty string ("") to indicate that no procedure should run when the link is updated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-741">Legt den Namen einer Prozedur fest, die bei jeder Aktualisierung einer DDE-Verknüpfung ausgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-741">Sets the name of a procedure that runs whenever a DDE link is updated.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPasswordEncryptionOptions">
      <MemberSignature Language="C#" Value="public void SetPasswordEncryptionOptions (object PasswordEncryptionProvider, object PasswordEncryptionAlgorithm, object PasswordEncryptionKeyLength, object PasswordEncryptionFileProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordEncryptionOptions([in]object PasswordEncryptionProvider, [in]object PasswordEncryptionAlgorithm, [in]object PasswordEncryptionKeyLength, [in]object PasswordEncryptionFileProperties) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.SetPasswordEncryptionOptions(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPasswordEncryptionOptions (Optional PasswordEncryptionProvider As Object, Optional PasswordEncryptionAlgorithm As Object, Optional PasswordEncryptionKeyLength As Object, Optional PasswordEncryptionFileProperties As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2062)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PasswordEncryptionProvider" Type="System.Object" />
        <Parameter Name="PasswordEncryptionAlgorithm" Type="System.Object" />
        <Parameter Name="PasswordEncryptionKeyLength" Type="System.Object" />
        <Parameter Name="PasswordEncryptionFileProperties" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="PasswordEncryptionProvider">
          <span data-ttu-id="9c411-742">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-742">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-743">Eine Zeichenfolge des Verschlüsselungsanbieters, bei der Groß-/Kleinschreibung beachtet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-743">A case sensitive string of the encryption provider.</span>
          </span>
        </param>
        <param name="PasswordEncryptionAlgorithm">
          <span data-ttu-id="9c411-744">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-744">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-745">Eine Zeichenfolge des Kurznamens für den Algorithmus, bei der Groß-/Kleinschreibung beachtet wird (z. B. "RC4").</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-745">A case sensitive string of the algorithmic short name (i.e. "RC4").</span>
          </span>
        </param>
        <param name="PasswordEncryptionKeyLength">
          <span data-ttu-id="9c411-746">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-746">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-747">Die Länge des Verschlüsselungsschlüssels, der ein Vielfaches von 8 ist (40 oder größer).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-747">The encryption key length which is a multiple of 8 (40 or greater).</span>
          </span>
        </param>
        <param name="PasswordEncryptionFileProperties">
          <span data-ttu-id="9c411-748">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-748">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-749">Bei <b>True</b> (Standard) werden die Dateieigenschaften verschlüsselt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-749">
              <b>True</b> (default) to encrypt file properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-750">Legt die Optionen zur Verschlüsselung von Arbeitsmappen mit Kennwörtern fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-750">Sets the options for encrypting workbooks using passwords.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9c411-751">
            <para>Die <paramref name="PasswordEncryptionProvider" />, <paramref name="PasswordEncryptionAlgorithm" />, und <paramref name="PasswordEncryptionKeyLength" /> Argumenten sind nicht unabhängig voneinander. Ein ausgewählter Verschlüsselungsanbieter beschränkt die Auswahl der Algorithmen und die Schlüssellänge, die ausgewählt werden können.</para>
            <para>Für die <paramref name="PasswordEncryptionKeyLength" /> Argument vorhanden ist, keine Sicherheitsmechanismen Grenzwert für den Bereich der Schlüssellänge. Der Bereich wird durch den Kryptografiedienstanbieter der auch den kryptografischen Algorithmus bestimmt bestimmt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-751">
              <para>The <paramref name="PasswordEncryptionProvider" />, <paramref name="PasswordEncryptionAlgorithm" />, and <paramref name="PasswordEncryptionKeyLength" /> arguments are not independent of each other. A selected encryption provider limits the set of algorithms and key length that can be chosen.</para>
              <para>For the <paramref name="PasswordEncryptionKeyLength" /> argument there is no inherent limit on the range of the key length. The range is determined by the Cryptographic Service Provider which also determines the cryptographic algorithm.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedWorkspace">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SharedWorkspace SharedWorkspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SharedWorkspace SharedWorkspace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SharedWorkspace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SharedWorkspace As SharedWorkspace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SharedWorkspace ^ SharedWorkspace { Microsoft::Office::Core::SharedWorkspace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2265)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2265)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SharedWorkspace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-752">Gibt ein <see cref="T:Microsoft.Office.Core.SharedWorkspace" /> -Objekt, das den Dokumentarbeitsbereich repräsentiert, in dem sich ein angegebenes Dokument befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-752">Returns a <see cref="T:Microsoft.Office.Core.SharedWorkspace" /> object that represents the Document Workspace in which a specified document is located.</span>
          </span>
          <span data-ttu-id="9c411-753">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-753">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Sheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Sheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Sheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Sheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(485)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-754">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> -Auflistung, die alle Blätter in der angegebenen Arbeitsmappe darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-754">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the sheets in the specified workbook.</span>
          </span>
          <span data-ttu-id="9c411-755">Schreibgeschütztes <b>Sheets</b> -Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-755">Read-only <b>Sheets</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowConflictHistory">
      <MemberSignature Language="C#" Value="public bool ShowConflictHistory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowConflictHistory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ShowConflictHistory" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowConflictHistory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowConflictHistory { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1171)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p301">
            <b>True</b>, wenn das Konfliktprotokoll-Arbeitsblatt in der geöffneten und freigegebenen Arbeitsmappe sichtbar ist. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p301">
              <b>True</b> if the Conflict History worksheet is visible in the workbook that's open as a shared list. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-758">
            <para>Die angegebene Arbeitsmappe nicht als freigegebene Liste geöffnet ist, schlägt diese Eigenschaft fehl. Um festzustellen, ob eine Arbeitsmappe im Freigabemodus geöffnet ist, verwenden Sie die <see cref="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" /> Eigenschaft.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-758">
              <para>If the specified workbook isn't open as a shared list, this property fails. To determine whether a workbook is open as a shared list, use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.MultiUserEditing" /> property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPivotChartActiveFields">
      <MemberSignature Language="C#" Value="public bool ShowPivotChartActiveFields { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowPivotChartActiveFields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ShowPivotChartActiveFields" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowPivotChartActiveFields As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowPivotChartActiveFields { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2538)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2538)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2538)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-759">Diese Eigenschaft steuert die Sichtbarkeit der PivotChart-Filterbereich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-759">This property controls the visibility of the PivotChart Filter Pane.</span>
          </span>
          <span data-ttu-id="9c411-760">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-760">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c411-761">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-761">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="9c411-762">
            <para>Diese Eigenschaft steuert die Sichtbarkeit der PivotChart-Filterbereich (schaltet es ein-/ausschalten).  Damit für sichtbar sein kann muss ein <b>PivotChart</b> -Objekt ausgewählt werden.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-762">
              <para>This property controls the visibility of the PivotChart Filter Pane (toggles it on/off).  In order for it to be visible, a <b>PivotChart</b> object must be selected. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPivotTableFieldList">
      <MemberSignature Language="C#" Value="public bool ShowPivotTableFieldList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowPivotTableFieldList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.ShowPivotTableFieldList" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowPivotTableFieldList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowPivotTableFieldList { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2046)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2046)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2046)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p303">
            <b>True</b> (Standard), falls die PivotTable-Feldliste angezeigt werden kann. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p303">
              <b>True</b> (default) if the PivotTable field list can be shown. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Signatures">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SignatureSet Signatures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SignatureSet Signatures" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Signatures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Signatures As SignatureSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SignatureSet ^ Signatures { Microsoft::Office::Core::SignatureSet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2516)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2516)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SignatureSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p304">Gibt die digitalen Signaturen für eine Arbeitsmappe zurück. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p304">Returns the digital signatures for a workbook. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.SignatureSet" />
        </value>
        <remarks>
          <span data-ttu-id="9c411-767">
            <para>Um digital zu signieren Excel2007 Arbeitsmappen und anderen Signaturen zu überprüfen, benötigen Sie die Microsoft CryptoAPI und ein eindeutiges digitales Signaturzertifikat. CryptoAPI ist mit Microsoft Internet Explorer 4.01 oder höher installiert. Sie können ein Zertifikat für digitale Signaturen von einer Zertifizierungsstelle abrufen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-767">
              <para>To digitally sign Excel2007 workbooks and verify other signatures in them, you will need the Microsoft CryptoAPI and a unique digital signature certificate. The CryptoAPI is installed with Microsoft Internet Explorer 4.01 or later. You can obtain a digital signature certificate from a certification authority. </para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SlicerCaches">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SlicerCaches SlicerCaches { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SlicerCaches SlicerCaches" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SlicerCaches" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SlicerCaches As SlicerCaches" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SlicerCaches ^ SlicerCaches { Microsoft::Office::Interop::Excel::SlicerCaches ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2866)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2866)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SlicerCaches</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-768">Ruft die <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> -Objekt mit der Arbeitsmappe verknüpft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-768">Gets the <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> object associated with the workbook.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c411-769">Die <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> -Objekt mit der Arbeitsmappe verknüpft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-769">The <see cref="T:Microsoft.Office.Interop.Excel.SlicerCaches" /> object associated with the workbook.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="9c411-770">
            <para>Lese-/Schreibzugriff.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-770">
              <para>Read/write.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartDocument">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.SmartDocument SmartDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.SmartDocument SmartDocument" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SmartDocument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartDocument As SmartDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::SmartDocument ^ SmartDocument { Microsoft::Office::Core::SmartDocument ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2273)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2273)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.SmartDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-771">Gibt ein <see cref="T:Microsoft.Office.Core.SmartDocument" /> -Objekt, das die Einstellungen für ein SmartDocument-Lösung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-771">Returns a <see cref="T:Microsoft.Office.Core.SmartDocument" /> object that represents the settings for a smart document solution.</span>
          </span>
          <span data-ttu-id="9c411-772">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-772">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SmartTagOptions SmartTagOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SmartTagOptions SmartTagOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.SmartTagOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmartTagOptions As SmartTagOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SmartTagOptions ^ SmartTagOptions { Microsoft::Office::Interop::Excel::SmartTagOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2064)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SmartTagOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-773">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.SmartTagOptions" /> -Objekt, das die Optionen, die mit einem Smarttag ausgeführt werden können darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-773">Returns a <see cref="T:Microsoft.Office.Interop.Excel.SmartTagOptions" /> object representing the options that can be performed with a smart tag.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Styles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Styles Styles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Styles Styles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Styles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Styles As Styles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Styles ^ Styles { Microsoft::Office::Interop::Excel::Styles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(493)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Styles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-774">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> -Auflistung, die alle Formatvorlagen in der angegebenen Arbeitsmappe darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-774">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Styles" /> collection that represents all the styles in the specified workbook.</span>
          </span>
          <span data-ttu-id="9c411-775">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-775">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subject">
      <MemberSignature Language="C#" Value="public string Subject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Subject" />
      <MemberSignature Language="VB.NET" Value="Public Property Subject As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Subject { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(953)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(953)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(953)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-776">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-776">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sync">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.Sync Sync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.Sync Sync" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Sync" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sync As Sync" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::Sync ^ Sync { Microsoft::Office::Core::Sync ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2266)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2266)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.Sync</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-777">Gibt ein <see cref="T:Microsoft.Office.Core.Sync" /> -Objekt, das Zugriff auf die Methoden und Eigenschaften für Dokumente ermöglicht, die Teil eines Dokumentarbeitsbereichs sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-777">Returns a <see cref="T:Microsoft.Office.Core.Sync" /> object that provides access to the methods and properties for documents that are part of a Document Workspace.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TableStyles">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TableStyles TableStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TableStyles TableStyles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.TableStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TableStyles As TableStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TableStyles ^ TableStyles { Microsoft::Office::Interop::Excel::TableStyles ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2525)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2525)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TableStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-778">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> -Auflistungsobjekt für die aktuelle Arbeitsmappe, die auf der in der aktuellen Arbeitsmappe verwendeten Formatvorlagen verweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-778">Returns a <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" /> collection object for the current workbook that refers to the styles used in the current workbook.</span>
          </span>
          <span data-ttu-id="9c411-779">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-779">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.TableStyles" />
        </value>
        <remarks>
          <span data-ttu-id="9c411-780">
            <para>Sie können die von der Eigenschaft zurückgegebenen Tabellenformate bearbeiten.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-780">
              <para>You can manipulate the table styles returned by the property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateRemoveExtData">
      <MemberSignature Language="C#" Value="public bool TemplateRemoveExtData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TemplateRemoveExtData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.TemplateRemoveExtData" />
      <MemberSignature Language="VB.NET" Value="Public Property TemplateRemoveExtData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TemplateRemoveExtData { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1457)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1457)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1457)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p308">
            <b>True</b>, falls externe Datenbezüge gelöscht werden, wenn die Arbeitsmappe als Vorlage gespeichert wird. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p308">
              <b>True</b> if external data references are removed when the workbook is saved as a template. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Theme">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.OfficeTheme Theme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.OfficeTheme Theme" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Theme" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Theme As OfficeTheme" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::OfficeTheme ^ Theme { Microsoft::Office::Core::OfficeTheme ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2533)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2533)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.OfficeTheme</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p309">Gibt das auf die aktuelle Arbeitsmappe angewendete Design zurück. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p309">Returns the theme applied to the current workbook. Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Core.OfficeTheme" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(199)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-785">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-785">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleFormsDesign">
      <MemberSignature Language="C#" Value="public void ToggleFormsDesign ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleFormsDesign() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.ToggleFormsDesign" />
      <MemberSignature Language="VB.NET" Value="Public Sub ToggleFormsDesign ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ToggleFormsDesign();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2279)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c411-786">Schaltet den Formularentwurfsmodus ein oder aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-786">Toggles form design mode on or off.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9c411-787">
            <para>Wenn Excel im Formularentwurfsmodus befindet, wird die Steuerelement-Toolbox-Symbolleiste angezeigt. Diese Symbolleiste können Sie ActiveX-Steuerelemente wie Befehlsschaltflächen, Bildlaufleisten und Optionsfeldern einfügen. Im Formularentwurfsmodus Ereignisprozeduren nicht ausgeführt und wenn Sie ein eingebettetes Steuerelement klicken, Ziehpunkte des Steuerelements angezeigt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-787">
              <para>When Excel is in form design mode, the Control Toolbox toolbar is displayed. You can use this toolbar to insert ActiveX controls such as command buttons, scroll bars, and option buttons. In form design mode, event procedures don't run, and when you click an embedded control, the control's sizing handles appear.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public void Unprotect (object Password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unprotect([in]object Password) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.Unprotect(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unprotect (Optional Password As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(285)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Password" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Password">
          <span data-ttu-id="9c411-788">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-788">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-789">Eine Zeichenfolge, die das Groß-/Kleinschreibung beachtet Kennwort für das Blatt oder die Arbeitsmappe aufheben angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-789">A string that denotes the case-sensitive password to use to unprotect the sheet or workbook.</span>
          </span>
          <span data-ttu-id="9c411-790">Wenn das Blatt oder die Arbeitsmappe mit einem Kennwort geschützt ist, wird dieses Argument ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-790">If the sheet or workbook isn't protected with a password, this argument is ignored.</span>
          </span>
          <span data-ttu-id="9c411-791">Wenn Sie dieses Argument für ein Blatt, die mit einem Kennwort geschützt sind auslassen, werden Sie aufgefordert, das Kennwort aufgefordert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-791">If you omit this argument for a sheet that's protected with a password, you'll be prompted for the password.</span>
          </span>
          <span data-ttu-id="9c411-792">Wenn Sie dieses Argument für eine Arbeitsmappe, die mit einem Kennwort geschützt ist auslassen, schlägt die Methode fehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-792">If you omit this argument for a workbook that's protected with a password, the method fails.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-p311">Hebt den Schutz eines Blatts oder einer Arbeitsmappe auf. Diese Methode hat keine Wirkung, wenn das Blatt oder die Arbeitsmappe nicht geschützt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p311">Removes protection from a sheet or workbook. This method has no effect if the sheet or workbook isn't protected.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9c411-795">
            <para>Wenn Sie das Kennwort vergessen, Schutz kann nicht das Blatt oder die Arbeitsmappe aufgehoben. Es ist ratsam, eine Liste Ihrer Kennwörter und der entsprechenden Dokumentnamen an einem sicheren Ort zu behalten.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-795">
              <para>If you forget the password, you cannot unprotect the sheet or workbook. It's a good idea to keep a list of your passwords and their corresponding document names in a safe place.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnprotectSharing">
      <MemberSignature Language="C#" Value="public void UnprotectSharing (object SharingPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnprotectSharing([in]object SharingPassword) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.UnprotectSharing(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnprotectSharing (Optional SharingPassword As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1455)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SharingPassword" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SharingPassword">
          <span data-ttu-id="9c411-796">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-796">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-797">Das Kennwort der Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-797">The workbook password.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-798">Hebt den Schutz für die Freigabe auf und speichert die Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-798">Turns off protection for sharing and saves the workbook.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9c411-799">
            <para>Verwenden Sie sichere Kennwörter, die Groß- und Kleinbuchstaben, Zahlen und Symbole kombinieren. Schwache Kennwörter Kombination keine dieser Elemente. Sicheres Kennwort: Y6dh! et5. Schwache Kennwort: House27. Verwenden Sie ein sicheres Kennwort, das Sie behalten können, damit Sie nicht notieren.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-799">
              <para>Use strong passwords that combine upper- and lowercase letters, numbers, and symbols. Weak passwords don't mix these elements. Strong password: Y6dh!et5. Weak password: House27. Use a strong password that you can remember so that you don't have to write it down.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateFromFile">
      <MemberSignature Language="C#" Value="public void UpdateFromFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateFromFile() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.UpdateFromFile" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateFromFile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateFromFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(995)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p313">Aktualisiert eine schreibgeschützte Arbeitsmappe mit der gespeicherten Version, falls die Version auf dem Datenträger neuer ist als die aktuelle Kopie der Arbeitsmappe im Arbeitsspeicher. Wurde die Kopie auf dem Datenträger seit dem Laden der Arbeitsmappe nicht verändert, wird die Kopie im Arbeitsspeicher nicht neu geladen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p313">Updates a read-only workbook from the saved disk version of the workbook if the disk version is more recent than the copy of the workbook that is loaded in memory. If the disk copy hasn't changed since the workbook was loaded, the in-memory copy of the workbook isn't reloaded.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9c411-802">
            <para>Diese Methode ist nützlich, wenn eine Arbeitsmappe von Benutzer A mit Schreibschutz geöffnet und von Benutzer b mit Lese-/Schreibzugriff geöffnet ist Wenn Benutzer B eine neuere Version der Arbeitsmappe auf dem Datenträger, speichert während Benutzer A noch die Arbeitsmappe geöffnet, die eine aktualisierte Kopie erhalten kann nicht hat ohne Schließen und erneuten Öffnen der Arbeitsmappe und die Einstellungen für die Ansicht zu verlieren. <b>UpdateFromFile</b> -Methode aktualisiert die speicherinterne Kopie der Arbeitsmappe mit der Datenträgerdatei.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-802">
              <para>This method is useful when a workbook is opened as read-only by user A and opened as read/write by user B. If user B saves a newer version of the workbook to disk while user A still has the workbook open, user A cannot get the updated copy without closing and reopening the workbook and losing view settings. The <b>UpdateFromFile</b> method updates the in-memory copy of the workbook from the disk file.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLink">
      <MemberSignature Language="C#" Value="public void UpdateLink (object Name, object Type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateLink([in]object Name, [in]object Type) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.UpdateLink(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLink (Optional Name As Object, Optional Type As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(804)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.LCIDConversion(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.Object" />
        <Parameter Name="Type" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name">
          <span data-ttu-id="9c411-803">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-803">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="9c411-804">Der Name der Microsoft Excel- oder DDE/OLE-Verknüpfung aktualisiert werden, wie er von zurückgegeben, die <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-804">The name of the Microsoft Excel or DDE/OLE link to be updated, as returned from the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.LinkSources(System.Object)" /> method.</span>
          </span>
        </param>
        <param name="Type">
          <span data-ttu-id="9c411-805">Optionale <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-805">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlLinkType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-806">Aktualisiert eine Microsoft Excel-, DDE- oder OLE-Verknüpfung (bzw. mehrere Verknüpfungen).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-806">Updates a Microsoft Excel, DDE, or OLE link (or links).</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="9c411-807">
            <para>Wenn die <b>UpdateLink</b> -Methode ohne Angabe von Parametern aufgerufen wird, standardmäßig Excel alle arbeitsblattverknüpfungen aktualisieren.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-807">
              <para>When the <b>UpdateLink</b> method is called without any parameters, Excel defaults to updating all worksheet links.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLinks">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlUpdateLinks UpdateLinks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlUpdateLinks UpdateLinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UpdateLinks" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateLinks As XlUpdateLinks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlUpdateLinks UpdateLinks { Microsoft::Office::Interop::Excel::XlUpdateLinks get(); void set(Microsoft::Office::Interop::Excel::XlUpdateLinks value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(864)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlUpdateLinks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-808">Zurückgeben oder Festlegen eines <see cref="T:Microsoft.Office.Interop.Excel.XlUpdateLinks" /> -Konstanten, die eine Arbeitsmappe zum Aktualisieren der Einstellung des eingebettete OLE-Verknüpfungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-808">Returns or sets an <see cref="T:Microsoft.Office.Interop.Excel.XlUpdateLinks" /> constant indicating a workbook's setting for updating embedded OLE links.</span>
          </span>
          <span data-ttu-id="9c411-809">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-809">Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateRemoteReferences">
      <MemberSignature Language="C#" Value="public bool UpdateRemoteReferences { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UpdateRemoteReferences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UpdateRemoteReferences" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateRemoteReferences As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UpdateRemoteReferences { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(411)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p316">
            <b>True</b>, wenn Remotebezüge in der Arbeitsmappe aktualisiert werden. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p316">
              <b>True</b> if Microsoft Excel updates remote references in the workbook. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserControl">
      <MemberSignature Language="C#" Value="public bool UserControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UserControl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UserControl" />
      <MemberSignature Language="VB.NET" Value="Public Property UserControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UserControl { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1210)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-812">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-812">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserStatus">
      <MemberSignature Language="C#" Value="public object UserStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UserStatus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UserStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserStatus As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UserStatus { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1173)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1173)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-813">Gibt ein 1-basierter, zweidimensionales Array, das Informationen zu allen Benutzern bereitstellt, die die Arbeitsmappe im Freigabemodus geöffnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-813">Returns a 1-based, two-dimensional array that provides information about each user who has the workbook open as a shared list.</span>
          </span>
          <span data-ttu-id="9c411-814">Das erste Element der zweiten Dimension ist der Benutzername; das zweite Element gibt Datum und Uhrzeit des Öffnens der Arbeitsmappe durch den Benutzer an; das dritte Element ist eine Zahl, die den Modus angibt (1 steht für Exklusivmodus, 2 für Freigabemodus).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-814">The first element of the second dimension is the name of the user, the second element is the date and time when the user last opened the workbook, and the third element is a number indicating the type of list (1 indicates exclusive, and 2 indicates shared).</span>
          </span>
          <span data-ttu-id="9c411-815">Read-only- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-815">Read-only <b>Object</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-816">
            <para>Die <b>UserStatus</b> -Eigenschaft zurück keine Informationen über Benutzer, die die angegebene Arbeitsmappe schreibgeschützt geöffnet haben.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-816">
              <para>The <b>UserStatus</b> property doesn't return information about users who have the specified workbook open as read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseWholeCellCriteria">
      <MemberSignature Language="C#" Value="public bool UseWholeCellCriteria { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseWholeCellCriteria" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UseWholeCellCriteria" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseWholeCellCriteria As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseWholeCellCriteria { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3057)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3057)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-817">
            <b>True,</b> Wenn die Arbeitsmappe Suche Muster verwendet, die den gesamten Inhalt einer Zelle entsprechen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-817">
              <b>True</b> if the workbook uses search patterns that match the entire content of a cell.</span>
          </span>
          <span data-ttu-id="9c411-818">Schreibgeschützten <b>booleschen</b> (<b>Bool</b> in c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-818">Read-only <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseWildcards">
      <MemberSignature Language="C#" Value="public bool UseWildcards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseWildcards" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.UseWildcards" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseWildcards As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseWildcards { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3058)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3058)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-819">
            <b>True,</b> Wenn die Arbeitsmappe Platzhalter für Zeichenfolgenvergleiche Zeichen und Suche ermöglicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-819">
              <b>True</b> if the workbook enables wildcards for character string comparisons and searching.</span>
          </span>
          <span data-ttu-id="9c411-820">Schreibgeschützten <b>booleschen</b> (<b>Bool</b> in c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-820">Read-only <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBASigned">
      <MemberSignature Language="C#" Value="public bool VBASigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VBASigned" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.VBASigned" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBASigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VBASigned { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1828)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1828)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p320">
            <b>True</b>, wenn das Visual Basic für Applikationen-Projekt für die angegebene Arbeitsmappe digital signiert wurde. <b>Boolean</b>-Wert mit Lesezugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p320">
              <b>True</b> if the Visual Basic for Applications project for the specified workbook has been digitally signed. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBProject">
      <MemberSignature Language="C#" Value="public Microsoft.Vbe.Interop.VBProject VBProject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Vbe.Interop.VBProject VBProject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.VBProject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBProject As VBProject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Vbe::Interop::VBProject ^ VBProject { Microsoft::Vbe::Interop::VBProject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1469)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1469)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Vbe.Interop.VBProject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-823">Gibt ein <b>VBProject</b> -Objekt, das das Visual Basic-Projekt in der angegebenen Arbeitsmappe darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-823">Returns a <b>VBProject</b> object that represents the Visual Basic project in the specified workbook.</span>
          </span>
          <span data-ttu-id="9c411-824">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-824">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebOptions">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WebOptions WebOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WebOptions WebOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WebOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebOptions As WebOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WebOptions ^ WebOptions { Microsoft::Office::Interop::Excel::WebOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1820)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1820)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WebOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-825">Gibt die <see cref="T:Microsoft.Office.Interop.Excel.WebOptions" /> -Auflistung, die enthält Attribute auf Arbeitsmappenebene, die von Microsoft Excel verwendet wird, wenn Sie ein Dokument als Webseite speichern oder eine Webseite öffnen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-825">Returns the <see cref="T:Microsoft.Office.Interop.Excel.WebOptions" /> collection, which contains workbook-level attributes used by Microsoft Excel when you save a document as a Web page or open a Web page.</span>
          </span>
          <span data-ttu-id="9c411-826">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-826">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebPagePreview">
      <MemberSignature Language="C#" Value="public void WebPagePreview ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WebPagePreview() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.WebPagePreview" />
      <MemberSignature Language="VB.NET" Value="Public Sub WebPagePreview ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WebPagePreview();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1818)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c411-827">Zeigt in einer Vorschau das Erscheinungsbild der angegebenen Arbeitsmappe an, wenn sie als Webseite gespeichert wäre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-827">Displays a preview of the specified workbook as it would look if saved as a Web page.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Windows">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Windows Windows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Windows Windows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Windows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Windows As Windows" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Windows ^ Windows { Microsoft::Office::Interop::Excel::Windows ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(430)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Windows</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-828">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> -Auflistung, die alle Fenster in der angegebenen Arbeitsmappe darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-828">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection that represents all the windows in the specified workbook.</span>
          </span>
          <span data-ttu-id="9c411-829">Schreibgeschütztes <b>Windows</b> -Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-829">Read-only <b>Windows</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-830">
            <para>Diese Eigenschaft gibt eine Auflistung sichtbarer und ausgeblendeter Fenster zurück.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-830">
              <para>This property returns a collection of both visible and hidden windows.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Worksheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets Worksheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets Worksheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.Worksheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Worksheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ Worksheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(494)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-831">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> -Auflistung, die alle Arbeitsblätter in der angegebenen Arbeitsmappe darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-831">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the worksheets in the specified workbook.</span>
          </span>
          <span data-ttu-id="9c411-832">Schreibgeschütztes <b>Sheets</b> -Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-832">Read-only <b>Sheets</b> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-833">
            <para>Verwendung dieser Eigenschaft ohne ein Objektbezeichner aller Arbeitsblätter in der aktiven Arbeitsmappe zurückgegeben.</para>
            <para>Diese Eigenschaft nicht Makrovorlagen zurück; verwenden Sie die <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel4MacroSheets" /> Eigenschaft oder die <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel4IntlMacroSheets" /> Eigenschaft, um diese Blätter zurückzugeben.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-833">
              <para>Using this property without an object qualifier returns all the worksheets in the active workbook.</para>
              <para>This property doesn’t return macro sheets; use the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel4MacroSheets" /> property or the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Excel4IntlMacroSheets" /> property to return those sheets.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePassword">
      <MemberSignature Language="C#" Value="public string WritePassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WritePassword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WritePassword" />
      <MemberSignature Language="VB.NET" Value="Public Property WritePassword As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WritePassword { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1128)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p325">Gibt einen <b>String</b>-Wert für das Schreibkennwort einer Arbeitsmappe zurück oder legt dieses fest. Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p325">Returns or sets a <b>String</b> for the write password of a workbook. Read/write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteReserved">
      <MemberSignature Language="C#" Value="public bool WriteReserved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteReserved" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WriteReserved" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WriteReserved As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WriteReserved { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(299)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(299)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p326">
            <b>True</b>, wenn die Arbeitsmappe ein Schreibschutz-Kennwort besitzt. <b>Boolean</b>-Wert mit Lesezugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p326">
              <b>True</b> if the workbook is write-reserved. Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-838">
            <para>Verwendung der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> -Methode, um diese Eigenschaft festzulegen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-838">
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.SaveAs(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,Microsoft.Office.Interop.Excel.XlSaveAsAccessMode,System.Object,System.Object,System.Object,System.Object,System.Object)" /> method to set this property.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteReservedBy">
      <MemberSignature Language="C#" Value="public string WriteReservedBy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WriteReservedBy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.WriteReservedBy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WriteReservedBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WriteReservedBy { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(300)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(300)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.LCIDConversion(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-p327">Gibt den Namen des Benutzers zurück, der momentan Schreiberlaubnis für die Arbeitsmappe besitzt. Schreibgeschützter <b>String</b>-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-p327">Returns the name of the user who currently has write permission for the workbook. Read-only <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlImport">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImport (string Url, out Microsoft.Office.Interop.Excel.XmlMap ImportMap, object Overwrite, object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImport([in]string Url, [out] class Microsoft.Office.Interop.Excel.XmlMap&amp; ImportMap, [in]object Overwrite, [in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.XmlImport(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlImport (Url As String, ByRef ImportMap As XmlMap, Optional Overwrite As Object, Optional Destination As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2270)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Url" Type="System.String" />
        <Parameter Name="ImportMap" Type="Microsoft.Office.Interop.Excel.XmlMap&amp;" RefType="out" />
        <Parameter Name="Overwrite" Type="System.Object" />
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Url">
          <span data-ttu-id="9c411-841">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-841">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="9c411-842">Ein URL-Pfad (Uniform Resource Locator) oder UNC-Pfad (Uniform Naming Convention) zu einer XML-Datendatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-842">A uniform resource locator (URL) or a uniform naming convention (UNC) path to a XML data file.</span>
          </span>
        </param>
        <param name="ImportMap">
          <span data-ttu-id="9c411-843">Erforderliche <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-843">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          </span>
          <span data-ttu-id="9c411-844">Die beim Importieren der Datei anzuwendende Schemazuordnung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-844">The schema map to apply when importing the file.</span>
          </span>
        </param>
        <param name="Overwrite">
          <span data-ttu-id="9c411-845">Optionaler <b>Boolean</b>-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-845">Optional <b>Boolean</b>.</span>
          </span>
          <span data-ttu-id="9c411-846">Wenn kein Wert für angegeben ist die <paramref name="Destination" /> -Parameter, und klicken Sie dann auf dieser Parameter gibt an, ob Daten überschrieben werden sollen, die der schemazuordnung im angegebenen zugeordnet wurde die <paramref name="ImportMap" /> Parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-846">If a value is not specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite data that has been mapped to the schema map specified in the <paramref name="ImportMap" /> parameter.</span>
          </span>
          <span data-ttu-id="9c411-847">Zum Überschreiben der Daten oder <b>False</b> , wenn die neuen Daten an die vorhandenen Daten anzuhängen auf <b>True</b> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-847">Set to <b>True</b> to overwrite the data or <b>False</b> to append the new data to the existing data.</span>
          </span>
          <span data-ttu-id="9c411-848">Der Standardwert ist <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-848">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="9c411-849">Wenn kein Wert, für angegeben wird die <paramref name="Destination" /> -Parameter, und klicken Sie dann auf dieser Parameter gibt an, ob vorhandene Daten überschrieben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-849">If a value is specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite existing data.</span>
          </span>
          <span data-ttu-id="9c411-850">Zum Überschreiben der vorhandenen Daten oder <b>False,</b> um den Import abzubrechen, wenn Daten überschrieben werden würden auf <b>True</b> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-850">Set to <b>True</b> to overwrite existing data or <b>False</b> to cancel the import if data would be overwritten.</span>
          </span>
          <span data-ttu-id="9c411-851">Der Standardwert ist <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-851">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Destination">
          <span data-ttu-id="9c411-852">Optionale <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-852">Optional <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          </span>
          <span data-ttu-id="9c411-853">Die Daten werden in eine neue XML-Liste im angegebenen Bereich importiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-853">The data will be imported into a new XML list at the range specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-854">Importiert eine XML-Datendatei in die aktuelle Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-854">Imports an XML data file into the current workbook.</span>
          </span>
          <span data-ttu-id="9c411-855">Gibt <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-855">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="9c411-856">
            <para>XML-Features, außer das Speichern von Dateien im XML-Tabellenformat stehen nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003.</para>
            <para>Geben Sie keinen Wert für die <paramref name="Destination" /> Parameter, wenn Sie Daten in eine vorhandene Zuordnung importieren möchten.</para>
            <para>Folgendes bewirkt, dass die <b>XMLImport</b> -Methode Laufzeitfehler generiert:</para>
            <list type="bullet">
              <item>
                <description>Die angegebenen XML-Daten enthalten Syntaxfehler.</description>
              </item>
              <item>
                <description>Der Importvorgang wurde abgebrochen, da die angegebenen Daten nicht in das Arbeitsblatt passen.</description>
              </item>
            </list>
            <para>Verwendung der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.XmlImportXml(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" /> -Methode des der <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> Objekts, um XML-Daten zu importieren, die zuvor in den Arbeitsspeicher geladen wurde.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-856">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para>Don't specify a value for the <paramref name="Destination" /> parameter if you want to import data into an existing mapping.</para>
              <para>The following conditions will cause the <b>XMLImport</b> method to generate run-time errors:</para>
              <list type="bullet">
                <item>
                  <description>The specified XML data contains syntax errors.</description>
                </item>
                <item>
                  <description>The import process was cancelled because the specified data cannot fit into the worksheet.</description>
                </item>
              </list>
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.XmlImportXml(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object to import XML data that has been previously loaded into memory.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlImportXml">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImportXml (string Data, out Microsoft.Office.Interop.Excel.XmlMap ImportMap, object Overwrite, object Destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult XmlImportXml([in]string Data, [out] class Microsoft.Office.Interop.Excel.XmlMap&amp; ImportMap, [in]object Overwrite, [in]object Destination) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel._Workbook.XmlImportXml(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function XmlImportXml (Data As String, ByRef ImportMap As XmlMap, Optional Overwrite As Object, Optional Destination As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2277)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Data" Type="System.String" />
        <Parameter Name="ImportMap" Type="Microsoft.Office.Interop.Excel.XmlMap&amp;" RefType="out" />
        <Parameter Name="Overwrite" Type="System.Object" />
        <Parameter Name="Destination" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Data">
          <span data-ttu-id="9c411-857">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-857">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="9c411-858">Die zu importierenden Daten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-858">The data to import.</span>
          </span>
        </param>
        <param name="ImportMap">
          <span data-ttu-id="9c411-859">Erforderliche <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-859">Required <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" />.</span>
          </span>
          <span data-ttu-id="9c411-860">Die beim Importieren der Datei anzuwendende Schemazuordnung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-860">The schema map to apply when importing the file.</span>
          </span>
        </param>
        <param name="Overwrite">
          <span data-ttu-id="9c411-861">Optionaler <b>Boolean</b>-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-861">Optional <b>Boolean</b>.</span>
          </span>
          <span data-ttu-id="9c411-862">Wenn kein Wert für angegeben ist die <paramref name="Destination" /> -Parameter, und klicken Sie dann auf dieser Parameter gibt an, ob Daten überschrieben werden sollen, die der schemazuordnung im angegebenen zugeordnet wurde die <paramref name="ImportMap" /> Parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-862">If a value is not specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite data that has been mapped to the schema map specified in the <paramref name="ImportMap" /> parameter.</span>
          </span>
          <span data-ttu-id="9c411-863">Zum Überschreiben der Daten oder <b>False</b> , wenn die neuen Daten an die vorhandenen Daten anzuhängen auf <b>True</b> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-863">Set to <b>True</b> to overwrite the data or <b>False</b> to append the new data to the existing data.</span>
          </span>
          <span data-ttu-id="9c411-864">Der Standardwert ist <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-864">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="9c411-865">Wenn kein Wert, für angegeben wird die <paramref name="Destination" /> -Parameter, und klicken Sie dann auf dieser Parameter gibt an, ob vorhandene Daten überschrieben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-865">If a value is specified for the <paramref name="Destination" /> parameter, then this parameter specifies whether or not to overwrite existing data.</span>
          </span>
          <span data-ttu-id="9c411-866">Zum Überschreiben der vorhandenen Daten oder <b>False,</b> um den Import abzubrechen, wenn Daten überschrieben werden würden auf <b>True</b> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-866">Set to <b>True</b> to overwrite existing data or <b>False</b> to cancel the import if data would be overwritten.</span>
          </span>
          <span data-ttu-id="9c411-867">Der Standardwert ist <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-867">The default value is <b>True</b>.</span>
          </span>
        </param>
        <param name="Destination">
          <span data-ttu-id="9c411-868">Optionale <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-868">Optional <see cref="T:Microsoft.Office.Interop.Excel.Range" />.</span>
          </span>
          <span data-ttu-id="9c411-869">Die Daten werden in eine neue XML-Liste im angegebenen Bereich importiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-869">The data will be imported into a new XML list in the range specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c411-870">Importiert einen XML-Datenstrom, der zuvor in den Arbeitsspeicher geladen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-870">Imports an XML data stream that has been previously loaded into memory.</span>
          </span>
          <span data-ttu-id="9c411-871">Gibt <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-871">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="9c411-872">
            <para>XML-Features, außer das Speichern von Dateien im XML-Tabellenformat stehen nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003.</para>
            <para>Geben Sie keinen Wert für die <paramref name="Destination" /> Parameter, wenn Sie Daten in eine vorhandene Zuordnung importieren möchten.</para>
            <para>Folgendes bewirkt, dass die <b>XMLImport</b> -Methode Laufzeitfehler generiert:</para>
            <list type="bullet">
              <item>
                <description>Die angegebenen XML-Daten enthalten Syntaxfehler.</description>
              </item>
              <item>
                <description>Der Importvorgang wurde abgebrochen, da die angegebenen Daten nicht in das Arbeitsblatt passen.</description>
              </item>
            </list>
            <para>Verwendung der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.XmlImport(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" /> -Methode des der <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> Objekts, um eine XML-Datendatei in die aktuelle Arbeitsmappe importieren.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-872">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para>Don't specify a value for the <paramref name="Destination" /> parameter if you want to import data into an existing mapping.</para>
              <para>The following conditions will cause the <b>XMLImport</b> method to generate run-time errors:</para>
              <list type="bullet">
                <item>
                  <description>The specified XML data contains syntax errors.</description>
                </item>
                <item>
                  <description>The import process was cancelled because the specified data cannot fit into the worksheet.</description>
                </item>
              </list>
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.XmlImport(System.String,Microsoft.Office.Interop.Excel.XmlMap@,System.Object,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object to import an XML data file into the current workbook.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlMaps">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlMaps XmlMaps { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlMaps XmlMaps" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.XmlMaps" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlMaps As XmlMaps" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlMaps ^ XmlMaps { Microsoft::Office::Interop::Excel::XmlMaps ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlMaps</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-873">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> -Auflistung, die Karten Schema darstellt, die die angegebene Arbeitsmappe hinzugefügt wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-873">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> collection that represents the schema maps that have been added to the specified workbook.</span>
          </span>
          <span data-ttu-id="9c411-874">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-874">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-875">
            <para>XML-Features, außer das Speichern von Dateien im XML-Tabellenformat stehen nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-875">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaces">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlNamespaces XmlNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlNamespaces XmlNamespaces" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel._Workbook.XmlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlNamespaces As XmlNamespaces" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlNamespaces ^ XmlNamespaces { Microsoft::Office::Interop::Excel::XmlNamespaces ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2268)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2268)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlNamespaces</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c411-876">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespaces" /> -Auflistung, die in der angegebenen Arbeitsmappe enthaltenen XML-Namespaces darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-876">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespaces" /> collection that represents the XML namespaces contained in the specified workbook.</span>
          </span>
          <span data-ttu-id="9c411-877">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-877">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="9c411-878">
            <para>XML-Features, außer das Speichern von Dateien im XML-Tabellenformat stehen nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9c411-878">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>