<Type Name="DisplayFormat" FullName="Microsoft.Office.Interop.Excel.DisplayFormat">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="950506d4053e1b80daf0ee4edfebb807a67ddea2" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20573528" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface DisplayFormat" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract DisplayFormat" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.DisplayFormat" />
  <TypeSignature Language="VB.NET" Value="Public Interface DisplayFormat" />
  <TypeSignature Language="C++ CLI" Value="public interface class DisplayFormat" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000244C2-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c9d60-101">Stellt die Anzeigeeinstellungen für eine zugeordnete <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c9d60-101">Represents the display settings for an associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="c9d60-102">
        <para>Read-only.</para>
        <para>Aktionen wie die bedingte Formatierung oder Tabellenformat eines Bereichs ändern dazu, was in der aktuellen Benutzeroberfläche mit den Werten in den entsprechenden Eigenschaften des inkonsistent sein angezeigt wird die <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt. Verwenden Sie die Eigenschaften der <see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" /> Objekts, um die Werte zurückzugeben, wie diese in der aktuellen Benutzeroberfläche angezeigt werden.</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="c9d60-102">
          <para>Read-only.</para>
          <para>Actions such as changing the conditional formatting or table style of a range can cause what is displayed in the current user interface to be inconsistent with the values in the corresponding properties of the <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object. Use the properties of the <see cref="T:Microsoft.Office.Interop.Excel.DisplayFormat" /> object to return the values as they are displayed in the current user interface.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddIndent">
      <MemberSignature Language="C#" Value="public object AddIndent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AddIndent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DisplayFormat.AddIndent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddIndent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AddIndent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1063)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d60-103">Dient zum Abrufen eines Werts, der angibt, ob Microsoft Excel der zugeordnete Text automatisch eingezogen <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, wenn die Ausrichtung des Texts in einer Zelle auf gleiche Verteilung festgelegt ist (horizontal oder vertikal), wie er in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-103">Gets a value that indicates if Microsoft Excel automatically indents text of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object when the text alignment in a cell is set to equal distribution (either horizontally or vertically), as it is displayed in the current user interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d60-104">Gibt an, ob Microsoft Excel der zugeordnete Text automatisch eingezogen <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, wenn die Ausrichtung des Texts in einer Zelle auf gleiche Verteilung festgelegt ist (horizontal oder vertikal), wie er in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-104">Indicates if Microsoft Excel automatically indents text of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object when the text alignment in a cell is set to equal distribution (either horizontally or vertically), as it is displayed in the current user interface.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="c9d60-105">
            <para>Read-only.</para>
            <para>Gibt <b>true,</b> Wenn Text automatisch eingezogen wird, wenn die Ausrichtung des Texts in der Zelle horizontal oder vertikal auf gleiche Verteilung festgelegt ist,.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-105">
              <para>Read-only.</para>
              <para>Returns <b>true</b> if text is automatically indented when the text alignment in the cell is set, either horizontally or vertically, to equal distribution.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DisplayFormat.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d60-106">Wenn ohne einen Objektbezeichner verwendet wird, gibt diese Eigenschaft ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> -Objekt, das die Anwendung Microsoft Excel darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-106">When used without an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="c9d60-107">Wenn ohne einen Objektbezeichner verwendet wird, gibt diese Eigenschaft ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> -Objekt, das den Ersteller des angegebenen Objekts darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-107">When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the creator of the specified object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d60-108">Ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-108">An <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="c9d60-109">
            <para>Schreibgeschützt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-109">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Borders">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Borders Borders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Borders Borders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DisplayFormat.Borders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Borders As Borders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Borders ^ Borders { Microsoft::Office::Interop::Excel::Borders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(435)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Borders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d60-110">Ruft ein <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> -Objekt, das die Rahmen des zugeordneten darstellt <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, wie es in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-110">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> object that represents the borders of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d60-111">Ein <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> -Objekt, das die Rahmen des zugeordneten darstellt <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, wie es in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-111">A <see cref="T:Microsoft.Office.Interop.Excel.Borders" /> object that represents the borders of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="c9d60-112">
            <para>Schreibgeschützt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-112">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Characters">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Characters Characters[object Start, object Length] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Characters Characters(object, object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DisplayFormat.Characters(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Characters(Optional Start As Object, Optional Length As Object) As Characters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Characters ^ Characters[System::Object ^, System::Object ^] { Microsoft::Office::Interop::Excel::Characters ^ get(System::Object ^ Start, System::Object ^ Length); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(603)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(603)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Characters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Start" Type="System.Object" />
        <Parameter Name="Length" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Start">
          <span data-ttu-id="c9d60-p102">Das erste zurückzugebende Zeichen. Wenn dieses Argument den Wert 1 hat oder nicht angegeben wird, gibt diese Eigenschaft einen Zeichenbereich zurück, der mit dem ersten Zeichen beginnt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-p102">The first character to be returned. If this argument is either 1 or omitted, this property returns a range of characters starting with the first character.</span>
          </span>
        </param>
        <param name="Length">
          <span data-ttu-id="c9d60-115">Die Anzahl der zurückzugebenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-115">The number of characters to be returned.</span>
          </span>
          <span data-ttu-id="c9d60-116">Wenn dieses Argument ausgelassen wird, gibt diese Eigenschaft den Rest der Zeichenfolge zurück (Alles hinter der <paramref name="Start" /> Zeichen).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-116">If this argument is omitted, this property returns the remainder of the string (everything after the <paramref name="Start" /> character).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9d60-117">Ruft ein <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> -Objekt, das einen Bereich von Zeichen im Text des zugeordneten darstellt <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, wie es in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-117">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> object that represents a range of characters within the text of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d60-118">Ein <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> -Objekt, das einen Bereich von Zeichen im Text des zugeordneten darstellt <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, wie es in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-118">A <see cref="T:Microsoft.Office.Interop.Excel.Characters" /> object that represents a range of characters within the text of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DisplayFormat.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d60-119">Ruft eine 32-Bit- <b>Ganzzahl</b> , die die Anwendung angibt, in der das Objekt erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-119">Gets a 32-bit <b>integer</b> that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d60-120">Eine 32-Bit- <b>Ganzzahl</b> , die die Anwendung angibt, in der das Objekt erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-120">A 32-bit <b>integer</b> that indicates the application in which this object was created.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="c9d60-121">
            <para>Nur-Lese- <b>long</b>.</para>
            <para>, Wenn das Objekt in Microsoft Excel erstellt wurde, gibt diese Eigenschaft die Zeichenfolge XCEL zurück, dies entspricht die hexadezimale Zahl 5843454 c ist. Die <see cref="P:Microsoft.Office.Interop.Excel.DisplayFormat.Creator" /> -Eigenschaft dient in Microsoft Excel für den Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen besitzt. Microsoft Excel verfügt beispielsweise über den erstellten Code XCEL.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-121">
              <para>Read-only <b>long</b>.</para>
              <para>If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C. The <see cref="P:Microsoft.Office.Interop.Excel.DisplayFormat.Creator" /> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Font Font" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DisplayFormat.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Font ^ Font { Microsoft::Office::Interop::Excel::Font ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(146)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d60-122">Ruft ein <see cref="T:Microsoft.Office.Interop.Excel.Font" /> -Objekt, das die Schriftart des zugeordneten stellt <see cref="T:Microsoft.Office.Interop.Excel.Range" /> wie er in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-122">Gets a <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> as it is displayed in the current user interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d60-123">Ein <see cref="T:Microsoft.Office.Interop.Excel.Font" /> -Objekt, das die Schriftart des zugeordneten stellt <see cref="T:Microsoft.Office.Interop.Excel.Range" /> wie er in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-123">A <see cref="T:Microsoft.Office.Interop.Excel.Font" /> object that represents the font of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> as it is displayed in the current user interface.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="c9d60-124">
            <para>Schreibgeschützt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-124">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormulaHidden">
      <MemberSignature Language="C#" Value="public object FormulaHidden { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FormulaHidden" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DisplayFormat.FormulaHidden" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormulaHidden As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FormulaHidden { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(262)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d60-125">Ruft einen Wert, der angibt, wenn die Formel des zugeordneten <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt ist ausgeblendet, wenn das Arbeitsblatt geschützt ist, wie er in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-125">Gets a value that indicates if the formula of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object is hidden when the worksheet is protected as it is displayed in the current user interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d60-126">Gibt an, ob die Formel des zugeordneten <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt ist ausgeblendet, wenn das Arbeitsblatt geschützt ist, wie er in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-126">Indicates if the formula of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object is hidden when the worksheet is protected as it is displayed in the current user interface.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="c9d60-127">
            <para>Read-only.</para>
            <para>Gibt <b>true</b> zurück, wenn die Formel ausgeblendet ist, wenn das Arbeitsblatt geschützt, ein Nullverweis (Nothing in Visual Basic), wenn der Bereich einige Zellen mit enthält <see cref="P:Microsoft.Office.Interop.Excel.DisplayFormat.FormulaHidden" /> gleich <b>true</b> und einige Zellen mit <see cref="P:Microsoft.Office.Interop.Excel.DisplayFormat.FormulaHidden" /> gleich <b>false</b>.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-127">
              <para>Read-only.</para>
              <para>Returns <b>true</b> if the formula is hidden when the worksheet is protected, a null reference (Nothing in Visual Basic) if the range contains some cells with <see cref="P:Microsoft.Office.Interop.Excel.DisplayFormat.FormulaHidden" /> equal to <b>true</b> and some cells with <see cref="P:Microsoft.Office.Interop.Excel.DisplayFormat.FormulaHidden" /> equal to <b>false</b>.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlignment">
      <MemberSignature Language="C#" Value="public object HorizontalAlignment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HorizontalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DisplayFormat.HorizontalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HorizontalAlignment As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HorizontalAlignment { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(136)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d60-128">Dient zum Abrufen eines Werts, der die horizontale Ausrichtung des zugeordneten <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, wie es in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-128">Gets a value that represents the horizontal alignment of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d60-129">Die horizontale Ausrichtung des zugeordneten <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, wie es in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-129">The horizontal alignment of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="c9d60-130">
            <para>Schreibgeschützt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-130">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public object IndentLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object IndentLevel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DisplayFormat.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IndentLevel As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ IndentLevel { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(201)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d60-131">Dient zum Abrufen eines Werts, der die Einzugsebene des zugeordneten <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, wie es in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-131">Gets a value that represents the indent level of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d60-132">Die Einzugsebene des zugeordneten <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, wie es in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-132">The indent level of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="c9d60-133">
            <para>Schreibgeschützt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-133">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DisplayFormat.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d60-134">Ruft ein <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> -Objekt, das den Innenbereich des zugeordneten darstellt <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, wie es in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-134">Gets an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d60-135">Ein <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> -Objekt, das den Innenbereich des zugeordneten darstellt <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, wie es in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-135">An <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="c9d60-136">
            <para>Schreibgeschützt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-136">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Locked">
      <MemberSignature Language="C#" Value="public object Locked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Locked" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DisplayFormat.Locked" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Locked As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Locked { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(269)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d60-137">Ruft einen Wert, der angibt, wenn der zugeordnete <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt gesperrt ist, wie er in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-137">Gets a value that indicates if the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object is locked as it is displayed in the current user interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d60-138">Gibt an, ob der zugeordnete <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt gesperrt ist, wie er in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-138">Indicates if the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object is locked as it is displayed in the current user interface.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="c9d60-139">
            <para>Read-only.</para>
            <para>Gibt <b>true,</b> Wenn der Bereich gesperrt ist, <b>false,</b> Wenn der Bereich geändert werden kann, wenn das Blatt geschützt ist, oder ein Nullverweis (Nothing in Visual Basic) enthält der Bereich gesperrte und nicht gesperrte Zellen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-139">
              <para>Read-only.</para>
              <para>Returns <b>true</b> if the range is locked, <b>false</b> if the range can be modified when the sheet is protected, or a null reference (Nothing in Visual Basic) if the range contains both locked and unlocked cells.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeCells">
      <MemberSignature Language="C#" Value="public object MergeCells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object MergeCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DisplayFormat.MergeCells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MergeCells As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ MergeCells { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(208)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d60-140">Ruft einen Wert, der angibt, wenn der zugeordnete <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt verbundene Zellen enthält, wie er in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-140">Gets a value that indicates if the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object contains merged cells as it is displayed in the current user interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d60-141">Gibt an, ob der zugeordnete <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt verbundene Zellen enthält, wie er in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-141">Indicates if the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object contains merged cells as it is displayed in the current user interface.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="c9d60-142">
            <para>Read-only.</para>
            <para>Gibt <b>true</b> zurück, wenn der Bereich verbundene Zellen enthält.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-142">
              <para>Read-only.</para>
              <para>Returns <b>true</b> if the range contains merged cells.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public object NumberFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DisplayFormat.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumberFormat As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormat { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(193)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d60-143">Dient zum Abrufen eines Werts, der den Formatierungscode des zugeordneten <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, wie es in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-143">Gets a value that represents the format code of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d60-144">Den Formatierungscode des zugeordneten <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, wie es in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-144">The format code of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="c9d60-145">
            <para>Read-only.</para>
            <para>Diese Eigenschaft gibt ein Nullverweis (Nothing in Visual Basic) zurück, wenn alle Zellen im angegebenen Bereich nicht dasselbe Zahlenformat aufweisen.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-145">
              <para>Read-only.</para>
              <para>This property returns a null reference (Nothing in Visual Basic) if all cells in the specified range do not have the same number format.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFormatLocal">
      <MemberSignature Language="C#" Value="public object NumberFormatLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NumberFormatLocal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DisplayFormat.NumberFormatLocal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumberFormatLocal As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NumberFormatLocal { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1097)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d60-146">Dient zum Abrufen eines Werts, der den Formatierungscode des zugeordneten <see cref="T:Microsoft.Office.Interop.Excel.Range" /> als Zeichenfolge in der Sprache des Benutzers, wie er in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-146">Gets a value that represents the format code of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> as a string in the language of the user as it is displayed in the current user interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d60-147">Den Formatierungscode des zugeordneten <see cref="T:Microsoft.Office.Interop.Excel.Range" /> als Zeichenfolge in der Sprache des Benutzers, wie er in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-147">The format code of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> as a string in the language of the user as it is displayed in the current user interface.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="c9d60-148">
            <para>Schreibgeschützt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-148">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public object Orientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Orientation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DisplayFormat.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Orientation As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Orientation { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(134)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d60-149">Dient zum Abrufen eines Werts, der die Ausrichtung von Text des zugeordneten <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, wie es in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-149">Gets a value that represents the text orientation of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d60-150">Die Ausrichtung von Text des zugeordneten <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, wie es in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-150">The text orientation of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="c9d60-151">
            <para>Schreibgeschützt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-151">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DisplayFormat.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d60-152">Ruft ab, der übergeordnete Objekt des angegebenen Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-152">Gets the parent object for the specified object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d60-153">Das übergeordnete Objekt des angegebenen Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-153">The parent object for the specified object.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="c9d60-154">
            <para>Schreibgeschützt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-154">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadingOrder">
      <MemberSignature Language="C#" Value="public int ReadingOrder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadingOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DisplayFormat.ReadingOrder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadingOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadingOrder { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(975)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d60-155">Ruft die Lesereihenfolge des zugeordneten <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, wie es in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-155">Gets the reading order of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d60-156">Die Lesereihenfolge des zugeordneten <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, wie es in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-156">The reading order of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="c9d60-157">
            <para>Schreibgeschützt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-157">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShrinkToFit">
      <MemberSignature Language="C#" Value="public object ShrinkToFit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ShrinkToFit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DisplayFormat.ShrinkToFit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShrinkToFit As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ShrinkToFit { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(209)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d60-158">Dient zum Abrufen eines Werts, der angibt, ob der Text, der in der zugeordneten die verfügbare Spaltenbreite angepasst wird in Microsoft Excel automatisch verkleinert werden <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, wie es in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-158">Gets a value that indicates if Microsoft Excel automatically shrinks text to fit in the available column width of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d60-159">Gibt an, ob der Text, der in der zugeordneten die verfügbare Spaltenbreite angepasst wird in Microsoft Excel automatisch verkleinert werden <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, wie es in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-159">Indicates if Microsoft Excel automatically shrinks text to fit in the available column width of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="c9d60-160">
            <para>Read-only.</para>
            <para>Gibt <b>true</b> zurück, wenn Text automatisch an die verfügbare Spaltenbreite angepasst.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-160">
              <para>Read-only.</para>
              <para>Returns <b>true</b> if text automatically shrinks to fit in the available column width.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public object Style { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Style" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DisplayFormat.Style" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Style As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Style { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(260)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d60-161">Ruft einen Wert ab, enthält eine <see cref="T:Microsoft.Office.Interop.Excel.Style" /> -Objekt, das die Formatvorlage des zugeordneten darstellt <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, wie es in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-161">Gets a value, containing a <see cref="T:Microsoft.Office.Interop.Excel.Style" /> object, that represents the style of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d60-162">Ein Wert mit einem <see cref="T:Microsoft.Office.Interop.Excel.Style" /> -Objekt, das die Formatvorlage des zugeordneten darstellt <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, wie es in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-162">A value, containing a <see cref="T:Microsoft.Office.Interop.Excel.Style" /> object, that represents the style of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalAlignment">
      <MemberSignature Language="C#" Value="public object VerticalAlignment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object VerticalAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DisplayFormat.VerticalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalAlignment As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ VerticalAlignment { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(137)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d60-163">Dient zum Abrufen eines Werts, der die vertikale Ausrichtung des zugeordneten <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, wie es in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-163">Gets a value that represents the vertical alignment of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d60-164">Die vertikale Ausrichtung des zugeordneten <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, wie es in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-164">The vertical alignment of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="c9d60-165">
            <para>Schreibgeschützt.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-165">
              <para>Read-only.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapText">
      <MemberSignature Language="C#" Value="public object WrapText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WrapText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DisplayFormat.WrapText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WrapText As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ WrapText { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(276)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d60-166">Dient zum Abrufen eines Werts, der angibt, ob den Text des zugeordneten Microsoft Excel umbrochen wird <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, wie es in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-166">Gets a value that indicates if Microsoft Excel wraps the text of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d60-167">Gibt an, ob den Text des zugeordneten Microsoft Excel umbrochen wird <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, wie es in der aktuellen Benutzeroberfläche angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-167">Indicates if Microsoft Excel wraps the text of the associated <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object as it is displayed in the current user interface.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="c9d60-168">
            <para>Read-only.</para>
            <para>Gibt <b>true</b> zurück, wenn Text in allen Zellen im Bereich umgebrochen wird.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d60-168">
              <para>Read-only.</para>
              <para>Returns <b>true</b> if text is wrapped in all cells within the range.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>