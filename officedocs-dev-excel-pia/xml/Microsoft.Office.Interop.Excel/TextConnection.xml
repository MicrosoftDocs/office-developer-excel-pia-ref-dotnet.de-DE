<Type Name="TextConnection" FullName="Microsoft.Office.Interop.Excel.TextConnection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f77811f07d3d609f3d2151bb5c5834538ae40d10" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20585120" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface TextConnection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract TextConnection" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.TextConnection" />
  <TypeSignature Language="VB.NET" Value="Public Interface TextConnection" />
  <TypeSignature Language="C++ CLI" Value="public interface class TextConnection" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000244D3-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="26479-101">Enthält Servicevertrag-Einstellungen, mit die Excel eine Verbindung mit einer Datenquelle-Datenfeed herstellen können.</span>
      <span class="sxs-lookup">
        <span data-stu-id="26479-101">Contains Service Contract settings that enable Excel to connect to a Data Feed data source.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26479-102">Gibt eine Anwendung <see cref="T:Microsoft.Office.Interop.Excel.Application" /> -Objekt, das die Excel-Anwendung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-102">Returns an Application <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Excel application.</span>
          </span>
          <span data-ttu-id="26479-103">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-103">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public object Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Connection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Connection { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1432)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1432)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1432)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26479-104">Zurückgeben oder festlegen eine Zeichenfolge, die Dateinamen Text enthält, mit die Excel eine Verbindung mit Datenquellen Text herstellen können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-104">Returns or sets a string that contains text file names that enable Excel to connect to text data sources.</span>
          </span>
          <span data-ttu-id="26479-105">
            <b>Objekt</b> (-<b>Objekt</b> in c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-105">
              <b>Object</b> (<b>object</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26479-106">Gibt eine 32-Bit-Ganzzahl, die die Anwendung angibt, in der das angegebene Objekt erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-106">Returns a 32-bit integer that indicates the application in which the specified object was created.</span>
          </span>
          <span data-ttu-id="26479-107">Nur-Lese- <b>Ganzzahl</b> (<b>Int</b> in c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-107">Read-only <b>Integer</b> (<b>int</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="26479-108">
            <para>, Da das Objekt in Excel erstellt wurde, gibt diese Eigenschaft den Hexadezimalwert 5843454C, Zeichenfolge "XCEL zurück".</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-108">
              <para>Because the object was created in Excel, this property returns the hexadecimal value, 5843454C, which represents the string "XCEL".</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26479-109">Gibt ein <b>Objekt</b> (C#-<b>Objekt</b> ), der das übergeordnete Objekt des angegebenen <b>TextConnection</b> -Objekts darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-109">Returns an <b>Object</b> (<b>object</b> in C#) that represents the parent object of the specified <b>TextConnection</b> object.</span>
          </span>
          <span data-ttu-id="26479-110">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-110">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileColumnDataTypes">
      <MemberSignature Language="C#" Value="public object TextFileColumnDataTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TextFileColumnDataTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileColumnDataTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileColumnDataTypes As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TextFileColumnDataTypes { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1865)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1865)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1865)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26479-111">Zurück oder legt ein geordnetes Array von Konstanten, die die Datentypen angewendet, die den entsprechenden Spalten in der Textdatei, die in eine Abfragetabelle importiert wird, angeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-111">Returns or sets an ordered array of constants that specify the data types applied to the corresponding columns in the text file that you’re importing into a query table.</span>
          </span>
          <span data-ttu-id="26479-112">Die Standardkonstante für jede Spalte lautet <b>XlGeneral</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-112">The default constant for each column is <b>xlGeneral</b>.</span>
          </span>
          <span data-ttu-id="26479-113">
            <b>Objekt</b> (-<b>Objekt</b> in c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-113">
              <b>Object</b> (<b>object</b> in C#).</span>
          </span>
          <span data-ttu-id="26479-114">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-114">Read/Write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileCommaDelimiter">
      <MemberSignature Language="C#" Value="public bool TextFileCommaDelimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TextFileCommaDelimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileCommaDelimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileCommaDelimiter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TextFileCommaDelimiter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1862)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1862)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1862)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26479-115">
            <b>True,</b> Wenn das Komma als Trennzeichen beim Importieren einer Textdatei in eine Abfragetabelle wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-115">
              <b>True</b> if the comma is the delimiter when you import a text file into a query table.</span>
          </span>
          <span data-ttu-id="26479-116">
            <b>False,</b> Wenn ein anderes Zeichen als Trennzeichen verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-116">
              <b>False</b> if you want to use some other character as the delimiter.</span>
          </span>
          <span data-ttu-id="26479-117">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-117">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="26479-118">Lese-/Schreibzugriff <b>vom Typ Boolean</b> (<b>Bool</b> in c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-118">Read/Write <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileConsecutiveDelimiter">
      <MemberSignature Language="C#" Value="public bool TextFileConsecutiveDelimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TextFileConsecutiveDelimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileConsecutiveDelimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileConsecutiveDelimiter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TextFileConsecutiveDelimiter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1859)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1859)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1859)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26479-119">
            <b>True,</b> wenn aufeinander folgende Trennzeichen beim Importieren einer Textdatei in eine Abfragetabelle als einzelnes Trennzeichen behandelt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-119">
              <b>True</b> if consecutive delimiters are treated as a single delimiter when you import a text file into a query table.</span>
          </span>
          <span data-ttu-id="26479-120">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-120">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="26479-121">
            <b>Boolean</b> (<b>Bool</b> in c#) Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-121">
              <b>Boolean</b> (<b>bool</b> in C#) Read/Write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileDecimalSeparator">
      <MemberSignature Language="C#" Value="public string TextFileDecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TextFileDecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileDecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileDecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TextFileDecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1870)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1870)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1870)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26479-122">Zurückgeben oder festlegen das Dezimaltrennzeichen Zeichen, das Excel beim Importieren einer Textdatei in eine Abfragetabelle verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-122">Returns or sets the decimal separator character that Excel uses when you import a text file into a query table.</span>
          </span>
          <span data-ttu-id="26479-123">Der Standardwert ist das System Dezimaltrennzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-123">The default is the system decimal separator character.</span>
          </span>
          <span data-ttu-id="26479-124">Lese-/Schreibzugriff <b>String</b> (<b>Zeichenfolge</b> in c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-124">Read/Write <b>String</b> (<b>string</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileFixedColumnWidths">
      <MemberSignature Language="C#" Value="public object TextFileFixedColumnWidths { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TextFileFixedColumnWidths" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileFixedColumnWidths" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileFixedColumnWidths As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TextFileFixedColumnWidths { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1866)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1866)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1866)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26479-125">Zurückgeben oder ein Array mit ganzen Zahlen, die die Breite der Spalten (in Zeichen) entsprechen, in der Textdatei, die in eine Abfragetabelle importiert wird, festlegen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-125">Returns or sets an array of integers that correspond to the widths of the columns (in characters) in the text file that you’re importing into a query table.</span>
          </span>
          <span data-ttu-id="26479-126">Gültige Breiten reichen von 1 bis 32767 Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-126">Valid widths are from 1 through 32767 characters.</span>
          </span>
          <span data-ttu-id="26479-127">Lese-Schreib- <b>Objekt</b> (in c#-<b>Objekt</b> ).</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-127">Read/Write <b>Object</b> (<b>object</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileHeaderRow">
      <MemberSignature Language="C#" Value="public bool TextFileHeaderRow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TextFileHeaderRow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileHeaderRow" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileHeaderRow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TextFileHeaderRow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26479-128">Zurückgeben oder Festlegen des Werts, der angibt, ob die erste Zeile (aus der ersten Zeile) als Kopfzeile behandelt werden soll oder nicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-128">Returns or sets value that specifies whether or not the first row (from the starting row) should be treated as a header row.</span>
          </span>
          <span data-ttu-id="26479-129">
            <b>Boolean</b> (<b>Bool</b> in c#) Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-129">
              <b>Boolean</b> (<b>bool</b> in C#) Read/Write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileOtherDelimiter">
      <MemberSignature Language="C#" Value="public string TextFileOtherDelimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TextFileOtherDelimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileOtherDelimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileOtherDelimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TextFileOtherDelimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1864)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1864)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26479-130">Zurückgeben oder festlegen das Zeichen, die beim Importieren einer Textdatei in eine Abfragetabelle als Trennzeichen verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-130">Returns or sets the character used as the delimiter when you import a text file into a query table.</span>
          </span>
          <span data-ttu-id="26479-131">Der Standardwert ist <b>Nothing</b> (ein Nullverweis (Nothing in Visual Basic) in c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-131">The default value is <b>Nothing</b> (a null reference (Nothing in Visual Basic) in C#).</span>
          </span>
          <span data-ttu-id="26479-132">Lese-/Schreibzugriff <b>String</b> (<b>Zeichenfolge</b> in c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-132">Read/Write <b>String</b> (<b>string</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileParseType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlTextParsingType TextFileParseType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlTextParsingType TextFileParseType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileParseType" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileParseType As XlTextParsingType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlTextParsingType TextFileParseType { Microsoft::Office::Interop::Excel::XlTextParsingType get(); void set(Microsoft::Office::Interop::Excel::XlTextParsingType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1857)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1857)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1857)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlTextParsingType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26479-133">Gibt an, oder das Spaltenformat für die Daten in die Textdatei, die in eine Abfragetabelle importiert wird, festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-133">Returns or sets the column format for the data in the text file that you’re importing into a query table.</span>
          </span>
          <span data-ttu-id="26479-134">Lese-/Schreibzugriff <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-134">Read/Write <see cref="T:Microsoft.Office.Interop.Excel.XlTextParsingType" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFilePlatform">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPlatform TextFilePlatform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPlatform TextFilePlatform" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFilePlatform" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFilePlatform As XlPlatform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPlatform TextFilePlatform { Microsoft::Office::Interop::Excel::XlPlatform get(); void set(Microsoft::Office::Interop::Excel::XlPlatform value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1855)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1855)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1855)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPlatform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26479-135">Zurückgeben oder festlegen den Ursprung der Textdatei in die Abfragetabelle importierten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-135">Returns or sets the origin of the text file you’re importing into the query table.</span>
          </span>
          <span data-ttu-id="26479-136">Diese Eigenschaft wird bestimmt, welche Codepage beim Datenimport verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-136">This property determines which code page is used during the data import.</span>
          </span>
          <span data-ttu-id="26479-137">Lese-/Schreibzugriff <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-137">Read/write <see cref="T:Microsoft.Office.Interop.Excel.XlPlatform" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFilePromptOnRefresh">
      <MemberSignature Language="C#" Value="public bool TextFilePromptOnRefresh { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TextFilePromptOnRefresh" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFilePromptOnRefresh" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFilePromptOnRefresh As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TextFilePromptOnRefresh { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1869)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1869)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1869)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26479-138">
            <b>True,</b> Falls Sie angeben möchten, der Name der importierten Textdatei jedes Mal, wenn die Abfragetabelle aktualisiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-138">
              <b>True</b> if you want to specify the name of the imported text file each time the query table is refreshed.</span>
          </span>
          <span data-ttu-id="26479-139">Das Dialogfeld Textdatei importieren können Sie den Pfad und Namen angeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-139">The Import Text File dialog box allows you to specify the path and file name.</span>
          </span>
          <span data-ttu-id="26479-140">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-140">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="26479-141">Lese-/Schreibzugriff <b>vom Typ Boolean</b> (<b>Bool</b> in c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-141">Read/Write <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileSemicolonDelimiter">
      <MemberSignature Language="C#" Value="public bool TextFileSemicolonDelimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TextFileSemicolonDelimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileSemicolonDelimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileSemicolonDelimiter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TextFileSemicolonDelimiter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1861)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1861)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1861)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26479-142">
            <b>True,</b> Wenn das Semikolon als Trennzeichen wird beim Importieren einer Textdatei in eine Abfragetabelle, und wenn der Wert der <see cref="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileParseType" /> -Eigenschaft <b>XlDelimited</b>lautet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-142">
              <b>True</b> if the semicolon is the delimiter when you import a text file into a query table, and if the value of the <see cref="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileParseType" /> property is <b>xlDelimited</b>.</span>
          </span>
          <span data-ttu-id="26479-143">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-143">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="26479-144">Lese-/Schreibzugriff <b>vom Typ Boolean</b> (<b>Bool</b> in c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-144">Read/Write <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileSpaceDelimiter">
      <MemberSignature Language="C#" Value="public bool TextFileSpaceDelimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TextFileSpaceDelimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileSpaceDelimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileSpaceDelimiter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TextFileSpaceDelimiter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1863)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1863)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1863)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26479-145">
            <b>True,</b> Wenn das Leerzeichen als Trennzeichen verwendet beim Importieren einer Textdatei in eine Abfragetabelle wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-145">
              <b>True</b> if the space character is the delimiter when you import a text file into a query table.</span>
          </span>
          <span data-ttu-id="26479-146">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-146">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="26479-147">Lese-/Schreibzugriff <b>vom Typ Boolean</b> (<b>Bool</b> in c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-147">Read/Write <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileStartRow">
      <MemberSignature Language="C#" Value="public int TextFileStartRow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextFileStartRow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileStartRow" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileStartRow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TextFileStartRow { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1856)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1856)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1856)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26479-148">Gibt an, oder die Zeilennummer, bei der die Analyse beim Importieren einer Textdatei in eine Abfragetabelle begonnen wird, festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-148">Returns or sets the row number at which text parsing will begin when you import a text file into a query table.</span>
          </span>
          <span data-ttu-id="26479-149">Gültige Werte sind ganze Zahlen von 1 bis 32767.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-149">Valid values are integers from 1 through 32767.</span>
          </span>
          <span data-ttu-id="26479-150">Der Standardwert ist 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-150">The default value is 1.</span>
          </span>
          <span data-ttu-id="26479-151">Lese-/Schreibzugriff <b>ganze Zahl</b> (<b>Int</b> in c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-151">Read/Write <b>Integer</b> (<b>int</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileTabDelimiter">
      <MemberSignature Language="C#" Value="public bool TextFileTabDelimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TextFileTabDelimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileTabDelimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileTabDelimiter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TextFileTabDelimiter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1860)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1860)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1860)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26479-152">
            <b>True,</b> Wenn das Tabulatorzeichen als Trennzeichen beim Importieren einer Textdatei in eine Abfragetabelle wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-152">
              <b>True</b> if the tab character is the delimiter when you import a text file into a query table.</span>
          </span>
          <span data-ttu-id="26479-153">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-153">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="26479-154">Lese-/Schreibzugriff <b>vom Typ Boolean</b> (<b>Bool</b> in c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-154">Read/Write <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileTextQualifier">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlTextQualifier TextFileTextQualifier { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlTextQualifier TextFileTextQualifier" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileTextQualifier" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileTextQualifier As XlTextQualifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlTextQualifier TextFileTextQualifier { Microsoft::Office::Interop::Excel::XlTextQualifier get(); void set(Microsoft::Office::Interop::Excel::XlTextQualifier value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1858)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1858)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1858)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlTextQualifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26479-155">Zurückgeben oder festlegen das Texterkennungszeichen beim Importieren einer Textdatei in eine Abfragetabelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-155">Returns or sets the text qualifier when you import a text file into a query table.</span>
          </span>
          <span data-ttu-id="26479-156">Das Texterkennungszeichen gibt an, dass die eingeschlossenen Daten im Textformat vorliegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-156">The text qualifier specifies that the enclosed data is in text format.</span>
          </span>
          <span data-ttu-id="26479-157">Lese-/Schreibzugriff <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-157">Read/Write <see cref="T:Microsoft.Office.Interop.Excel.XlTextQualifier" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileThousandsSeparator">
      <MemberSignature Language="C#" Value="public string TextFileThousandsSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TextFileThousandsSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileThousandsSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileThousandsSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TextFileThousandsSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1871)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1871)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1871)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26479-158">
            <b>True</b> für behandelt Excel Zahlen als Text, die beginnen mit importiert ein "-" Symbol als negative Zahlen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-158">
              <b>True</b> for Excel to treat numbers imported as text that begin with a "-" symbol as a negative symbol.</span>
          </span>
          <span data-ttu-id="26479-159">
            <b>False</b> für behandelt Excel Zahlen als Text, die beginnen mit importiert ein "-" als Text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-159">
              <b>False</b> for Excel to treat numbers imported as text that begin with a "-" symbol as text.</span>
          </span>
          <span data-ttu-id="26479-160">Lese-/Schreibzugriff <b>vom Typ Boolean</b> (<b>Bool</b> in c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-160">Read/Write <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileTrailingMinusNumbers">
      <MemberSignature Language="C#" Value="public bool TextFileTrailingMinusNumbers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TextFileTrailingMinusNumbers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileTrailingMinusNumbers" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileTrailingMinusNumbers As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TextFileTrailingMinusNumbers { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2164)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2164)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2164)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26479-161">
            <b>True</b> für behandelt Excel Zahlen als Text, die beginnen mit importiert ein "-" Symbol als negative Zahlen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-161">
              <b>True</b> for Excel to treat numbers imported as text that begin with a "-" symbol as a negative symbol.</span>
          </span>
          <span data-ttu-id="26479-162">
            <b>False</b> für behandelt Excel Zahlen als Text, die beginnen mit importiert ein "-" als Text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-162">
              <b>False</b> for Excel to treat numbers imported as text that begin with a "-" symbol as text.</span>
          </span>
          <span data-ttu-id="26479-163">Lese-/Schreibzugriff <b>vom Typ Boolean</b> (<b>Bool</b> in c#).</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-163">Read/Write <b>Boolean</b> (<b>bool</b> in C#).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFileVisualLayout">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlTextVisualLayoutType TextFileVisualLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlTextVisualLayoutType TextFileVisualLayout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TextConnection.TextFileVisualLayout" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFileVisualLayout As XlTextVisualLayoutType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlTextVisualLayoutType TextFileVisualLayout { Microsoft::Office::Interop::Excel::XlTextVisualLayoutType get(); void set(Microsoft::Office::Interop::Excel::XlTextVisualLayoutType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2245)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2245)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2245)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlTextVisualLayoutType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26479-164">Zurückgeben oder Festlegen eines <see cref="T:Microsoft.Office.Interop.Excel.XlTextVisualLayoutType" /> -Enumeration, die angibt, ob das visuelle Layout des zu importierenden Texts Links-nach-rechts oder rechts-nach-links ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-164">Returns or sets an <see cref="T:Microsoft.Office.Interop.Excel.XlTextVisualLayoutType" /> enumeration that indicates whether the visual layout of the text being imported is left-to-right or right-to-left.</span>
          </span>
          <span data-ttu-id="26479-165">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26479-165">Read/Write.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>