<Type Name="Point" FullName="Microsoft.Office.Interop.Excel.Point">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7e25b0218180f3970a9efba6f581a14516fdea82" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="09/03/2018" />
    <Meta Name="ms.locfileid" Value="20587682" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Point" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Point" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Point" />
  <TypeSignature Language="VB.NET" Value="Public Interface Point" />
  <TypeSignature Language="C++ CLI" Value="public interface class Point" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002086A-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="80b6e-101">Stellt einen einzelnen Punkt einer Datenreihe in einem Diagramm dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="80b6e-101">Represents a single point in a series in a chart.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="80b6e-102">
        <para>
          <b>Point</b> -Objekt ist ein Mitglied der <see cref="T:Microsoft.Office.Interop.Excel.Points" /> Auflistung. Die <b>Points</b> -Auflistung enthält alle Datenpunkte in einer Datenreihe.</para>
        <para>Verwendung von <b>Punkt</b>(<paramref name="index" />), wobei <paramref name="index" /> ist die Indexnummer des Datenpunkts zur Rückgabe eines einzelnen Objekts <b>zeigen</b> . Punkte werden von links nach rechts auf die Datenreihe nummeriert. Points(1) ist der am weitesten und Points(Points.Count) ist der äußersten rechten.</para>
        <para></para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="80b6e-102">
          <para>The <b>Point</b> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.Points" /> collection. The <b>Points</b> collection contains all the points in one series.</para>
          <para>Use <b>Points</b>(<paramref name="index" />), where <paramref name="index" /> is the point index number, to return a single <b>Point</b> object. Points are numbered from left to right on the series. Points(1) is the leftmost point, and Points(Points.Count) is the rightmost point.</para>
          <para></para>
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_ApplyDataLabels">
      <MemberSignature Language="C#" Value="public object _ApplyDataLabels (Microsoft.Office.Interop.Excel.XlDataLabelsType Type = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, object LegendKey, object AutoText, object HasLeaderLines);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _ApplyDataLabels([in]valuetype Microsoft.Office.Interop.Excel.XlDataLabelsType Type, [in]object LegendKey, [in]object AutoText, [in]object HasLeaderLines) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Point._ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _ApplyDataLabels (Optional Type As XlDataLabelsType = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, Optional LegendKey As Object, Optional AutoText As Object, Optional HasLeaderLines As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(151)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataLabelsType" />
        <Parameter Name="LegendKey" Type="System.Object" />
        <Parameter Name="AutoText" Type="System.Object" />
        <Parameter Name="HasLeaderLines" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">To be added.</param>
        <param name="LegendKey">To be added.</param>
        <param name="AutoText">To be added.</param>
        <param name="HasLeaderLines">To be added.</param>
        <summary>
          <span data-ttu-id="80b6e-103">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-103">Reserved for internal use.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-104">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> -Objekt, das die Anwendung Microsoft Excel darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-104">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDataLabels">
      <MemberSignature Language="C#" Value="public object ApplyDataLabels (Microsoft.Office.Interop.Excel.XlDataLabelsType Type = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, object LegendKey, object AutoText, object HasLeaderLines, object ShowSeriesName, object ShowCategoryName, object ShowValue, object ShowPercentage, object ShowBubbleSize, object Separator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ApplyDataLabels([in]valuetype Microsoft.Office.Interop.Excel.XlDataLabelsType Type, [in]object LegendKey, [in]object AutoText, [in]object HasLeaderLines, [in]object ShowSeriesName, [in]object ShowCategoryName, [in]object ShowValue, [in]object ShowPercentage, [in]object ShowBubbleSize, [in]object Separator) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Point.ApplyDataLabels(Microsoft.Office.Interop.Excel.XlDataLabelsType,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyDataLabels (Optional Type As XlDataLabelsType = Microsoft.Office.Interop.Excel.XlDataLabelsType.xlDataLabelsShowValue, Optional LegendKey As Object, Optional AutoText As Object, Optional HasLeaderLines As Object, Optional ShowSeriesName As Object, Optional ShowCategoryName As Object, Optional ShowValue As Object, Optional ShowPercentage As Object, Optional ShowBubbleSize As Object, Optional Separator As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1922)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Type" Type="Microsoft.Office.Interop.Excel.XlDataLabelsType" />
        <Parameter Name="LegendKey" Type="System.Object" />
        <Parameter Name="AutoText" Type="System.Object" />
        <Parameter Name="HasLeaderLines" Type="System.Object" />
        <Parameter Name="ShowSeriesName" Type="System.Object" />
        <Parameter Name="ShowCategoryName" Type="System.Object" />
        <Parameter Name="ShowValue" Type="System.Object" />
        <Parameter Name="ShowPercentage" Type="System.Object" />
        <Parameter Name="ShowBubbleSize" Type="System.Object" />
        <Parameter Name="Separator" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Type">
          <span data-ttu-id="80b6e-105">Optionale <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-105">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlDataLabelsType" />.</span>
          </span>
          <span data-ttu-id="80b6e-106">Der anzuwendende Datenbeschriftungstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-106">The type of data label to apply.</span>
          </span>
          <span data-ttu-id="80b6e-107">Kann eine der folgenden <b>XlDataLabelsType</b> -Konstanten sein:<b>XlDataLabelsShowBubbleSizes</b><b>XlDataLabelsShowLabelAndPercent</b> Prozentsatz der Summe und Kategorie für den Datenpunkt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-107">Can be one of the following <b>XlDataLabelsType</b> constants:<b>xlDataLabelsShowBubbleSizes</b><b>xlDataLabelsShowLabelAndPercent</b> Percentage of the total and category for the point.</span>
          </span>
          <span data-ttu-id="80b6e-108">Nur für Kreis- und Ringdiagrammen verfügbar. <b>xlDataLabelsShowPercent</b> Prozentsatz der Summe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-108">Available only for pie charts and doughnut charts.<b>xlDataLabelsShowPercent</b> Percentage of the total.</span>
          </span>
          <span data-ttu-id="80b6e-109">Nur für Kreis- und Ringdiagrammen verfügbar. <b>xlDataLabelsShowLabel</b> Kategorie für den Datenpunkt. <b>xlDataLabelsShowNone</b> Keine datenbeschriftungen. <b>xlDataLabelsShowValue</b> Die standardmäßigen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-109">Available only for pie charts and doughnut charts.<b>xlDataLabelsShowLabel</b> Category for the point.<b>xlDataLabelsShowNone</b> No data labels.<b>xlDataLabelsShowValue</b> Default.</span>
          </span>
          <span data-ttu-id="80b6e-110">Wert für den Punkt (wird angenommen, wenn dieses Argument nicht angegeben ist).</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-110">Value for the point (assumed if this argument isn't specified).</span>
          </span>
        </param>
        <param name="LegendKey">
          <span data-ttu-id="80b6e-111">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-111">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="80b6e-112">
            <b>True</b>, wenn die Legende neben dem Datenpunkt anzeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-112">
              <b>True</b> to show the legend key next to the point.</span>
          </span>
          <span data-ttu-id="80b6e-113">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-113">The default value is <b>False</b>.</span>
          </span>
        </param>
        <param name="AutoText">
          <span data-ttu-id="80b6e-114">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-114">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="80b6e-115">
            <b>True,</b> Wenn das Objekt automatisch basierend auf dem Inhalt angemessenen Text generiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-115">
              <b>True</b> if the object automatically generates appropriate text based on content.</span>
          </span>
        </param>
        <param name="HasLeaderLines">
          <span data-ttu-id="80b6e-116">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-116">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="80b6e-117">Für die <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> und <see cref="T:Microsoft.Office.Interop.Excel.Series" /> Objekte, <b>true,</b> Wenn die Datenreihe Führungslinien aufweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-117">For the <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> and <see cref="T:Microsoft.Office.Interop.Excel.Series" /> objects, <b>True</b> if the series has leader lines.</span>
          </span>
        </param>
        <param name="ShowSeriesName">
          <span data-ttu-id="80b6e-118">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-118">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="80b6e-119">Den Datenreihennamen für die Datenbeschriftung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-119">The series name for the data label.</span>
          </span>
        </param>
        <param name="ShowCategoryName">
          <span data-ttu-id="80b6e-120">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-120">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="80b6e-121">Der Kategoriename für die Datenbeschriftung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-121">The category name for the data label.</span>
          </span>
        </param>
        <param name="ShowValue">
          <span data-ttu-id="80b6e-122">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-122">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="80b6e-123">Der Wert für die Datenbeschriftung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-123">The value for the data label.</span>
          </span>
        </param>
        <param name="ShowPercentage">
          <span data-ttu-id="80b6e-124">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-124">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="80b6e-125">Der Prozentsatz für die Datenbeschriftung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-125">The percentage for the data label.</span>
          </span>
        </param>
        <param name="ShowBubbleSize">
          <span data-ttu-id="80b6e-126">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-126">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="80b6e-127">Die Blasengröße für die Datenbeschriftung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-127">The bubble size for the data label.</span>
          </span>
        </param>
        <param name="Separator">
          <span data-ttu-id="80b6e-128">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-128">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="80b6e-129">Das Trennzeichen für die Datenbeschriftung</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-129">The separator for the data label.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80b6e-130">Wendet datenbeschriftungen auf einen Punkt in einem Diagramm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-130">Applies data labels to a point in a chart.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPictToEnd">
      <MemberSignature Language="C#" Value="public bool ApplyPictToEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyPictToEnd" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.ApplyPictToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyPictToEnd As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyPictToEnd { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1661)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-131">
            <b>True</b>, wenn eine Grafik dem Ende des Punktes oder aller Punkte der Datenreihe zugeordnet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-131">
              <b>True</b> if a picture is applied to the end of the point or all points in the series.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="80b6e-132">
            <para>Diese Eigenschaft gilt nur für 3D-Diagramme.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-132">
              <para>This property only applies to 3-D charts.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPictToFront">
      <MemberSignature Language="C#" Value="public bool ApplyPictToFront { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyPictToFront" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.ApplyPictToFront" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyPictToFront As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyPictToFront { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1660)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-133">
            <b>True</b>, wenn eine Grafik dem Anfang des Punkts oder allen Punkten der Datenreihe zugeordnet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-133">
              <b>True</b> if a picture is applied to the front of the point or all points in the series.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="80b6e-134">
            <para>Diese Eigenschaft gilt nur für 3D-Diagramme.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-134">
              <para>This property only applies to 3-D charts.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPictToSides">
      <MemberSignature Language="C#" Value="public bool ApplyPictToSides { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyPictToSides" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.ApplyPictToSides" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyPictToSides As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyPictToSides { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1659)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1659)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1659)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-135">
            <b>True</b>, wenn den Seiten des Punktes oder aller Punkte der Datenreihe eine Grafik zugeordnet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-135">
              <b>True</b> if a picture is applied to the sides of the point or all points in the series.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="80b6e-136">
            <para>Diese Eigenschaft gilt nur für 3D-Diagramme.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-136">
              <para>This property only applies to 3D charts.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Border">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Border Border { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Border Border" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Border" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Border As Border" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Border ^ Border { Microsoft::Office::Interop::Excel::Border ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Border</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-137">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Border" /> -Objekt, das den Rahmen des Objekts darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-137">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Border" /> object that represents the border of the object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFormats">
      <MemberSignature Language="C#" Value="public object ClearFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ClearFormats() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Point.ClearFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function ClearFormats () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ClearFormats();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(112)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-138">Löscht die Formatierung des Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-138">Clears the formatting of the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public object Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Copy() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Point.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-139">Wenn der Punkt oder die Datenreihe eine bildausfüllung aufweist, kopiert das Bild in die Zwischenablage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-139">If the point or series has a picture fill, copies the picture to the Clipboard.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-140">Gibt eine 32-Bit-Ganzzahl, die die Anwendung angibt, in der das Objekt erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-140">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="80b6e-141">
            <para>Wenn das Objekt in Microsoft Excel erstellt wurde, gibt diese Eigenschaft die Zeichenfolge XCEL zurück, die die hexadezimale Zahl 5843454 c entspricht</para>
            <para>Die <b>Creator</b> -Eigenschaft wurde in Microsoft Excel für den Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen verfügt über entwickelt. Microsoft Excel verfügt beispielsweise über den erstellten Code XCEL.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-141">
              <para>If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</para>
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLabel">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DataLabel DataLabel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DataLabel DataLabel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.DataLabel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataLabel As DataLabel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DataLabel ^ DataLabel { Microsoft::Office::Interop::Excel::DataLabel ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(158)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(158)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DataLabel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-142">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.DataLabel" /> -Objekt, das die Beschriftung stellt Datenpunkts oder der Trendlinie zugeordnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-142">Returns a <see cref="T:Microsoft.Office.Interop.Excel.DataLabel" /> object that represents the data label associated with the point or trendline.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="80b6e-143">
            <para>Datenbeschriftungen für eine Trendlinie aktivieren, Sie müssen, die <see cref="P:Microsoft.Office.Interop.Excel.Trendline.DisplayEquation" /> Eigenschaft oder die <see cref="P:Microsoft.Office.Interop.Excel.Trendline.DisplayRSquared" /> -Eigenschaft auf <b>True</b>.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-143">
              <para>To turn on data labels for a trendline you need to set the <see cref="P:Microsoft.Office.Interop.Excel.Trendline.DisplayEquation" /> property or the <see cref="P:Microsoft.Office.Interop.Excel.Trendline.DisplayRSquared" /> property to <b>True</b>.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public object Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Point.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-144">Löscht das Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-144">Deletes the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="80b6e-145">
            <para>Löschen einer <see cref="T:Microsoft.Office.Interop.Excel.Point" /> Objekt wird die gesamte Datenreihe gelöscht.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-145">
              <para>Deleting a <see cref="T:Microsoft.Office.Interop.Excel.Point" /> object deletes the entire series.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Explosion">
      <MemberSignature Language="C#" Value="public int Explosion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Explosion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Explosion" />
      <MemberSignature Language="VB.NET" Value="Public Property Explosion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Explosion { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(182)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(182)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(182)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-146">Zurückgeben oder festlegen den Explosionswert für Kreis- oder Ringsegments Segments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-146">Returns or sets the explosion value for a pie-chart or doughnut-chart slice.</span>
          </span>
          <span data-ttu-id="80b6e-147">Gibt 0 (null) zurück, wenn keine Explosion vorhanden ist (die Spitze des Segments ist in der Mitte des Diagramms).</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-147">Returns 0 (zero) if there's no explosion (the tip of the slice is in the center of the pie).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartFillFormat Fill { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartFillFormat Fill" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Fill" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Fill As ChartFillFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartFillFormat ^ Fill { Microsoft::Office::Interop::Excel::ChartFillFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartFillFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-148">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> -Objekt für eine angegebene Form oder einem <see cref="T:Microsoft.Office.Interop.Excel.ChartFillFormat" /> -Objekt für ein angegebenes Diagramm, das Formateigenschaften für das Shape oder Diagramm der Füllung enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-148">Returns a <see cref="T:Microsoft.Office.Interop.Excel.FillFormat" /> object for a specified shape or a <see cref="T:Microsoft.Office.Interop.Excel.ChartFillFormat" /> object for a specified chart that contains fill formatting properties for the shape or chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ChartFormat Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ChartFormat Format" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Format" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Format As ChartFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ChartFormat ^ Format { Microsoft::Office::Interop::Excel::ChartFormat ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(116)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(116)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ChartFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-149">Gibt die <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-149">Returns the <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" /> object.</span>
          </span>
          <span data-ttu-id="80b6e-150">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-150">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.ChartFormat" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Has3DEffect">
      <MemberSignature Language="C#" Value="public bool Has3DEffect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Has3DEffect" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Has3DEffect" />
      <MemberSignature Language="VB.NET" Value="Public Property Has3DEffect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Has3DEffect { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1665)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1665)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1665)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-151">Gibt zurück und Festlegen eines Werts, das angibt, wenn ein Punkt dreidimensional dargestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-151">Returns and Sets a value that states if a point has a three-dimensional appearance.</span>
          </span>
          <span data-ttu-id="80b6e-152">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-152">Read/Write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80b6e-153">Boolean</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-153">Boolean</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="80b6e-154">
            <para>Gibt true zurück, wenn ein Punkt dreidimensional dargestellt wird.</para>
            <para>Diese Eigenschaft gilt nur für Blasendiagramme.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-154">
              <para>Returns True if a point has a three-dimensional appearance. </para>
              <para>This property applies to bubble charts only.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDataLabel">
      <MemberSignature Language="C#" Value="public bool HasDataLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDataLabel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.HasDataLabel" />
      <MemberSignature Language="VB.NET" Value="Public Property HasDataLabel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasDataLabel { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(77)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(77)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(77)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-155">
            <b>True</b>, wenn der Datenpunkt eine Datenbeschriftung enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-155">
              <b>True</b> if the point has a data label.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Height" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-156">Ruft die Höhe des Objekts in Punkt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-156">Gets the height, in points, of the object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80b6e-157">Die Höhe des Objekts in Punkten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-157">The height, in points, of the object.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="80b6e-158">
            <para>Read-only.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-158">
              <para>Read-only.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interior">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Interior Interior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Interior Interior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Interior" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Interior As Interior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Interior ^ Interior { Microsoft::Office::Interop::Excel::Interior ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Interior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-159">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> -Objekt, das den Innenbereich des angegebenen Objekts darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-159">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Interior" /> object that represents the interior of the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvertIfNegative">
      <MemberSignature Language="C#" Value="public bool InvertIfNegative { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvertIfNegative" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.InvertIfNegative" />
      <MemberSignature Language="VB.NET" Value="Public Property InvertIfNegative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvertIfNegative { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(132)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(132)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(132)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-160">
            <b>True,</b> Wenn Microsoft Excel das Muster im Element invertiert, wenn es eine negative Zahl entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-160">
              <b>True</b> if Microsoft Excel inverts the pattern in the item when it corresponds to a negative number.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Left" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-161">Ruft einen Wert, der den Abstand in Punkt vom linken Rand des Objekts zum linken Rand des Diagrammbereichs darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-161">Gets a value that represents the distance, in points, from the left edge of the object to the left edge of the chart area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80b6e-162">Der Abstand in Punkt vom linken Rand des Objekts zum linken Rand des Diagrammbereichs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-162">The distance, in points, from the left edge of the object to the left edge of the chart area.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="80b6e-163">
            <para>Read-only.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-163">
              <para>Read-only.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerBackgroundColor">
      <MemberSignature Language="C#" Value="public int MarkerBackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarkerBackgroundColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.MarkerBackgroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerBackgroundColor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MarkerBackgroundColor { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(73)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(73)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(73)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-164">Legt die Hintergrundfarbe der Markierung als RGB-Wert fest oder gibt den entsprechenden Farbe Index-Wert zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-164">Sets the marker background color as an RGB value or returns the corresponding color index value.</span>
          </span>
          <span data-ttu-id="80b6e-165">Gilt nur für Linien-, Punkt (XY) und Netzdiagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-165">Applies only to line, scatter, and radar charts.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerBackgroundColorIndex">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlColorIndex MarkerBackgroundColorIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlColorIndex MarkerBackgroundColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.MarkerBackgroundColorIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerBackgroundColorIndex As XlColorIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlColorIndex MarkerBackgroundColorIndex { Microsoft::Office::Interop::Excel::XlColorIndex get(); void set(Microsoft::Office::Interop::Excel::XlColorIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(74)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(74)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(74)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlColorIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-166">Zurückgeben oder festlegen die Hintergrundfarbe Markierung als Indexwert in der aktuellen Farbpalette oder als eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> Konstanten: <b><b>Tabelle verdeutlicht</b></b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-166">Returns or sets the marker background color as an index into the current color palette, or as one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> constants: <b>xlColorIndexAutomatic</b> or <b>xlColorIndexNone</b>.</span>
          </span>
          <span data-ttu-id="80b6e-167">Gilt nur für Linien-, Punkt (XY) und Netzdiagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-167">Applies only to line, scatter, and radar charts.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerForegroundColor">
      <MemberSignature Language="C#" Value="public int MarkerForegroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarkerForegroundColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.MarkerForegroundColor" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerForegroundColor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MarkerForegroundColor { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(75)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(75)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(75)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-168">Legt die Hintergrundfarbe der Markierung als RGB-Wert fest oder gibt den entsprechenden Farbe Index-Wert zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-168">Sets the marker background color as an RGB value or returns the corresponding color index value.</span>
          </span>
          <span data-ttu-id="80b6e-169">Gilt nur für Linien-, Punkt (XY) und Netzdiagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-169">Applies only to line, scatter, and radar charts.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerForegroundColorIndex">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlColorIndex MarkerForegroundColorIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlColorIndex MarkerForegroundColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.MarkerForegroundColorIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerForegroundColorIndex As XlColorIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlColorIndex MarkerForegroundColorIndex { Microsoft::Office::Interop::Excel::XlColorIndex get(); void set(Microsoft::Office::Interop::Excel::XlColorIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(76)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(76)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(76)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlColorIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-170">Zurückgeben oder festlegen die Vordergrundfarbe von Datenpunkten als Indexwert in der aktuellen Farbpalette oder als eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> Konstanten: <b><b>Tabelle verdeutlicht</b></b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-170">Returns or sets the marker foreground color as an index into the current color palette, or as one of the following <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> constants: <b>xlColorIndexAutomatic</b> or <b>xlColorIndexNone</b>.</span>
          </span>
          <span data-ttu-id="80b6e-171">Gilt nur für Linien-, Punkt (XY) und Netzdiagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-171">Applies only to line, scatter, and radar charts.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerSize">
      <MemberSignature Language="C#" Value="public int MarkerSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarkerSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.MarkerSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MarkerSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(231)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(231)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(231)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-172">Zurückgeben oder Festlegen der Größe der Daten in Punkt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-172">Returns or sets the data marker size in points.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerStyle">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlMarkerStyle MarkerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlMarkerStyle MarkerStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.MarkerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerStyle As XlMarkerStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlMarkerStyle MarkerStyle { Microsoft::Office::Interop::Excel::XlMarkerStyle get(); void set(Microsoft::Office::Interop::Excel::XlMarkerStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(72)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(72)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(72)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlMarkerStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-173">Gibt die Art der Markierung für einen Datenpunkt oder für eine Datenreihe in einem Liniendiagramm, Punkt (XY)-Diagramm oder Netzdiagramm zurück oder legt sie fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-173">Returns or sets the marker style for a point or series in a line chart, scatter chart, or radar chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="80b6e-174">
            <para>
              <see cref="T:Microsoft.Office.Interop.Excel.XlMarkerStyle" />kann eine der folgenden <b>XlMarkerStyle</b> -Konstanten sein:</para>
            <para>
              <b>XlMarkerStyleAutomatic</b>. Automatische Markierungen</para>
            <para>
              <b>XlMarkerStyleCircle</b>. Runde Markierungen</para>
            <para>
              <b>XlMarkerStyleDash</b>. Lange Balken als Markierungen</para>
            <para>
              <b>XlMarkerStyleDiamond</b>. Rautenförmige Markierungen</para>
            <para>
              <b>XlMarkerStyleDot</b>. Kurze Balken als Markierungen</para>
            <para>
              <b>XlMarkerStyleNone</b>. Keine Markierungen</para>
            <para>
              <b>xlMarkerStylePicture fest</b>. Bildmarkierungen</para>
            <para>
              <b>XlMarkerStylePlus</b>. Quadratische Markierungen mit einem Pluszeichen</para>
            <para>
              <b>XlMarkerStyleSquare</b>. Quadratische Markierungen</para>
            <para>
              <b>XlMarkerStyleStar</b>. Quadratische Markierungen mit einem Sternchen</para>
            <para>
              <b>XlMarkerStyleTriangle</b>. Dreieckige Markierungen</para>
            <para>
              <b>XlMarkerStyleX</b>. Quadratische Markierungen mit einem X</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-174">
              <para>
                <see cref="T:Microsoft.Office.Interop.Excel.XlMarkerStyle" /> can be one of the following <b>XlMarkerStyle</b> constants:</para>
              <para>
                <b>xlMarkerStyleAutomatic</b>. Automatic markers</para>
              <para>
                <b>xlMarkerStyleCircle</b>. Circular markers</para>
              <para>
                <b>xlMarkerStyleDash</b>. Long bar markers</para>
              <para>
                <b>xlMarkerStyleDiamond</b>. Diamond-shaped markers</para>
              <para>
                <b>xlMarkerStyleDot</b>. Short bar markers</para>
              <para>
                <b>xlMarkerStyleNone</b>. No markers</para>
              <para>
                <b>xlMarkerStylePicture</b>. Picture markers</para>
              <para>
                <b>xlMarkerStylePlus</b>. Square markers with a plus sign</para>
              <para>
                <b>xlMarkerStyleSquare</b>. Square markers</para>
              <para>
                <b>xlMarkerStyleStar</b>. Square markers with an asterisk</para>
              <para>
                <b>xlMarkerStyleTriangle</b>. Triangular markers</para>
              <para>
                <b>xlMarkerStyleX</b>. Square markers with an X</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-175">Ruft den Namen des Objekts ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-175">Gets the object name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80b6e-176">Der Objektname.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-176">The object name.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="80b6e-177">
            <para>Read-only.</para>
            <para>Diese Eigenschaft entspricht dem Namen eines Datenpunkts in einem Diagramm. Der Name wird im folgenden Format dargestellt: S&lt;Nummer der Datenreihe&gt;P&lt;zeigen Anzahl&gt;.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-177">
              <para>Read-only.</para>
              <para>This property corresponds to the name of a data point on a chart. The name is represented using the following format: S&lt;series number&gt;P&lt;point number&gt;.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-178">Gibt das übergeordnete Objekt für das angegebene Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-178">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public object Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Paste() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Point.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Function Paste () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Paste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(211)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-179">Fügt ein Bild aus der Zwischenablage als Markierung für den ausgewählten Punkt ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-179">Pastes a picture from the Clipboard as the marker on the selected point.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="80b6e-180">
            <para>Die <b>Paste</b> -Methode kann für die Spalte, Balken-, Zeile oder Netzdiagramme verwendet werden und legt die <see cref="P:Microsoft.Office.Interop.Excel.Point.MarkerStyle" /> -Eigenschaft auf <b>xlMarkerStylePicture fest</b>.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-180">
              <para>The <b>Paste</b> method can be used on column, bar, line, or radar charts, and it sets the <see cref="P:Microsoft.Office.Interop.Excel.Point.MarkerStyle" /> property to <b>xlMarkerStylePicture</b>.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PictureType">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlChartPictureType PictureType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlChartPictureType PictureType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.PictureType" />
      <MemberSignature Language="VB.NET" Value="Public Property PictureType As XlChartPictureType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlChartPictureType PictureType { Microsoft::Office::Interop::Excel::XlChartPictureType get(); void set(Microsoft::Office::Interop::Excel::XlChartPictureType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(161)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(161)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlChartPictureType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-181">Gibt zurück oder legt fest, die Bilder in einer Säulen- oder Balkendiagrammen sind wie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-181">Returns or sets the way pictures are displayed on a column or bar picture chart.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="80b6e-182">
            <para>
              <see cref="T:Microsoft.Office.Interop.Excel.XlChartPictureType" />kann eine der folgenden <b>XlChartPictureType</b> -Konstanten sein:</para>
            <para>
              <b>XlStack</b>
            </para>
            <para>
              <b>XlStackScale</b>
            </para>
            <para>
              <b>XlStretch</b>
            </para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-182">
              <para>
                <see cref="T:Microsoft.Office.Interop.Excel.XlChartPictureType" /> can be one of the following <b>XlChartPictureType</b> constants:</para>
              <para>
                <b>xlStack</b>
              </para>
              <para>
                <b>xlStackScale</b>
              </para>
              <para>
                <b>xlStretch</b>
              </para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PictureUnit">
      <MemberSignature Language="C#" Value="public int PictureUnit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PictureUnit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.PictureUnit" />
      <MemberSignature Language="VB.NET" Value="Public Property PictureUnit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PictureUnit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(162)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(162)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(162)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-183">Zurückgeben oder festlegen die Einheit für jede Grafik im Diagramm, wenn die <see cref="P:Microsoft.Office.Interop.Excel.Point.PictureType" /> -Eigenschaft auf <b>XlStackScale</b> festgelegt ist (wenn das nicht der Fall, wird diese Eigenschaft wird ignoriert).</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-183">Returns or sets the unit for each picture on the chart if the <see cref="P:Microsoft.Office.Interop.Excel.Point.PictureType" /> property is set to <b>xlStackScale</b> (if not, this property is ignored).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PictureUnit2">
      <MemberSignature Language="C#" Value="public double PictureUnit2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PictureUnit2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.PictureUnit2" />
      <MemberSignature Language="VB.NET" Value="Public Property PictureUnit2 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PictureUnit2 { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2649)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2649)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2649)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-184">Zurückgeben oder festlegen die Einheit für jede Grafik im Diagramm, wenn die <see cref="P:Microsoft.Office.Interop.Excel.Point.PictureType" /> -Eigenschaft auf <b>XlStackScale</b> festgelegt ist (wenn das nicht der Fall, wird diese Eigenschaft wird ignoriert).</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-184">Returns or sets the unit for each picture on the chart if the <see cref="P:Microsoft.Office.Interop.Excel.Point.PictureType" /> property is set to <b>xlStackScale</b> (if not, this property is ignored).</span>
          </span>
          <span data-ttu-id="80b6e-185">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-185">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80b6e-186">
            <b>Double</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-186">
              <b>Double</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PieSliceLocation">
      <MemberSignature Language="C#" Value="public double PieSliceLocation (Microsoft.Office.Interop.Excel.XlPieSliceLocation loc, Microsoft.Office.Interop.Excel.XlPieSliceIndex Index = Microsoft.Office.Interop.Excel.XlPieSliceIndex.xlOuterCenterPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 PieSliceLocation([in]valuetype Microsoft.Office.Interop.Excel.XlPieSliceLocation loc, [in]valuetype Microsoft.Office.Interop.Excel.XlPieSliceIndex Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Point.PieSliceLocation(Microsoft.Office.Interop.Excel.XlPieSliceLocation,Microsoft.Office.Interop.Excel.XlPieSliceIndex)" />
      <MemberSignature Language="VB.NET" Value="Public Function PieSliceLocation (loc As XlPieSliceLocation, Optional Index As XlPieSliceIndex = Microsoft.Office.Interop.Excel.XlPieSliceIndex.xlOuterCenterPoint) As Double" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2913)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loc" Type="Microsoft.Office.Interop.Excel.XlPieSliceLocation" />
        <Parameter Name="Index" Type="Microsoft.Office.Interop.Excel.XlPieSliceIndex" />
      </Parameters>
      <Docs>
        <param name="loc">
          <span data-ttu-id="80b6e-187">Gibt eine horizontal oder vertikale Koordinate an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-187">Specifies a horizontal or vertical coordinate.</span>
          </span>
        </param>
        <param name="Index">
          <span data-ttu-id="80b6e-188">Gibt an, welche Kreis Segments Position Koordinate zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-188">Specifies which pie slice position coordinate to return.</span>
          </span>
          <span data-ttu-id="80b6e-189">Der Standardwert lautet <see cref="F:Microsoft.Office.Interop.Excel.XlPieSliceIndex.xlOuterCenterPoint" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-189">The default value is <see cref="F:Microsoft.Office.Interop.Excel.XlPieSliceIndex.xlOuterCenterPoint" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80b6e-190">Gibt die vertikale oder horizontale Position eines Punkts auf einem Diagrammelement von der oberen oder linken Kante des Objekts bis zur oberen oder linken Kante der Diagrammfläche in Punkt an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-190">Returns the vertical or horizontal position of a point on a chart item, in points, from the top or left edge of the object to the top or left edge of the chart area.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80b6e-191">Die vertikale oder horizontale Position eines Punkts auf ein Diagrammelement zwischen der oberen oder linken Rand des Objekts zum oberen oder linken Rand des Diagrammbereichs in Punkt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-191">The vertical or horizontal position of a point on a chart item, in points, from the top or left edge of the object to the top or left edge of the chart area.</span>
          </span>
        </returns>
        <remarks>
          <span data-ttu-id="80b6e-192">
            <para>Diese Eigenschaft gilt nur für Kreis- und Ringdiagrammtypen.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-192">
              <para>This property only applies to pie and doughnut chart types.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryPlot">
      <MemberSignature Language="C#" Value="public bool SecondaryPlot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SecondaryPlot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.SecondaryPlot" />
      <MemberSignature Language="VB.NET" Value="Public Property SecondaryPlot As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SecondaryPlot { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1662)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1662)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1662)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-193">
            <b>True,</b> Wenn der Punkt im sekundären Abschnitt eines Kreis-aus-Kreis oder Balken-aus-Kreis-Diagramms befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-193">
              <b>True</b> if the point is in the secondary section of either a pie of pie chart or a bar of pie chart.</span>
          </span>
          <span data-ttu-id="80b6e-194">Gilt nur für Punkte in Kreis aus-Kreis-Diagramme oder Balken-aus-Kreis-Diagramme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-194">Applies only to points on pie of pie charts or bar of pie charts.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public object Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Select() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Point.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-195">Markiert das Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-195">Selects the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shadow">
      <MemberSignature Language="C#" Value="public bool Shadow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shadow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Shadow" />
      <MemberSignature Language="VB.NET" Value="Public Property Shadow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Shadow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-196">
            <b>True,</b> Wenn die Schriftart Schatten aufweist oder ob das Objekt einen Schatten aufweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-196">
              <b>True</b> if the font is a shadow font or if the object has a shadow.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Top" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-197">Ruft einen Wert, der den Abstand in Punkt vom oberen Rand des Objekts zum oberen Rand des Diagrammbereichs darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-197">Gets a value that represents the distance, in points, from the top edge of the object to the top edge of the chart area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80b6e-198">Der Abstand in Punkt vom oberen Rand des Objekts zum oberen Rand des Diagrammbereichs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-198">The distance, in points, from the top edge of the object to the top edge of the chart area.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="80b6e-199">
            <para>Read-only.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-199">
              <para>Read-only.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Point.Width" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80b6e-200">Ruft die Breite des Objekts in Punkt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-200">Gets the width, in points, of the object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80b6e-201">Die Breite des Objekts in Punkten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-201">The width, in points, of the object.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="80b6e-202">
            <para>Read-only.</para>
            <para></para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="80b6e-202">
              <para>Read-only.</para>
              <para></para>
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>