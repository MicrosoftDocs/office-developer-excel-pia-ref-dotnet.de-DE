<Type Name="TableStyles" FullName="Microsoft.Office.Interop.Excel.TableStyles">
  <Metadata><Meta Name="ms.openlocfilehash" Value="70d5a69d0e4e826dda6e82f38beab66614060a9a" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="50009716" /></Metadata><TypeSignature Language="C#" Value="public interface TableStyles : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract TableStyles implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.TableStyles" />
  <TypeSignature Language="VB.NET" Value="Public Interface TableStyles&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class TableStyles : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000244A8-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="72cc6-101">Stellt Formate dar, die auf eine Tabelle angewendet werden können.</span><span class="sxs-lookup"><span data-stu-id="72cc6-101">Represents styles that can be applied to a table.</span></span></summary>
    <remarks><para><span data-ttu-id="72cc6-p101">Tabellenformate bieten eine Möglichkeit, eine gesamte Tabelle oder PivotTable zu formatieren. Tabellenformate ersetzen das vorhandene Autoformat-Feature für das Formatieren einer ganzen Tabelle.</span><span class="sxs-lookup"><span data-stu-id="72cc6-p101">Table styles provide a way to format an entire table or Pivot Table. Table styles replaces the existing auto format feature for formatting an entire table.</span></span></para>
      <para><span data-ttu-id="72cc6-104">Tabellenformate unterscheiden sich wie folgt von AutoFormat:</span><span class="sxs-lookup"><span data-stu-id="72cc6-104">Table styles differ from auto format in the following ways:</span></span></para>
      <para> </para>
      <list type="bullet">
        <item>
          <description><span data-ttu-id="72cc6-105">Sie können eigene benutzerdefinierte Tabellenformatvorlagen erstellen und erneut verwenden.</span><span class="sxs-lookup"><span data-stu-id="72cc6-105">You can create and re-use your  own custom table styles.</span></span>
</description>
        </item>
        <item>
          <description><span data-ttu-id="72cc6-106">Für Tabellenformate werden Designs verwendet.</span><span class="sxs-lookup"><span data-stu-id="72cc6-106">Table styles work with themes.</span></span>  </description>
        </item>
        <item>
          <description><span data-ttu-id="72cc6-107">Durch das Ändern des Farbschemas und/oder Schriftartenschemas des Dokumentdesigns wird das Aussehen der integrierten Tabellenformatvorlagen geändert.</span><span class="sxs-lookup"><span data-stu-id="72cc6-107">Changing the document theme's color scheme and/or font scheme will change the look of the built-in table styles.</span></span> </description>
        </item>
        <item>
          <description><span data-ttu-id="72cc6-p102">Tabellenformate können Formate auf Objekte wie PivotTables und Tabellen erneut anwenden, wenn das Objekt geändert wird. In den Tabellen wird das angewendete Format vorgemerkt, und die Tabellen werden entsprechend angezeigt, wenn Zellen hinzugefügt, entfernt, ausgeblendet und angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="72cc6-p102">Table styles can reapply styles to objects like PivotTables and tables as the object changes.  The tables will remember the style applied to them and will re-display appropriately when cells are added, removed, hidden, and shown.</span></span></description>
        </item>
        <item>
          <description><span data-ttu-id="72cc6-110">Tabellenformatvorlagen verfügen über eine visuelle Benutzeroberfläche im Menüband.</span><span class="sxs-lookup"><span data-stu-id="72cc6-110">Table styles have a visual user interface in the Ribbon.</span></span>
</description>
        </item>
      </list>
      <para> </para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TableStyle this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TableStyle _Default(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TableStyles._Default(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default(Index As Object) As TableStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TableStyle ^ default[System::Object ^] { Microsoft::Office::Interop::Excel::TableStyle ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TableStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index">To be added.</param>
        <summary><span data-ttu-id="72cc6-111">Für die interne Verwendung reserviert.</span><span class="sxs-lookup"><span data-stu-id="72cc6-111">Reserved for internal use.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TableStyle Add (string TableStyleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.TableStyle Add([in]string TableStyleName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.TableStyles.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (TableStyleName As String) As TableStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::TableStyle ^ Add(System::String ^ TableStyleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(181)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TableStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="TableStyleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="TableStyleName"><span data-ttu-id="72cc6-112">Der Name des Tabellenformats.</span><span class="sxs-lookup"><span data-stu-id="72cc6-112">The name of the table style.</span></span></param>
        <summary><span data-ttu-id="72cc6-113">Erstellt ein neues <see cref="T:Microsoft.Office.Interop.Excel.TableStyle" /> Objekt und fügt es der Auflistung hinzu.</span><span class="sxs-lookup"><span data-stu-id="72cc6-113">Creates a new <see cref="T:Microsoft.Office.Interop.Excel.TableStyle" /> object and adds it to the collection.</span></span></summary>
        <returns><span data-ttu-id="72cc6-114">TableStyle</span><span class="sxs-lookup"><span data-stu-id="72cc6-114">TableStyle</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TableStyles.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72cc6-115">Wenn diese Eigenschaft ohne einen Objektbezeichner verwendet wird, gibt sie ein Objekt zurück, das die Microsoft Office  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> Excel-Anwendung darstellt.</span><span class="sxs-lookup"><span data-stu-id="72cc6-115">When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application.</span></span> <span data-ttu-id="72cc6-116">Bei Verwendung mit einem Objektbezeichner gibt diese Eigenschaft ein Objekt zurück, das den Ersteller <see cref="T:Microsoft.Office.Interop.Excel._Application" /> des angegebenen Objekts darstellt.</span><span class="sxs-lookup"><span data-stu-id="72cc6-116">When used with an object qualifier, this property returns an <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the creator of the specified object.</span></span> <span data-ttu-id="72cc6-117">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="72cc6-117">Read-only.</span></span></summary>
        <value><span data-ttu-id="72cc6-118"><b>Objekt</b></span><span class="sxs-lookup"><span data-stu-id="72cc6-118"><b>Object</b></span></span></value>
        <remarks><para><span data-ttu-id="72cc6-119">Sie können diese Eigenschaft mit einem OLE-Automatisierungsobjekt verwenden, um die Anwendung dieses Objekts zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="72cc6-119">You can use this property with an OLE Automation object to return the application of that object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TableStyles.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72cc6-120">Gibt die Anzahl der Objekte in der Auflistung zurück.</span><span class="sxs-lookup"><span data-stu-id="72cc6-120">Returns the number of objects in the collection.</span></span> <span data-ttu-id="72cc6-121">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="72cc6-121">Read-only.</span></span></summary>
        <value><span data-ttu-id="72cc6-122"><b>Integer</b></span><span class="sxs-lookup"><span data-stu-id="72cc6-122"><b>Integer</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TableStyles.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72cc6-123">Returns a 32-bit integer that indicates the application in which this object was created.</span><span class="sxs-lookup"><span data-stu-id="72cc6-123">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="72cc6-124">Read-only.</span><span class="sxs-lookup"><span data-stu-id="72cc6-124">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /></value>
        <remarks><para><span data-ttu-id="72cc6-125">Wenn das Objekt in Microsoft Excel erstellt wurde, gibt die Eigenschaft die Zeichenfolge XCEL zurück, die der Hexadezimalzahl 5843454C entspricht.</span><span class="sxs-lookup"><span data-stu-id="72cc6-125">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span>  <span data-ttu-id="72cc6-126">Die <b>Creator</b> -Eigenschaft ist für die Verwendung in Microsoft Excel für Macintosh konzipiert, wobei jede Anwendung einen vier Zeichen großen Erstellercode hat.</span><span class="sxs-lookup"><span data-stu-id="72cc6-126">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="72cc6-127">Der Urhebercode für Microsoft Excel lautet "XCEL".</span><span class="sxs-lookup"><span data-stu-id="72cc6-127">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.TableStyles.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TableStyle Item (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.TableStyle Item([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.TableStyles.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Item (Index As Object) As TableStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::TableStyle ^ Item(System::Object ^ Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(170)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TableStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="72cc6-128">Der Name oder die Indexnummer für das Objekt.</span><span class="sxs-lookup"><span data-stu-id="72cc6-128">The name or index number for the object.</span></span></param>
        <summary><span data-ttu-id="72cc6-129">Gibt ein einzelnes Objekt aus einer Auflistung zurück.</span><span class="sxs-lookup"><span data-stu-id="72cc6-129">Returns a single object from a collection.</span></span></summary>
        <returns><see cref="T:Microsoft.Office.Interop.Excel.TableStyle" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.TableStyles.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72cc6-130">Gibt das übergeordnete Objekt für das angegebene Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="72cc6-130">Returns the parent object for the specified object.</span></span> <span data-ttu-id="72cc6-131">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="72cc6-131">Read-only.</span></span></summary>
        <value><span data-ttu-id="72cc6-132"><b>Objekt</b></span><span class="sxs-lookup"><span data-stu-id="72cc6-132"><b>Object</b></span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>