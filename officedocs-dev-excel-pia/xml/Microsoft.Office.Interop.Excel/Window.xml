<Type Name="Window" FullName="Microsoft.Office.Interop.Excel.Window">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="628d319ce41e267cd4a082a94f976467ed8bebe1" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="09/24/2018" />
    <Meta Name="ms.locfileid" Value="20577770" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface Window" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Window" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Window" />
  <TypeSignature Language="VB.NET" Value="Public Interface Window" />
  <TypeSignature Language="C++ CLI" Value="public interface class Window" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020893-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e9505-101">Stellt ein Fenster dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e9505-101">Represents a window.</span>
      </span>
      <span data-ttu-id="e9505-102">Viele sind Arbeitsblatt wie Bildlaufleisten und Gitternetzlinien, eigentlich Eigenschaften des Fensters.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e9505-102">Many worksheet characteristics, such as scroll bars and gridlines, are actually properties of the window.</span>
      </span>
    </summary>
    <remarks>
      <para>
        <span data-ttu-id="e9505-103">Das <b>Window</b> -Objekt ist ein Mitglied der <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> Auflistung.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e9505-103">The <b>Window</b> object is a member of the <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection.</span>
        </span>
        <span data-ttu-id="e9505-104">Der <b>Windows</b> -Auflistung zurückgegeben, die durch die <see cref="P:Microsoft.Office.Interop.Excel._Application.Windows" /> -Eigenschaft des der <see cref="T:Microsoft.Office.Interop.Excel.Application" /> -Objekt enthält alle Fenster der Anwendung, während die von die <b>Windows</b> -Auflistung zurückgegeben der <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Windows" /> -Eigenschaft des der <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> -Objekt enthält nur die Fenster in der angegebenen Arbeitsmappe.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e9505-104">The <b>Windows</b> collection returned by the <see cref="P:Microsoft.Office.Interop.Excel._Application.Windows" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object contains all the windows in the application, whereas the <b>Windows</b> collection returned by the <see cref="P:Microsoft.Office.Interop.Excel._Workbook.Windows" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Workbook" /> object contains only the windows in the specified workbook.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="e9505-105">Verwenden Sie <b>Windows</b>(<paramref name="index" />), wobei <paramref name="index" /> ist der Fenstername oder die Indexzahl darstellt, um ein einzelnes <b>Window</b> -Objekt zurückzugeben.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e9505-105">Use <b>Windows</b>(<paramref name="index" />), where <paramref name="index" /> is the window name or index number, to return a single <b>Window</b> object.</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="e9505-106">Beachten Sie, dass das aktive Fenster immer Windows(1) ist.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e9505-106">Note that the active window is always Windows(1).</span>
        </span>
      </para>
      <para>
        <span data-ttu-id="e9505-107">Die Beschriftung des Fensters wird der Text in der Titelleiste am oberen Rand des Fensters angezeigt wird, wenn das Fenster maximiert ist.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e9505-107">The window caption is the text shown in the title bar at the top of the window when the window isn’t maximized.</span>
        </span>
        <span data-ttu-id="e9505-108">Die Beschriftung wird auch in der Liste der geöffneten Dateien unten im Menü Fenster angezeigt.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e9505-108">The caption is also shown in the list of open files on the bottom of the Windows menu.</span>
        </span>
        <span data-ttu-id="e9505-109">Verwendung der <see cref="P:Microsoft.Office.Interop.Excel.Window.Caption" /> -Eigenschaft auf die Beschriftung des Fensters zurückzugeben oder festzulegen.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e9505-109">Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.Caption" /> property to set or return the window caption.</span>
        </span>
        <span data-ttu-id="e9505-110">Ändern der Beschriftung des Fensters nicht den Namen der Arbeitsmappe zu ändern.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e9505-110">Changing the window caption doesn’t change the name of the workbook.</span>
        </span>
      </para>
      <para></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public bool _DisplayRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool _DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window._DisplayRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property _DisplayRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool _DisplayRightToLeft { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(648)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-111">Für die interne Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-111">Reserved for internal use.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PrintOut">
      <MemberSignature Language="C#" Value="public object _PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object _PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window._PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function _PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1772)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">To be added.</param>
        <param name="To">To be added.</param>
        <param name="Copies">To be added.</param>
        <param name="Preview">To be added.</param>
        <param name="ActivePrinter">To be added.</param>
        <param name="PrintToFile">To be added.</param>
        <param name="Collate">To be added.</param>
        <param name="PrToFileName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public object Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Activate() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Activate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(304)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9505-112">Bringt das Fenster an den Beginn der Z-Reihenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-112">Brings the window to the front of the z-order.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="e9505-113">Die <b>Activate</b> -Methode werden nicht Auto_aktivieren oder Auto_deaktivieren ausgeführt, die an die Arbeitsmappe angefügt werden kann.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-113">The <b>Activate</b> method won't run any Auto_Activate or Auto_Deactivate macros that might be attached to the workbook.</span>
            </span>
            <span data-ttu-id="e9505-114">Verwendung der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> Methode zum Ausführen dieser Makros.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-114">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run those macros.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateNext">
      <MemberSignature Language="C#" Value="public object ActivateNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ActivateNext() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.ActivateNext" />
      <MemberSignature Language="VB.NET" Value="Public Function ActivateNext () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ActivateNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1115)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9505-115">Aktiviert das angegebene Fenster und reiht es dann an das Ende der Fenster-Z-Reihenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-115">Activates the specified window, and then sends it to the back of the window z-order.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivatePrevious">
      <MemberSignature Language="C#" Value="public object ActivatePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ActivatePrevious() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.ActivatePrevious" />
      <MemberSignature Language="VB.NET" Value="Public Function ActivatePrevious () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ActivatePrevious();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1116)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9505-116">Aktiviert das angegebene Fenster und anschließend das Fenster am Ende der Fenster-Z-Reihenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-116">Activates the specified window and then activates the window at the back of the window z-order.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ActiveCell { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range ActiveCell" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ActiveCell" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveCell As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ ActiveCell { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(305)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-117">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> -Objekt, das die aktive Zelle im aktiven Fenster (das Fenster im Vordergrund) darstellt oder im angegebenen Fenster.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-117">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the active cell in the active window (the window on top) or in the specified window.</span>
          </span>
          <span data-ttu-id="e9505-118">Das Fenster kein Arbeitsblatt angezeigt, schlägt diese Eigenschaft fehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-118">If the window isn't displaying a worksheet, this property fails.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="e9505-119">Wenn Sie keinen Objektbezeichner angeben, gibt diese Eigenschaft die aktive Zelle des aktiven Fensters zurück.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-119">If you don't specify an object qualifier, this property returns the active cell in the active window.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="e9505-p106">Achten Sie darauf, dass Sie zwischen der aktiven Zelle und der Markierung unterscheiden. Unter einer aktiven Zelle versteht man eine einzelne Zelle innerhalb der aktuellen Markierung. Eine Markierung kann mehrere Zellen umfassen, von denen aber nur eine die aktive Zelle ist.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-p106">Be careful to distinguish between the active cell and the selection. The active cell is a single cell inside the current selection. The selection may contain more than one cell, but only one is the active cell.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Chart ActiveChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Chart ActiveChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ActiveChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveChart As Chart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Chart ^ ActiveChart { Microsoft::Office::Interop::Excel::Chart ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(183)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Chart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-123">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> -Objekt, das das aktive Diagramm (entweder ein eingebettetes Diagramm oder ein Diagrammblatt) darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-123">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Chart" /> object that represents the active chart (either an embedded chart or a chart sheet).</span>
          </span>
          <span data-ttu-id="e9505-124">Ein eingebettetes Diagramm wird als aktiv betrachtet, wenn es entweder markiert oder aktiviert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-124">An embedded chart is considered active when it's either selected or activated.</span>
          </span>
          <span data-ttu-id="e9505-125">Wenn kein Diagramm aktiv ist, gibt diese Eigenschaft <b>Nothing zurück</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-125">When no chart is active, this property returns <b>Nothing</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="e9505-126">Wenn Sie keinen Objektbezeichner angeben, gibt diese Eigenschaft das aktive Diagramm in der aktiven Arbeitsmappe zurück.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-126">If you don't specify an object qualifier, this property returns the active chart in the active workbook.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivePane">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Pane ActivePane { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Pane ActivePane" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ActivePane" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActivePane As Pane" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Pane ^ ActivePane { Microsoft::Office::Interop::Excel::Pane ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(642)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(642)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Pane</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-127">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Pane" /> -Objekt, das den aktiven Ausschnitt des Fensters darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-127">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Pane" /> object that represents the active pane in the window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="e9505-128">Diese Eigenschaft kann nur in Arbeitsblättern und Makroblättern verwendet werden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-128">This property can be used only on worksheets and macro sheets.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="e9505-129">Verwendung der <see cref="P:Microsoft.Office.Interop.Excel.Window.Index" /> -Eigenschaft auf den Index des aktiven Fensterausschnitt abzurufen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-129">Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.Index" /> property to obtain the index of the active pane.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSheet">
      <MemberSignature Language="C#" Value="public object ActiveSheet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActiveSheet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ActiveSheet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSheet As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ActiveSheet { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(307)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-130">Gibt ein Objekt, das aktive Blatt (das Blatt im Vordergrund) darstellt, in der aktiven Arbeitsmappe oder im angegebenen Fenster oder Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-130">Returns an object that represents the active sheet (the sheet on top) in the active workbook or in the specified window or workbook.</span>
          </span>
          <span data-ttu-id="e9505-131">Gibt <b>Nothing</b> zurück, wenn kein Blatt aktiv ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-131">Returns <b>Nothing</b> if no sheet is active.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9505-132">
            <b>Objekt</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-132">
              <b>Object</b>
            </span>
          </span>
        </value>
        <remarks>
          <para>
            <span data-ttu-id="e9505-133">Wenn Sie keinen Objektbezeichner angeben, gibt diese Eigenschaft das aktive Blatt in der aktiven Arbeitsmappe zurück.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-133">If you don’t specify an object qualifier, this property returns the active sheet in the active workbook.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="e9505-134">Wenn eine Arbeitsmappe in mehreren Fenstern angezeigt wird, kann die <b>ActiveSheet</b>-Eigenschaft in verschiedenen Fenstern unterschiedliche Werte aufweisen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-134">If a workbook appears in more than one window, the <b>ActiveSheet</b> property may be different in different windows.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveSheetView">
      <MemberSignature Language="C#" Value="public object ActiveSheetView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActiveSheetView" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ActiveSheetView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveSheetView As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ActiveSheetView { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2369)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2369)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-p109">Gibt ein Objekt zurück, das die Ansicht des aktiven Blatts im angegebenen Fenster darstellt. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-p109">Returns an object that represents the view of the active sheet in the specified window. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-137">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> -Objekt, das die Excel-Anwendung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-137">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Excel application.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFilterDateGrouping">
      <MemberSignature Language="C#" Value="public bool AutoFilterDateGrouping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFilterDateGrouping" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.AutoFilterDateGrouping" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFilterDateGrouping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFilterDateGrouping { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2371)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2371)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-138">
            <b>True,</b> Wenn automatisch nach Datum gruppieren zu filtern wird derzeit im angegebenen Fenster angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-138">
              <b>True</b> if the auto filter for date grouping is currently displayed in the specified window.</span>
          </span>
          <span data-ttu-id="e9505-139">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-139">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9505-140">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-140">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public object Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Caption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Caption { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(139)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-141">Der Name, der in der Titelleiste des Dokumentfensters angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-141">The name that appears in the title bar of the document window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public bool Close (object SaveChanges, object Filename, object RouteWorkbook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Close([in]object SaveChanges, [in]object Filename, [in]object RouteWorkbook) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.Close(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Close (Optional SaveChanges As Object, Optional Filename As Object, Optional RouteWorkbook As Object) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(277)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SaveChanges" Type="System.Object" />
        <Parameter Name="Filename" Type="System.Object" />
        <Parameter Name="RouteWorkbook" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SaveChanges">
          <span data-ttu-id="e9505-142">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-142">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="e9505-143">Wenn keine Änderungen an der Arbeitsmappe vorhanden sind, wird dieses Argument ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-143">If there are no changes to the workbook, this argument is ignored.</span>
          </span>
          <span data-ttu-id="e9505-144">Wenn es Änderungen an der Arbeitsmappe und die Arbeitsmappe in anderen geöffneten Fenstern angezeigt wird, wird dieses Argument ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-144">If there are changes to the workbook and the workbook appears in other open windows, this argument is ignored.</span>
          </span>
          <span data-ttu-id="e9505-145">Wenn Änderungen an der Arbeitsmappe vorhanden sind, aber die Arbeitsmappe nicht in einem anderen geöffneten Fenster angezeigt, gibt dieses Argument, ob Änderungen gespeichert werden sollen, wie in der folgenden Tabelle dargestellt. ValueAction<b>True</b>speichert die Änderungen an der Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-145">If there are changes to the workbook but the workbook doesn't appear in any other open windows, this argument specifies whether changes should be saved, as shown in the following table.ValueAction<b>True</b>Saves the changes to the workbook.</span>
          </span>
          <span data-ttu-id="e9505-146">Wenn kein noch ein Dateinamen ein, klicken Sie dann mit der Arbeitsmappe, verknüpfte <paramref name="FileName" /> wird verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-146">If there is not yet a file name associated with the workbook, then <paramref name="FileName" /> is used.</span>
          </span>
          <span data-ttu-id="e9505-147">Wenn <paramref name="FileName" /> wird Length angegeben, der Benutzer wird aufgefordert, einen Dateinamen angeben. <b>"False"</b> Die Änderungen wird an dieser Datei nicht gespeichert werden. OmittedDisplays ein Dialogfeld mit der Benutzer aufgefordert, ob Sie die Änderungen zu speichern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-147">If <paramref name="FileName" /> is omitted, the user is asked to supply a file name.<b>False</b>Does not save the changes to this file.OmittedDisplays a dialog box asking the user whether or not to save changes.</span>
          </span>
        </param>
        <param name="Filename">
          <span data-ttu-id="e9505-148">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-148">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="e9505-149">Speichern Sie Änderungen unter diesem Dateinamen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-149">Save changes under this file name.</span>
          </span>
        </param>
        <param name="RouteWorkbook">
          <span data-ttu-id="e9505-150">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-150">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="e9505-151">Wenn die Arbeitsmappe nicht an den nächsten Empfänger (wenn es keinen Verteiler oder bereits weitergeleitet wurde) weitergeleitet werden muss, wird dieses Argument ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-151">If the workbook doesn't need to be routed to the next recipient (if it has no routing slip or has already been routed), this argument is ignored.</span>
          </span>
          <span data-ttu-id="e9505-152">Andernfalls leitet Microsoft Excel die Arbeitsmappe, wie in der folgenden Tabelle dargestellt. ValueMeaning<b>True</b>die Arbeitsmappe an den nächsten Empfänger gesendet. <b>"False"</b> Die Arbeitsmappe nicht gesendet werden. OmittedDisplays ein Dialogfeld mit der Benutzer gefragt, ob die Arbeitsmappe weitergeleitet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-152">Otherwise, Microsoft Excel routes the workbook as shown in the following table.ValueMeaning<b>True</b>Sends the workbook to the next recipient.<b>False</b>Doesn't send the workbook.OmittedDisplays a dialog box asking the user whether the workbook should be sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9505-153">Schließt das Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-153">Closes the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="e9505-154">Die <b>Close</b> -Methode nicht in der Arbeitsmappe keine Auto_schließen-Makros ausgeführt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-154">The <b>Close</b> method doesn't run any Auto_Close macros in the workbook.</span>
            </span>
            <span data-ttu-id="e9505-155">Verwendung der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> zum Ausführen des Auto-Methode schließen Makros.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-155">Use the <see cref="M:Microsoft.Office.Interop.Excel._Workbook.RunAutoMacros(Microsoft.Office.Interop.Excel.XlRunAutoMacro)" /> method to run the auto close macros.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-156">Gibt eine 32-Bit-Ganzzahl, die die Anwendung angibt, in der das Objekt erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-156">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="e9505-157">Wenn das Objekt in Microsoft Excel erstellt wurde, gibt diese Eigenschaft die Zeichenfolge XCEL zurück, dies entspricht die hexadezimale Zahl 5843454 c ist.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-157">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="e9505-158">Die <b>Creator</b> -Eigenschaft ist in Microsoft Excel für den Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen verfügt über entwickelt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-158">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span>
            </span>
            <span data-ttu-id="e9505-159">Der Erstellercode von Microsoft Excel lautet beispielsweise XCEL zurück.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-159">For example, Microsoft Excel has the creator code XCEL.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormulas">
      <MemberSignature Language="C#" Value="public bool DisplayFormulas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFormulas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayFormulas" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFormulas As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFormulas { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(644)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(644)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(644)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-160">
            <b>True,</b> Wenn im Fenster Formeln angezeigt werden. <b>False,</b> Wenn das Fenster Werte angezeigt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-160">
              <b>True</b> if the window is displaying formulas; <b>False</b> if the window is displaying values.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="e9505-161">Diese Eigenschaft gilt nur für Arbeitsblätter und Makroblätter.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-161">This property applies only to worksheets and macro sheets.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayGridlines">
      <MemberSignature Language="C#" Value="public bool DisplayGridlines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayGridlines" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayGridlines" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayGridlines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayGridlines { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(645)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(645)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(645)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-162">
            <b>True,</b> Wenn Gitternetzlinien angezeigt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-162">
              <b>True</b> if gridlines are displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="e9505-163">Diese Eigenschaft gilt nur für Arbeitsblätter und Makroblätter.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-163">This property applies only to worksheets and macro sheets.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="e9505-164">Diese Eigenschaft wirkt sich nur auf Gitternetzlinien angezeigt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-164">This property affects only displayed gridlines.</span>
            </span>
            <span data-ttu-id="e9505-165">Verwendung der <see cref="P:Microsoft.Office.Interop.Excel.PageSetup.PrintGridlines" /> Eigenschaft, um das Drucken von Gitternetzlinien zu steuern.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-165">Use the <see cref="P:Microsoft.Office.Interop.Excel.PageSetup.PrintGridlines" /> property to control the printing of gridlines.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayHeadings">
      <MemberSignature Language="C#" Value="public bool DisplayHeadings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayHeadings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayHeadings" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayHeadings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayHeadings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(646)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(646)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(646)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-166">
            <b>True,</b> Wenn sowohl Zeilen- und Spaltenköpfe angezeigt werden. <b>False,</b> Wenn keine angezeigt Überschriften.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-166">
              <b>True</b> if both row and column headings are displayed; <b>False</b> if there are no headings displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="e9505-167">Diese Eigenschaft gilt nur für Arbeitsblätter und Makroblätter.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-167">This property applies only to worksheets and macro sheets.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="e9505-168">Diese Eigenschaft wirkt sich nur Überschriften angezeigt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-168">This property affects only displayed headings.</span>
            </span>
            <span data-ttu-id="e9505-169">Verwendung der <see cref="P:Microsoft.Office.Interop.Excel.PageSetup.PrintHeadings" /> -Eigenschaft auf das Drucken der Zeilen-und Spaltenköpfe steuern.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-169">Use the <see cref="P:Microsoft.Office.Interop.Excel.PageSetup.PrintHeadings" /> property to control the printing of headings.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayHorizontalScrollBar">
      <MemberSignature Language="C#" Value="public bool DisplayHorizontalScrollBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayHorizontalScrollBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayHorizontalScrollBar" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayHorizontalScrollBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayHorizontalScrollBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(921)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(921)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(921)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-170">
            <b>True,</b> Wenn die horizontale Bildlaufleiste angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-170">
              <b>True</b> if the horizontal scroll bar is displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayOutline">
      <MemberSignature Language="C#" Value="public bool DisplayOutline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayOutline" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayOutline" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayOutline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayOutline { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(647)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(647)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(647)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-171">
            <b>True,</b> wenn Gliederungssymbole angezeigt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-171">
              <b>True</b> if outline symbols are displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="e9505-172">Diese Eigenschaft gilt nur für Arbeitsblätter und Makroblätter.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-172">This property applies only to worksheets and macro sheets.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRightToLeft">
      <MemberSignature Language="C#" Value="public bool DisplayRightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayRightToLeft { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1774)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-173">
            <b>True,</b> Wenn das angegebene Fenster von rechts nach links anstatt von links nach rechts angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-173">
              <b>True</b> if the specified window is displayed from right to left instead of from left to right.</span>
          </span>
          <span data-ttu-id="e9505-174">
            <b>False,</b> Wenn das Objekt von links nach rechts angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-174">
              <b>False</b> if the object is displayed from left to right.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRuler">
      <MemberSignature Language="C#" Value="public bool DisplayRuler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayRuler" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayRuler" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayRuler As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayRuler { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2370)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2370)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2370)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-175">
            <b>True,</b> Wenn ein Lineal für das angegebene Fenster angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-175">
              <b>True</b> if a ruler is displayed for the specified window.</span>
          </span>
          <span data-ttu-id="e9505-176">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-176">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9505-177">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-177">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayVerticalScrollBar">
      <MemberSignature Language="C#" Value="public bool DisplayVerticalScrollBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayVerticalScrollBar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayVerticalScrollBar" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayVerticalScrollBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayVerticalScrollBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(922)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(922)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(922)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-178">
            <b>True,</b> Wenn die vertikale Bildlaufleiste angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-178">
              <b>True</b> if the vertical scroll bar is displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayWhitespace">
      <MemberSignature Language="C#" Value="public bool DisplayWhitespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayWhitespace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayWhitespace { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2372)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2372)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2372)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-179">
            <b>True,</b> Wenn Leerzeichen angezeigt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-179">
              <b>True</b> if whitespace is displayed.</span>
          </span>
          <span data-ttu-id="e9505-180">Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-180">Read/write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9505-181">
            <b>Boolean</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-181">
              <b>Boolean</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayWorkbookTabs">
      <MemberSignature Language="C#" Value="public bool DisplayWorkbookTabs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayWorkbookTabs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayWorkbookTabs" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayWorkbookTabs As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayWorkbookTabs { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(923)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(923)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(923)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-182">
            <b>True,</b> Wenn die Arbeitsmappenregister angezeigt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-182">
              <b>True</b> if the workbook tabs are displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayZeros">
      <MemberSignature Language="C#" Value="public bool DisplayZeros { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayZeros" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.DisplayZeros" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayZeros As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayZeros { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(649)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(649)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(649)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-183">
            <b>True,</b> Wenn Nullwerte angezeigt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-183">
              <b>True</b> if zero values are displayed.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="e9505-184">Diese Eigenschaft gilt nur für Arbeitsblätter und Makroblätter.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-184">This property applies only to worksheets and macro sheets.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableResize">
      <MemberSignature Language="C#" Value="public bool EnableResize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableResize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.EnableResize" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableResize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableResize { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1192)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1192)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1192)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-185">
            <b>True,</b> Wenn das Fenster angepasst werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-185">
              <b>True</b> if the window can be resized.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreezePanes">
      <MemberSignature Language="C#" Value="public bool FreezePanes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FreezePanes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.FreezePanes" />
      <MemberSignature Language="VB.NET" Value="Public Property FreezePanes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FreezePanes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(650)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(650)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(650)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-186">
            <b>True,</b> wenn geteilte Ausschnitte fixiert sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-186">
              <b>True</b> if split panes are frozen.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="e9505-187">Es ist möglich, dass <b>FreezePanes </b>auf <b>True</b> festgelegt ist und <see cref="P:Microsoft.Office.Interop.Excel.Window.Split" /> auf <b>false festgelegt</b>sein, oder umgekehrt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-187">It’s possible for <b>FreezePanes </b>to be <b>True</b> and <see cref="P:Microsoft.Office.Interop.Excel.Window.Split" /> to be <b>False</b>, or vice versa.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="e9505-188">Diese Eigenschaft gilt nur für Arbeitsblätter und Makroblätter.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-188">This property applies only to worksheets and macro sheets.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GridlineColor">
      <MemberSignature Language="C#" Value="public int GridlineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GridlineColor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.GridlineColor" />
      <MemberSignature Language="VB.NET" Value="Public Property GridlineColor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int GridlineColor { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(651)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(651)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(651)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-189">Gibt zurück oder legt die Farbe der Gitternetzlinien als einen RGB-Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-189">Returns or sets the gridline color as an RGB value.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GridlineColorIndex">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlColorIndex GridlineColorIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlColorIndex GridlineColorIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.GridlineColorIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property GridlineColorIndex As XlColorIndex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlColorIndex GridlineColorIndex { Microsoft::Office::Interop::Excel::XlColorIndex get(); void set(Microsoft::Office::Interop::Excel::XlColorIndex value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(652)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(652)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(652)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlColorIndex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-190">Gibt zurück oder legt Sie die Farbe der Gitternetzlinien als Indexwert in der aktuellen Farbpalette oder als eine <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> Konstante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-190">Returns or sets the gridline color as an index into the current color palette or as an <see cref="T:Microsoft.Office.Interop.Excel.XlColorIndex" /> constant.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="e9505-191">Legen Sie diese Eigenschaft auf xlColorIndexAutomatic fest, um als Farbe Automatisch anzugeben.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-191">Set this property to <b>xlColorIndexAutomatic</b> to specify the automatic color.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-192">Die Höhe des Fensters in Punkt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-192">The height of the window in points.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="e9505-193">Verwendung der <see cref="P:Microsoft.Office.Interop.Excel.Window.UsableHeight" /> Eigenschaft, um die maximale Größe des Fensters zu bestimmen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-193">Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.UsableHeight" /> property to determine the maximum size for the window.</span>
            </span>
            <span data-ttu-id="e9505-194">Sie können diese Eigenschaft nicht festlegen, wenn das Fenster maximiert oder minimiert ist.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-194">You cannot set this property if the window is maximized or minimized.</span>
            </span>
            <span data-ttu-id="e9505-195">Verwendung der <see cref="P:Microsoft.Office.Interop.Excel.Window.WindowState" /> -Eigenschaft auf den Status des Fensters zu bestimmen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-195">Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.WindowState" /> property to determine the window state.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hwnd">
      <MemberSignature Language="C#" Value="public int Hwnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hwnd" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Hwnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hwnd As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hwnd { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1950)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1950)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-196">Gibt den Fensterhandle des angegebenen Fensters zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-196">Returns the window handle of the specified window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9505-197">Ganzzahl (Int in c#)</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-197">Integer (int in C#)</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-198">Gibt die Indexnummer des Objekts in einer Auflistung ähnlicher Objekte zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-198">Returns the index number of the object within the collection of similar objects.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeScroll">
      <MemberSignature Language="C#" Value="public object LargeScroll (object Down, object Up, object ToRight, object ToLeft);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object LargeScroll([in]object Down, [in]object Up, [in]object ToRight, [in]object ToLeft) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.LargeScroll(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LargeScroll (Optional Down As Object, Optional Up As Object, Optional ToRight As Object, Optional ToLeft As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(547)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Down" Type="System.Object" />
        <Parameter Name="Up" Type="System.Object" />
        <Parameter Name="ToRight" Type="System.Object" />
        <Parameter Name="ToLeft" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Down">
          <span data-ttu-id="e9505-199">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-199">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="e9505-200">Die Anzahl von Seiten, um die der Bildlauf nach unten ausgeführt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-200">The number of pages to scroll the contents down.</span>
          </span>
        </param>
        <param name="Up">
          <span data-ttu-id="e9505-201">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-201">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="e9505-202">Die Anzahl von Seiten, um die der Bildlauf nach oben ausgeführt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-202">The number of pages to scroll the contents up.</span>
          </span>
        </param>
        <param name="ToRight">
          <span data-ttu-id="e9505-203">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-203">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="e9505-204">Die Anzahl von Seiten, um die der Bildlauf nach rechts ausgeführt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-204">The number of pages to scroll the contents to the right.</span>
          </span>
        </param>
        <param name="ToLeft">
          <span data-ttu-id="e9505-205">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-205">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="e9505-206">Die Anzahl von Seiten, um die der Bildlauf nach links ausgeführt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-206">The number of pages to scroll the contents to the left.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9505-207">Führt seitenweise einen Bildlauf durch den Fensterinhalt aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-207">Scrolls the contents of the window by pages.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="e9505-208">Wenn <paramref name="Down" /> und <paramref name="Up" /> angegeben werden, den Inhalt des Fensters werden durch den Unterschied der Argumente durchgeführt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-208">If <paramref name="Down" /> and <paramref name="Up" /> are both specified, the contents of the window are scrolled by the difference of the arguments.</span>
            </span>
            <span data-ttu-id="e9505-209">Beispielsweise wenn <paramref name="Down" /> 3 und <paramref name="Up" /> 6 ist, wird der Bildlauf um drei Seiten nach oben.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-209">For example, if <paramref name="Down" /> is 3 and <paramref name="Up" /> is 6, the contents are scrolled up three pages.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="e9505-210">Wenn <paramref name="ToLeft" /> und <paramref name="ToRight" /> angegeben werden, den Inhalt des Fensters werden durch den Unterschied der Argumente durchgeführt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-210">If <paramref name="ToLeft" /> and <paramref name="ToRight" /> are both specified, the contents of the window are scrolled by the difference of the arguments.</span>
            </span>
            <span data-ttu-id="e9505-211">Beispielsweise wenn <paramref name="ToLeft" /> 3 und <paramref name="ToRight" /> ist 6, der an die drei Seiten nach rechts durchgeführt werden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-211">For example, if <paramref name="ToLeft" /> is 3 and <paramref name="ToRight" /> is 6, the contents are scrolled to the right three pages.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="e9505-212">Die Argumente können auch einen negativen Wert haben.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-212">Any of the arguments can be a negative number.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(127)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-213">Der Abstand in Punkt vom linken Rand des Clientbereichs zum linken Rand des Fensters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-213">The distance in points from the left edge of the client area to the left edge of the window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Window NewWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Window NewWindow() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.NewWindow" />
      <MemberSignature Language="VB.NET" Value="Public Function NewWindow () As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::Window ^ NewWindow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(280)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Window</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9505-214">Erstellt ein neues Fenster oder eine Kopie des angegebenen Fensters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-214">Creates a new window or a copy of the specified window.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWindow">
      <MemberSignature Language="C#" Value="public string OnWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.OnWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property OnWindow As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnWindow { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(623)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-215">Zurückgeben oder Festlegen der Name der Prozedur, die ausgeführt wird, wenn ein Fenster aktivieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-215">Returns or sets the name of the procedure that’s run whenever you activate a window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="e9505-216">Die von dieser Eigenschaft angegebene Prozedur wird nicht ausgeführt, wenn andere Prozeduren wechseln, um das Fenster oder ein Befehl So wechseln Sie zu einem Fenster über einen DDE-Kanal empfangen wird.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-216">The procedure specified by this property isn’t run when other procedures switch to the window or when a command to switch to a window is received through a DDE channel.</span>
            </span>
            <span data-ttu-id="e9505-217">Stattdessen reagiert die Prozedur auf Benutzeraktionen, wie das Klicken auf ein Fenster mit der Maus auf Gehe zu im Menü Bearbeiten usw. ein.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-217">Instead, the procedure responds to the user's actions, such as clicking a window with the mouse, clicking Go To on the Edit menu, and so on.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="e9505-218">Wenn Sie ein Arbeitsblatt oder eine Makrovorlage ein Auto_aktivieren- oder Auto_deaktivieren-Makro festgelegt ist, werden diese Makros von der <b>OnWindow</b> -Eigenschaft angegebene Prozedur ausgeführt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-218">If a worksheet or macro sheet has an Auto_Activate or Auto_Deactivate macro defined for it, those macros will be run after the procedure specified by the <b>OnWindow</b> property.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Panes">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Panes Panes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Panes Panes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Panes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Panes As Panes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Panes ^ Panes { Microsoft::Office::Interop::Excel::Panes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(653)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(653)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Panes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-219">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Panes" /> -Auflistung, die alle Ausschnitte im angegebenen Fenster darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-219">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Panes" /> collection that represents all the panes in the specified window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="e9505-220">Diese Eigenschaft steht für ein Fenster nur, wenn des Fensters <see cref="P:Microsoft.Office.Interop.Excel.Window.Split" /> -Eigenschaft kann auf <b>True</b>festgelegt werden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-220">This property is available for a window only if the window’s <see cref="P:Microsoft.Office.Interop.Excel.Window.Split" /> property can be set to <b>True</b>.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-221">Gibt das übergeordnete Objekt für das angegebene Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-221">Returns the parent object for the specified object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointsToScreenPixelsX">
      <MemberSignature Language="C#" Value="public int PointsToScreenPixelsX (int Points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 PointsToScreenPixelsX([in]int32 Points) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.PointsToScreenPixelsX(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function PointsToScreenPixelsX (Points As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int PointsToScreenPixelsX(int Points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1776)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Points" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Points">
          <span data-ttu-id="e9505-222">
            <b>Integer</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-222">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="e9505-223">Die Anzahl von horizontalen Punkten entlang dem oberen Rand des Dokumentfensters (beginnend von links).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-223">The number of points horizontally along the top of the document window, starting from the left.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9505-224">Ein horizontales Maß konvertiert von Punkt (Dokumentkoordinaten) in Pixel (Bildschirmkoordinaten).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-224">Converts a horizontal measurement from points (document coordinates) to screen pixels (screen coordinates).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointsToScreenPixelsY">
      <MemberSignature Language="C#" Value="public int PointsToScreenPixelsY (int Points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 PointsToScreenPixelsY([in]int32 Points) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.PointsToScreenPixelsY(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function PointsToScreenPixelsY (Points As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int PointsToScreenPixelsY(int Points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1777)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Points" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Points">
          <span data-ttu-id="e9505-225">
            <b>Integer</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-225">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="e9505-226">Die Anzahl von vertikalen Punkten entlang dem linken Rand des Dokumentfensters (beginnend von oben).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-226">The number of points vertically along the left edge of the document window, starting from the top.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9505-227">Eine vertikale Größe konvertiert von Punkt (Dokumentkoordinaten) in Pixel (Bildschirmkoordinaten).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-227">Converts a vertical measurement from points (document coordinates) to screen pixels (screen coordinates).</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintOut">
      <MemberSignature Language="C#" Value="public object PrintOut (object From, object To, object Copies, object Preview, object ActivePrinter, object PrintToFile, object Collate, object PrToFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintOut([in]object From, [in]object To, [in]object Copies, [in]object Preview, [in]object ActivePrinter, [in]object PrintToFile, [in]object Collate, [in]object PrToFileName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.PrintOut(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintOut (Optional From As Object, Optional To As Object, Optional Copies As Object, Optional Preview As Object, Optional ActivePrinter As Object, Optional PrintToFile As Object, Optional Collate As Object, Optional PrToFileName As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2361)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="From" Type="System.Object" />
        <Parameter Name="To" Type="System.Object" />
        <Parameter Name="Copies" Type="System.Object" />
        <Parameter Name="Preview" Type="System.Object" />
        <Parameter Name="ActivePrinter" Type="System.Object" />
        <Parameter Name="PrintToFile" Type="System.Object" />
        <Parameter Name="Collate" Type="System.Object" />
        <Parameter Name="PrToFileName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="From">
          <span data-ttu-id="e9505-228">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-228">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="e9505-229">Die Anzahl der ersten Seite der Druckvorgang gestartet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-229">The number of the page at which to start printing.</span>
          </span>
          <span data-ttu-id="e9505-230">Wenn dieses Argument ausgelassen wird, beginnt der Druck am Anfang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-230">If this argument is omitted, printing starts at the beginning.</span>
          </span>
        </param>
        <param name="To">
          <span data-ttu-id="e9505-231">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-231">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="e9505-232">Die Anzahl der letzten Seite gedruckt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-232">The number of the last page to print.</span>
          </span>
          <span data-ttu-id="e9505-233">Wenn dieses Argument ausgelassen wird, endet der Druckvorgang mit der letzten Seite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-233">If this argument is omitted, printing ends with the last page.</span>
          </span>
        </param>
        <param name="Copies">
          <span data-ttu-id="e9505-234">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-234">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="e9505-235">Die Anzahl der zu druckenden Exemplare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-235">The number of copies to print.</span>
          </span>
          <span data-ttu-id="e9505-236">Wenn dieses Argument ausgelassen wird, wird eine Kopie gedruckt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-236">If this argument is omitted, one copy is printed.</span>
          </span>
        </param>
        <param name="Preview">
          <span data-ttu-id="e9505-237">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-237">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="e9505-238">
            <b>True</b> , wenn Microsoft Excel vor dem Drucken des Objekts die Seitenansicht aufruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-238">
              <b>True</b> to have Microsoft Excel invoke print preview before printing the object.</span>
          </span>
          <span data-ttu-id="e9505-239">
            <b>"False"</b> (oder weggelassen), wenn das Objekt sofort gedruckt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-239">
              <b>False</b> (or omitted) to print the object immediately.</span>
          </span>
        </param>
        <param name="ActivePrinter">
          <span data-ttu-id="e9505-240">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-240">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="e9505-241">Legt den Namen des aktiven Druckers fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-241">Sets the name of the active printer.</span>
          </span>
        </param>
        <param name="PrintToFile">
          <span data-ttu-id="e9505-242">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-242">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="e9505-243">
            <b>True</b> , wenn in eine Datei gedruckt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-243">
              <b>True</b> to print to a file.</span>
          </span>
          <span data-ttu-id="e9505-244">Wenn <paramref name="PrToFileName" /> nicht angegeben ist, wird Microsoft Excel fordert den Benutzer zur Eingabe des Namens der Ausgabedatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-244">If <paramref name="PrToFileName" /> is not specified, Microsoft Excel prompts the user to enter the name of the output file.</span>
          </span>
        </param>
        <param name="Collate">
          <span data-ttu-id="e9505-245">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-245">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="e9505-246">
            <b>True</b> zum Sortieren mehrerer Kopien.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-246">
              <b>True</b> to collate multiple copies.</span>
          </span>
        </param>
        <param name="PrToFileName">
          <span data-ttu-id="e9505-247">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-247">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="e9505-248">Wenn <paramref name="PrintToFile" /> festgelegt ist auf <b>"true"</b>, gibt dieses Argument den Namen der Datei, die Sie drucken möchten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-248">If <paramref name="PrintToFile" /> is set to <b>True</b>, this argument specifies the name of the file you want to print to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9505-249">Druckt das Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-249">Prints the object.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="e9505-250">"Seiten" in den Beschreibungen des <paramref name="From" /> und <paramref name="To" /> bezieht sich auf gedruckte Seiten – nicht auf sämtliche Seiten des Arbeitsblatts oder der Arbeitsmappe.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-250">"Pages" in the descriptions of <paramref name="From" /> and <paramref name="To" /> refers to printed pages — not overall pages in the sheet or workbook.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public object PrintPreview (object EnableChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PrintPreview([in]object EnableChanges) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.PrintPreview(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PrintPreview (Optional EnableChanges As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(281)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="EnableChanges" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="EnableChanges">
          <span data-ttu-id="e9505-251">Ermöglicht die Änderungen in der Vorschau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-251">Enables changes during preview.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9505-252">Zeigt ein Objekt so an, wie es gedruckt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-252">Shows a preview of the object as it would look when printed.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangeFromPoint">
      <MemberSignature Language="C#" Value="public object RangeFromPoint (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RangeFromPoint([in]int32 x, [in]int32 y) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.RangeFromPoint(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RangeFromPoint (x As Integer, y As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ RangeFromPoint(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1778)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="e9505-253">
            <b>Integer</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-253">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="e9505-254">Der Wert (in Pixel), der die horizontale Entfernung vom linken Bildschirmrand darstellt (beginnend von oben).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-254">The value (in pixels) that represents the horizontal distance from the left edge of the screen, starting at the top.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="e9505-255">
            <b>Integer</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-255">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="e9505-256">Der Wert (in Pixel), der die vertikale Entfernung vom oberen Bildschirmrand darstellt (beginnend von links).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-256">The value (in pixels) that represents the vertical distance from the top of the screen, starting on the left.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9505-257">Gibt die <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> oder <see cref="T:Microsoft.Office.Interop.Excel.Range" /> -Objekt, das an dem angegebenen positioniert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-257">Returns the <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> or <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that is positioned at the specified pair of screen coordinates.</span>
          </span>
          <span data-ttu-id="e9505-258">Wenn es keine Form an den angegebenen Koordinaten befindet, gibt diese Methode <b>Nothing zurück</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-258">If there isn’t a shape located at the specified coordinates, this method returns <b>Nothing</b>.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RangeSelection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range RangeSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range RangeSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.RangeSelection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RangeSelection As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ RangeSelection { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1189)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1189)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-259">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> -Objekt, das die markierten Zellen im Arbeitsblatt im angegebenen Fenster darstellt, selbst wenn ein Graphic-Objekt aktiv oder auf dem Arbeitsblatt markiert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-259">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the selected cells on the worksheet in the specified window even if a graphic object is active or selected on the worksheet.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="e9505-260">Wenn ein Graphic-Objekt in einem Arbeitsblatt ausgewählt wird die <see cref="P:Microsoft.Office.Interop.Excel.Window.Selection" /> -Eigenschaft gibt das Graphic-Objekt anstelle eines <b>Range</b> -Objekts zurück. die <b>RangeSelection</b> -Eigenschaft gibt den Bereich der Zellen, der ausgewählt wurde, bevor das Graphic-Objekt ausgewählt wurde.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-260">When a graphic object is selected on a worksheet, the <see cref="P:Microsoft.Office.Interop.Excel.Window.Selection" /> property returns the graphic object instead of a <b>Range</b> object; the <b>RangeSelection</b> property returns the range of cells that was selected before the graphic object was selected.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="e9505-261">Diese Eigenschaft und die Eigenschaft <b>Selection</b> geben identische Werte zurück, wenn auf dem Arbeitsblatt ein Bereich (also kein Grafikobjekt) markiert ist.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-261">This property and the <b>Selection</b> property return identical values when a range (not a graphic object) is selected on the worksheet.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="e9505-262">Wenn es sich bei dem aktiven Blatt im angegebenen Fenster nicht um ein Arbeitsblatt handelt, erzeugt diese Eigenschaft eine Fehlermeldung.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-262">If the active sheet in the specified window isn’t a worksheet, this property fails.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollColumn">
      <MemberSignature Language="C#" Value="public int ScrollColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScrollColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ScrollColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollColumn As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ScrollColumn { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(654)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(654)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(654)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-263">Gibt zurück oder legt die Anzahl der am weitesten links stehende Spalte im Bereich oder Fenster fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-263">Returns or sets the number of the leftmost column in the pane or window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="e9505-264">Wenn das Fenster geteilt ist, wird die <b>ScrollColumn</b> -Eigenschaft des der <see cref="T:Microsoft.Office.Interop.Excel.Window" /> -Objekt verweist auf die linke obere Bereich.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-264">If the window is split, the <b>ScrollColumn</b> property of the <see cref="T:Microsoft.Office.Interop.Excel.Window" /> object refers to the upper-left pane.</span>
            </span>
            <span data-ttu-id="e9505-265">Wenn die Bereiche fixiert sind, schließt die <b>ScrollColumn</b> -Eigenschaft des <b>Window</b> -Objekts die fixierten Bereiche aus.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-265">If the panes are frozen, the <b>ScrollColumn</b> property of the <b>Window</b> object excludes the frozen areas.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollIntoView">
      <MemberSignature Language="C#" Value="public void ScrollIntoView (int Left, int Top, int Width, int Height, object Start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScrollIntoView([in]int32 Left, [in]int32 Top, [in]int32 Width, [in]int32 Height, [in]object Start) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.ScrollIntoView(System.Int32,System.Int32,System.Int32,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollIntoView (Left As Integer, Top As Integer, Width As Integer, Height As Integer, Optional Start As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1781)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Int32" />
        <Parameter Name="Top" Type="System.Int32" />
        <Parameter Name="Width" Type="System.Int32" />
        <Parameter Name="Height" Type="System.Int32" />
        <Parameter Name="Start" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="e9505-266">
            <b>Integer</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-266">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="e9505-267">Die horizontale Entfernung des Rechtecks (in Punkt) vom linken Rand des Dokumentfensters oder -fensterausschnitts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-267">The horizontal position of the rectangle (in points) from the left edge of the document window or pane.</span>
          </span>
        </param>
        <param name="Top">
          <span data-ttu-id="e9505-268">
            <b>Integer</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-268">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="e9505-269">Die vertikale Entfernung des Rechtecks (in Punkt) vom oberen Rand des Dokumentfensters oder -fensterausschnitts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-269">The vertical position of the rectangle (in points) from the top of the document window or pane.</span>
          </span>
        </param>
        <param name="Width">
          <span data-ttu-id="e9505-270">
            <b>Integer</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-270">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="e9505-271">Die Breite des Rechtecks in Punkt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-271">The width of the rectangle, in points.</span>
          </span>
        </param>
        <param name="Height">
          <span data-ttu-id="e9505-272">
            <b>Integer</b>erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-272">Required <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="e9505-273">Die Höhe des Rechtecks in Punkt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-273">The height of the rectangle, in points.</span>
          </span>
        </param>
        <param name="Start">
          <span data-ttu-id="e9505-274">Optionaler <b>Integer</b>-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-274">Optional <b>Integer</b>.</span>
          </span>
          <span data-ttu-id="e9505-275">
            <b>True</b> , wenn die linke obere Ecke des Rechtecks in der oberen linken Ecke des Dokumentfensters oder Bereich angezeigt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-275">
              <b>True</b> to have the upper-left corner of the rectangle appear in the upper-left corner of the document window or pane.</span>
          </span>
          <span data-ttu-id="e9505-276">
            <b>False</b> , wenn der unteren rechten Ecke des Rechtecks in der unteren rechten Ecke des Dokumentfensters oder Bereich angezeigt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-276">
              <b>False</b> to have the lower-right corner of the rectangle appear in the lower-right corner of the document window or pane.</span>
          </span>
          <span data-ttu-id="e9505-277">Der Standardwert ist <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-277">The default value is <b>True</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9505-278">Rollt das Dokumentfenster, sodass der Inhalt eines angegebenen rechteckigen Bereichs in der linken oberen oder unteren rechten Ecke des Dokumentfensters oder Bereich angezeigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-278">Scrolls the document window so that the contents of a specified rectangular area are displayed in either the upper-left or lower-right corner of the document window or pane.</span>
          </span>
        </summary>
        <remarks>
          <para>
            <span data-ttu-id="e9505-279">Die <paramref name="Start" /> Argument eignet sich zum Ausrichten der Bildschirmanzeige, wenn das Rechteck größer als das Dokumentfenster oder der Bereich ist.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-279">The <paramref name="Start" /> argument is useful for orienting the screen display when the rectangle is larger than the document window or pane.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollRow">
      <MemberSignature Language="C#" Value="public int ScrollRow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScrollRow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.ScrollRow" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollRow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ScrollRow { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(655)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(655)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(655)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-280">Zurückgeben oder festlegen die Anzahl der Zeilen, die angezeigt wird am oberen Rand der Bereich oder Fenster.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-280">Returns or sets the number of the row that appears at the top of the pane or window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="e9505-281">Wenn das Fenster geteilt ist, wird die <b>ScrollRow</b> -Eigenschaft des der <see cref="T:Microsoft.Office.Interop.Excel.Window" /> -Objekt verweist auf die linke obere Bereich.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-281">If the window is split, the <b>ScrollRow</b> property of the <see cref="T:Microsoft.Office.Interop.Excel.Window" /> object refers to the upper-left pane.</span>
            </span>
            <span data-ttu-id="e9505-282">Wenn die Bereiche fixiert sind, schließt die <b>ScrollRow</b> -Eigenschaft des <b>Window</b> -Objekts die fixierten Bereiche aus.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-282">If the panes are frozen, the <b>ScrollRow</b> property of the <b>Window</b> object excludes the frozen areas.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollWorkbookTabs">
      <MemberSignature Language="C#" Value="public object ScrollWorkbookTabs (object Sheets, object Position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ScrollWorkbookTabs([in]object Sheets, [in]object Position) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.ScrollWorkbookTabs(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScrollWorkbookTabs (Optional Sheets As Object, Optional Position As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(662)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Sheets" Type="System.Object" />
        <Parameter Name="Position" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Sheets">
          <span data-ttu-id="e9505-283">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-283">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="e9505-284">Die Anzahl der Blätter Verschieben des Fensterinhalts durch durchgeführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-284">The number of sheets to scroll by.</span>
          </span>
          <span data-ttu-id="e9505-285">Verwenden Sie eine positive Zahl vorwärts, eine negative Zahl rückwärts oder 0 (null), nicht in allen Blättern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-285">Use a positive number to scroll forward, a negative number to scroll backward, or 0 (zero) not to scroll at all.</span>
          </span>
          <span data-ttu-id="e9505-286">Sie müssen angeben, <paramref name="Sheets" /> Wenn Sie keinen <paramref name="Position" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-286">You must specify <paramref name="Sheets" /> if you don't specify <paramref name="Position" />.</span>
          </span>
        </param>
        <param name="Position">
          <span data-ttu-id="e9505-287">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-287">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="e9505-288">Verwenden von <b>XlFirst</b> Bildlauf zu dem ersten Blatt, oder mit <b>XlLast</b> zum zum letzten Blatt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-288">Use <b>xlFirst</b> to scroll to the first sheet, or use <b>xlLast</b> to scroll to the last sheet.</span>
          </span>
          <span data-ttu-id="e9505-289">Sie müssen angeben, <paramref name="Position" /> Wenn Sie keinen <paramref name="Sheets" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-289">You must specify <paramref name="Position" /> if you don't specify <paramref name="Sheets" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9505-290">Blättert durch die Register der Arbeitsmappe am unteren Rand des Fensters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-290">Scrolls through the workbook tabs at the bottom of the window.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="e9505-291">
              <b>ScrollWorkbookTabs</b> -Methode wirkt sich nicht auf das aktive Blatt in der Arbeitsmappe aus.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-291">The <b>ScrollWorkbookTabs</b> method doesn't affect the active sheet in the workbook.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedSheets">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Sheets SelectedSheets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Sheets SelectedSheets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.SelectedSheets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedSheets As Sheets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Sheets ^ SelectedSheets { Microsoft::Office::Interop::Excel::Sheets ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(656)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(656)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Sheets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-292">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> -Auflistung, die alle im angegebenen Fenster ausgewählten Blätter darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-292">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Sheets" /> collection that represents all the selected sheets in the specified window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Selection">
      <MemberSignature Language="C#" Value="public object Selection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Selection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Selection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Selection As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Selection { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(147)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(147)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-293">Gibt das ausgewählte Objekt im angegebenen Fenster zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-293">Returns the selected object in the specified window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="e9505-294">Der Typ des zurückgegebenen Objekts hängt von der aktuellen Auswahl (beispielsweise, wenn eine Zelle ausgewählt ist, gibt diese Eigenschaft eine <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt).</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-294">The returned object type depends on the current selection (for example, if a cell is selected, this property returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object).</span>
            </span>
            <span data-ttu-id="e9505-295">Die <b>Selection</b> -Eigenschaft gibt <b>Nothing zurück</b> , wenn nichts markiert ist.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-295">The <b>Selection</b> property returns <b>Nothing</b> if nothing is selected.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="e9505-296">Die Verwendung dieser Eigenschaft ohne einen Objektbezeichner entspricht der Verwendung der <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> -Eigenschaft des der <see cref="T:Microsoft.Office.Interop.Excel.Application" /> Objekt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-296">Using this property with no object qualifier is equivalent to using the <see cref="P:Microsoft.Office.Interop.Excel._Application.Selection" /> property of the <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SheetViews">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.SheetViews SheetViews { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.SheetViews SheetViews" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.SheetViews" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SheetViews As SheetViews" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::SheetViews ^ SheetViews { Microsoft::Office::Interop::Excel::SheetViews ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2368)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2368)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.SheetViews</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-297">Gibt die <see cref="T:Microsoft.Office.Interop.Excel.SheetViews" /> -Objekt für das angegebene Fenster.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-297">Returns the <see cref="T:Microsoft.Office.Interop.Excel.SheetViews" /> object for the specified window.</span>
          </span>
          <span data-ttu-id="e9505-298">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-298">Read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9505-299">
            <b>SheetViews</b>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-299">
              <b>SheetViews</b>
            </span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallScroll">
      <MemberSignature Language="C#" Value="public object SmallScroll (object Down, object Up, object ToRight, object ToLeft);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SmallScroll([in]object Down, [in]object Up, [in]object ToRight, [in]object ToLeft) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Window.SmallScroll(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SmallScroll (Optional Down As Object, Optional Up As Object, Optional ToRight As Object, Optional ToLeft As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(548)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Down" Type="System.Object" />
        <Parameter Name="Up" Type="System.Object" />
        <Parameter Name="ToRight" Type="System.Object" />
        <Parameter Name="ToLeft" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Down">
          <span data-ttu-id="e9505-300">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-300">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="e9505-301">Die Anzahl der Zeilen, um die der Bildlauf nach unten ausgeführt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-301">The number of rows to scroll the contents down.</span>
          </span>
        </param>
        <param name="Up">
          <span data-ttu-id="e9505-302">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-302">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="e9505-303">Die Anzahl der Zeilen, um die der Bildlauf nach oben ausgeführt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-303">The number of rows to scroll the contents up.</span>
          </span>
        </param>
        <param name="ToRight">
          <span data-ttu-id="e9505-304">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-304">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="e9505-305">Die Anzahl der Zeilen, um die der Bildlauf nach rechts ausgeführt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-305">The number of columns to scroll the contents to the right.</span>
          </span>
        </param>
        <param name="ToLeft">
          <span data-ttu-id="e9505-306">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-306">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="e9505-307">Die Anzahl der Zeilen, um die der Bildlauf nach links ausgeführt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-307">The number of columns to scroll the contents to the left.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9505-308">Führt einen zeilen- oder spaltenweisen Bildlauf für Fensterinhalte aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-308">Scrolls the contents of the window by rows or columns.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <span data-ttu-id="e9505-309">Wenn <paramref name="Down" /> und <paramref name="Up" /> angegeben werden, den Inhalt des Fensters werden durch den Unterschied der Argumente durchgeführt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-309">If <paramref name="Down" /> and <paramref name="Up" /> are both specified, the contents of the window are scrolled by the difference of the arguments.</span>
            </span>
            <span data-ttu-id="e9505-310">Beispielsweise wenn <paramref name="Down" /> 3 und <paramref name="Up" /> 6 ist, wird der Bildlauf um drei Zeilen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-310">For example, if <paramref name="Down" /> is 3 and <paramref name="Up" /> is 6, the contents are scrolled up three rows.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="e9505-311">Wenn <paramref name="ToLeft" /> und <paramref name="ToRight" /> angegeben werden, den Inhalt des Fensters werden durch den Unterschied der Argumente durchgeführt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-311">If <paramref name="ToLeft" /> and <paramref name="ToRight" /> are both specified, the contents of the window are scrolled by the difference of the arguments.</span>
            </span>
            <span data-ttu-id="e9505-312">Beispielsweise wenn <paramref name="ToLeft" /> 3 und <paramref name="ToRight" /> ist 6, Bildlauf zu den drei Spalten nach rechts.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-312">For example, if <paramref name="ToLeft" /> is 3 and <paramref name="ToRight" /> is 6, the contents are scrolled to the right three columns.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="e9505-313">Für jedes dieser Argumente kann auch eine negative Zahl festgelegt werden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-313">Any of these arguments can be a negative number.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public bool Split { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Split" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Split" />
      <MemberSignature Language="VB.NET" Value="Public Property Split As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Split { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(657)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(657)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(657)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-314">
            <b>True,</b> Wenn das Fenster geteilt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-314">
              <b>True</b> if the window is split.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="e9505-315">Es ist möglich, dass <see cref="P:Microsoft.Office.Interop.Excel.Window.FreezePanes" /><b>False</b>, <b>True</b> und <b>Teilen</b> können und umgekehrt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-315">It’s possible for <see cref="P:Microsoft.Office.Interop.Excel.Window.FreezePanes" /> to be <b>True</b> and <b>Split</b> to be <b>False</b>, or vice versa.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="e9505-316">Diese Eigenschaft gilt nur für Arbeitsblätter und Makroblätter.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-316">This property applies only to worksheets and macro sheets.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitColumn">
      <MemberSignature Language="C#" Value="public int SplitColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SplitColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.SplitColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property SplitColumn As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SplitColumn { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(658)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(658)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(658)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-317">Zurückgeben oder festlegen die Spaltennummer, in dem das Fenster geteilt ist in zwei Bereiche (die Anzahl der Spalten links von der Teilungslinie).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-317">Returns or sets the column number where the window is split into panes (the number of columns to the left of the split line).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitHorizontal">
      <MemberSignature Language="C#" Value="public double SplitHorizontal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SplitHorizontal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.SplitHorizontal" />
      <MemberSignature Language="VB.NET" Value="Public Property SplitHorizontal As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SplitHorizontal { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(659)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(659)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(659)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-318">Gibt zurück oder legt den Speicherort der Teilung horizontalen Fensters in Punkt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-318">Returns or sets the location of the horizontal window split in points.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitRow">
      <MemberSignature Language="C#" Value="public int SplitRow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SplitRow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.SplitRow" />
      <MemberSignature Language="VB.NET" Value="Public Property SplitRow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SplitRow { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(660)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(660)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-319">Gibt, oder legt die Nummer der Zeile, in dem das Fenster geteilt ist in zwei Bereiche (die Anzahl der Zeilen oberhalb der Teilungslinie).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-319">Returns or sets the row number where the window is split into panes (the number of rows above the split).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitVertical">
      <MemberSignature Language="C#" Value="public double SplitVertical { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SplitVertical" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.SplitVertical" />
      <MemberSignature Language="VB.NET" Value="Public Property SplitVertical As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SplitVertical { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(661)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(661)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-320">Gibt zurück oder legt den Speicherort der Teilung vertikale Fensters in Punkt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-320">Returns or sets the location of the vertical window split in points.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabRatio">
      <MemberSignature Language="C#" Value="public double TabRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TabRatio" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.TabRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property TabRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TabRatio { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(673)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(673)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(673)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-321">Gibt zurück oder legt das Verhältnis der Breite des die Arbeitsmappenregister auf die Breite der horizontalen Bildlaufleiste des Fensters (als Zahl zwischen 0 (null) und 1; der Standardwert ist 0,6).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-321">Returns or sets the ratio of the width of the workbook's tab area to the width of the window's horizontal scroll bar (as a number between 0 (zero) and 1; the default value is 0.6).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="e9505-322">Diese Eigenschaft hat keine Wirkung, wenn <see cref="P:Microsoft.Office.Interop.Excel.Window.DisplayWorkbookTabs" /> auf <b>False</b> festgelegt ist (bleibt ihr Wert, aber er hat keine Auswirkung auf die Anzeige).</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-322">This property has no effect when <see cref="P:Microsoft.Office.Interop.Excel.Window.DisplayWorkbookTabs" /> is set to <b>False</b> (its value is retained, but it has no effect on the display).</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-323">Der Abstand in Punkt vom oberen Rand des Fensters zum oberen Rand des verwendbaren Bereichs (unterhalb der Menüs, Symbolleisten verankert den oberen Bereich und der Bearbeitungsleiste).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-323">The distance in points from the top edge of the window to the top edge of the usable area (below the menus, any toolbars docked at the top, and the formula bar).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="e9505-324">Diese Eigenschaft für ein maximiertes Fenster kann nicht festgelegt werden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-324">You cannot set this property for a maximized window.</span>
            </span>
            <span data-ttu-id="e9505-325">Verwendung der <see cref="P:Microsoft.Office.Interop.Excel.Window.WindowState" /> -Eigenschaft auf den Status des Fensters zurückgeben oder festlegen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-325">Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.WindowState" /> property to return or set the state of the window.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlWindowType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlWindowType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XlWindowType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlWindowType Type { Microsoft::Office::Interop::Excel::XlWindowType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlWindowType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-326">Zurück oder legt den Typ des Fensters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-326">Returns or sets the window type.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsableHeight">
      <MemberSignature Language="C#" Value="public double UsableHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UsableHeight" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.UsableHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsableHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double UsableHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(389)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(389)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-327">Gibt die maximale Höhe in Punkt des Speicherplatzes, der ein Fenster im Bereich Anwendungsfensters belegen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-327">Returns the maximum height in points of the space that a window can occupy in the application window area.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsableWidth">
      <MemberSignature Language="C#" Value="public double UsableWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 UsableWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.UsableWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsableWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double UsableWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(390)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(390)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-328">Gibt die maximale Breite in Punkt des Speicherplatzes, der ein Fenster im Bereich Anwendungsfensters belegen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-328">Returns the maximum width in points of the space that a window can occupy in the application window area.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlWindowView View { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlWindowView View" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.View" />
      <MemberSignature Language="VB.NET" Value="Public Property View As XlWindowView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlWindowView View { Microsoft::Office::Interop::Excel::XlWindowView get(); void set(Microsoft::Office::Interop::Excel::XlWindowView value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1194)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1194)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1194)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlWindowView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-329">Zurückgeben oder festlegen die Ansicht klicken Sie im Fenster angezeigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-329">Returns or sets the view showing in the window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(558)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-330">Bestimmt, ob das Objekt sichtbar ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-330">Determines whether the object is visible.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range VisibleRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range VisibleRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.VisibleRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisibleRange As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ VisibleRange { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1118)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1118)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-331">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> -Objekt, das den Zellbereich darstellt, in dem Fenster oder Bereich sichtbar sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-331">Returns a <see cref="T:Microsoft.Office.Interop.Excel.Range" /> object that represents the range of cells that are visible in the window or pane.</span>
          </span>
          <span data-ttu-id="e9505-332">Wenn eine Spalte oder Zeile teilweise angezeigt wird, ist es im Bereich enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-332">If a column or row is partially visible, it's included in the range.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-333">Die Breite des Fensters in Punkt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-333">The width in points of the window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="e9505-334">Verwendung der <see cref="P:Microsoft.Office.Interop.Excel.Window.UsableWidth" /> Eigenschaft, um die maximale Größe des Fensters zu bestimmen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-334">Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.UsableWidth" /> property to determine the maximum size for the window.</span>
            </span>
            <span data-ttu-id="e9505-335">Sie können diese Eigenschaft nicht festlegen, wenn das Fenster maximiert oder minimiert ist.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-335">You cannot set this property if the window is maximized or minimized.</span>
            </span>
            <span data-ttu-id="e9505-336">Verwendung der <see cref="P:Microsoft.Office.Interop.Excel.Window.WindowState" /> -Eigenschaft auf den Status des Fensters zu bestimmen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-336">Use the <see cref="P:Microsoft.Office.Interop.Excel.Window.WindowState" /> property to determine the window state.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowNumber">
      <MemberSignature Language="C#" Value="public int WindowNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WindowNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.WindowNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WindowNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WindowNumber { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1119)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1119)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-337">Gibt die Nummer des Fensters zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-337">Returns the window number.</span>
          </span>
          <span data-ttu-id="e9505-338">Ein Fenster mit dem Namen "Book1.xls:2" beispielsweise hat 2 als die Fensternummer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-338">For example, a window named "Book1.xls:2" has 2 as its window number.</span>
          </span>
          <span data-ttu-id="e9505-339">Die meisten Fenster haben die Fensternummer 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-339">Most windows have the window number 1.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="e9505-340">Die Fensternummer ist nicht identisch mit dem Fensterindex (den Rückgabewert der <see cref="P:Microsoft.Office.Interop.Excel.Window.Index" /> -Eigenschaft), also die Position des Fensters innerhalb der <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> Auflistung.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-340">The window number isn't the same as the window index (the return value of the <see cref="P:Microsoft.Office.Interop.Excel.Window.Index" /> property), which is the position of the window within the <see cref="T:Microsoft.Office.Interop.Excel.Windows" /> collection.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlWindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlWindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As XlWindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlWindowState WindowState { Microsoft::Office::Interop::Excel::XlWindowState get(); void set(Microsoft::Office::Interop::Excel::XlWindowState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(396)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlWindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-341">Gibt zurück oder legt den Zustand des Fensters fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-341">Returns or sets the state of the window.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Zoom">
      <MemberSignature Language="C#" Value="public object Zoom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Zoom" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Window.Zoom" />
      <MemberSignature Language="VB.NET" Value="Public Property Zoom As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Zoom { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(663)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(663)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9505-342">Zurückgeben oder Festlegen der Größe der Bildschirmanzeige für das Fenster als Prozentsatz (100 entspricht der normalen Größe, 200 der doppelten Größe usw.).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9505-342">Returns or sets the display size of the window as a percentage (100 equals normal size, 200 equals double size, and so on).</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <span data-ttu-id="e9505-343">Für diese Eigenschaft kann auch der Wert <b>True</b> festgelegt werden. Damit wird die Fenstergröße an die aktuelle Markierung angepasst.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-343">You can also set this property to <b>True</b> to make the window size fit the current selection.</span>
            </span>
          </para>
          <para>
            <span data-ttu-id="e9505-p163">Diese Funktion wirkt sich nur auf das Blatt aus, das im Fenster derzeit aktiv ist. Wenn Sie diese Eigenschaft auf andere Blätter anwenden möchten, müssen Sie diese zuerst aktivieren.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e9505-p163">This function affects only the sheet that's currently active in the window. To use this property on other sheets, you must first activate them.</span>
            </span>
          </para>
          <para></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>