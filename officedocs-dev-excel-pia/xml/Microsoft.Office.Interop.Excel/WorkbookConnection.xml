<Type Name="WorkbookConnection" FullName="Microsoft.Office.Interop.Excel.WorkbookConnection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d36e4e18681b0c11f20840120b3306f1349f22ec" /><Meta Name="ms.sourcegitcommit" Value="b9fb06b594d56da0590a163c774e236b6362c059" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="06/25/2021" /><Meta Name="ms.locfileid" Value="53147293" /></Metadata><TypeSignature Language="C#" Value="public interface WorkbookConnection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract WorkbookConnection" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.WorkbookConnection" />
  <TypeSignature Language="VB.NET" Value="Public Interface WorkbookConnection" />
  <TypeSignature Language="C++ CLI" Value="public interface class WorkbookConnection" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024485-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2a993-101">Bei einer Verbindung handelt es sich um eine Reihe von Informationen, die zum Abrufen von Daten aus einer anderen externen Datenquelle als einer 1st_Excel12 Arbeitsmappe erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="2a993-101">A connection is a set of information needed to obtain data from an external data source other than an 1st_Excel12 workbook.</span></span></summary>
    <remarks><para><span data-ttu-id="2a993-102">Verbindungen können in einer Excel-Arbeitsmappe gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="2a993-102">Connections can be stored within an Excel workbook.</span></span>  <span data-ttu-id="2a993-103">Wenn die Arbeitsmappe geöffnet wird, erstellt Excel eine Speicherkopie der Verbindung, die als Verbindungsobjekt bezeichnet wird.</span><span class="sxs-lookup"><span data-stu-id="2a993-103">When the workbook is opened, Excel creates an in-memory copy of the connection which is referred to as the connection object.</span></span>  <span data-ttu-id="2a993-104">Ein Verbindungsobjekt enthält Informationen wie den Namen des Servers und den Namen des Objekts, das auf diesem Server geöffnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="2a993-104">A connection object contains information such as the name of the server and the name of the object to be opened on that server.</span></span>  <span data-ttu-id="2a993-105">Das Verbindungsobjekt kann auch Anmeldeinformationen für die Authentifizierung und/oder einen Befehl enthalten, der an den Server übergeben und ausgeführt wird (z. B. eine SELECT-Anweisung, die von SQL Server ausgeführt wird).</span><span class="sxs-lookup"><span data-stu-id="2a993-105">Optionally, the connection object may also include authentication credentials and/or a command that is to be passed to the server and executed (example: a SELECT statement to be executed by SQL Server.)</span></span>  </para>
      <para><span data-ttu-id="2a993-106">
        <b>Hinweis:</b>Die genaue Form der Verbindung hängt vom Mechanismus ab, der zum Abrufen von Daten verwendet wird – ODBC-Verbindungen, OLEDB-Verbindungen und Webabfragen enthalten unterschiedliche Informationen.</span><span class="sxs-lookup"><span data-stu-id="2a993-106">
        <b>Note</b>: The exact form of the connection depends on the mechanism that is being used to retrieve data – ODBC connections, OLEDB connections, and Web Queries will contain different information.</span></span></para>
      <para><span data-ttu-id="2a993-p102">Eine Verbindung kann auch in einer separaten Verbindungsdatei gespeichert werden. Die meisten Verbindungen in einer Excel-Arbeitsmappe umfassen einen Zeiger auf eine externe Verbindungsdatei. Verbindungsdateien verfügen über Erweiterungen, die diese eindeutig als Verbindungsdateien kennzeichnen (\*.ODC, \*.IQY usw.), und können sich auf dem lokalen Computer des Benutzers befinden oder an anderen gut bekannten oder vertrauenswürdigen Speicherorten wie WSS (Datenverbindungsbibliothek) oder auf anderen Firmenservern gespeichert sein. Verbindungsdateien ermöglichen mehreren Benutzern innerhalb eines Unternehmens die Wiederverwendung von Verbindungen. Durch Änderung einer einzelnen Verbindungsdatei können die Netzwerkadministratoren die Art und Weise ändern, wie im gesamten Unternehmen Verbindungen zu den Backend-Datenquellen hergestellt werden. Beim Herstellen einer Verbindung zu einer externen Datenquelle ist jedoch nicht immer eine Verbindungsdatei erforderlich.</span><span class="sxs-lookup"><span data-stu-id="2a993-p102">A connection may also be stored in a separate connection file.  Most  connections in an Excel workbook include a pointer to an external connection file.  Connection files have extensions that clearly label them as connection files (\*.ODC, \*.IQY, etc.) and may be located on the user's local machine or in other well known or trusted locations such as WSS (Data Connection Library), or other corporate servers.  Connection files enable multiple users within the same organization to re-use connections.  Network administrators are able to change the way the entire organization connects to a back-end data source by changing a single connection file.  A connection file is not always required when connecting to an external data source.</span></span></para>
      <para><span data-ttu-id="2a993-p103">Verbindungsnamen sind Zeichenfolgen, die Verbindungen innerhalb der Arbeitsmappe, in der sie verwendet werden, eindeutig kennzeichnen. Verbindungen verfügen aber auch über Eigenschaften, die nicht eindeutig sind. Wenn in einer Formel in Excel ein Argument verwendet wird, das eine Verbindung darstellt, ist es ausreichend, wenn entweder direkt (als Zeichenfolge) oder indirekt (durch Verweis auf eine Zelle, die den Verbindungsnamen als Zeichenfolge enthält) auf den Namen dieser Verbindung verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="2a993-p103">Connection names are strings that uniquely identify connections within the workbook in which they are used.     There are other properties of a connection that are not unique.  Whenever a formula in Excel takes an argument that is a connection, it will be sufficient to refer to the name of that connection, either directly (as a string) or indirectly (by referring to a cell that contains the connection name as a string.)</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a993-116">Wenn diese Eigenschaft ohne Einen Objektbezeichner verwendet wird, gibt sie ein Objekt zurück, <see cref="T:Microsoft.Office.Interop.Excel._Application" /> das die Microsoft Office Excel Anwendung darstellt.</span><span class="sxs-lookup"><span data-stu-id="2a993-116">When used without an object qualifier, this property returns an  <see cref="T:Microsoft.Office.Interop.Excel._Application" /> object that represents the Microsoft Office Excel  application.</span></span> <span data-ttu-id="2a993-117">Wenn ohne einen Objektbezeichner verwendet wird, gibt diese Eigenschaft ein <b>Application</b> -Objekt, das den Ersteller des angegebenen Objekts darstellt.</span><span class="sxs-lookup"><span data-stu-id="2a993-117">When used with an object qualifier, this property returns an <b>Application</b> object that represents the creator of the specified object.</span></span> <span data-ttu-id="2a993-118">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="2a993-118">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2a993-119">Sie können diese Eigenschaft mit einem OLE-Automatisierungsobjekt verwenden, um die Anwendung dieses Objekts zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="2a993-119">You can use this property with an OLE Automation object to return the application of that object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a993-120">Gibt einen ganzzahligen 32-Bit-Wert zurück, der die Anwendung angibt, in der dieses Objekt erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="2a993-120">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="2a993-121">Schreibgeschützte <b>ganze Zahl</b>.</span><span class="sxs-lookup"><span data-stu-id="2a993-121">Read-only <b>Integer</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2a993-122">Wenn das Objekt in Microsoft Excel erstellt wurde, gibt die Eigenschaft die Zeichenfolge XCEL zurück, die der Hexadezimalzahl 5843454C entspricht.</span><span class="sxs-lookup"><span data-stu-id="2a993-122">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span>  <span data-ttu-id="2a993-123">Die <b>Creator-Eigenschaft</b> wurde für die Verwendung in Microsoft Excel für Macintosh entwickelt, wobei jede Anwendung einen vierstelligen Erstellercode aufweist.</span><span class="sxs-lookup"><span data-stu-id="2a993-123">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="2a993-124">Der Urhebercode für Microsoft Excel lautet "XCEL".</span><span class="sxs-lookup"><span data-stu-id="2a993-124">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DataFeedConnection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DataFeedConnection DataFeedConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DataFeedConnection DataFeedConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.DataFeedConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataFeedConnection As DataFeedConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DataFeedConnection ^ DataFeedConnection { Microsoft::Office::Interop::Excel::DataFeedConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3104)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3104)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DataFeedConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a993-125">Gibt ein <b>DataFeedConnection</b> -Objekt zurück, das die Daten und Funktionen enthält, die zum Herstellen einer Verbindung mit Datenfeeds erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="2a993-125">Returns a <b>DataFeedConnection</b> object that contains the data and functionality needed to connect to data feeds.</span></span> <span data-ttu-id="2a993-126">Schreibgeschützt</span><span class="sxs-lookup"><span data-stu-id="2a993-126">Read-only</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorkbookConnection.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a993-127">Löscht eine Arbeitsmappenverbindung.</span><span class="sxs-lookup"><span data-stu-id="2a993-127">Deletes a workbook connection.</span></span></summary>
        <remarks><para><span data-ttu-id="2a993-p108">Verwenden Sie diese Methode, um eine externe Datenverbindung zu löschen. Diese Methode kann nicht auf Verknüpfungen zu anderen Arbeitsmappen angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="2a993-p108">Use this method to delete an external data connection. This method does not apply to links to other workbooks.</span></span> </para>
          <para><span data-ttu-id="2a993-130">Durch das Löschen einer Verbindung werden keine Objekte gelöscht oder entfernt, die diese Verbindung verwendet haben.</span><span class="sxs-lookup"><span data-stu-id="2a993-130">Deleting a connection will not delete or remove any objects that were using that connection.</span></span>

<span data-ttu-id="2a993-131">Das Löschen einer Verbindung führt nicht dazu, dass die Verbindungsdateien aus dem Dateisystem gelöscht werden.</span><span class="sxs-lookup"><span data-stu-id="2a993-131">Deleting a connection will not cause any of the connection files to be deleted from the file system.</span></span>  <span data-ttu-id="2a993-132">Wenn Sie eines dieser Objekte so bearbeiten, dass eine andere Verbindung verwendet wird, treten keine Probleme mehr auf.</span><span class="sxs-lookup"><span data-stu-id="2a993-132">If you edit any of those objects to use another connection, everything will start working again.</span></span></para>
          <para><span data-ttu-id="2a993-133">Objekte, die eine gelöschte Verbindung verwenden, verhalten sich, als ob die Verbindung nicht hergestellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="2a993-133">Objects that use a deleted connection behave as if the connection could not be established.</span></span>  </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(218)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(218)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(218)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a993-134">Gibt eine kurze Beschreibung für ein Objekt zurück oder legt sie <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> fest.</span><span class="sxs-lookup"><span data-stu-id="2a993-134">Returns or sets a brief description for a <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> object.</span></span> <span data-ttu-id="2a993-135"><b>Zeichenfolge</b> mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="2a993-135">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2a993-p111">Im Dialogfeld Verbindungseigenschaften kann der Benutzer den Namen der Verbindung und/oder die Beschreibung bearbeiten. Bei Änderung des Namens und der Beschreibung in diesem Dialogfeld werden auch die entsprechenden Felder innerhalb des Excel-Verbindungsobjekts geändert.</span><span class="sxs-lookup"><span data-stu-id="2a993-p111">In the Connection Properties dialog box, the user may edit the name of the connection and/or the description.  Changing the name and description in this dialog box changes those fields only within the Excel connection object.</span></span></para>
          <para><span data-ttu-id="2a993-p112">Die maximale Länge für Beschreibungen beträgt 255 Zeichen. Wenn der Benutzer eine Beschreibung in einer Verbindungsdatei angibt, die länger als 255 Zeichen ist, wird die Beschreibung an der 255-Zeichengrenze abgeschnitten.</span><span class="sxs-lookup"><span data-stu-id="2a993-p112">The maximum size of a description is 255 characters.  If the user specifies a description within a connection file that is longer than 255 characters, the description is truncate to fit the 255 character limit.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InModel">
      <MemberSignature Language="C#" Value="public bool InModel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InModel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.InModel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InModel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InModel { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3105)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3105)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a993-140">Gibt an, ob das <b>WorkbookConnection-Objekt</b> dem Modell hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="2a993-140">Specifies whether or not the <b>WorkbookConnection</b> object has been added to the model.</span></span> <span data-ttu-id="2a993-141"><b>Boolean</b> (<b>bool</b> in C#) Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="2a993-141"><b>Boolean</b> (<b>bool</b> in C#) Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="2a993-142">Muss für Legacyverbindungen "false" sein.</span><span class="sxs-lookup"><span data-stu-id="2a993-142">Must be false for legacy connections.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelConnection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ModelConnection ModelConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ModelConnection ModelConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.ModelConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModelConnection As ModelConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ModelConnection ^ ModelConnection { Microsoft::Office::Interop::Excel::ModelConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ModelConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a993-143">Gibt ein Objekt zurück, das Informationen für den neuen Modellverbindungstyp enthält, der in Excel 2013 für die Interaktion mit dem integrierten Datenmodell eingeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="2a993-143">Returns an object that contains information for the new Model Connection Type introduced in Excel 2013 to interact with the integrated Data Model.</span></span> <span data-ttu-id="2a993-144">Schreibgeschützt</span><span class="sxs-lookup"><span data-stu-id="2a993-144">Read-only</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelTables">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ModelTables ModelTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ModelTables ModelTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.ModelTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModelTables As ModelTables" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ModelTables ^ ModelTables { Microsoft::Office::Interop::Excel::ModelTables ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3106)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3106)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ModelTables</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a993-145">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.ModelTables" /> Objekt zurück, das der bestimmten Verbindung zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="2a993-145">Returns a <see cref="T:Microsoft.Office.Interop.Excel.ModelTables" /> object associated with the particular connection.</span></span> <span data-ttu-id="2a993-146">Schreibgeschützt</span><span class="sxs-lookup"><span data-stu-id="2a993-146">Read-only</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a993-p116">Gibt den Namen des Arbeitsmappen-Verbindungsobjekts zurück oder legt ihn fest. <b>String</b>-Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="2a993-p116">Returns or sets the name of the workbook connection object. Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ODBCConnection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.ODBCConnection ODBCConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.ODBCConnection ODBCConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.ODBCConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ODBCConnection As ODBCConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::ODBCConnection ^ ODBCConnection { Microsoft::Office::Interop::Excel::ODBCConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2698)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2698)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.ODBCConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a993-149">Gibt die ODBC-Verbindungsdetails für das angegebene <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="2a993-149">Retuns the ODBC Connection details for the specified <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> object.</span></span> <span data-ttu-id="2a993-150">Schreibgeschützt. <see cref="T:Microsoft.Office.Interop.Excel.ODBCConnection" /></span><span class="sxs-lookup"><span data-stu-id="2a993-150">Read-only <see cref="T:Microsoft.Office.Interop.Excel.ODBCConnection" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OLEDBConnection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.OLEDBConnection OLEDBConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.OLEDBConnection OLEDBConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.OLEDBConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OLEDBConnection As OLEDBConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::OLEDBConnection ^ OLEDBConnection { Microsoft::Office::Interop::Excel::OLEDBConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2697)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2697)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.OLEDBConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a993-151">Gibt die OLEDB-Verbindungsdetails für das angegebene <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="2a993-151">Retuns the OLEDB Connection details for the specified <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> object.</span></span> <span data-ttu-id="2a993-152">Schreibgeschützt. <see cref="T:Microsoft.Office.Interop.Excel.OLEDBConnection" /></span><span class="sxs-lookup"><span data-stu-id="2a993-152">Read-only <see cref="T:Microsoft.Office.Interop.Excel.OLEDBConnection" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a993-p119">Gibt das übergeordnete Objekt für das angegebene Objekt zurück. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="2a993-p119">Returns the parent object for the specified object. Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ranges">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Ranges Ranges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Ranges Ranges" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.Ranges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ranges As Ranges" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Ranges ^ Ranges { Microsoft::Office::Interop::Excel::Ranges ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2699)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2699)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Ranges</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a993-155">Gibt den Objektbereich für das angegebene <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="2a993-155">Returns the range of object for the specified <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> object.</span></span> <span data-ttu-id="2a993-156">Schreibgeschützt. <see cref="T:Microsoft.Office.Interop.Excel.Ranges" /></span><span class="sxs-lookup"><span data-stu-id="2a993-156">Read-only <see cref="T:Microsoft.Office.Interop.Excel.Ranges" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Refresh() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.WorkbookConnection.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1417)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a993-157">Aktualisiert eine Arbeitsmappenverbindung.</span><span class="sxs-lookup"><span data-stu-id="2a993-157">Refreshes a workbook connection.</span></span></summary>
        <remarks><para><span data-ttu-id="2a993-158">Wenn die <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> Eigenschaft <b>False</b>ist, werden Dialogfelder nicht angezeigt, und die <b>Refresh</b> -Methode schlägt mit der Ausnahme "Unzureichende Verbindungsinformationen" fehl.</span><span class="sxs-lookup"><span data-stu-id="2a993-158">If the <see cref="P:Microsoft.Office.Interop.Excel._Application.DisplayAlerts" /> property is <b>False</b>, dialog boxes are not displayed and the <b>Refresh</b> method fails with the Insufficient Connection Information exception.</span></span></para>
          <para><span data-ttu-id="2a993-p121">Ein Aktualisierungsfehler für eine Verbindung wirkt sich nicht auf die Aktualisierungsvorgänge für die anderen Verbindungen aus.</span><span class="sxs-lookup"><span data-stu-id="2a993-p121">A refresh failure for one connection will not have any impact on refresh operations  for the other connections. </span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshWithRefreshAll">
      <MemberSignature Language="C#" Value="public bool RefreshWithRefreshAll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RefreshWithRefreshAll" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.RefreshWithRefreshAll" />
      <MemberSignature Language="VB.NET" Value="Public Property RefreshWithRefreshAll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RefreshWithRefreshAll { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(3102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a993-160">Bestimmt, ob die Verbindung aktualisiert werden soll, wenn alle Aktualisierungen ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="2a993-160">Determines if the connection should be refreshed when refresh all is executed.</span></span> <span data-ttu-id="2a993-161"><b>Boolean</b> (<b>bool</b> in C#).</span><span class="sxs-lookup"><span data-stu-id="2a993-161"><b>Boolean</b> (<b>bool</b> in C#).</span></span> <span data-ttu-id="2a993-162">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="2a993-162">Read/Write.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextConnection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.TextConnection TextConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.TextConnection TextConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.TextConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextConnection As TextConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::TextConnection ^ TextConnection { Microsoft::Office::Interop::Excel::TextConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.TextConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a993-163">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.TextConnection" /> Objekt zurück, das die Informationen zu einer Abfrage an eine Textdatei enthält.</span><span class="sxs-lookup"><span data-stu-id="2a993-163">Returns a <see cref="T:Microsoft.Office.Interop.Excel.TextConnection" /> object that contains the information on a query to a text file.</span></span> <span data-ttu-id="2a993-164">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="2a993-164">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlConnectionType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlConnectionType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XlConnectionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlConnectionType Type { Microsoft::Office::Interop::Excel::XlConnectionType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlConnectionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a993-165">Gibt den Verbindungstyp der Arbeitsmappe zurück.</span><span class="sxs-lookup"><span data-stu-id="2a993-165">Returns the workbook connection type.</span></span> <span data-ttu-id="2a993-166">Schreibgeschützt. <see cref="T:Microsoft.Office.Interop.Excel.XlConnectionType" /></span><span class="sxs-lookup"><span data-stu-id="2a993-166">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlConnectionType" />.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorksheetDataConnection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WorksheetDataConnection WorksheetDataConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WorksheetDataConnection WorksheetDataConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.WorkbookConnection.WorksheetDataConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorksheetDataConnection As WorksheetDataConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WorksheetDataConnection ^ WorksheetDataConnection { Microsoft::Office::Interop::Excel::WorksheetDataConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3101)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3101)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WorksheetDataConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a993-167">Gibt ein Objekt zurück, das Informationen für eine Verbindung zwischen dem PowerPivot Modell und Daten innerhalb der Arbeitsmappe enthält, z. B. einem Bereich, einem benannten Bereich oder einer Tabelle.</span><span class="sxs-lookup"><span data-stu-id="2a993-167">Returns an object that contains information for a connection from the PowerPivot Model to data within the workbook such as a range, named range, or table.</span></span> <span data-ttu-id="2a993-168">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="2a993-168">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
