<Type Name="XmlMap" FullName="Microsoft.Office.Interop.Excel.XmlMap">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c3b5f447ad7e8151b7dba366715192ac74ad6768" />
    <Meta Name="ms.sourcegitcommit" Value="e7d3480b6ad64431c29c74a1b422c662de0b511d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20583608" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface XmlMap" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract XmlMap" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.XmlMap" />
  <TypeSignature Language="VB.NET" Value="Public Interface XmlMap" />
  <TypeSignature Language="C++ CLI" Value="public interface class XmlMap" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002447B-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fda75-101">Stellt eine XML-Zuordnung dar, die einer Arbeitsmappe hinzugefügt wurde.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fda75-101">Represents an XML map that has been added to a workbook.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="fda75-102">
        <para>XML-Features, außer das Speichern von Dateien im XML-Tabellenformat stehen nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003.</para>
        <para>Verwendung der <see cref="M:Microsoft.Office.Interop.Excel.XmlMaps.Add(System.String,System.Object)" /> -Methode des der <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> Auflistung, um einer Arbeitsmappe eine XML-Zuordnung hinzuzufügen.</para>
        <para>Importieren und Exportieren von XML-Daten</para>
        <para>Verwendung der <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" /> -Methode zum Importieren von XML-Daten aus einer XML-Datendatei in Zellen, die dem angegebenen <b>XmlMap</b>zugeordnet sind. Die <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ImportXml(System.String,System.Object)" /> -Methode importiert XML-Daten für eine <b>String</b> -Variable.</para>
        <para>Verwendung der <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" /> Methode zum Exportieren von Daten aus Zellen, die dem angegebenen <b>XmlMap</b>zugeordnet sind. Die <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" /> -Methode exportiert XML-Daten in <b>einer Zeichenfolgenvariablen</b> .</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="fda75-102">
          <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
          <para>Use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMaps.Add(System.String,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> collection to add an XML map to a workbook.</para>
          <para>Importing and exporting XML data</para>
          <para>Use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" /> method to import XML data from an XML data file into cells mapped to the specified <b>XmlMap</b>. The <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ImportXml(System.String,System.Object)" /> method imports XML data for a <b>String</b> variable.</para>
          <para>Use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" /> method to export data from cells mapped to the specified <b>XmlMap</b>. The <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" /> method exports XML data to a <b>String</b> variable.</para>
          <para />
        </span>
      </span>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdjustColumnWidth">
      <MemberSignature Language="C#" Value="public bool AdjustColumnWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AdjustColumnWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.AdjustColumnWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property AdjustColumnWidth As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AdjustColumnWidth { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1868)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fda75-103">
            <b>True,</b> Wenn die Spaltenbreite automatisch optimal angepasst werden angepasst wird jedes Mal die angegebene Abfragetabelle oder XML-Zuordnung zu aktualisieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-103">
              <b>True</b> if the column widths are automatically adjusted for the best fit each time you refresh the specified query table or XML map.</span>
          </span>
          <span data-ttu-id="fda75-104">
            <b>False,</b> Wenn die Spaltenbreiten bei einer Aktualisierung nicht automatisch angepasst werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-104">
              <b>False</b> if the column widths aren’t automatically adjusted with each refresh.</span>
          </span>
          <span data-ttu-id="fda75-105">Der Standardwert ist <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-105">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="fda75-106">
            <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-106">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="fda75-107">
            <para>Die maximale Spaltenbreite beträgt zwei Drittel der Fensterbreite.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-107">
              <para>The maximum column width is two-thirds the width of the screen.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendOnImport">
      <MemberSignature Language="C#" Value="public bool AppendOnImport { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AppendOnImport" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.AppendOnImport" />
      <MemberSignature Language="VB.NET" Value="Public Property AppendOnImport As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AppendOnImport { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2339)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2339)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2339)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fda75-108">
            <b>True,</b> Wenn Sie neue Zeilen zu XML-Listen angefügt werden sollen, die der angegebenen schemazuordnung gebunden sind, wenn Sie neue Daten importieren oder Aktualisieren einer vorhandene Verbindung möchten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-108">
              <b>True</b> if you want to append new rows to XML lists that are bound to the specified schema map when you are importing new data or refreshing an existing connection.</span>
          </span>
          <span data-ttu-id="fda75-109">
            <b>False,</b> Wenn der Inhalt von Zellen überschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-109">
              <b>False</b> if you want to overwrite the contents of cells.</span>
          </span>
          <span data-ttu-id="fda75-110">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-110">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="fda75-111">
            <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-111">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="fda75-112">
            <para>XML-Features, außer das Speichern von Dateien im XML-Tabellenformat stehen nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-112">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fda75-113">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> -Objekt, das die Anwendung Microsoft Excel darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-113">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span>
          </span>
          <span data-ttu-id="fda75-114">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-114">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fda75-115">Gibt eine 32-Bit-Ganzzahl, die die Anwendung angibt, in der das Objekt erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-115">Returns a 32-bit integer that indicates the application in which this object was created.</span>
          </span>
          <span data-ttu-id="fda75-116">Wenn das Objekt in Microsoft Excel erstellt wurde, gibt diese Eigenschaft die Zeichenfolge XCEL zurück, dies entspricht die hexadezimale Zahl 5843454 c ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-116">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span>
          </span>
          <span data-ttu-id="fda75-117">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-117">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="fda75-118">
            <para>Die <b>Creator</b> -Eigenschaft ist in Microsoft Excel für den Macintosh verwendet werden, in dem jede Anwendung einen Erstellercode aus vier Zeichen verfügt über entwickelt. Der Erstellercode von Microsoft Excel lautet beispielsweise XCEL zurück.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-118">
              <para>The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code. For example, Microsoft Excel has the creator code XCEL.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBinding">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlDataBinding DataBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlDataBinding DataBinding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.DataBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBinding As XmlDataBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlDataBinding ^ DataBinding { Microsoft::Office::Interop::Excel::XmlDataBinding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2343)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlDataBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fda75-119">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.XmlDataBinding" /> -Objekt, das die Bindung, die der angegebenen schemazuordnung zugeordneten darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-119">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlDataBinding" /> object that represents the binding associated with the specified schema map.</span>
          </span>
          <span data-ttu-id="fda75-120">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-120">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="fda75-121">
            <para>XML-Features, außer das Speichern von Dateien im XML-Tabellenformat stehen nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-121">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fda75-122">Entfernt die angegebene XML-Zuordnung aus der Arbeitsmappe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-122">Removes the specified XML map from the workbook.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlExportResult Export (string Url, object Overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlExportResult Export([in]string Url, [in]object Overwrite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Export (Url As String, Optional Overwrite As Object) As XlXmlExportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1414)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlExportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Url" Type="System.String" />
        <Parameter Name="Overwrite" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Url">
          <span data-ttu-id="fda75-123">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-123">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="fda75-124">Der Pfad und Dateiname der XML-Datendatei zu exportieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-124">The path and filename of the XML data file to export to.</span>
          </span>
        </param>
        <param name="Overwrite">
          <span data-ttu-id="fda75-125">Erforderlicher <b>boolescher Wert</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-125">Required <b>Boolean</b>.</span>
          </span>
          <span data-ttu-id="fda75-126">Legen Sie <b>True</b> fest, die angegebene Datei überschreiben der <paramref name="URL" /> -Parameters, wenn die Datei vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-126">Set to <b>True</b> to overwrite the file specified in the <paramref name="URL" /> parameter if the file exists.</span>
          </span>
          <span data-ttu-id="fda75-127">Der Standardwert ist <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-127">The default value if <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fda75-128">Exportiert den Inhalt von Zellen zugeordnet sind, auf das angegebene <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> Objekt in eine XML-Datendatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-128">Exports the contents of cells mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object to an XML data file.</span>
          </span>
          <span data-ttu-id="fda75-129">Gibt <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-129">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" />.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="fda75-130">
            <para>Verwendung der <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" /> -Methode, um den Inhalt der zugeordneten Zellen in <b>einer Zeichenfolgenvariablen</b> zu exportieren.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-130">
              <para>Use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" /> method to export the contents of the mapped cells to a <b>String</b> variable.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportXml">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlExportResult ExportXml (out string Data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlExportResult ExportXml([out] string&amp; Data) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportXml (ByRef Data As String) As XlXmlExportResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::XlXmlExportResult ExportXml([Runtime::InteropServices::Out] System::String ^ % Data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2346)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlExportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Data" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="Data">
          <span data-ttu-id="fda75-131">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-131">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="fda75-132">Die Variable, die Daten exportieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-132">The variable to export the data to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fda75-133">Exportiert den Inhalt von Zellen zugeordnet sind, auf das angegebene <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> Objekt in <b>einer Zeichenfolgenvariablen</b> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-133">Exports the contents of cells mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object to a <b>String</b> variable.</span>
          </span>
          <span data-ttu-id="fda75-134">Gibt <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-134">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" />.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="fda75-135">
            <para>XML-Features, außer das Speichern von Dateien im XML-Tabellenformat stehen nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003.</para>
            <para>Verwenden, um den Inhalt der zugeordneten Zellen in eine XML-Datendatei zu exportieren, die <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" /> -Methode.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-135">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para>To export the contents of the mapped cells to an XML data file, use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" /> method.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult Import (string Url, object Overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult Import([in]string Url, [in]object Overwrite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Import (Url As String, Optional Overwrite As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(917)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Url" Type="System.String" />
        <Parameter Name="Overwrite" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Url">
          <span data-ttu-id="fda75-136">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-136">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="fda75-137">Der Pfad zu den zu importierenden XML-Daten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-137">The path to the XML data to import.</span>
          </span>
          <span data-ttu-id="fda75-138">Der Pfad kann in Universal Naming Convention (UNC) oder Uniform Resource Locator (URL) Format angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-138">The path can be specified in Universal Naming convention (UNC) or Uniform Resource Locator (URL) format.</span>
          </span>
          <span data-ttu-id="fda75-139">Die Datei kann es sich um eine XML-Datendatei oder eine gültige Office XML-Quelle (UXDC) Datenverbindungsdatei sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-139">The file can be an XML data file or a valid Office XML data Source Connection (.uxdc) file.</span>
          </span>
        </param>
        <param name="Overwrite">
          <span data-ttu-id="fda75-140">Optionales- <b>Objekt</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-140">Optional <b>Object</b>.</span>
          </span>
          <span data-ttu-id="fda75-141">Festgelegt auf <b>true fest,</b> um vorhandene Daten zu überschreiben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-141">Set to <b>True</b> to overwrite existing data.</span>
          </span>
          <span data-ttu-id="fda75-142">Anfügen an die vorhandenen Daten auf <b>False</b> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-142">Set to <b>False</b> to append to existing data.</span>
          </span>
          <span data-ttu-id="fda75-143">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-143">The default value is <b>False</b>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fda75-144">Importiert Daten aus der angegebenen XML-Datendatei in Zellen, die zugeordnet wurden auf das angegebene <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-144">Imports data from the specified XML data file into cells that have been mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span>
          </span>
          <span data-ttu-id="fda75-145">Gibt <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-145">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportXml">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult ImportXml (string XmlData, object Overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult ImportXml([in]string XmlData, [in]object Overwrite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.ImportXml(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportXml (XmlData As String, Optional Overwrite As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2344)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XmlData" Type="System.String" />
        <Parameter Name="Overwrite" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XmlData">
          <span data-ttu-id="fda75-146">
            <b>String</b> erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-146">Required <b>String</b>.</span>
          </span>
          <span data-ttu-id="fda75-147">Die Zeichenfolge, die die zu importierenden XML-Daten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-147">The string that contains the XML data to import.</span>
          </span>
        </param>
        <param name="Overwrite">
          <span data-ttu-id="fda75-148">Optionaler <b>Boolean</b> -Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-148">Optional <b>Boolean</b> value.</span>
          </span>
          <span data-ttu-id="fda75-149">Gibt an, ob der Inhalt von Zellen überschrieben werden, die die angegebenen XML-Zuordnung derzeit zugeordnet sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-149">Specifies whether to overwrite the contents of cells that are currently mapped to the specified XML map.</span>
          </span>
          <span data-ttu-id="fda75-150">Festgelegt auf <b>true fest,</b> um die Zellen zu überschreiben. Legen Sie auf <b>false fest</b> , um die Daten an den vorhandenen Bereich anzufügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-150">Set to <b>True</b> to overwrite the cells; set to <b>False</b> to append the data to the existing range.</span>
          </span>
          <span data-ttu-id="fda75-151">Wenn dieser Parameter nicht angegeben wird, den aktuellen Wert der <see cref="P:Microsoft.Office.Interop.Excel.XmlMap.AppendOnImport" /> -Eigenschaft des XML-Zuordnung bestimmt, ob der Inhalt von Zellen oder nicht überschrieben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-151">If this parameter is not specified, the current value of the <see cref="P:Microsoft.Office.Interop.Excel.XmlMap.AppendOnImport" /> property of the XML map determines whether the contents of cells are overwritten or not.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fda75-152">Importiert XML-Daten aus einer <b>String</b> -Variablen in Zellen, die zugeordnet wurden auf das angegebene <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-152">Imports XML data from a <b>String</b> variable into cells that have been mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span>
          </span>
          <span data-ttu-id="fda75-153">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" /> Konstante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-153">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" /> constant.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <span data-ttu-id="fda75-154">
            <para>XML-Features, außer das Speichern von Dateien im XML-Tabellenformat stehen nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003.</para>
            <para>Den Inhalt einer XML-Datendatei in Zellen, die einer bestimmten schemazuordnung zugeordnet sind, verwenden Sie zum Importieren der <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" /> -Methode des <b>XmlMap</b> -Objekts.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-154">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para>To import the contents of an XML data file into cells mapped to a specific schema map, use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" /> method of the <b>XmlMap</b> object.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExportable">
      <MemberSignature Language="C#" Value="public bool IsExportable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExportable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.IsExportable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExportable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExportable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2334)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2334)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fda75-155">Gibt <b>True</b> zurück, wenn Microsoft Excel verwenden, können die <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> -Objekte in der angegebenen schemazuordnung zum Exportieren von XML-Daten und wenn alle der angegebenen schemazuordnung zugeordnete XML-Listen exportiert werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-155">Returns <b>True</b> if Microsoft Excel can use the <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> objects in the specified schema map to export XML data and if all XML lists mapped to the specified schema map can be exported.</span>
          </span>
          <span data-ttu-id="fda75-156">Schreibgeschützter <b>Boolean</b>-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-156">Read-only <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="fda75-157">
            <para>XML-Features, außer das Speichern von Dateien im XML-Tabellenformat stehen nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-157">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fda75-158">Zurückgeben oder Festlegen der angezeigte Name zum eindeutigen Identifizieren einer Zuordnung in der Arbeitsmappe verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-158">Returns or sets the friendly name used to uniquely identify a mapping in the workbook.</span>
          </span>
          <span data-ttu-id="fda75-159">Lese-/Schreibzugriff <b>String</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-159">Read/write <b>String</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fda75-p119">Gibt das übergeordnete Objekt für das angegebene Objekt zurück. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-p119">Returns the parent object for the specified object. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveColumnFilter">
      <MemberSignature Language="C#" Value="public bool PreserveColumnFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveColumnFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.PreserveColumnFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveColumnFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveColumnFilter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2337)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2337)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2337)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fda75-162">Gibt zurück oder legt fest, ob der Filter erhalten bleibt, wenn die angegebene XML-Zuordnung aktualisiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-162">Returns or sets whether filtering is preserved when the specified XML map is refreshed.</span>
          </span>
          <span data-ttu-id="fda75-163">
            <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-163">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="fda75-164">
            <para>XML-Features, außer das Speichern von Dateien im XML-Tabellenformat stehen nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-164">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveNumberFormatting">
      <MemberSignature Language="C#" Value="public bool PreserveNumberFormatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveNumberFormatting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.PreserveNumberFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveNumberFormatting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveNumberFormatting { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2338)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2338)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2338)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fda75-165">
            <b>True,</b> wenn Zahlenformate auf der angegebenen XML-schemazuordnung zugeordneten Zellen beibehalten wird, wenn die schemazuordnung aktualisiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-165">
              <b>True</b> if number formatting on cells mapped to the specified XML schema map will be preserved when the schema map is refreshed.</span>
          </span>
          <span data-ttu-id="fda75-166">Der Standardwert lautet <b>False</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-166">The default value is <b>False</b>.</span>
          </span>
          <span data-ttu-id="fda75-167">
            <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-167">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="fda75-168">
            <para>XML-Features, außer das Speichern von Dateien im XML-Tabellenformat stehen nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-168">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootElementName">
      <MemberSignature Language="C#" Value="public string RootElementName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootElementName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.RootElementName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootElementName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2340)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2340)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fda75-p122">Gibt einen <b>String</b>-Wert zurück, der den Namen des Stammelements für die angegebene XML-Schemazuordnung darstellt. Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-p122">Returns a <b>String</b> that represents the name of the root element for the specified XML schema map. Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="fda75-171">
            <para>XML-Features, außer das Speichern von Dateien im XML-Tabellenformat stehen nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-171">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootElementNamespace">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlNamespace RootElementNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlNamespace RootElementNamespace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.RootElementNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootElementNamespace As XmlNamespace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlNamespace ^ RootElementNamespace { Microsoft::Office::Interop::Excel::XmlNamespace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2341)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2341)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlNamespace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fda75-172">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespace" /> -Objekt, das Stammelement für die angegebene XML-Schema-Zuordnung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-172">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespace" /> object that represents the root element for the specified XML schema map.</span>
          </span>
          <span data-ttu-id="fda75-173">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-173">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="fda75-174">
            <para>XML-Features, außer das Speichern von Dateien im XML-Tabellenformat stehen nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-174">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveDataSourceDefinition">
      <MemberSignature Language="C#" Value="public bool SaveDataSourceDefinition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveDataSourceDefinition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.SaveDataSourceDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveDataSourceDefinition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveDataSourceDefinition { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2336)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2336)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2336)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fda75-175">
            <b>True,</b> Wenn die Definition der angegebenen XML-schemazuordnung der Datenquelle mit der Arbeitsmappe gespeichert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-175">
              <b>True</b> if the data source definition of the specified XML schema map is saved with the workbook.</span>
          </span>
          <span data-ttu-id="fda75-176">Der Standardwert ist <b>True</b>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-176">The default value is <b>True</b>.</span>
          </span>
          <span data-ttu-id="fda75-177">
            <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-177">Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="fda75-178">
            <para>XML-Features, außer das Speichern von Dateien im XML-Tabellenformat stehen nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-178">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlSchemas Schemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlSchemas Schemas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schemas As XmlSchemas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlSchemas ^ Schemas { Microsoft::Office::Interop::Excel::XmlSchemas ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2342)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2342)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlSchemas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fda75-179">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.XmlSchemas" /> -Auflistung, die die Schemas repräsentiert, die dem angegebenen <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> -Objekt enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-179">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlSchemas" /> collection that represents the schemas that the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object contains.</span>
          </span>
          <span data-ttu-id="fda75-180">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-180">Read-only.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="fda75-181">
            <para>XML-Features, außer das Speichern von Dateien im XML-Tabellenformat stehen nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003.</para>
            <para>Das erste Element in der zurückgegebenen <b>XmlSchemas</b> -Auflistung ist das Schema, das als Stammelement der angegebenen XML-schemazuordnung verwendet wird.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-181">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para>The first item in the returned <b>XmlSchemas</b> collection is the schema that is used as the root element of the specified XML schema map.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowImportExportValidationErrors">
      <MemberSignature Language="C#" Value="public bool ShowImportExportValidationErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowImportExportValidationErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.ShowImportExportValidationErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowImportExportValidationErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowImportExportValidationErrors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2335)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2335)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2335)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fda75-p126">Gibt zurück oder legt fest, ob ein Dialogfeld mit Details zu Schemaüberprüfungsfehlern angezeigt wird, wenn Daten über die angegebene XML-Schemazuordnung importiert oder exportiert werden. Der Standardwert ist <b>False </b><b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-p126">Returns or sets whether to display a dialog box that details schema-validation errors when data is imported or exported through the specified XML schema map. The default value is <b>False</b>. Read/write <b>Boolean</b>.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <span data-ttu-id="fda75-185">
            <para>XML-Features, außer das Speichern von Dateien im XML-Tabellenformat stehen nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-185">
              <para>XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkbookConnection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WorkbookConnection WorkbookConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WorkbookConnection WorkbookConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.WorkbookConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkbookConnection As WorkbookConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WorkbookConnection ^ WorkbookConnection { Microsoft::Office::Interop::Excel::WorkbookConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2544)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2544)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WorkbookConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fda75-186">Gibt eine neue Verbindung für das angegebene <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-186">Retuns a new connection for the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span>
          </span>
          <span data-ttu-id="fda75-187">Schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fda75-187">Read-only.</span>
          </span>
        </summary>
        <value>
          <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" />
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>