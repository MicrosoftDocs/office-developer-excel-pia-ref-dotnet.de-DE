<Type Name="XmlMap" FullName="Microsoft.Office.Interop.Excel.XmlMap">
  <Metadata><Meta Name="ms.openlocfilehash" Value="90e19f9871537de3824defd244b85c6255bb7e45" /><Meta Name="ms.sourcegitcommit" Value="f58b07bd9753015d401a69461f61bc174edee843" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/27/2021" /><Meta Name="ms.locfileid" Value="49999622" /></Metadata><TypeSignature Language="C#" Value="public interface XmlMap" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract XmlMap" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.XmlMap" />
  <TypeSignature Language="VB.NET" Value="Public Interface XmlMap" />
  <TypeSignature Language="C++ CLI" Value="public interface class XmlMap" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002447B-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="65b8d-101">Stellt eine XML-Zuordnung dar, die einer Arbeitsmappe hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="65b8d-101">Represents an XML map that has been added to a workbook.</span></span></summary>
    <remarks><para><span data-ttu-id="65b8d-102">XML-Features, mit Ausnahme des Speicherns von Dateien im XML-Tabellenkalkulationsformat, sind nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003 verfügbar.</span><span class="sxs-lookup"><span data-stu-id="65b8d-102">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
      <para><span data-ttu-id="65b8d-103">Verwenden Sie <see cref="M:Microsoft.Office.Interop.Excel.XmlMaps.Add(System.String,System.Object)" /> die Methode der <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> Auflistung, um einer Arbeitsmappe eine XML-Zuordnung hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="65b8d-103">Use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMaps.Add(System.String,System.Object)" /> method of the <see cref="T:Microsoft.Office.Interop.Excel.XmlMaps" /> collection to add an XML map to a workbook.</span></span></para>
      <para><span data-ttu-id="65b8d-104">Importieren und Exportieren von XML-Daten</span><span class="sxs-lookup"><span data-stu-id="65b8d-104">Importing and exporting XML data</span></span></para>
      <para><span data-ttu-id="65b8d-105">Verwenden Sie <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" /> die Methode zum Importieren von XML-Daten aus einer XML-Datendatei in Zellen, die der angegebenen <b>XmlMap zugeordnet sind.</b></span><span class="sxs-lookup"><span data-stu-id="65b8d-105">Use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" /> method to import XML data from an XML data file into cells mapped to the specified <b>XmlMap</b>.</span></span> <span data-ttu-id="65b8d-106">Die <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ImportXml(System.String,System.Object)" /> Methode importiert die XML-Daten für eine <b>Zeichenfolgenvariable.</b></span><span class="sxs-lookup"><span data-stu-id="65b8d-106">The <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ImportXml(System.String,System.Object)" /> method imports XML data for a <b>String</b> variable.</span></span></para>
      <para><span data-ttu-id="65b8d-107">Verwenden Sie <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" /> die Methode, um Daten aus Zellen zu exportieren, die der angegebenen <b>XmlMap zugeordnet sind.</b></span><span class="sxs-lookup"><span data-stu-id="65b8d-107">Use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" /> method to export data from cells mapped to the specified <b>XmlMap</b>.</span></span> <span data-ttu-id="65b8d-108">Die <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" /> Methode exportiert XML-Daten in eine <b>Zeichenfolgenvariable.</b></span><span class="sxs-lookup"><span data-stu-id="65b8d-108">The <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" /> method exports XML data to a <b>String</b> variable.</span></span></para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdjustColumnWidth">
      <MemberSignature Language="C#" Value="public bool AdjustColumnWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AdjustColumnWidth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.AdjustColumnWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property AdjustColumnWidth As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AdjustColumnWidth { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1868)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1868)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65b8d-109"><b>True,</b> wenn die Spaltenbreiten bei jeder Aktualisierung der angegebenen Abfragetabelle oder der angegebenen XML-Zuordnung automatisch so angepasst werden, dass sie optimal angepasst werden.</span><span class="sxs-lookup"><span data-stu-id="65b8d-109"><b>True</b> if the column widths are automatically adjusted for the best fit each time you refresh the specified query table or XML map.</span></span> <span data-ttu-id="65b8d-110"><b>False</b>, wenn die Spaltenbreiten bei einer Aktualisierung nicht automatisch angepasst werden.</span><span class="sxs-lookup"><span data-stu-id="65b8d-110"><b>False</b> if the column widths aren’t automatically adjusted with each refresh.</span></span> <span data-ttu-id="65b8d-111">Der Standardwert ist <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="65b8d-111">The default value is <b>True</b>.</span></span> <span data-ttu-id="65b8d-112"><b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="65b8d-112">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65b8d-113">Die maximale Spaltenbreite beträgt zwei Drittel der Fensterbreite.</span><span class="sxs-lookup"><span data-stu-id="65b8d-113">The maximum column width is two-thirds the width of the screen.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendOnImport">
      <MemberSignature Language="C#" Value="public bool AppendOnImport { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AppendOnImport" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.AppendOnImport" />
      <MemberSignature Language="VB.NET" Value="Public Property AppendOnImport As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AppendOnImport { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2339)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2339)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2339)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65b8d-114"><b>True,</b> Wenn Sie neue Zeilen an XML-Listen anfügen möchten, die an die angegebene Schemazuordnung gebunden sind, wenn Sie neue Daten importieren oder eine vorhandene Verbindung aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="65b8d-114"><b>True</b> if you want to append new rows to XML lists that are bound to the specified schema map when you are importing new data or refreshing an existing connection.</span></span> <span data-ttu-id="65b8d-115"><b>False,</b> wenn Sie den Inhalt von Zellen überschreiben möchten.</span><span class="sxs-lookup"><span data-stu-id="65b8d-115"><b>False</b> if you want to overwrite the contents of cells.</span></span> <span data-ttu-id="65b8d-116">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65b8d-116">The default value is <b>False</b>.</span></span> <span data-ttu-id="65b8d-117"><b>Boolescher</b> Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="65b8d-117">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65b8d-118">XML-Features, mit Ausnahme des Speicherns von Dateien im XML-Tabellenkalkulationsformat, sind nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003 verfügbar.</span><span class="sxs-lookup"><span data-stu-id="65b8d-118">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65b8d-119">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> Objekt zurück, das die Microsoft Excel-Anwendung darstellt.</span><span class="sxs-lookup"><span data-stu-id="65b8d-119">Returns an <see cref="T:Microsoft.Office.Interop.Excel.Application" /> object that represents the Microsoft Excel application.</span></span> <span data-ttu-id="65b8d-120">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="65b8d-120">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65b8d-121">Gibt einen ganzzahligen 32-Bit-Wert zurück, der die Anwendung angibt, in der dieses Objekt erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="65b8d-121">Returns a 32-bit integer that indicates the application in which this object was created.</span></span> <span data-ttu-id="65b8d-122">Wenn das Objekt in Microsoft Excel erstellt wurde, gibt die Eigenschaft die Zeichenfolge XCEL zurück, die der Hexadezimalzahl 5843454C entspricht.</span><span class="sxs-lookup"><span data-stu-id="65b8d-122">If the object was created in Microsoft Excel, this property returns the string XCEL, which is equivalent to the hexadecimal number 5843454C.</span></span> <span data-ttu-id="65b8d-123"><see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="65b8d-123">Read-only <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" />.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65b8d-124">Die <b>Creator</b>-Eigenschaft wurde speziell für den Einsatz in Microsoft Excel für den Macintosh geschaffen, wo jede Anwendung einen Urhebercode aus vier Zeichen besitzt.</span><span class="sxs-lookup"><span data-stu-id="65b8d-124">The <b>Creator</b> property is designed to be used in Microsoft Excel for the Macintosh, where each application has a four-character creator code.</span></span> <span data-ttu-id="65b8d-125">Der Urhebercode für Microsoft Excel lautet "XCEL".</span><span class="sxs-lookup"><span data-stu-id="65b8d-125">For example, Microsoft Excel has the creator code XCEL.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBinding">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlDataBinding DataBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlDataBinding DataBinding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.DataBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBinding As XmlDataBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlDataBinding ^ DataBinding { Microsoft::Office::Interop::Excel::XmlDataBinding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2343)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2343)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlDataBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65b8d-126">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.XmlDataBinding" /> Objekt zurück, das die Bindung darstellt, die der angegebenen Schemazuordnung zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="65b8d-126">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlDataBinding" /> object that represents the binding associated with the specified schema map.</span></span> <span data-ttu-id="65b8d-127">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="65b8d-127">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65b8d-128">XML-Features, mit Ausnahme des Speicherns von Dateien im XML-Tabellenkalkulationsformat, sind nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003 verfügbar.</span><span class="sxs-lookup"><span data-stu-id="65b8d-128">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(117)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65b8d-129">Entfernt die angegebene XML-Zuordnung aus der Arbeitsmappe.</span><span class="sxs-lookup"><span data-stu-id="65b8d-129">Removes the specified XML map from the workbook.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlExportResult Export (string Url, object Overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlExportResult Export([in]string Url, [in]object Overwrite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Export (Url As String, Optional Overwrite As Object) As XlXmlExportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1414)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlExportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Url" Type="System.String" />
        <Parameter Name="Overwrite" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Url"><span data-ttu-id="65b8d-130"><b>String</b> erforderlich.</span><span class="sxs-lookup"><span data-stu-id="65b8d-130">Required <b>String</b>.</span></span> <span data-ttu-id="65b8d-131">Der Pfad und Der Dateiname der XML-Datendatei, in die exportiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="65b8d-131">The path and filename of the XML data file to export to.</span></span></param>
        <param name="Overwrite"><span data-ttu-id="65b8d-132">Erforderlicher <b>Boolean</b>-Wert.</span><span class="sxs-lookup"><span data-stu-id="65b8d-132">Required <b>Boolean</b>.</span></span> <span data-ttu-id="65b8d-133">Legen Sie den <b>Wert auf "True"</b> fest, um die im Parameter angegebene Datei zu <paramref name="URL" /> überschreiben, wenn die Datei vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="65b8d-133">Set to <b>True</b> to overwrite the file specified in the <paramref name="URL" /> parameter if the file exists.</span></span> <span data-ttu-id="65b8d-134">Der Standardwert, wenn <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65b8d-134">The default value if <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="65b8d-135">Exportiert den Inhalt von Zellen, die dem angegebenen <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> Objekt zugeordnet sind, in eine XML-Datendatei.</span><span class="sxs-lookup"><span data-stu-id="65b8d-135">Exports the contents of cells mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object to an XML data file.</span></span> <span data-ttu-id="65b8d-136">Gibt <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="65b8d-136">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65b8d-137">Verwenden Sie <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" /> die Methode, um den Inhalt der zugeordneten Zellen in eine <b>Zeichenfolgenvariable zu</b> exportieren.</span><span class="sxs-lookup"><span data-stu-id="65b8d-137">Use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" /> method to export the contents of the mapped cells to a <b>String</b> variable.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportXml">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlExportResult ExportXml (out string Data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlExportResult ExportXml([out] string&amp; Data) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.ExportXml(System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportXml (ByRef Data As String) As XlXmlExportResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::XlXmlExportResult ExportXml([Runtime::InteropServices::Out] System::String ^ % Data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2346)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlExportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Data" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="Data"><span data-ttu-id="65b8d-138"><b>String</b> erforderlich.</span><span class="sxs-lookup"><span data-stu-id="65b8d-138">Required <b>String</b>.</span></span> <span data-ttu-id="65b8d-139">Die Variable, in die die Daten exportiert werden.</span><span class="sxs-lookup"><span data-stu-id="65b8d-139">The variable to export the data to.</span></span></param>
        <summary><span data-ttu-id="65b8d-140">Exportiert den Inhalt von Zellen, die dem angegebenen <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> Objekt zugeordnet sind, in eine <b>Zeichenfolgenvariable.</b></span><span class="sxs-lookup"><span data-stu-id="65b8d-140">Exports the contents of cells mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object to a <b>String</b> variable.</span></span> <span data-ttu-id="65b8d-141">Gibt <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="65b8d-141">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlExportResult" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65b8d-142">XML-Features, mit Ausnahme des Speicherns von Dateien im XML-Tabellenkalkulationsformat, sind nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003 verfügbar.</span><span class="sxs-lookup"><span data-stu-id="65b8d-142">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para><span data-ttu-id="65b8d-143">Verwenden Sie die Methode, um den Inhalt der zugeordneten Zellen in eine XML-Datendatei zu <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" /> exportieren.</span><span class="sxs-lookup"><span data-stu-id="65b8d-143">To export the contents of the mapped cells to an XML data file, use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Export(System.String,System.Object)" /> method.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult Import (string Url, object Overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult Import([in]string Url, [in]object Overwrite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Import (Url As String, Optional Overwrite As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(917)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Url" Type="System.String" />
        <Parameter Name="Overwrite" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Url"><span data-ttu-id="65b8d-144"><b>String</b> erforderlich.</span><span class="sxs-lookup"><span data-stu-id="65b8d-144">Required <b>String</b>.</span></span> <span data-ttu-id="65b8d-145">Der Pfad der XML-Daten, die importiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="65b8d-145">The path to the XML data to import.</span></span> <span data-ttu-id="65b8d-146">Der Pfad kann im UNC-Format (Universal Naming Convention) oder im URL-Format (Uniform Resource Locator) angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="65b8d-146">The path can be specified in Universal Naming convention (UNC) or Uniform Resource Locator (URL) format.</span></span> <span data-ttu-id="65b8d-147">Die Datei kann eine XML-Datendatei oder eine gültige Office XML-Datenquellenverbindungsdatei (UXDC) sein.</span><span class="sxs-lookup"><span data-stu-id="65b8d-147">The file can be an XML data file or a valid Office XML data Source Connection (.uxdc) file.</span></span></param>
        <param name="Overwrite"><span data-ttu-id="65b8d-148">Optionales <b>Objekt</b>.</span><span class="sxs-lookup"><span data-stu-id="65b8d-148">Optional <b>Object</b>.</span></span> <span data-ttu-id="65b8d-149">Legen Sie den Parameter auf <b>True</b> fest, wenn vorhandene Daten überschrieben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="65b8d-149">Set to <b>True</b> to overwrite existing data.</span></span> <span data-ttu-id="65b8d-150">Mit <b>False</b> werden Daten an vorhandene Daten angefügt.</span><span class="sxs-lookup"><span data-stu-id="65b8d-150">Set to <b>False</b> to append to existing data.</span></span> <span data-ttu-id="65b8d-151">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65b8d-151">The default value is <b>False</b>.</span></span></param>
        <summary><span data-ttu-id="65b8d-152">Importiert Daten aus der angegebenen XML-Datendatei in Zellen, die dem angegebenen Objekt zugeordnet <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> wurden.</span><span class="sxs-lookup"><span data-stu-id="65b8d-152">Imports data from the specified XML data file into cells that have been mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span></span> <span data-ttu-id="65b8d-153">Gibt <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="65b8d-153">Returns <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportXml">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlXmlImportResult ImportXml (string XmlData, object Overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Office.Interop.Excel.XlXmlImportResult ImportXml([in]string XmlData, [in]object Overwrite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.XmlMap.ImportXml(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportXml (XmlData As String, Optional Overwrite As Object) As XlXmlImportResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2344)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlXmlImportResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="XmlData" Type="System.String" />
        <Parameter Name="Overwrite" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="XmlData"><span data-ttu-id="65b8d-154"><b>String</b> erforderlich.</span><span class="sxs-lookup"><span data-stu-id="65b8d-154">Required <b>String</b>.</span></span> <span data-ttu-id="65b8d-155">Die Zeichenfolge, die die zu importierenden XML-Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="65b8d-155">The string that contains the XML data to import.</span></span></param>
        <param name="Overwrite"><span data-ttu-id="65b8d-156">Optionaler <b>boolescher</b> Wert.</span><span class="sxs-lookup"><span data-stu-id="65b8d-156">Optional <b>Boolean</b> value.</span></span> <span data-ttu-id="65b8d-157">Gibt an, ob der Inhalt von Zellen, die der angegebenen XML-Zuordnung derzeit zugeordnet sind, überschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="65b8d-157">Specifies whether to overwrite the contents of cells that are currently mapped to the specified XML map.</span></span> <span data-ttu-id="65b8d-158">Kann auf <b>True</b> festgelegt werden, um die Zellen zu überschreiben; kann auf <b>False</b> festgelegt werden, um die Daten an den vorhandenen Bereich anzufügen.</span><span class="sxs-lookup"><span data-stu-id="65b8d-158">Set to <b>True</b> to overwrite the cells; set to <b>False</b> to append the data to the existing range.</span></span> <span data-ttu-id="65b8d-159">Wenn dieser Parameter nicht angegeben wird, bestimmt der aktuelle Wert der Eigenschaft der XML-Zuordnung, ob der Inhalt von Zellen <see cref="P:Microsoft.Office.Interop.Excel.XmlMap.AppendOnImport" /> überschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="65b8d-159">If this parameter is not specified, the current value of the <see cref="P:Microsoft.Office.Interop.Excel.XmlMap.AppendOnImport" /> property of the XML map determines whether the contents of cells are overwritten or not.</span></span></param>
        <summary><span data-ttu-id="65b8d-160">Importiert XML-Daten aus einer <b>Zeichenfolgenvariablen</b> in Zellen, die dem angegebenen Objekt zugeordnet <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> wurden.</span><span class="sxs-lookup"><span data-stu-id="65b8d-160">Imports XML data from a <b>String</b> variable into cells that have been mapped to the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span></span> <span data-ttu-id="65b8d-161">Gibt eine Konstante <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="65b8d-161">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XlXmlImportResult" /> constant.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="65b8d-162">XML-Features, mit Ausnahme des Speicherns von Dateien im XML-Tabellenkalkulationsformat, sind nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003 verfügbar.</span><span class="sxs-lookup"><span data-stu-id="65b8d-162">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para><span data-ttu-id="65b8d-163">Verwenden Sie die Methode des XmlMap-Objekts, um den Inhalt einer XML-Datendatei in Zellen zu importieren, die einer bestimmten Schemazuordnung <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" /> <b>zugeordnet</b> sind.</span><span class="sxs-lookup"><span data-stu-id="65b8d-163">To import the contents of an XML data file into cells mapped to a specific schema map, use the <see cref="M:Microsoft.Office.Interop.Excel.XmlMap.Import(System.String,System.Object)" /> method of the <b>XmlMap</b> object.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExportable">
      <MemberSignature Language="C#" Value="public bool IsExportable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExportable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.IsExportable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExportable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExportable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2334)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2334)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65b8d-164">Gibt <b>True</b> zurück, wenn Microsoft Excel die Objekte in der angegebenen Schemazuordnung zum Exportieren von XML-Daten verwenden kann und wenn alle der angegebenen Schemazuordnung zugeordneten XML-Listen <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> exportiert werden können.</span><span class="sxs-lookup"><span data-stu-id="65b8d-164">Returns <b>True</b> if Microsoft Excel can use the <see cref="T:Microsoft.Office.Interop.Excel.XPath" /> objects in the specified schema map to export XML data and if all XML lists mapped to the specified schema map can be exported.</span></span> <span data-ttu-id="65b8d-165">Schreibgeschützter <b>boolescher</b> Wert.</span><span class="sxs-lookup"><span data-stu-id="65b8d-165">Read-only <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65b8d-166">XML-Features, mit Ausnahme des Speicherns von Dateien im XML-Tabellenkalkulationsformat, sind nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003 verfügbar.</span><span class="sxs-lookup"><span data-stu-id="65b8d-166">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65b8d-167">Gibt den Anzeigenamen zurück, der zum eindeutigen Identifizieren einer Zuordnung in der Arbeitsmappe verwendet wird, oder legt den Anzeigenamen fest.</span><span class="sxs-lookup"><span data-stu-id="65b8d-167">Returns or sets the friendly name used to uniquely identify a mapping in the workbook.</span></span> <span data-ttu-id="65b8d-168"><b>Zeichenfolge</b> mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="65b8d-168">Read/write <b>String</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65b8d-169">Gibt das übergeordnete Objekt für das angegebene Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="65b8d-169">Returns the parent object for the specified object.</span></span> <span data-ttu-id="65b8d-170">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="65b8d-170">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveColumnFilter">
      <MemberSignature Language="C#" Value="public bool PreserveColumnFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveColumnFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.PreserveColumnFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveColumnFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveColumnFilter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2337)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2337)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2337)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65b8d-171">Gibt zurück oder legt fest, ob der Filter erhalten bleibt, wenn die angegebene XML-Zuordnung aktualisiert wird.</span><span class="sxs-lookup"><span data-stu-id="65b8d-171">Returns or sets whether filtering is preserved when the specified XML map is refreshed.</span></span> <span data-ttu-id="65b8d-172"><b>Boolescher</b> Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="65b8d-172">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65b8d-173">XML-Features, mit Ausnahme des Speicherns von Dateien im XML-Tabellenkalkulationsformat, sind nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003 verfügbar.</span><span class="sxs-lookup"><span data-stu-id="65b8d-173">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveNumberFormatting">
      <MemberSignature Language="C#" Value="public bool PreserveNumberFormatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveNumberFormatting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.PreserveNumberFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveNumberFormatting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveNumberFormatting { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2338)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2338)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2338)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65b8d-174"><b>True</b>, falls das Zahlenformat von Zellen erhalten bleibt, die der angegebenen XML-Schemazuordnung zugeordnet sind, wenn die Schemazuordnung aktualisiert wird.</span><span class="sxs-lookup"><span data-stu-id="65b8d-174"><b>True</b> if number formatting on cells mapped to the specified XML schema map will be preserved when the schema map is refreshed.</span></span> <span data-ttu-id="65b8d-175">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65b8d-175">The default value is <b>False</b>.</span></span> <span data-ttu-id="65b8d-176"><b>Boolescher</b> Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="65b8d-176">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65b8d-177">XML-Features, mit Ausnahme des Speicherns von Dateien im XML-Tabellenkalkulationsformat, sind nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003 verfügbar.</span><span class="sxs-lookup"><span data-stu-id="65b8d-177">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RootElementName">
      <MemberSignature Language="C#" Value="public string RootElementName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootElementName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.RootElementName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootElementName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2340)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2340)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65b8d-178">Gibt einen <b>String</b>-Wert zurück, der den Namen des Stammelements für die angegebene XML-Schemazuordnung darstellt.</span><span class="sxs-lookup"><span data-stu-id="65b8d-178">Returns a <b>String</b> that represents the name of the root element for the specified XML schema map.</span></span> <span data-ttu-id="65b8d-179">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="65b8d-179">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65b8d-180">XML-Features, mit Ausnahme des Speicherns von Dateien im XML-Tabellenkalkulationsformat, sind nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003 verfügbar.</span><span class="sxs-lookup"><span data-stu-id="65b8d-180">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RootElementNamespace">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlNamespace RootElementNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlNamespace RootElementNamespace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.RootElementNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootElementNamespace As XmlNamespace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlNamespace ^ RootElementNamespace { Microsoft::Office::Interop::Excel::XmlNamespace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2341)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2341)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlNamespace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65b8d-181">Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespace" /> Objekt zurück, das das Stammelement für die angegebene XML-Schemazuordnung darstellt.</span><span class="sxs-lookup"><span data-stu-id="65b8d-181">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlNamespace" /> object that represents the root element for the specified XML schema map.</span></span> <span data-ttu-id="65b8d-182">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="65b8d-182">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65b8d-183">XML-Features, mit Ausnahme des Speicherns von Dateien im XML-Tabellenkalkulationsformat, sind nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003 verfügbar.</span><span class="sxs-lookup"><span data-stu-id="65b8d-183">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveDataSourceDefinition">
      <MemberSignature Language="C#" Value="public bool SaveDataSourceDefinition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveDataSourceDefinition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.SaveDataSourceDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveDataSourceDefinition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveDataSourceDefinition { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2336)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2336)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2336)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65b8d-184"><b>True</b>, wenn die Datenquellendefinition der angegebenen XML-Schemazuordnung mit der Arbeitsmappe gespeichert wird.</span><span class="sxs-lookup"><span data-stu-id="65b8d-184"><b>True</b> if the data source definition of the specified XML schema map is saved with the workbook.</span></span> <span data-ttu-id="65b8d-185">Der Standardwert ist <b>True</b>.</span><span class="sxs-lookup"><span data-stu-id="65b8d-185">The default value is <b>True</b>.</span></span> <span data-ttu-id="65b8d-186"><b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="65b8d-186">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65b8d-187">XML-Features, mit Ausnahme des Speicherns von Dateien im XML-Tabellenkalkulationsformat, sind nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003 verfügbar.</span><span class="sxs-lookup"><span data-stu-id="65b8d-187">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XmlSchemas Schemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.XmlSchemas Schemas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schemas As XmlSchemas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XmlSchemas ^ Schemas { Microsoft::Office::Interop::Excel::XmlSchemas ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2342)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2342)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XmlSchemas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65b8d-188">Gibt eine <see cref="T:Microsoft.Office.Interop.Excel.XmlSchemas" /> Auflistung zurück, die die Schemas darstellt, die das angegebene <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="65b8d-188">Returns an <see cref="T:Microsoft.Office.Interop.Excel.XmlSchemas" /> collection that represents the schemas that the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object contains.</span></span> <span data-ttu-id="65b8d-189">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="65b8d-189">Read-only.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65b8d-190">XML-Features, mit Ausnahme des Speicherns von Dateien im XML-Tabellenkalkulationsformat, sind nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003 verfügbar.</span><span class="sxs-lookup"><span data-stu-id="65b8d-190">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para><span data-ttu-id="65b8d-191">Beim ersten Element in der zurückgegebenen <b>XmlSchemas</b>-Auflistung handelt es sich um das Schema, das als Stammelement der angegebenen XML-Schemazuordnung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="65b8d-191">The first item in the returned <b>XmlSchemas</b> collection is the schema that is used as the root element of the specified XML schema map.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowImportExportValidationErrors">
      <MemberSignature Language="C#" Value="public bool ShowImportExportValidationErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowImportExportValidationErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.ShowImportExportValidationErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowImportExportValidationErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowImportExportValidationErrors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2335)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2335)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2335)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65b8d-192">Gibt zurück oder legt fest, ob ein Dialogfeld mit Details zu Schemaüberprüfungsfehlern angezeigt wird, wenn Daten über die angegebene XML-Schemazuordnung importiert oder exportiert werden.</span><span class="sxs-lookup"><span data-stu-id="65b8d-192">Returns or sets whether to display a dialog box that details schema-validation errors when data is imported or exported through the specified XML schema map.</span></span> <span data-ttu-id="65b8d-193">Der Standardwert ist <b>False</b>.</span><span class="sxs-lookup"><span data-stu-id="65b8d-193">The default value is <b>False</b>.</span></span> <span data-ttu-id="65b8d-194"><b>Boolescher</b> Wert mit Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="65b8d-194">Read/write <b>Boolean</b>.</span></span></summary>
        <value>To be added.</value>
        <remarks><para><span data-ttu-id="65b8d-195">XML-Features, mit Ausnahme des Speicherns von Dateien im XML-Tabellenkalkulationsformat, sind nur in Microsoft Office Professional Edition 2003 und Microsoft Office Excel 2003 verfügbar.</span><span class="sxs-lookup"><span data-stu-id="65b8d-195">XML features, except for saving files in the XML Spreadsheet format, are available only in Microsoft Office Professional Edition 2003 and Microsoft Office Excel 2003.</span></span></para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkbookConnection">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.WorkbookConnection WorkbookConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.WorkbookConnection WorkbookConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.XmlMap.WorkbookConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkbookConnection As WorkbookConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::WorkbookConnection ^ WorkbookConnection { Microsoft::Office::Interop::Excel::WorkbookConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2544)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2544)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.WorkbookConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65b8d-196">Gibt eine neue Verbindung für das angegebene Objekt <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="65b8d-196">Retuns a new connection for the specified <see cref="T:Microsoft.Office.Interop.Excel.XmlMap" /> object.</span></span> <span data-ttu-id="65b8d-197">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="65b8d-197">Read-only.</span></span></summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>